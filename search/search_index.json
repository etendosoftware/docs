{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to Etendo documentation!</p> <p>Etendo is an ERP software developed to be composable and scalable.</p> <p>Etendo is focused on non-retail and it is adapted for different companies. To present a flexible and modern product, Etendo combines a web platform and a mobile application.</p> <ul> <li>Getting Started</li> <li>Requirements</li> <li>Installation</li> </ul>"},{"location":"about/etendo-release-cycle/","title":"Etendo Release Cycle","text":"<p>The launch phase covers all the steps that are necessary to deliver a successful release to the market, including (but not limited to):</p> <ul> <li>quality assurance testing (QA)</li> <li>early adopters testing (Innovators program)</li> <li>and training</li> </ul> <p>Etendo solutions are released on a quarterly basis.</p> <ul> <li>YX is the year and QZ the quarter of the year. </li> </ul> <p></p> <p>As shown in the image above, the duration of a release cycle is seven months. For instance, and in the case of Etendo Y1Q4 design and development activities started dated on 1st June \u00a0and will finish at release dated on December 31st.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#release-phases","title":"Release Phases","text":"<p>The release process consists of the following phases</p> <ul> <li>3 month development cycles, when engineering team focus on code development &amp; review, testing and code integration</li> <li>1 additional month for the engineering team to test and fix the bugs found, as well as to create the user documentation and train the support team.</li> <li>1 month for the QA team to test and validate the release according to what defined in the corresponding Test Plan. At the end of this phase, the release is published as QA Approved (QAA), in a snapshot repository only for participants in the Etendo Early Adopters Program.</li> <li>2 months maturation cycle to evolve from QAA to Confirmed Stable (CS), published in the releases Nexus repository.</li> </ul> <p></p> <p>Etendo strongly recommends that only releases that have reached CS are used in production environments</p> <p>In summary, Etendo will release Confirmed Stable (CS) releases in March (i.e ET18Q1), June (i.e. ET18Q2), September (i.e. ET18Q3), and December (i.e. ET18Q4) on a yearly basis.</p> <p>Info</p> <p>Etendo will give support to the current year and prior year releases.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#early-adopters-testing-innovators-program","title":"Early Adopters Testing (Innovators Program)","text":"<p>As already mentioned, Etendo has established an innovators program based on a maturation cycle to evolve Etendo releases from QAA to Confirmed Stable, in collaboration with a set of Etendo end clients.</p> <p>These clients have access to the corresponding release in QAA status for them to use it and help Etendo to mature it.</p> <p>QAA releases have passed automated tests, all fixed issues have been individually verified and the QA team has completed a set of manual tests to identify further improvement.</p> <p>When it reaches the QAA stage, the release is not yet available for a wide audience but it can already be used for production purposes for those who have a particular interest, explicitly assuring full alignment with the end client.</p> <p>As part of the Innovators program, interested Partners will receive support in the update process of a customer\u2019s production environment to the current QA Approved release.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#emergency-releases","title":"Emergency Releases","text":"<p>Apart, when required there are out of schedule emergency releases which are used to for targeted fixing of very important bugs. These bugs may have been reported by our partners, members of the development team or simply bugs found by our automations that are periodically testing our products.</p> <p>Those releases can be identified by their version which is constructed as follows ETXXQY.Z, where\u00a0:</p> <ul> <li>XX is the year of the base release</li> <li>QY is the quarter of the base release</li> <li>Z is a minor digit number starting with 1</li> </ul> <p>and will run through the same maturity status and release process.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#quality-assurance","title":"Quality Assurance","text":"<p>In Etendo, we carry out constant processes to ensure the quality and safety of our product throughout the entire development cycle. The following are the main steps of our quality assurance process.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#code-analysis","title":"Code Analysis","text":"<p>When code changes or additions are made, the code is subjected to a thorough analysis using the following tools:</p> <ul> <li>Sonar: Our development repositories employ Sonar rules to analyze code in pull requests created or updated. Sonar identifies potential problems and makes suggestions to improve code quality.</li> </ul> <p></p> <ul> <li>Auto Code Reviewer: We have developed a tool called Auto Code Reviewer, which uses ChatGPT to analyze the changes made in the Pull Request and make suggestions. This tool complements the Sonar analysis and helps us to maintain high quality standards in our code and architecture.</li> </ul>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#automated-testing","title":"Automated Testing","text":"<p>Once a pull request has been created or updated, automated tests are run using Jenkins, our continuous integration system. Through a scheduled job in Jenkins, the following types of tests are executed:</p> <ul> <li>Compilation Tests: At this stage, we test that the code is compiled correctly, identifying possible errors at compile time.</li> <li>Unit Test: We run automated tests designed to verify the behavior and functionality of individual units of code. These tests help us to identify bugs and ensure the correct functioning of the different parts of the system.</li> </ul> <p></p> <p>If bugs are detected in any of these automated tests, the development team is immediately notified so that they can address and correct them.</p> <p>Once a pull request has passed the code review and quality assurance processes specific to each development, the merge to the \"develop\" branch is performed. At this point, automated tests are re-run to ensure that the code integration has not introduced new problems.</p> <p>Along the lines of the automatic tests that are performed, we have the stress and interface tests that are performed monthly:\u00a0</p> <ul> <li>Stress Testing: In addition to the regular automated tests, we conduct stress tests on our applications on a monthly basis. These tests help us identify potential bottlenecks, resource limitations, and areas that may cause degradation or failures under high user loads. By simulating concurrent user interactions and generating high traffic, we evaluate the system's responsiveness, scalability, and overall robustness. Performing these tests monthly ensures that our applications can handle increasing user demands and maintain optimal performance.</li> <li>Selenium Interface Testing: To ensure the functionality and user experience of our applications, we conduct monthly Selenium interface testing. Selenium allows us to automate browser interactions and perform tests on different web browsers, such as Firefox and Google Chrome. Using Selenium, we create test scripts that simulate user actions, navigate through the application's interface, and verify that all elements and features work as expected. This ensures consistency across different browsers and helps us identify any compatibility issues that may arise. Conducting these tests monthly allows us to catch any potential interface issues and ensure a seamless user experience across various platforms.</li> </ul>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#vulnerability-analysis-and-deprecation","title":"Vulnerability Analysis and Deprecation","text":"<p>On a quarterly basis, we run a Static Application Security Testing (SAST) and Software Composition Analysis (SCA) tools to detect possible vulnerabilities or deprecations in the libraries and stack we use. This analysis allows us to keep our application updated and secure. Based on the results of this tool, we start the corresponding update process, considering the priority level assigned to each identified change.</p> <p></p> <ul> <li>Update with API Changes (major): This type of upgrade involves significant changes to the application programming interface (API). A major upgrade generally involves substantial modifications to the way system components or modules interact with each other, which may require extensive changes to existing code to make it compatible with the new version. These changes may include the introduction of new functionality, removal of obsolete features, changes to the data structure or communication protocols. Due to the nature of these changes, a major upgrade is scheduled once a year to allow sufficient time to plan, test and make the necessary modifications to the code and systems using the updated API.</li> <li>Soft Update: In a soft update, the changes made are minor, not significant to the API and generally focused on performance improvements, bug fixes, optimizing existing code or updating external dependencies. These changes are less disruptive and can be implemented more frequently, so a soft upgrade is performed quarterly to keep the system up to date and take advantage of continuous improvements. Although the changes are not drastic, extensive testing is still recommended to ensure stability and compatibility with dependencies and related components.</li> <li>CRITICAL Update: A critical update addresses a major security vulnerability or issue that could be exploited by attackers to compromise the integrity, confidentiality or availability of the system. This type of update is considered an emergency and must be implemented quickly by releasing a hotfix to resolve the security issue in the shortest time possible. Critical updates may include security patches, workarounds or mitigations to prevent exploitation of the vulnerability while a more complete solution is being worked on.</li> </ul>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#integration-of-snyk-in-vulnerability-analysis","title":"Integration of Snyk in Vulnerability Analysis","text":"<p> At Etendo, we are committed to ensuring the security of our applications at all times. That's why one of the prominent tools we use is Snyk, a powerful Software Composition Analysis (SCA) solution.</p> <p>Snyk enables us to conduct a comprehensive analysis of the libraries and dependencies used in our application stack. By integrating our repositories with Snyk, we gain detailed visibility into potential vulnerabilities and deprecations that may exist in our code.</p> <p>Snyk is widely recognized for its ability to accurately and promptly identify vulnerabilities in software dependencies. Through Snyk, we can perform continuous and real-time analysis of our dependencies, enabling us to detect any security issues early on and take proactive measures to address them.</p> <p>The integration with Snyk provides us with detailed information on each identified vulnerability or deprecation, including descriptions, severity levels, and specific recommendations for resolution. This information is invaluable as it allows us to assess and prioritize the necessary changes based on their potential impact on our application.</p> <p>Based on the analysis results from Snyk and other security tools, we initiate the corresponding update process, considering the assigned priority level for each identified change. This approach enables us to effectively manage security risks and keep our application up to date and secure for our users.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/etendo-release-cycle/#etendo-release-notes","title":"Etendo Release Notes","text":"<p>Every time Etendo releases a new version, all that it contains is documented in the corresponding Release Notes wiki page. It is important to highlight that within Etendo release notes wiki page, there are direct links to what a given release includes. New versions of Etendo can include:</p> <ul> <li>new functionalities implemented according to the corresponding product roadmap,</li> <li>fixes of the issues reported by Etendo partners, fixed by Etendo according to the corresponding Etendo partner\u2019s services level agreement,</li> <li>and extensions, modules which extend the functionality of Etendo.</li> </ul>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"about/live-builds/","title":"Live Builds","text":"","tags":["Live Builds","Postgres","Oracle"]},{"location":"about/live-builds/#etendo-live-builds","title":"Etendo Live Builds","text":"<ul> <li>Etendo 23.2.0 - Supported Bundles Installed  - Postgres 14</li> <li>Etendo 23.2.0 - Supported Bundles Installed - Oracle 19</li> </ul> <p>Info</p> <p>The default access credentials are Username: admin Password: admin</p>","tags":["Live Builds","Postgres","Oracle"]},{"location":"about/release-notes/","title":"Release Notes","text":"Release notes Publication date Version Status ISO Image GitHub 23Q2.1 17/07/2023 23.2.1 QAA 23Q2 27/06/2023 23.2.0 C 23Q2-0.iso 23Q1.5 29/05/2023 23.1.5 CS 23Q1.4 19/05/2023 23.1.4 C 23Q1.3 02/05/2023 23.1.3 C 23Q1.2 19/04/2023 23.1.2 C 23Q1.1 11/04/2023 23.1.1 C 23Q1 31/03/2023 23.1.0 C 23Q1-0.iso 22Q4.5 16/03/2023 22.4.5 CS 22Q4-5.iso 22Q4.4 16/02/2023 22.4.4 C 22Q4.3 03/02/2023 22.4.3 C 22Q4.2 25/01/2023 22.4.2 C 22Q4.1 13/01/2023 22.4.1 C 22Q4 04/01/2023 22.4 C 22Q3 05/10/2022 22.3 C 22Q2.2 12/08/2022 22.2.2 C 22Q2.1 05/08/2022 22.2.1 C 22Q2 06/07/2022 22.2.0 C 22Q1.3 21/06/2022 22.1.3 C 22Q1.2 25/05/2022 22.1.2 C 22Q1.1 11/05/2022 22.1.1 C 22Q1 01/03/2022 22.1 C 21Q4.9 04/01/2023 21.4.9 C 21Q4.8 12/08/2022 21.4.8 C 21Q4.7 05/08/2022 21.4.7 C 21Q4.6 21/06/2022 21.4.6 C 21Q4.5 27/05/2022 21.4.5 C 21Q4.4 25/05/2022 21.4.4 C 21Q4.3 11/05/2022 21.4.3 C 21Q4.2 10/03/2022 21.4.2 C 21Q4.1 17/12/2021 21.4.1 C 21Q4 13/12/2021 21.4 C","tags":["Release Notes","Etendo","Version"]},{"location":"about/roadmap/","title":"Roadmap","text":"","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#overview","title":"Overview","text":"<p>This page includes a summary of the new features to be implemented in Etendo.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#etendo-functional-roadmap","title":"Etendo Functional Roadmap","text":"","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#bulk-posting","title":"Bulk Posting","text":"<p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the \u201cBulk posting\u201d button. Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#business-partner-settlement-advanced","title":"Business Partner Settlement Advanced","text":"<p>This module includes enhancements to the \"Business Partner Settlements\" module,  Managing credit settlements or pending business partner payments from the payments and collections window, as well as from the reconciliations, creating the settlement of payments/receivables automatically.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#advanced-business-partner","title":"Advanced Business Partner","text":"<p>This module improves business partner information management by creating a new window that displays business partner information grouped by client, vendor, employee sections, and all tabs from business partner windows. It also adds the capability to create a number sequence for each business partner based on the business partner category, with options for automatic number sequencing or deletion and modification of generated document numbers.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#payment-inout-report-advanced","title":"Payment In/Out Report Advanced","text":"<p>The payment report currently has interface and parameter issues, such as showing the last business partner when a payment has no business partner and incorrect grouping/ordering by field values. This module aims to fix these issues.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#remittance-advanced","title":"Remittance Advanced","text":"<p>This module enhances the remittance creation process by allowing selection of a custom bank account for every invoice/order, modifying the pick and edit windows, and the process that adds remittance lines. It also migrates the button to the Etendo remittance module and adds filtering options by selecting orders.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#psd2-bank-account-integration","title":"PSD2 Bank Account Integration","text":"<p>This functionality enables connecting to a bank to synchronize bank accounts with financial accounts in Etendo, downloading transactions for reconciliation, and automating the process for subsequent downloads of bank transactions.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#openbravo-integration","title":"Openbravo Integration","text":"<p>This connector allows for bidirectional data synchronization between Etendo and Openbravo instances, while also accommodating customizations made by customers.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#advanced-security","title":"Advanced Security","text":"<p>This development focuses on strengthening security measures, including requiring a minimum password length, incorporating numbers, lowercase/uppercase letters, and symbols in passwords, enforcing password renewal after a certain period, providing warnings before password expiration, blocking users after consecutive failed login attempts, preventing users with active sessions from logging in again, and disallowing password reuse over time.</p>","tags":["Roadmap","Etendo"]},{"location":"about/roadmap/#advanced-production-management","title":"Advanced Production Management","text":"<p>This module aims to accelerate the production process in Etendo by enabling booking and pre-booking of purchase orders associated with production, generating purchase proposals for manufacturing, and generating orders from purchase proposals.</p>","tags":["Roadmap","Etendo"]}]}