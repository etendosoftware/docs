{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stemmer","stopWordFilter","trimmer"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-etendo-documentation","title":"Welcome to Etendo Documentation","text":"<p>Etendo is a highly adaptable and scalable software platform designed for non-retail businesses. Our product combines a web platform with a user-friendly interface and a mobile application, allowing you to manage your business efficiently from anywhere.</p>"},{"location":"#explore-the-documentation","title":"Explore the Documentation","text":"<ul> <li> <p> Getting Started</p> <p>Learn about Etendo user interface.</p> <ul> <li>Workspace</li> <li>Navigation</li> <li>Grid and Forms</li> </ul> </li> <li> <p> What's New</p> <p>Stay up to date with latest releases and new features.</p> <ul> <li>Etendo News</li> <li> Release Notes - Etendo Classic</li> </ul> </li> <li> <p> Etendo Livebuilds</p> <p>Test new functionalities in our demo environments.</p> <ul> <li>Etendo Livebuilds</li> </ul> </li> <li> <p> User Guide - Basic Features</p> <p>Learn about the main business flows:</p> <ul> <li>Sales Management </li> <li>Procurement  Management</li> <li>Financial Management </li> <li>Warehouse  Management </li> <li>Production  Management </li> </ul> </li> <li> <p> User Guide - Bundle Extension</p> <p>Understand extensions bundle features:</p> <ul> <li>Sales Extensions</li> <li>Procurement Extensions</li> <li>Financial Extensions </li> <li>Warehouse Extensions </li> <li>Production Extensions</li> </ul> </li> <li> <p> Developer Guide</p> <p>Learn how to install, extend and customize Etendo.</p> <ul> <li>Install Etendo</li> <li>Install Modules in Etendo</li> <li>How to Guides</li> <li>Etendo Concepts</li> </ul> </li> <li> <p> Etendo Copilot</p> <p>See how AI powers and improves your day.</p> <ul> <li>Etendo Copilot</li> </ul> </li> <li> <p> Help &amp; Support</p> <p>Need help? Contact support or report bugs.</p> <ul> <li>Help &amp; Support</li> </ul> </li> </ul>"},{"location":"developer-guide/overview/","title":"Developer Guide - Overview","text":""},{"location":"developer-guide/overview/#_1","title":"Developer Guide - Overview","text":""},{"location":"developer-guide/overview/#welcome-to-the-developers-section","title":"Welcome to the Developer's Section","text":"<p>Welcome to the Developer's Documentation Corner, a dedicated space crafted exclusively for you! Here, you'll find insights, resources, and guidelines tailored to fuel your creative endeavors and empower you to customize Etendo according to our specific product types.</p> <p>Discover how you can wield the power of Etendo to craft unique experiences. From insightful APIs to advanced integration techniques we've meticulously adapted to your development needs.</p> <p>So, roll up your sleeves and ignite your creativity.</p> <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"developer-guide/overview/#here-you-will-find-exclusive-information-for-developers-from-key-concepts-to-how-to-guides-as-well-as-how-to-install-enhancements-for-etendo-platform-features","title":"Here you will find exclusive information for developers, from key concepts to how-to guides, as well as how to install enhancements for Etendo platform features.","text":""},{"location":"developer-guide/overview/#this-section-is-exclusively-dedicated-to-our-reactive-platform-capable-of-executing-microservices-with-database-interaction-and-asynchronous-actions-etendo-rx","title":"This section is exclusively dedicated to our reactive platform capable of executing microservices with database interaction and asynchronous actions: Etendo RX.","text":""},{"location":"developer-guide/overview/#you-will-find-information-on-how-to-develop-the-etendo-mobile-subapplications-and-etendo-rx-based-subapplications","title":"You will find information on how to develop the Etendo mobile subapplications and Etendo RX based subapplications.","text":""},{"location":"developer-guide/overview/#in-this-section-you-will-find-everything-about-our-copilot-project-currently-you-have-getting-started-information-as-well-as-data-about-the-xml-translator-tool-and-also-how-to-develop-new-copilot-tools","title":"In this section, you will find everything about our Copilot project. Currently, you have getting started information as well as data about the XML Translator tool, and also, how to develop new copilot tools.","text":""},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/","title":"Etendo BI Bundle | Technical Documentation","text":"<p> Javapackage: <code>com.etendoerp.etendobi.extensions</code></p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#overview","title":"Overview","text":"<p>In this section, the user can find technical information about the Etendo BI Extensions Bundle.</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#etendo-bi-connector","title":"Etendo BI Connector","text":"<p> Javapackage: <code>com.etendoerp.integration.powerbi</code></p> <p>In Etendo, it is possible to create base queries and to customize them when needed. This will provide information which can be used by Power BI.</p> <p>For this process, a background setting is required in order to create CSV files that will be uploaded to a server. The files will use information from the pre-established base queries and their customazation in case there are any. </p> <p>The following documentation is about the steps to consider when configuring this funtionality to create the CSV files.</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#requirements","title":"Requirements","text":"<p>To ensure proper functioning of the script, follow the steps below:</p> <p>Note</p> <p>The following steps can only be used for Linux OS.</p> <ol> <li> <p>rsync must be installed in our system, since this is the tool we use to connect to the server.</p> Terminal<pre><code>sudo apt install rsync\n</code></pre> </li> <li> <p>Make sure you have at least python3.7 or above installed on your system. You can verify the installation by running</p> Terminal<pre><code>python3 --version\n</code></pre> <p>If it is not installed, run </p> <p>Terminal<pre><code>sudo apt update &amp;&amp; sudo apt install python3\n</code></pre> And then verify that the version is correct.</p> </li> <li> <p>It is highly likely that pip3 comes bundled with the installation of python3. Verify if it is installed\u00a0by running </p> Terminal<pre><code>pip3 --version\n</code></pre> <p>Then ensure to have an updated version of it</p> Terminal<pre><code>sudo pip3 install --upgrade pip\n</code></pre> <p>If it is not installed, run</p> Terminal<pre><code>sudo apt install python3-pip\n</code></pre> </li> <li> <p>The user needs to install libpq-dev to ensure seamless communication and compatibility between our python script and the postgresql database.</p> <p>To install it, run      Terminal<pre><code>sudo apt install libpq-dev\n</code></pre></p> </li> <li> <p>The following libraries need to be installed using pip3 for them to work: psycopg2, pandas and requests. You can install them by running:</p> Terminal<pre><code>sudo apt install python3-psycopg2\n</code></pre> Terminal<pre><code>pip3 install pandas\n</code></pre> Terminal<pre><code>pip3 install requests\n</code></pre> </li> </ol>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#etendo-bi-connector-module-configuration","title":"Etendo BI Connector Module Configuration","text":"<p>First, make the proper configurations from the Webhooks window. This will later allow BI Logs to be sent to the BI Logs Monitor window.</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#webhooks-window","title":"Webhooks window","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>WebHook Events</code> &gt; <code>Webhooks</code></p> <p>From the Webhooks window, it is necessary to create a new record and complete the required fields as follows:</p> <ul> <li> <p>Module: Base Queries for EtendoBI </p> </li> <li> <p>Name: EtendoBI Logger</p> </li> <li> <p>Description: Fill EtendoBI Log window</p> </li> <li> <p>Event Class: Java</p> </li> <li> <p>Java_Class: <code>com.etendoerp.integration.powerbi.processes.FillLogWindow</code></p> </li> </ul> <p>Info</p> <p>It is highly recommended to have just one Webhook for this module to work properly, as its functionality will not vary. That\u2019s why, it is better to use the organization * in order to cover all child organizations.</p> <p>In the Params tab, four records must be created under the names:</p> <ul> <li> <p>client</p> </li> <li> <p>description</p> </li> <li> <p>logtype</p> </li> <li> <p>organization</p> </li> <li> <p>rule</p> </li> </ul> <p></p> <p>Info</p> <p>For more information about Webhooks, visit\u00a0Webhooks Events.</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#user-api-token-window","title":"User API Token window","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>WebHook Events</code> &gt; <code>User API Token</code></p> <p>Then, make the proper configurations from the User API Token window. Here, it is necessary to grant access to a user role, so a token in this window needs to be created.</p> <p></p> <p>Then, go back to the Webhooks window, and create a record in the Access tab in order to add the previously generated token. </p> <p></p> <p>Success</p> <p>This way the Webhook is configured. Now, it is necessary to configure the EtendoBI Connector module.</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#bi-connection-window","title":"BI Connection Window","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Analysis</code> &gt; <code>BI Connection</code></p> <p>In the BI Connection window, It is necessary to create a record to specify the path to the CSVs creation script and the Webhook to use. If the EtendoBI bundle is installed and the script path was not changed, the user should use the default value of \u2018repository path\u2019 field. Otherwise, the corresponding path should be specified. </p> <p>Info</p> <p>It is important to note that the Repository path will search for the corresponding path INSIDE the WebContent folder of the project. </p> <p></p> <p>In the Data Destination tab, the file name of the script needs to be specified.\u00a0</p> <p></p> <p>Finally, in the Execution variables tab, some records must be created being the \u2018Variable\u2019 field:</p> <ul> <li> <p>ip: ip of the server where the files will be uploaded (mandatory)</p> </li> <li> <p>client: the name of our client (mandatory)</p> </li> <li> <p>user: the user used to connect to the server. (mandatory)</p> </li> <li> <p>application_url: url of our application. e.g. \"https://my-domain.cloud/etendo\" (mandatory)</p> </li> <li> <p>port: port of the server where the user is  connecting to (default: 22) </p> </li> <li> <p>path: path of the server where the files will be sent (default: /)</p> </li> <li> <p>private-key-path: path of the private key used for the connection to the server</p> </li> <li> <p>bbdd_user: username of a read only user to access the database</p> </li> <li> <p>bbdd_password: password of the read only user</p> </li> <li> <p>csv_separator: delimiter to use in the final csv files (default: |)</p> </li> </ul> <p>private-key-path is the path of the private key used for the connection to the server. If this variable is not specified, the script will try to connect without specifying a private key. In the bbdd_user and bbdd_password variables, enter the username and password of a user with read-only permissions to the database. If either of these two variables is not found, the process will use the credentials of the database superuser.</p> <p>Info</p> <p>However, it is highly recommended to use a user with read only permissions as it is a great security measure.</p> <p>As an example, let\u2019s use the following values:</p> <p></p> <p>Info</p> <p>It is important to respect the specified names for the \u201cVariable\u201d field.</p> <p>Also, it is important to note that the script is going to create a folder named as the value of the \u201cClient\u201d variable, and it will contain folders for each organization that executes the background process. Therefore, if there are two BI Connections with the same \u201cClient\u201d value, the last execution of the process will overwrite the folder.  </p> <p>For example, let's say there is\u00a0 Organization A, which has Organizations B and C as its child organizations. If the user needs to have the same configuration for both, we can create a BI Connection using Organization A and set up two background processes that run the \"EtendoBI Process,\" one for Organization B and the other for Organization C.</p> <p>When the script is executed, a folder will be created with the value of the \"Client\" variable in the BI Connection window as its name. Within that folder, subfolders will be created for each organization (in this case, A_logs and A_output for Organization A, and B_logs and B_output for Organization B).</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#enterprise-module-management-window","title":"Enterprise Module Management window","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Enterprise Model</code> &gt; <code>Enterprise Module Management</code></p> <p>To load the Etendo base queries, go to the Enterprise Module Management window, and select Base Queries for EtendoBI and then click the OK button.</p> <p></p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#bi-query-window","title":"BI Query window","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Analysis</code> &gt; <code>BI Query</code></p> <p>After that, Etendo base queries should be successfully loaded in the BI Query window.</p> <p></p> <p>There are several points to consider when handling queries in this module.</p> <ul> <li>Primary Key Requirement: Every base query must have its primary key as the first column. This is crucial\u00a0 since in the script it is assumed that the first column is the identifier.\u00a0</li> </ul> <p>Warning</p> <p>A failure to adhere to this can result in incorrect output, duplicated records, and an immense number of rows.</p> <ul> <li> <p>Client column on base query: Every base query must include <code>ad_client_id</code> column, with the alias \u201cClientID\u201d</p> </li> <li> <p>Organization column on base query: Every base query must include <code>ad_org_id</code> column, with the alias \u201cOrgID\u201d</p> </li> <li> <p>Custom Query Customization: The customization of the query must also include the primary key (which is the same as the base query since customization is performed on the same table) with the SAME ALIAS as the base query.\u00a0</p> </li> </ul> <p>Warning</p> <p>Failing to respect this can lead to improper mapping between the results of the base query and its customization, resulting in incorrect output.</p> <p>Let\u2019s see an example of a correct base query and customization.</p> <p></p> <p>In this case, as a base query there are three columns. In its customization, there is a new column \u201cname\u201d.\u00a0</p> <p>Info</p> <p>Note that there are three mandatory columns in the base query, with the correct alias for column <code>ad_client_id</code> and <code>ad_org_id</code>. It is important to make sure that \u201cClientID\u201d and \u201cOrgID\u201d aliases are being set WITHOUT double quotes. Also, there should not be more than one space between the \u201cas\u201d keyword. </p> <pre><code>    \u2026 ad_client_id as \u201cClientID\u201d, \u2026    -- INCORRECT\n    \u2026 ad_client_id as ClientID, \u2026      -- CORRECT\n</code></pre> <p>In the customization query, despite the requirement to have the primary key with the same alias as the base query, it is not necessary for it to be the first column. In this case, if instead of having:</p> <pre><code>SELECT m_warehouse_id as WarehouseID, name as \"Warehouse Name\" FROM m_warehouse\n</code></pre> <p>We have:</p> <pre><code>SELECT name as \"Warehouse Name\", m_warehouse_id as WarehouseID FROM m_warehouse\n</code></pre> <p>The result will be exactly the same.</p> <p>The script executes the base query, and then merges the customization, using both primary keys for mapping the rows.</p> <p>If a base query has a customization, the script creates three different CSVs.</p> <ul> <li> <p>A CSV file that contains the result of the base query. This CSV file has the prefix <code>EBI_</code> if it is an Etendo base query. If it is a client base query, it has the first three letters of the value of the \u201cClient\u201d variable that was set earlier as a prefix.</p> </li> <li> <p>A CSV file with the prefix <code>BASE_</code>, which contains the columns from the base query, but if the customization overrides any of these values, they will be overwritten with the values from the customization. In this case, the <code>BASE_</code> CSV file will be the same as the base query since the customization does not override any values from the base query columns.</p> </li> <li> <p>A CSV file with the prefix <code>FULL_</code>, which includes both the columns from the base query and any additional columns added in the customization. In the given example, the <code>FULL_</code> CSV file will contain the additional column \u201cWarehouse Name\u201d.\u00a0</p> </li> </ul> <p>Later, at the end of the configuration,\u00a0 this example query will be executed to analyze the generated CSV files.</p> <p>Info</p> <p>It is important to note that there should be only one customization per base query. It should also be made clear that it is not possible to add constraints to the customization to remove rows from the base query. Instead, the customization allows adding or overwriting columns in the original query, using the primary key to map the records.</p> <p>Base queries must all contain the <code>ad_client_id</code> and <code>ad_org_id</code> columns, with alias \u201cClientID\u201d and \u201cOrgID\u201d (case insensitive). </p> <p>Warning</p> <p>If a query does not have these columns with their alias, it will produce an error and be ignored.</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#process-request-window","title":"Process Request window","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt; <code>Process Request</code></p> <p>Once the query configuration is done, go to the Process Request window, create a new record, select the EtendoBI Process from the process field and schedule it.</p> <p></p> <p>The scope of the data collection performed by the queries is based on the organization that configured the background process. In other words, all the obtained data is\u00a0 filtered by the client and the organization that configured the background process, and NOT by the organization used in the BI Connection window. If the organization does not have a configuration in the BI Connection, Etendo will search for the configuration in one of its parent organizations, but the data scope will remain the same (itself and its child organizations).</p> <p>Info</p> <p>If the organization that configured the background process does not have a BI Connection and there is no BI Connection found for its parent organizations either, the process will not be executed.\u00a0</p> <p>The process will never search for a BI Connection in the child organizations of the one which was set on the background process.</p> <p></p> <p>In the Process Monitor tab, the status of Success is shown in the new record that appears when the process is executed. It is good to know that this process executes our python script, so if there were no issues up until the execution of the python script, it will return to success status regardless of whether the python script fails.</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/etendo-bi-extensions/#bi-logs-monitor-window","title":"BI Logs Monitor window","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Analysis</code> &gt; <code>BI Logs Monitor</code></p> <p>The execution process can be checked in the BI Logs Monitor window.</p> <p></p> <p>In this example image, the information about the script execution can be seen.</p> <p>If no records in the Logs window were created after the execution of the script, it is possible that the error occurred on the synchronization of the files with the server. The user is able to check this by looking at the rsync log files created in the filesystem.\u00a0</p> <p>After the execution of the process, two new directories should be created in the filesystem. One will contain the logs files, one for the rsync execution that will contain information about the file upload to the server; another file called syncScript.log.{datetime}, that will contain information about the script execution (most of this information can be seen in the Logs Monitor window, but if for any reason the window cannot receive this information, it should be able to be seen using this .log file).</p> <p>In this example, in the path where the script is allocated, a new directory named \u201cEtendo\u201d should be created. Inside it, there should be two folders for the organization that set the background process (F&amp;B US West Coast).</p> <p><code>drwxrwxr-x 1 &lt;user&gt; &lt;group&gt; 9,1K jun 8 16:52 ETPBIC_SyncScript.py</code></p> <p><code>drwxrwxr-x 4 &lt;user&gt; &lt;group&gt; 4,0K jun 8 17:39 Etendo/</code></p> <p>Inside the Etendo/ folder, we have:</p> <p><code>drwxrwxr-x 2 &lt;user&gt; &lt;group&gt; 4,0K jun 8 16:54 F+B_US_West_Coast_logs/</code></p> <p><code>drwxrwxr-x 2 &lt;user&gt; &lt;group&gt; 4,0K jun 8 16:54 F+B_US_West_Coast_output/</code></p> <p>The output directory, will contain all the CSVs that should have been uploaded to the server.</p> <p>Info</p> <p>Remember that the main folder is created using the prefix of the \u201cClient\u201d variable that is set on BI Connection window. If two connections have the same value for \u201cClient\u201d variable, these directories will be overwritten.</p> <p>This is the content of <code>Ete_Example.csv</code> and <code>BASE_Example.csv</code> files:\u00a0</p> <p>Info</p> <p>Remember that since any column is not being overridden, these files are the same.\u00a0</p> <p></p> <p>On the other hand, this is the content of <code>FULL_Example.csv</code>:</p> <p></p> <p>Warning</p> <p>Make sure to have the corresponding permissions to connect to Files, since an incorrect configuration can lead to an error.</p>","tags":["EtendoBI","PowerBI","BI","Connector"]},{"location":"developer-guide/etendo-classic/bundles/warehouse-extensions-bundle/","title":"Warehose Extensions Bundle | Technical Documentation","text":"<p> Javapackage: <code>com.etendoerp.warehouse.extensions</code></p>"},{"location":"developer-guide/etendo-classic/bundles/warehouse-extensions-bundle/#overview","title":"Overview","text":"<p>In this section, the user can find technical information about the Warehouse Extensions Bundle.</p>"},{"location":"developer-guide/etendo-classic/bundles/warehouse-extensions-bundle/#stock-history","title":"Stock History","text":"<p> Javapackage: <code>com.etendoerp.stock.history</code></p> <p>This module is added to the Create Stock History process and has the following characteristics: </p> <p>It takes all the stock data from each product (present in the table <code>m_storage_detail_history</code>) and enters them into the table <code>etst_storage_detail_history</code>, under the day the process was executed. If there is already data loaded on that date it is overwritten with the new data. The whole process is monitored by logs that can be viewed in the 'Process Request' window under the 'Process Monitor' tab of the process.</p> <p>If the user would like to make changes on the table, and would like them to be taken into account in the data loading process, it  can be done by means of the hooks functionality present in the module. Just create a class that implements the StockHistoryHooks interface and extends the StockHistoryPioritizer abstract class, and implement the desired functionality under the doExecute method. This method will be executed once for each row added to the table. If multiple instances of the same interface are implemented, the order of execution can be decided by the getPriority method. The priority is given by how close to 0 is the number returned by this method. </p>"},{"location":"developer-guide/etendo-classic/bundles/warehouse-extensions-bundle/#how-to-define-a-stock-history-hook","title":"How to define a Stock History Hook","text":"<ul> <li> <p>Define the class for the hook, extending the abstract class StockHistoryHookPrioritizer and implementing the interface StockHistoryHook:</p> <pre><code>import com.etendoerp.stock.history.hooks.StockHistoryHookPrioritizer;\nimport com.etendoerp.stock.history.hooks.StockHistoryHook;\n\npublic class ExampleHook extends StockHistoryHookPrioritizer\n  implements StockHistoryHook {\n}\n</code></pre> </li> <li> <p>Implement the abstract methods of the interface and abstract class: </p> <pre><code>import com.etendoerp.stock.history.data.ETSTStorageDetailHistory;\nimport com.etendoerp.stock.history.hooks.StockHistoryHookPrioritizer;\nimport com.etendoerp.stock.history.hooks.StockHistoryHook;\n\npublic class ExampleHook extends StockHistoryHookPrioritizer\n  implements StockHistoryHook {\n\n@Override\npublic void exec(ETSTStorageDetailHistory hookObject) throws Exception {\n  System.out.println(\"This is the ExampleHook hook\");\n}\n\n@Override\npublic int getPriority() {\n  return 0;\n}\n}\n</code></pre> </li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/warehouse-extensions-bundle/#uninstall-module","title":"Uninstall module","text":"<p>To uninstall the module and prevent future problems with orphan records, a sequence of steps must be followed:</p> <ol> <li> <p>Run the following query in the environment's database <pre><code>DELETE FROM OBUIAPP_GC_TAB \nWHERE AD_TAB_ID = 'C3DB551F2BCA40A79AAF21DBD6D06309';\n</code></pre></p> </li> <li> <p>After the query successfully finishes, delete the module by the way corresponding to the installation method (Sources/JARs)</p> </li> </ol>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/","title":"Financial Extensions Bundle | Technical Documentation","text":"<p> Javapackage: <code>com.etendoerp.financial.extensions</code></p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#overview","title":"Overview","text":"<p>In this section, the user can find technical information about the Financial Extensions Bundle.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#conversion-rate-downloader","title":"Conversion Rate Downloader","text":"<p> Javapackage: <code>com.smf.currency.conversionrate</code></p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#technical-aspects","title":"Technical Aspects","text":"<p>In the Currency Converters window, the necessary Apilayer data has to be configured:</p> <ul> <li>Classname: com.smf.currency.apiconfig.CurrencyLayerConverter</li> <li>URL: http://apilayer.net/api/</li> <li>Token</li> <li>User</li> <li>Password</li> </ul> <p>In the Conversion Rate Downloader Rule window, the configuration includes which conversions are required from which currency to which currency, what is the tolerance, etc. The \"Conversion Rate Downloader\" process in the background also needs to be configured. This is the one that will obtain the conversion and insert it in the Conversion Rates window.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#business-partner-settlement","title":"Business Partner Settlement","text":"<p> Javapackage: <code>org.openbravo.financial.bpsettlement</code></p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#introduction","title":"Introduction","text":"<p>In this document, all the developments that need to be delivered to fulfill the Business Partner Settlement project are described in detail.</p> <p>The document is structured in the different main processes that are included in the project.</p> <ul> <li>Module definition</li> <li>BP Settlement window</li> <li>Add Credit Payments Pick and Execute</li> <li>Add Pending Invoices Pick and Execute</li> <li>Process/Cancel/Reopen Process Definition</li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#module-definition","title":"Module Definition","text":"<p>Module Name</p> <p>Business Partner Settlements</p> <p>Description</p> <p>This module provides the ability to settle Available Credit or Pending Payments of a Business Partner that is both Customer and Provider.</p> <p>License</p> <p>OBPL</p> <p>DB Prefix</p> <p>OBFBPS</p> <p>javapackage</p> <p><code>org.openbravo.financial.bpsettlement</code></p> <p>Translation Required</p> <p>Yes</p> <p>Dependant Modules</p> <p><code>*Openbravo 3.0 Framework* PR14Q3.1 (2.1.24019)</code></p> <p>datapackage</p> <p><code>org.openbravo.financial.bpsettlement</code></p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#bp-settlement-window","title":"BP Settlement window","text":"<ul> <li>Window Name:Business Partner Settlement</li> <li>Help: Window to manage settlements that cancels available credit or pending Payments of a Business Partner.</li> <li>Type: Maintain</li> <li>Menu folder: Financial Management &gt;&gt; Receivables and Payables &gt;&gt; Transactions. Just above 'Financial Account' window</li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#header-tab","title":"Header Tab","text":"<ul> <li>Name: Header</li> <li>Help: Definition of each settlement created for a business partner.</li> <li>UI Pattern: Standard</li> <li>Table: OBFBPS_Settlement</li> <li>Sequence: 10</li> <li>Tab level: 0</li> </ul> <p>Table Definition:</p> <ul> <li>Name: OBFBPS_Settlement</li> <li>TableName: OBFBPS_Settlement</li> <li>Java Class Name: BPSettlement</li> <li>Window: Business Partner Settlement</li> </ul> Name Column Name Mandatory SeqNo Reference Show in Grid (seq) Default Definition Organization AD_Org_ID Yes 10 Table Dir only allow transactional Orgs Yes (10) Settlement Type BP_Settlement_Type Yes 20 List new BP_Settlement Type:   - Credit (CR), Invoice (INV) Yes (20) Stored In session: Yes   Do not allow to change when there are lines. Using an Event Handler Settlement Date SettlementDate Yes 30 Date Yes (30) SYSDATE / now() Business Partner C_BPartner_ID Yes 40 Selector new Customer/Vendor Business Partner:   - HQL Filter by customer = 'Y' and vendor = 'Y'  - Grid fields: Name, Search Key, Category Yes (40) Do not allow to change when there are lines. Using an Event Handler GL Item C_GLItem_ID Yes 50 GL Item Selector Yes (50) Settlement Payment In FIN_Payment_In_ID No 60 Payment selector Yes (60) Read Only Yes Settlement Payment Out FIN_Payment_Out_ID No 70 Payment selector Yes (70) Read Only Yes Description Description No 80 Text. Length: 2000 No Status BP_Settlement_Status Yes 1010 List new BP Settlement Status:   - Values: Draft (DR), Processed (CO), Canceled (VO) Yes (80) DR Show In Status Bar Yes   Stored In Session: Yes Incoming Amount Incoming_Amt   (Defined in the ad_column, but not physically in the DB) No 1020 Computed field: Sum of incoming amounts (Credit In and Sales Invoice) Yes (90) Show In Status Bar: Yes Outgoing Amount Outgoing_Amt   (Defined in the ad_column, but not physically in the DB) No 1030 Computed field: Sum of outgoing amounts (Credit Out and Purchase Invoice) Yes (100) Show In Status Bar: Yes Add Credit Payments Add_Credit_Payments_Process   (AD_Column.Name: Add Credit Payments Process) No 2010 Button (Char 1) No Y Display Logic: type credit and status Draft Add Not Paid Invoices Add_Invoices_Process   (AD_Column.Name: Add Invoices Process) No 2020 Button (Char 1) No Y Display Logic: type invoice and status Draft Process Settlement Process_Settlement No 2030 Button (Char 60) new BP Settlement Action List:   - Values: CO Process, VO Cancel, RE Reactivate No CO"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#obfbps_settlement_trg-trigger","title":"OBFBPS_Settlement_trg trigger","text":"<p>Trigger to avoid modifying any field when the Settlement is in status Processed or Canceled.</p> <p>When the status is changing from CO to any other it should allow setting <code>FIN\\_Payment\\_In\\_ID</code> and <code>FIN\\_Payment\\_Out\\_ID</code>  to null.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#credit-in-tab","title":"Credit In Tab","text":"<ul> <li>Name: Credit In</li> <li>Help: Each Payment In with available credit to consume that it is canceled in this settlement.</li> <li>UI Pattern: Read Only</li> <li>Table: OBFBPS_Credit_Payment</li> <li>Sequence: 20</li> <li>Tab level: 1</li> <li>Display Logic: Settlement Type Credit</li> <li>Auxiliary Input: IsSoTrxTab value Y</li> </ul> <p>Table Definition:</p> <ul> <li>Name: OBFBPS_Credit_Payment</li> <li>TableName: OBFBPS_Credit_Payment</li> <li>Java Class Name: CreditPayment</li> <li>Window: Business Partner Settlement</li> </ul> Name Column Name Mandatory SeqNo Reference Show in Grid (seq) Default Definition Credit Payment FIN_Payment_ID Yes 10 Payment Selector Yes (10) Settlement Amount Settlement_Amt Yes 20 Amount Yes (20) Is Sales Transaction IsSOTrx Yes Yes/No No @IsSoTrxTab@ (Auxiliary Input value) Hidden Field"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#obfbps_credit_payment-trigger","title":"OBFBPS_Credit_Payment trigger","text":"<p>Trigger to avoid modifying any field when the Settlement is in status Processed or Canceled.</p> <p>When the status is changing from CO to any other, it should allow setting <code>FIN\\_Payment\\_In\\_ID</code> and <code>FIN\\_Payment\\_Out\\_ID</code> to null.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#credit-out-tab","title":"Credit Out Tab","text":"<p>It is the same as Credit In with these differences:</p> <ul> <li>Name: Credit Out</li> <li>Help: Each Payment Out with available credit to consume that it is canceled in this settlement.</li> <li>Sequence: 30</li> <li>Tab level: 1</li> <li>Auxiliary Input: IsSoTrxTab value N</li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#sales-invoice-tab","title":"Sales Invoice Tab","text":"<ul> <li>Name: Sales Invoices</li> <li>Help: Each not paid Sales Invoice that it is canceled in this settlement.</li> <li>UI Pattern: Read Only</li> <li>Table: OBFBPS_Invoice</li> <li>Sequence: 40</li> <li>Tab level: 1</li> <li>Display Logic: Settlement Type Invoice</li> <li>Auxiliary Input: IsSoTrxTab value Y</li> </ul> <p>Table Definition:</p> <ul> <li>Name: OBFBPS_Invoice</li> <li>TableName: OBFBPS_Invoice</li> <li>Java Class Name: SettledInvoice</li> <li>Window: Business Partner Settlement</li> </ul> Name Column Name Mandatory SeqNo Reference Show in Grid (seq) Default Definition Invoice C_Invoice_ID Yes 10 Invoice Selector Yes (10) Settlement Amount Settlement_Amt Yes 20 Amount Yes (20) Is Sales Transaction IsSOTrx Yes Yes/No No @IsSOTrxTab@ (Auxiliary Input value) Hidden Field"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#obfbps_invoice_trg-trigger","title":"OBFBPS_Invoice_Trg trigger","text":"<p>Trigger to avoid modifying any field when the Settlement is in status Processed or Canceled.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#purchase-invoice-tab","title":"Purchase Invoice Tab","text":"<p>Same as Sales Invoice with these differences:</p> <ul> <li>Name: Purchase Invoice</li> <li>Help: Each not paid Purchase Invoice that it is canceled in this settlement.</li> <li>Sequence: 50</li> <li>Tab level: 1</li> <li>Auxiliary Input: IsSoTrxTab value N</li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#processcancelreopen-report-and-process","title":"Process/Cancel/Reopen Report and Process","text":"<p>Report and Process to manage bp settlements.</p> <ul> <li>Name: BP Settlement Process.</li> <li>UI Pattern: Standard</li> <li>Data access level: Organization</li> <li>All flags to false</li> <li>Parameter Action<ul> <li>Reference List. BP Settlement Action, the list assigned to the button.</li> <li>Validation BP Settlement Valid Actions. Filters the available actions based on the BP_Settlement_Status column value.<ul> <li>Status Draft (DR): Process (CO)</li> <li>Status Processed (CO): Cancel (VO), Reactivate (RE)</li> <li>Status Canceled (VO): None (the button should be hidden as well).</li> </ul> </li> <li>Default value: value of <code>Process\\_Settlement</code> column.</li> </ul> </li> <li>Process class: <code>org.openbravo.financial.bpsettlement.process.BPSettlementProcess</code></li> <li>Similar example in Payment Process Report and Process.</li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#bpsettlementprocess-java-class","title":"BPSettlementProcess java class","text":"<p>Extends <code>org.openbravo.service.db.DalBaseProcess</code>.</p> <p>Validations:</p> <ul> <li>Status - action validation.<ul> <li>Settlements in status DR can only be processed.</li> <li>Settlements in status CO can only be canceled or reactivated.</li> <li>Settlements in status VO cannot be modified.</li> </ul> </li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#process-co-action","title":"Process CO action","text":"<p>This action does an extra validation:</p> <ul> <li>When it is an invoice settlement type, ensure that there are invoices and total amounts for purchase and sales invoices are the same.<ul> <li>If it is a credit settlement type, the same check with credit payments.</li> </ul> </li> <li>Ensure that there are no invoices and credit payments in the same settlement.</li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#invoice-type","title":"Invoice type","text":"<p>Create and process a Payment In with all the sales Payment Schedule Details included in the <code>OBFBPS\\_Invoice</code> table for the settlement. Create a similar Payment Out with the purchase Payment Schedule Details.</p> <p>Add a Payment Detail on each payment using the GL Item defined in the settlement, so the total amount of each payment is Zero.</p> <p>Set the generated payment ids on <code>FIN\\_Payment\\_In\\_ID</code> and <code>FIN\\_Payment\\_Out\\_ID</code> columns.</p> <p>Set the <code>BP\\_Settlement\\_Status</code> to CO and the <code>Process\\_Settlement</code> to VO</p> <p>To build the Payments based on the selected Payment Schedule details, use the following public method:</p> <pre><code>org.openbravo.advpaymentmngt.process.FIN\\_AddPayment.savePayment(FIN\\_Payment \\_payment, boolean isReceipt, DocumentType docType, String strPaymentDocumentNo, BusinessPartner businessPartner, FIN\\_PaymentMethod paymentMethod, FIN\\_FinancialAccount finAccount, String strPaymentAmount, Date paymentDate, Organization organization, String referenceNo, List&lt;FIN\\_PaymentScheduleDetail&gt; selectedPaymentScheduleDetails, HashMap&lt;String, BigDecimal&gt; selectedPaymentScheduleDetailsAmounts, boolean isWriteoff, boolean isRefund, Currency paymentCurrency, BigDecimal finTxnConvertRate, BigDecimal finTxnAmount)\n</code></pre> <p>To add the GL Item payment details use the following public method:</p> <pre><code>org.openbravo.advpaymentmngt.process.FIN\\_AddPayment.saveGLItem(FIN\\_Payment payment, BigDecimal glitemAmount, GLItem glitem)\n</code></pre> <p>To process the payment use the following public method (strAction: P):</p> <pre><code>org.openbravo.advpaymentmngt.process.FIN\\_AddPayment.processPayment(VariablesSecureApp vars, ConnectionProvider conn, String strAction, FIN\\_Payment payment)\n</code></pre>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#credit-type","title":"Credit type","text":"<p>Create and process a Payment In with all the sales credit payments included in the <code>OBFBPS\\_Credit\\_Payment</code> table. A similar Payment Out is created with the purchase credit payments.</p> <p>For each selected credit payment, update its description with the new payment document number and increment the Used Credit amount by the settled amount. Link the credit payment to the new payment.</p> <p>Add a Payment Detail on each payment using the GL Item defined in the settlement, so the total amount of each payment is Zero.</p> <p>See an example on how to add the selected credit payments to the new payments in the following method:</p> <pre><code>org.openbravo.advpaymentmngt.actionHandler.AddPaymentActionHandler.addCredit(FIN\\_Payment payment, JSONObject jsonparams)\n</code></pre> <p>Note that to link the credit payments with the new payment, it is used the public method:</p> <pre><code>org.openbravo.advpaymentmngt.process.FIN\\_PaymentProcess.linkCreditPayment(FIN\\_Payment newPayment, BigDecimal usedAmount, FIN\\_Payment creditPayment)\n</code></pre>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#cancel-vo-action","title":"Cancel VO action","text":"<p>It cancels the Payments generated in this settlement and stored in <code>FIN\\_Payment\\_In\\_ID</code> and <code>FIN\\_Payment\\_Out\\_ID</code> columns.</p> <p>To cancel the payment, use the following public method (strAction: V):</p> <pre><code>org.openbravo.advpaymentmngt.process.FIN\\_AddPayment.processPayment(VariablesSecureApp vars, ConnectionProvider conn, String strAction, FIN\\_Payment payment)\n</code></pre> <p>Sets the <code>BP\\_Settlement\\_Status</code> to VO and the <code>Process\\_Settlement</code> to VO</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#reactivate-re-action","title":"Reactivate RE action","text":"<p>As in Cancel action cancels the payment generated on the settlement.</p> <p>Sets the <code>BP\\_Settlement\\_Status</code> to DR and the <code>Process\\_Settlement</code> to CO</p> <p>Sets to null the <code>FIN\\_Payment\\_In\\_ID</code> and <code>FIN\\_Payment\\_Out\\_ID</code> columns.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#banking-pool","title":"Banking Pool","text":"<p> Javapackage: <code>com.etendoerp.bankingpool</code></p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#overview_1","title":"Overview","text":"<p>This document covers how to create a process that automatically generates a new Finance Plan or updates a Finance Plan from the Financial Management &gt;&gt; Accounting &gt;&gt; Transactions &gt;&gt; Financial Type Configuration window.\u00a0 It also provides a structure that should be considered when creating the Java class that is responsible for performing these new processes.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#creating-the-new-java-class","title":"Creating the new Java Class","text":"<p>The Java class in charge of creating the financing plan must extend the Java <code>FinanceTypeTemplate</code> class. It provides some abstract methods to be performed and other methods that are useful when creating the new process. The basic structure that the new Java class must follow is the following:</p> <pre><code>package com.etendoerp.bankingpool.types;\nimport com.etendoerp.bankingpool.FinancialTypeConfiguration;\nimport java.math.BigDecimal;\nimport java.util.Date;\npublic class NewFinancialType extends FinanceTypeTemplate {\n @Override\n public void exec(FinancialTypeConfiguration configuration, Date date,\n \u00a0\u00a0\u00a0\u00a0boolean isNewFinancePlan) {\n \u00a0\u00a0if (isNewFinancePlan) {\n \u00a0\u00a0\u00a0\u00a0for (int paymentNo = 0; paymentNo &lt; configuration.getInstallmentNo(); paymentNo++) {\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//Implement the creation of the new Financing Plan\n \u00a0\u00a0\u00a0\u00a0}\n \u00a0\u00a0} else {\n \u00a0\u00a0\u00a0\u00a0for (int paymentNo = 0; paymentNo &lt; configuration.getInstallmentNo(); paymentNo++) {\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//Implement the update of the Financing Plan\n \u00a0\u00a0\u00a0\u00a0}\n \u00a0\u00a0}\n }\n @Override\n public BigDecimal getInstallment(FinancialTypeConfiguration configuration,\n \u00a0\u00a0\u00a0\u00a0BigDecimal totalAmortization, int totalInstallment) {\n \u00a0\u00a0//Calculate the value of the Installment\n \u00a0\u00a0return null;\n }\n @Override\n public BigDecimal getRecalculatedInstallment(FinancialTypeConfiguration configuration,\n \u00a0\u00a0\u00a0\u00a0BigDecimal totalAmortization, BigDecimal residualValue, int totalInstallment) {\n \u00a0\u00a0//Calculate the value of the installment recalculation\n \u00a0\u00a0return null;\n }\n}\n</code></pre> <p>The Exec method is the method executed when a new Finance Plan is created or the Finance Plan is to be modified.</p> <p>The Exec method receives 3 parameters:</p> <ul> <li>configuration: The record of the Financial Type Configuration window to which the new finance Plan is created or modified.</li> <li>date: The date that is passed as a parameter when creating a finance Plan.</li> <li>isNewFinancePlan: Check that indicates whether a new finance plan is being created or updated. If called from the Create Finance Plan button this parameter will be True and if called from the Update Finance Plan button the parameter will be False.</li> </ul> <p>The abstract class <code>FinanceTypeTemplate</code> has implemented several methods that can be useful, among them can be found:</p> <ul> <li>newFinancePlan: Creates a new installment of the finance plan</li> <li>setDate:\u00a0 Assigns a date to the date field in a finance plan record</li> <li>setAllDates: Assigns the date to the new Financing plan taking into account the payment date and frequency defined in the header</li> <li>getLastFinancePlanWithInvoice: Obtains the last installment of the financing plan with an invoice</li> <li>getLastFinancePlanWithPayment: Obtains the last installment of the financing plan with a payment</li> <li>getMonthlyInterest: Performs the calculation (% Annual Interest/(12/frequency))</li> <li>getCapitalizedInterest: (1+% monthly Interest)^Installment Nro^</li> <li>getResidualValueDivideCapitalizedInterest: Performs the calculation Residual Value/Capitalized Interest.</li> <li>setAmortizationRenting: Performs the calculation Installment - Interest</li> <li>setTotalAmortization: Calculates the total amount paid up to that point in the finance plan</li> <li>setPendingAmortization: Calculates the outstanding amount to be paid in the finance plan</li> <li>setInterest: Performs the calculation ((last Pending Amortization*% annual Interest)/12)*frequency</li> <li>setCommission: Assigns the commission defined in the header</li> <li>setBusinessPartner: Assigns the Financial Bank/Entity defined in the header</li> <li>setProject: Assigns the Project defined in the header</li> <li>setCostCenter: Assigns the Cost Center defined in the header</li> <li>setFirstPendingAmortization: Method of calculating the outstanding amortization for the first installment</li> <li>getFinancePlanToRecalculate: Method that obtains all the financing plan installments to be updated if you want to update a finance plan</li> </ul> <p>The abstract methods must be implemented in the new Java class and, if required, an override can be made on any of the methods of the <code>FinanceTypeTemplate</code> class.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#creating-the-new-financial-type","title":"Creating the new Financial Type","text":"<p>In the Financial Type window a new record is created with the new Financial Type and in the Class Name field the package of the Java class that was implemented is entered followed by the Java class name.</p> <p></p> <p>By simply filling in the Class Name field, the Create New Funding Plan and Update Funding Plan button will be visible.</p> <p></p> <p></p> <p>There is no need to modify any of the 2 buttons, as they automatically execute the Exec method of the Java class specified in the Financial Type.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#advanced-financial-docs-processing","title":"Advanced Financial Docs. Processing","text":"<p> Javapackage: <code>com.etendoerp.advanced.financial.docs.processing</code></p> <p> Javapackage: <code>com.etendoerp.advanced.financial.docs.processing.template</code></p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#undo-closed-orders-unvoid-voided-invoices-hooks","title":"Undo Closed orders / Unvoid voided invoices hooks","text":"<p>New hooks have been added to the 'Undo Close' and 'Unvoid' processes, from the Sales/Purchase orders and invoices respectively.  These hooks allow the developer to add new validations before and/or after the action is executed, and thus create new automations more easily.</p>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#how-to-define-an-unvoidinvoicehook-instance","title":"How to define an UnvoidInvoiceHook instance","text":"<ul> <li>Define the class for hook, implementing the <code>UnvoidInvoiceHook</code>  interface. This hook is executed when a user tries to unvoid a voided invoice:</li> </ul> <pre><code>public class UnvoidInvoiceImpl implements UnvoidInvoiceHook {\n  @Override\n  public OBError preProcess(Invoice invoice) {\n    System.out.println(\"This is an example of pre method hook\");\n    return new OBError();\n  }\n\n  @Override\n  public OBError postProcess(Invoice invoice) {\n    System.out.println(\"This is an example of post method hook\");\n    return new OBError();\n  }\n}\n</code></pre>"},{"location":"developer-guide/etendo-classic/bundles/financial-extensions-bundle/overview/#how-to-define-a-undocloseorderhook-instance","title":"How to define a UndoCloseOrderHook instance","text":"<ul> <li>Define the class for hook, implementing the UndoCloseOrderHook interface. This hook is executed when a user tries to undo a closed order:</li> </ul> <pre><code>public class UndoOrderImpl implements UndoCloseOrderHook {\n\n  @Override\n  public OBError preProcess(Order order) {\n    System.out.println(\"This is an example of pre method hook\");\n    return new OBError();\n  }\n\n  @Override\n  public OBError postProcess(Order order) {\n    System.out.println(\"This is an example  of post method hook\");\n    return new OBError();\n  }\n}\n</code></pre>"},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/","title":"Docker Management","text":"<p> Javapackage: <code>com.etendoerp.docker</code></p>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#overview","title":"Overview","text":"<p>Docker is a platform that enables developers to automate the deployment, scaling, and management of applications. It uses containerization technology, which packages an application and its dependencies into a standardized unit called a container. Containers can run consistently across different computing environments, making them highly portable and efficient.</p> <p>The <code>com.etendoerp.docker</code> module enables the use of Dockerized containers in Etendo Classic. This allows for the distribution and encapsulation of new functionalities using Etendo's existing module infrastructure. It also provides the capability to Dockerize the database, Tomcat, or any current or future Etendo infrastructure dependencies. Also, the module includes Gradle tasks to manage containers.</p> <p>Info</p> <p>This module includes the infrastructure for container management and the Postgres database service, as an example. In case you want to run other services, add the corresponding modules that implement the dockerization.  </p> <p>Additionally, the infrastructure could be extended, and allows other modules to include in it their own specific containers.</p> <p>Info</p> <p>To be able to include this functionality, the Platform Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Platform Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Platform Extensions - Release notes.</p>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#requirements","title":"Requirements","text":"<p>This project depends on the following tools:</p> <ul> <li>Docker: version <code>26.0.0</code> or higher.</li> <li>Docker Compose: version <code>2.26.0</code> or higher.</li> </ul>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#using-containers-distributed-in-modules","title":"Using Containers Distributed in Modules","text":"","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#configuration-variables","title":"Configuration Variables","text":"<ul> <li> <p>It is necessary to include at least one configuration variable for each module to be launched, this variable enables all the services related to the module to be started.</p> <p><code>docker_&lt;javapackage&gt;=true</code></p> <p>Example: gradle.properties<pre><code>docker_com.etendoerp.tomcat=true\n</code></pre></p> </li> <li> <p>In case you want to configure only one service belonging to a module, it is possible by adding a variable with the format:</p> <p><code>docker_&lt;javapackage&gt;_&lt;service&gt;=true</code></p> <p>Example: gradle.properties<pre><code>docker_com.etendoerp.docker_db=true\n</code></pre></p> <p>Note</p> <p>In this case, only the database service will be taken into account when raising and lowering services related to the <code>com.etendoerp.docker</code> module. </p> </li> <li> <p>It is also possible that some services may require configuration variables, in which case they should be added: </p> <p><code>docker_&lt;javapackage&gt;_&lt;variable&gt;=&lt;value&gt;</code></p> <p>Example: gradle.properties<pre><code>docker_com.etendoerp.tomcat_port=8080\n</code></pre></p> <p>Note</p> <p>In this example, this variable configures the Dockerized Tomcat Service module port, although the necessary configurations will be included in the documentation of each module.</p> </li> </ul> <p>Finally, always to apply changes, execute </p> Terminal<pre><code>./gradlew setup\n</code></pre>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#gradle-tasks-to-manage-containers","title":"Gradle Tasks to Manage Containers","text":"<p>Execute the following command to use the infrastructure:</p>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#running","title":"Running","text":"<p>Terminal<pre><code>./gradlew resources.up\n</code></pre> This command will search for all configured resources and start the containers.</p> <p>Note</p> <p>If you only have the base <code>com.etendoerp.docker</code> module installed and configured, this command will start a PostgreSQL database.</p>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#stopping","title":"Stopping","text":"<p>Terminal<pre><code>./gradlew resources.stop\n</code></pre> This command will stop the containers.</p>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#down","title":"Down","text":"<p>Terminal<pre><code>./gradlew resources.down\n</code></pre> This command will stop and remove the containers.</p>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#verifying-the-status","title":"Verifying the Status","text":"<p>To verify the status of the resources started by Docker Compose, you can use the following Docker commands:</p> <p><code>docker ps</code></p> <p>This command lists all running Docker containers. You should see the containers related to Etendo</p> <p><code>docker compose logs</code></p> <p>This command shows the logs of all the services defined in your Docker Compose configuration, which can help in troubleshooting and verifying that the services are running correctly.</p> <p>It is also possible to manage containers with tools such as Lazydocker or Docker Desktop.</p>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/docker-management/#postgres-database-service","title":"Postgres Database Service","text":"<p>In this module a Postgres database service is included, this allows to use the dockerized database in Etendo. To use it the following steps must be followed:</p> <ol> <li> <p>Once the <code>com.etendoerp.docker</code> module is installed, it is necessary to add a configuration variable in the <code>gradle.properties</code> to enable the use of the service:</p> gradle.properties<pre><code>docker_com.etendoerp.docker_db=true\n</code></pre> </li> <li> <p>Then it is necessary to run <code>./gradlew setup</code>, to apply the configuration changes.</p> </li> <li> <p>When <code>./gradlew resources.up</code> is executed, a new Docker container with the database service will be raised using the configuration variables defined in the <code>gradle.properties</code>, such as port, user, password, etc. </p> <p>Warning</p> <p>In case you have the same service running locally on the same port it should be down. </p> </li> <li> <p>Finally, using this service it is possible to run <code>./gradlew install</code> to install the database from scratch, or it is possible to restore a backup and start using the new dockerized database service. </p> </li> </ol>","tags":["Docker","Management","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/dockerized-tomcat-service/","title":"Dockerized Tomcat Service","text":"<p> Javapackage: <code>com.etendoerp.tomcat</code></p>","tags":["Docker","Tomcat","Service","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/dockerized-tomcat-service/#overview","title":"Overview","text":"<p>The <code>com.etendoerp.tomcat</code> module enables the Dockerization of Tomcat within Etendo Classic. This module modifies Gradle tasks to automatically deploy the <code>WAR</code> file into the container when executing the <code>smartbuild</code> task.</p> <p>Info</p> <p>To be able to include this functionality, the Platform Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Platform Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Platform Extensions - Release notes.</p>","tags":["Docker","Tomcat","Service","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/dockerized-tomcat-service/#configuration-variables","title":"Configuration Variables","text":"<p>To enable and configure the Tomcat service, the following configuration variables are available:</p> <ul> <li> <p>Enable the Service</p> <p>gradle.properties<pre><code>docker_com.etendoerp.tomcat=true\n</code></pre> This variable enables the Tomcat service.</p> </li> <li> <p>Configure Tomcat Port (Optional)     gradle.properties<pre><code>docker_com.etendoerp.tomcat_port=&lt;port&gt;\n</code></pre>     This variable sets the port for the Tomcat service. The default port is <code>8080</code></p> </li> <li> <p>Configure Debug Port (Optional)</p> <p>gradle.properties<pre><code>docker_com.etendoerp.tomcat_debug=&lt;debug_port&gt;\n</code></pre> This variable sets the debug port for the Tomcat service. The default debug port is <code>8009</code></p> <p>Info</p> <p>For debugging in IntelliJ, create a new configuration of type Remote JVM Debug and set the port to listen on.</p> <p></p> </li> </ul> <p>Execute the following command to apply the configuration changes:</p> Terminal<pre><code>./gradlew setup\n</code></pre>","tags":["Docker","Tomcat","Service","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/dockerized-tomcat-service/#compile-the-environment","title":"Compile the Environment","text":"<ul> <li> <p>The first time Tomcat is used within a Docker environment, the setup must be compiled by executing:</p> Terminal<pre><code>./gradlew update.database compile.complete smartbuild\n</code></pre> <p>This command will update the database and recompile the java classes and deploy the <code>WAR</code> to the dockerized Tomcat service. </p> <p>Info</p> <p>This module modifies Gradle tasks. Executing the <code>update.database</code> command will automatically stop the Tomcat service. The <code>smartbuild</code> task will then ensure that the <code>WAR</code> file is correctly deployed in the container. After the smartbuild execution, the service will automatically restart, enabling an automated compilation from the command line.</p> </li> <li> <p>Refer to Docker Management page for more information on container management.</p> </li> </ul>","tags":["Docker","Tomcat","Service","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/dockerized-tomcat-service/#extra-configuration-to-use-tomcat-dockerized-with-a-host-database-in-linux-environments","title":"Extra Configuration to Use Tomcat (Dockerized) with a Host Database in Linux Environments","text":"<ol> <li> <p>Listen on the Docker Network</p> <p>Create the <code>etendo.conf</code> file in the location <code>/etc/postgresql/&lt;your_pg_version&gt;/main/conf.d/etendo.conf</code> with the following content:</p> etendo.conf<pre><code>listen_addresses = 'localhost,172.17.0.1'\n</code></pre> <p>Note</p> <p>The IP address <code>172.17.0.1</code> is the interface that connects the host with the Docker service. This is the default address used for this connection.</p> </li> <li> <p>Allow Access from the Docker Subnetwork</p> <p>Add the following line to the <code>/etc/postgresql/&lt;your_pg_version&gt;/main/pg_hba.conf</code> file:</p> pg_hba.conf<pre><code>host all all 172.0.0.0/8 scram-sha-256\n</code></pre> <p>Note</p> <p>The subnet <code>172.0.0.0/8</code> is used to enable access from Docker Tomcat to the host. By default, Docker assigns a subnet within the range of <code>172.1.0.0/8</code> to <code>172.254.0.0/8</code>.</p> <ol> <li>Restart the PostgreSQL Service</li> </ol> <p>Finally, restart the PostgreSQL service by running the following command in the terminal:</p> Terminal<pre><code>sudo systemctl restart postgresql\n</code></pre> </li> </ol>","tags":["Docker","Tomcat","Service","Infrastructure"]},{"location":"developer-guide/etendo-classic/bundles/platform/dynamic-app/","title":"Dynamic App","text":"<p> Javapackage: <code>com.etendoerp.dynamic.app</code></p>","tags":["Dynamic App","SubApp","Etendo Mobile"]},{"location":"developer-guide/etendo-classic/bundles/platform/dynamic-app/#overview","title":"Overview","text":"<p>This page explains how to configure and export dynamic applications in Etendo Classic, which are dynamically displayed in Etendo Mobile.</p>","tags":["Dynamic App","SubApp","Etendo Mobile"]},{"location":"developer-guide/etendo-classic/bundles/platform/dynamic-app/#dynamic-app-window","title":"Dynamic App window","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Dynamic App</code></p> <p>As <code>System Administrator</code> role, in the Dynamic App window, specify the paths and versions for each subapplication. These settings determine how subapplications are displayed when users log into Etendo Mobile.</p> <p></p> <p>Fields to note:</p> <ul> <li>Module: The module that can export the window configuration.</li> <li>Name: Name with the application will be shown.</li> <li>Directory Location: The path where the compiled application bundle is located. In development, the path must be empty <code>/</code>, but in production, the path is <code>/&lt;javapackage&gt;/web/</code>.</li> <li>Active: To select if this application is active or not.</li> </ul>","tags":["Dynamic App","SubApp","Etendo Mobile"]},{"location":"developer-guide/etendo-classic/bundles/platform/dynamic-app/#dynamic-app-version-tab","title":"Dynamic App Version Tab","text":"<p>Allows the application to be versioned, enabling both development and production versions.</p> <p>Fields to note:</p> <ul> <li>Name: Name of the application version E.g. <code>dev</code> or <code>1.0.0</code>.</li> <li>File Name: The bundle name of the compiled application, by default <code>dist.js</code>.</li> <li>Default: This check defines that this version is productive.</li> <li>Is Development: This check defines that this version is in development and can be deployed locally.</li> <li>Active: To select if this application version is active or not.</li> <li>Receive External Files Identifies sub-applications that allow receiving shared files from external applications and are capable of handling them.</li> </ul>","tags":["Dynamic App","SubApp","Etendo Mobile"]},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/","title":"Etendo Webhooks | Technical Documentation","text":"<p> Javapackage: <code>com.etendoerp.webhookevents</code></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#overview","title":"Overview","text":""},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#what-is-a-webhook","title":"What is a Webhook?","text":"<p>A webhook is a method used by web applications to send real-time notifications or data to other applications or servers. Webhooks operate using HTTP callbacks, which means that an application sends an HTTP request to a specified URL (the webhook URL) when a particular event occurs.</p> <p>In simple terms, a webhook acts as a messenger that delivers a message (data payload) from one application to another when certain conditions are met. Webhooks enable applications to communicate and share information automatically, making it easier to integrate different services and create seamless workflows.</p> <p>By using webhooks, you can keep your applications in sync, automate processes, and extend the functionality of your applications with minimal effort.</p> <p>This documentation will guide you through the process of setting up and using webhooks in Etendo Classic. Webhooks allow you to execute actions via a URL call, providing a powerful way to integrate with external services.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#webhook-description","title":"Webhook Description","text":""},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#webhook-header-fields","title":"Webhook Header Fields","text":"Field Description Module Module in which the webhook will be created Name Webhook name Description Webhook description Java Class Class in which the webhook service was created Allow to give access to role Check if it is allowed to give access to roles via secure web services Active Webhook status (Active by default)"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#webhook-tabs-fields","title":"Webhook Tabs Fields","text":"<p>Webhook window has 2 tabs: Access and Params.</p> <p>The params tab allows you to create parameters that will be used in the URL call.</p> <p>The access tab allows you to create access that will be used in the URL call.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#params","title":"Params","text":"Field Description Name Parameter name that will be used in the URL call Is required Whether the parameter is required or not Active Parameter status (Active by default)"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#user-access","title":"User Access","text":"<p>Allow execution via token.</p> Field Description Active Access status (Active by default) Token Selector with the token that will be used in the URL call created on User API Token window"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#role-access","title":"Role Access","text":"<p>If you need to allow authenticated users with SWS read the guide: How to use secure web services. For this you have to add roles that are allowed to execute a webhook in the Role access tab.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#webhook-usage-example","title":"Webhook Usage Example","text":""},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#setting-up-webhooks","title":"Setting up Webhooks","text":"<ol> <li>Navigate to the new menu option: <code>Application \u2192 General Setup \u2192 Application \u2192 Webhook Events \u2192 Webhooks</code></li> <li> <p>Create a new webhook by filling in the required fields:</p> Field Value Name Alert Description Create alert with custom message Java Class com.etendoerp.webhookevents.ad_alert.AdAlertWebhookService <p></p> </li> <li> <p>Focus on \"Params\" tab and create the following params:</p> Field Value Is required Name description Name rule </li> </ol> <p></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#role-access_1","title":"Role access","text":""},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#api-key-generation","title":"API Key Generation","text":"<ol> <li>To give execution permission to a user, go to: <code>Application \u2192 General Setup \u2192 Application \u2192 Webhook Events \u2192 User API Token</code></li> <li>Create a new API with the Name: <code>&lt;&lt;user&gt;&gt; token</code> </li> <li>After saving, run the \u201cGet API Key\u201d option, and save the resulting token (64-length random string) to your clipboard.     </li> </ol>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#assigning-webhook-access-to-users","title":"Assigning Webhook Access to Users","text":"<ol> <li>Navigate to: <code>Application \u2192 General Setup \u2192 Application \u2192 Webhook Events \u2192 Webhooks</code></li> <li>Select the created webhook and open the access tab.</li> <li>Create a new row and select the previously created API record.</li> </ol>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#secure-web-servicess-access","title":"Secure web servicess access","text":""},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#assign-allowed-roles","title":"Assign allowed roles","text":"<p>In Webhooks window, add roles allowed to run the webhook.</p> <p></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#executing-the-webhook","title":"Executing the Webhook","text":"<p>To execute the webhook, make a GET request using a REST client like Postman with the following syntax:</p> <pre><code>URL=http://localhost:8080/\nCONTEXT=etendo\nWEBHOOK_ENDPOINT=/webhooks/\n[VARS]\nWEBHOOK_NAME=name=alert\nDESCRIPTION=new alert description\nRULE=649BBFA37BA74FA59AEBE7F28524B0C8\n</code></pre>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#example-url","title":"Example URL:","text":"<p>With token</p> <p>APIKEY=8b1012f0d442406ed602d87c13edcee9</p> <pre><code>http://localhost:8080/etendo/webhooks/?name=Alert&amp;apikey=&lt;api-key&gt;&amp;description=new alert description&amp;rule=649BBFA37BA74FA59AEBE7F28524B0C8\n</code></pre> <p>With sws token</p> <pre><code>http://localhost:8080/etendo/webhooks/?name=Alert&amp;description=new alert description&amp;rule=649BBFA37BA74FA59AEBE7F28524B0C8\n</code></pre> <p>Add as authorization Bearer Token, the JWT obtained via SWS login.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#expected-response","title":"Expected response","text":"<p>Success</p> <p>This webhook creates an alert, and you can visualize it in the \"Alert Management\" window.</p> <p>The response will return a status code 200 and the alert ID, for example:  <pre><code>{\n  \"created\": \"91FEABC1604E404CB565FC79435C4344\"\n}\n</code></pre></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#example-code-usage","title":"Example code usage","text":"AdAlertWebhookService.java<pre><code>/**\n * Example webhoook to take as a starting point.\n * This service receive a description and a alert rule ID and insert one standard alert\n */\npublic class AdAlertWebhookService extends BaseWebhookService {\n  private static final Logger log = LogManager.getLogger();\n\n  @Override\n  public void get(Map&lt;String, String&gt; parameter, Map&lt;String, String&gt; responseVars) {\n    Alert alert = new Alert();\n    alert.setAlertRule(OBDal.getInstance().get(AlertRule.class, parameter.get(\"rule\")));\n    alert.setDescription(parameter.get(\"description\"));\n    alert.setReferenceSearchKey(\"\");\n    OBDal.getInstance().save(alert);\n    OBDal.getInstance().flush();\n    responseVars.put(\"created\", alert.getId());\n  }\n}\n</code></pre>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#use-cases","title":"Use Cases","text":""},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#tokens-visibility","title":"Tokens Visibility","text":"<p>Note</p> <p> Users can visualize tokens of their current profile.</p> <p>Warning</p> <p> Other users cannot access another user's token. The API Token Window and webhook access tab will be empty.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/etendo-webhooks/#error-handling","title":"Error Handling","text":"<p>Failure</p> <p>If a user calls a webhook without a token or includes an incorrect API token, the backend will respond with a 401 response and a message.</p> <p>Failure</p> <p>If a user calls a webhook with an incorrect webhook name, the backend will respond with a 404 response and a message.</p> <p>Failure</p> <p>If a user calls a webhook without access, the backend will respond with a 401 response and a message.</p> <p>Failure</p> <p>If a user calls a webhook with a missing required parameter, the backend will respond with a 500 response and a message.</p> <p>Failure</p> <p>If a user calls a webhook without a newly required parameter (after the backend configuration is changed), the backend will respond with a 500 response and a message.</p> <p>Failure</p> <p>If a user calls a webhook with revoked access, the backend will respond with a 401 response and a message.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/","title":"Platform Extensions Bundle | Technical Documentation","text":"<p> Javapackage: <code>com.etendoerp.platform.extensions</code></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#overview","title":"Overview","text":"<p>This bundle includes enhancements for platform functionalities in Etendo.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#docker-management","title":"Docker Management","text":"<p> Javapackage: <code>com.etendoerp.docker</code></p> <p>This module enables the use of Dockerized containers in Etendo Classic.</p> <p>Info</p> <p>For more information visit, Docker Management developer guide.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#dockerized-tomcat-service","title":"Dockerized Tomcat Service","text":"<p> Javapackage: <code>com.etendoerp.tomcat</code></p> <p>This module enables the Dockerization of Tomcat within Etendo Classic. </p> <p>Info</p> <p>For more information visit, Dockerized Tomcat Service developer guide.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#dynamic-app","title":"Dynamic App","text":"<p> Javapackage: <code>com.etendoerp.dynamic.app</code></p> <p>Dynamic App allows you to create sub applications in Etendo Mobile.</p> <p>Info</p> <p>For more information, visit the Dynamic App developer guide</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#ean-128","title":"EAN 128","text":""},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#technical-aspects","title":"Technical Aspects","text":"<p>It is a module for the transmission of information between the agents of the supply chain under the specifications of the Code 128 barcode. This, provide generic Utils for EAN128 Definition and parsing</p> <p>Is a Java-based module for managing EAN-128 barcodes in an Etendo ERP context. Below is an overview of what each file appears to do:</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#selectorfieldpropertydatasourcejava","title":"SelectorFieldPropertyDataSource.java","text":"<p>Purpose: Implements a data source for a custom field selector. Main Operations: Verifies whether a user has the access right to fetch data from the datasource. Filters out Blob and OneToMany properties when getting entity properties.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#ean128utilsjava","title":"EAN128Utils.java","text":"<p>Purpose: Utility class for handling EAN-128 data parsing and manipulation.</p> <p>Main Operations: Defines standard date formats and JSON keys. Parses incoming EAN128 Data JSON and extracts relevant information such as lot, serial number, expiration dates, etc. If Inventory Line quantity was parsed, it modifies the relevant BaseOBObject's quantity. Provides methods to edit OpenBravo base objects (BaseOBObject) based on the parsed EAN-128 data.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#eantypejava","title":"EANType.java","text":"<p>Purpose: Web Service to manage EAN-128 Types.</p> <p>Main Operations: Handles HTTP GET requests and retrieves EAN-128 type information. The information fetched depends on the warehouse specified in the request parameters. If a warehouse-specific EAN-128 type isn't available, it attempts to fetch the default one. Converts EAN-128 type to a JSON object and returns it as a response.</p> <p>Key Libraries used:</p> <ul> <li>Etendo DAL for database interaction.</li> <li>Apache Commons Lang for String manipulations.</li> <li>JSON and Jettison for JSON parsing.</li> </ul>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#smfeancomponentproviderjava","title":"SMFEANComponentProvider.java","text":"<p>Purpose: It defines the global resources that are necessary for the operation of the components it provides.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#etendo-advanced-security","title":"Etendo Advanced Security","text":"<p> Javapackage: <code>com.etendoerp.advanced.security</code></p> <p> Javapackage: <code>com.etendoerp.advanced.security.template</code></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#technical-aspects_1","title":"Technical Aspects","text":"<p>This module allows customizing several security features related to</p> <ul> <li>Password Security</li> <li>Password History</li> <li>User Lockout</li> <li>Multiple Session Verification</li> <li>Changing Password after Login</li> <li>Expiration Time (Autolock Password)</li> </ul> <p>To make this module work, authentication Java class must be configured in the <code>gradle.properties</code> file by adding the following line:</p> gradle.properties<pre><code>authentication.class=com.etendoerp.advanced.security.process.AdvancedAuthenticationManager\n</code></pre> <p>Then <code>./gradlew setup</code> must be executed.</p> <p>Warning</p> <p>It is mandatory to execute this step before installing the module. </p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#etendo-webhooks","title":"Etendo Webhooks","text":"<p>It allows you to execute actions via a URL call, providing a powerful way to integrate with external services.</p> <p>Info</p> <p>For more information, visit the Etendo Webhooks developer guide.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#javax-xml-soap-api","title":"Javax XML SOAP API","text":"<p> Javapackage: <code>org.openbravo.util.javax.xml.soap</code></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#technical-aspects_2","title":"Technical Aspects","text":"<p>This module provides SOAP with Attachments API for Java (SAAJ), which was part of JDK until 10. Starting from JDK 11, it was removed, which makes this module required as a dependency for those modules making use of it in order to be able to compile in JDK11+.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#number-to-word-english","title":"Number To Word (English)","text":"<p> Javapackage: <code>org.openbravo.numbertoword_en</code></p> <p> Javapackage: <code>org.openbravo.numbertoword</code></p> <p>It provides the infrastructure to convert a number into its equivalent in words. This functionality is especially useful while printing checks.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#technical-aspects_3","title":"Technical Aspects","text":"<p>The NumberToWord module deploys an infrastructure to define Number to Word conversion modules so that different logics for different languages can be deployed.</p> <p>To introduce a different language (other than English and Spanish), follow this example to extend this Number to Word extend:</p> <pre><code>public class NumberToWord_es extends NumberToWord {\n  private static String[] _grupos = { \"\", \"millon\", \"billon\", \"trillon\" };\n\n  private static String[] _unidades = { \"\", \"un\", \"dos\", \"tres\", \"cuatro\", \"cinco\", \"seis\",\n      \"siete\", \"ocho\", \"nueve\" };\n\n  private static String[] _decena1 = { \"\", \"once\", \"doce\", \"trece\", \"catorce\", \"quince\",\n      \"dieciseis\", \"diecisiete\", \"dieciocho\", \"diecinueve\" };\n\n  private static String[] _decenas = { \"\", \"diez\", \"veinte\", \"treinta\", \"cuarenta\", \"cincuenta\",\n      \"sesenta\", \"setenta\", \"ochenta\", \"noventa\" };\n\n  private static String[] _centenas = { \"\", \"cien\", \"doscientos\", \"trescientos\", \"cuatrocientos\",\n      \"quinientos\", \"seiscientos\", \"setecientos\", \"ochocientos\", \"novecientos\" };\n\n  public static String millarATexto(int n) {\n    if (n == 0)\n      return \"\";\n\n    int centenas = n / 100;\n    n = n % 100;\n    int decenas = n / 10;\n    int unidades = n % 10;\n\n    String sufijo = \"\";\n\n    if (decenas == 0 &amp;&amp; unidades != 0)\n      sufijo = _unidades[unidades];\n\n    if (decenas == 1 &amp;&amp; unidades != 0)\n      sufijo = _decena1[unidades];\n\n    if (decenas == 2 &amp;&amp; unidades != 0)\n      sufijo = \"veinti\" + _unidades[unidades];\n\n    if (unidades == 0)\n      sufijo = _decenas[decenas];\n\n    if (decenas &gt; 2 &amp;&amp; unidades != 0)\n      sufijo = _decenas[decenas] + \" y \" + _unidades[unidades];\n\n    if (centenas != 1)\n      return _centenas[centenas] + \" \" + sufijo;\n\n    if (unidades == 0 &amp;&amp; decenas == 0)\n      return \"cien\";\n\n    return \"ciento \" + sufijo;\n  }\n\n  public static String numeroACastellano(long n) {\n    String resultado = \"\";\n    int grupo = 0;\n    while (n != 0 &amp;&amp; grupo &lt; _grupos.length) {\n      long fragmento = n % 1000000;\n      int millarAlto = (int) (fragmento / 1000);\n      int millarBajo = (int) (fragmento % 1000);\n      n = n / 1000000;\n\n      String nombreGrupo = _grupos[grupo];\n      if (fragmento &gt; 1 &amp;&amp; grupo &gt; 0)\n        nombreGrupo += \"es\";\n\n      if ((millarAlto != 0) || (millarBajo != 0)) {\n        if (millarAlto &gt; 1)\n          resultado = millarATexto(millarAlto) + \" mil \" + millarATexto(millarBajo) + \" \"\n              + nombreGrupo + \" \" + resultado;\n\n        if (millarAlto == 0)\n          resultado = millarATexto(millarBajo) + \" \" + nombreGrupo + \" \" + resultado;\n\n        if (millarAlto == 1)\n          resultado = \"mil \" + millarATexto(millarBajo) + \" \" + nombreGrupo + \" \" + resultado;\n      }\n      grupo++;\n    }\n    resultado = resultado.trim().concat(\" \");\n    return resultado;\n  }\n\n  public String convert(BigDecimal number) {\n\n    double num = number.doubleValue();\n\n    num = (double) (Math.round(num * Math.pow(10, 2)) / Math.pow(10, 2));\n    int number_whole = (int) num;\n    int number_decimal = (int) ((num * 100) - (number_whole * 100));\n    String value;\n    if (number_decimal == 0) {\n      value = numeroACastellano(number_whole).concat(\"00/100 M.N.\");\n    } else {\n      value = numeroACastellano(number_whole).concat(Integer.toString(number_decimal)).concat(\n          \"/100 M.N.\");\n    }\n    value = value.substring(0, 1).toUpperCase().concat(value.substring(1));\n    return value;\n  }\n\n}\n</code></pre>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#openapi","title":"OpenAPI","text":"<p> Javapackage: <code>com.etendoerp.openapi</code></p> <p>This module module serves as an integration layer for documenting and exposing APIs within the Etendo ecosystem. It enables developers to define, organize, and document API endpoints using the OpenAPI specification, ensuring compatibility with tools like Swagger for visualization and testing.</p> <p>Info</p> <p>For more information, visit How to Document an Endpoint with OpenAPI. </p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#print-document-web-service","title":"Print Document Web Service","text":"<p> Javapackage: <code>com.etendoerp.printdocumentws</code></p> <p> Javapackage: <code>com.smf.ws.printdocument</code></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#technical-aspects_4","title":"Technical Aspects","text":"<p>This module allows downloading a PDF from some transaction documents using a web service called printDocument. It returns a PDF with the order, invoice or delivery note. This is useful for companies that use third party applications and require making printables accessible from those applications.</p> <p>The supported documents are:</p> <ul> <li>Sales Quotation</li> <li>Invoice</li> <li>Shipment</li> <li>Proforma Order</li> <li>Proforma Quotation</li> </ul> <p>To call the Web Service, the following URL is needed:</p> <pre><code>http://&lt;client-url/etendo&gt;/sws/com.etendoerp.printdocumentws.printDocument\n</code></pre> <p>It is necessary to configure Token authentication to use the web service.</p> <p>Values that can be used to call the Web Service are:</p> <ul> <li>order</li> <li>invoice</li> <li>shipment</li> <li>quotation</li> <li>orderProforma</li> <li>shipmentValued</li> <li>quotationProforma</li> </ul> <p>This is a RESTful Web Service that returns a .PDF file of the document using the template that is configured. The supported documents are Sales Quotation, Invoice, Shipment, Proforma Order, Proforma Quotation.</p> <p>It is mandatory to insert the organization ID when you call the web service because it filters by organization.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#report-cache-management","title":"Report Cache Management","text":"<p> Javapackage: <code>com.exos.erp.reportcachemanagement</code></p> <p>This module allows changing or updating a Jasper Report in an Etendo environment without stopping the server.</p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#technical-aspects_5","title":"Technical Aspects","text":"<p>This module allows clearing the cache for compiled reports in Tomcat.</p> <p>The reports have to be uploaded in the correct folder, for example: <code>/var/lib/tomcat/webapps/etendo/\u2026</code></p> <p>Then, in the \"Clear report cache\" window, click \u2019Done\u2019:</p> <p></p>"},{"location":"developer-guide/etendo-classic/bundles/platform/overview/#upload-files","title":"Upload Files","text":"<p> Javapackage: <code>com.etendoerp.upload.file</code></p> <p>This module facilitates developers to include a type of reference that present a File Upload Element which allows uploading a single file for processing. </p> <p>Info</p> <p>For more information, visit How to Create a Standard Process Definition developer guide. </p>"},{"location":"developer-guide/etendo-classic/concepts/alerts/","title":"Alerts","text":"","tags":["Concepts","alerts","system administration","alert rules","data-driven alerts","user notifications"]},{"location":"developer-guide/etendo-classic/concepts/alerts/#overview","title":"Overview","text":"<p>Alerts are the way Etendo Classic can inform users about virtually any event that happens in the system (if an appropriate alertrule is created). It can be defined by the System Administrator (and exported to a module) or by a Client/Organization Administrator.</p> <p>This notifications are shown in the top bar, just beside the Application menu.</p> <p></p>","tags":["Concepts","alerts","system administration","alert rules","data-driven alerts","user notifications"]},{"location":"developer-guide/etendo-classic/concepts/alerts/#alert-rules","title":"Alert Rules","text":"<p>The definition of the Alert Rules is made in the Alert window (<code>General Setup</code> &gt; <code>Application</code> &gt;<code>Alert</code>).</p>","tags":["Concepts","alerts","system administration","alert rules","data-driven alerts","user notifications"]},{"location":"developer-guide/etendo-classic/concepts/alerts/#data-driven","title":"Data Driven","text":"<p>The Administrator can define a query to test a particular scenario, e.g. Products without defined price, Products under stock, Customers with exceeded credit, etc.</p> <p>The flow for data driven alerts is as follows:</p> <ul> <li>The Administrator creates alert rules , which include a SQL clause defining the event that is going to be monitored, and the recipients for the alerts. </li> <li>A background process is permanently checking if the condition defined in each of the active alert rules return any record, in this case a new alert instance will be created for each one of the returned record. </li> <li>When a user logs in the application there is another process that constantly checks whether there are alert instances for this user and shows them. </li> </ul> <p>Info</p> <p>For more information, read how to create an alert.</p>","tags":["Concepts","alerts","system administration","alert rules","data-driven alerts","user notifications"]},{"location":"developer-guide/etendo-classic/concepts/alerts/#definition","title":"Definition","text":"<ul> <li>SQL: Example of 'Products without defined price' rule </li> </ul> <pre><code>  SELECT m_product_id AS referencekey_id,\n         p.name AS record_id,\n         '0' AS ad_role_id,\n         NULL AS ad_user_id,\n         p.name ||' is not in any Purchase price list' AS description,\n         'Y' AS isActive,\n          ad_org_id, \n          ad_client_id, \n          now() AS created,  \n          '0' AS createdBy,  \n          now() AS updated,\n          '0' AS updatedBy\n   FROM m_product p\n  WHERE p.ispurchased='Y'\n  AND NOT EXISTS (SELECT 1 \n                      FROM m_productprice pp,\n                           m_pricelist_version pv,\n                           m_pricelist pl\n                    WHERE p.m_product_id = pp.m_product_id\n                    AND pv.m_pricelist_version_id = pv.m_pricelist_version_id\n                    AND pv.m_pricelist_id = pl.m_pricelist_id\n                    AND issopricelist='N')\n  UNION                  \n  SELECT m_product_id AS referencekey_id,\n         p.name AS record_id,\n         '0' AS ad_role_id,\n         NULL AS ad_user_id,\n         p.name ||' is not in any Sales price list' AS description,\n         'Y' AS isActive,\n          ad_org_id, \n          ad_client_id, \n          now() AS created,  \n          '0' AS createdBy,  \n          now() AS updated,\n          '0' AS updatedBy\n   FROM m_product p\n  WHERE p.ispurchased='N'\n  AND NOT EXISTS (SELECT 1 \n                      FROM m_productprice pp,\n                           m_pricelist_version pv,\n                           m_pricelist pl\n                    WHERE p.m_product_id = pp.m_product_id\n                    AND pv.m_pricelist_version_id = pv.m_pricelist_version_id\n                    AND pv.m_pricelist_id = pl.m_pricelist_id\n                    AND issopricelist='Y')\n</code></pre> <ul> <li> <p>The SQL query must have the following columns: </p> <ul> <li>referencekey_id </li> <li>record_id </li> <li>ad_role_id </li> <li>ad_user_id </li> <li>description </li> <li>isactive </li> <li>ad_org_id </li> <li>ad_client_id </li> <li>created </li> <li>createdby </li> <li>updated </li> <li>updatedby </li> </ul> </li> <li> <p>Tab: From the Alert management window you can navigate directly to a record. From the Tab it can be defined to which tab you will navigate to. </p> </li> <li> <p>Filter clause: This is a non-mandatory SQL whereclause which will be used to filter the alerts which will be shown to the user. </p> </li> </ul>","tags":["Concepts","alerts","system administration","alert rules","data-driven alerts","user notifications"]},{"location":"developer-guide/etendo-classic/concepts/alerts/#performance","title":"Performance","text":"<p>The sql commands defined in alert rules will be executed periodically in your system. Therefore, it is very important to define them as performance-efficient.</p> <p>If they are not, they will slow down your system noticeably.</p>","tags":["Concepts","alerts","system administration","alert rules","data-driven alerts","user notifications"]},{"location":"developer-guide/etendo-classic/concepts/alerts/#alert-recipient","title":"Alert Recipient","text":"<p>The Alert Recipient tab handles the alert recipients management. You can define the Role whom will be notified, or an specific user. Also you can define if the user(s) should be notified by email.</p> <p>This work is a derivative of Alerts by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo. </p>","tags":["Concepts","alerts","system administration","alert rules","data-driven alerts","user notifications"]},{"location":"developer-guide/etendo-classic/concepts/application-menu/","title":"Application Menu","text":"","tags":["Concepts","Application menu","General setup","Etendo Classic"]},{"location":"developer-guide/etendo-classic/concepts/application-menu/#overview","title":"Overview","text":"<p>Application Menu is shown in the window's left side. It is used to make all the application elements accessible to the user.</p> <p></p>","tags":["Concepts","Application menu","General setup","Etendo Classic"]},{"location":"developer-guide/etendo-classic/concepts/application-menu/#managing-the-menu","title":"Managing the menu","text":"<p>Menu is managed from <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Menu</code> window.</p> <p>To create a new menu entry:</p> <ol> <li>Create a new record in this window.</li> <li>Select the element type for the entry, this is done setting the Action field, the elements callable from menu are Window, Report, Process, Form, Workflow, Internal/External link and Task.</li> <li>Depending on the selected action, a different drop down list will be shown to select one element of the selected type. Note that name and description will be overwritten when synchronize process is executed.</li> <li>Place the new menu entry in the correct position, this is done by:<ul> <li>Selecting a record in the grid.</li> <li>Opening the tree window clicking in tree menu icon </li> <li>Select the entry to relocate and select the new position.</li> </ul> </li> </ol> <p></p> <p>Folders are created checking the Summary Level field.</p>","tags":["Concepts","Application menu","General setup","Etendo Classic"]},{"location":"developer-guide/etendo-classic/concepts/application-menu/#security","title":"Security","text":"<p>Although a menu entry is defined, it will not be displayed in case the role that has log in the application has not granted permission for that element.</p>","tags":["Concepts","Application menu","General setup","Etendo Classic"]},{"location":"developer-guide/etendo-classic/concepts/application-menu/#information-folder","title":"Information folder","text":"<p>In the bottom of the menu, there is an Information Folder which contains links to the Searchs. The elements displayed in this folder are the ones that are used in at least one accessible window for the current role.</p> <p>This work is a derivative of Application Menu by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Concepts","Application menu","General setup","Etendo Classic"]},{"location":"developer-guide/etendo-classic/concepts/constraints/","title":"Constraints","text":"","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#overview","title":"Overview","text":"<p>Both check constraints and triggers are objects defined physically in database. This document will not explain the basis for constraints but just the particularities Etendo Classic has in their usage.</p>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#naming","title":"Naming","text":"<p>When adding a check constraint, triggers and indexes modularity naming rules have to be taken into account. This is necessary because triggers and indexes are global objects for a database. </p> <p>The modularity naming rule is as follows:  the constraint, index or trigger name must start with the DB Prefix of the module the constraint belongs to. </p> <p>For instance,<code>MYMODULEDBPREFIX_CONSTRAINTNAME</code>.</p> <p>In the case of indexes and constraints, if the index/constraint is added to a table of another module then an additional <code>EM_</code> prefix is required:</p> <p><code>EM_MYMODULEDBPREFIX_CONSTRAINTNAME</code>.</p> <p>By following this naming rule, the index/trigger/constraint is exported to the module directory and packaged with the module.</p> <p>Info</p> <p>The name of the constraints must not exceed the 30 characters as the maximum length of an object name in oracle is 30 characters.  </p>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#constraints_1","title":"Constraints","text":"<p>Check constraints do not have any particularity in Etendo, except for how they should be named and how the back-end treats them to show messages.</p> <p>Info</p> <p>For more information, read How to add a Constraint.</p>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#messages","title":"Messages","text":"<p>It is possible to define a message to be shown when the rule defined by the constraint is not satisfied. </p> <p>Info</p> <p>How to do that is explained in the Messages documentation.</p>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#backwards-compatibility","title":"Backwards compatibility","text":"<p>Modules should allow compatibility for other ones built on top of them at least between minor versions, additionally there could be user data already in the application if it is in a productive environment.  This means that user data or other module's could rely on the current database model and in case a new constraint is added or an existent one is modified to be more restrictive than it was, backwards compatibility could be broken. Therefore, it should be avoided to add new constraints or to modify existent ones to make them more restrictive during between versions.</p>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#indexes","title":"Indexes","text":"","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#operator-classes","title":"Operator Classes","text":"<p>In PostgreSQL Operator Classes certain operator classes (<code>text_pattern_ops</code>, <code>varchar_pattern_ops</code>, and <code>bpchar_pattern_ops</code>) enables using indexes in queries involving pattern matching expressions. For instance, the following query:</p> <p><pre><code>    SELECT name\n    FROM c_bpartner\n    WHERE name LIKE 'John%'\n</code></pre> would not use an index created like this:</p> <pre><code>    CREATE INDEX c_bpartner_name\n      ON c_bpartner\n      USING btree\n      (name COLLATE pg_catalog.\"default\");\n</code></pre> <p>but would use an index defined with an operator class:</p> <pre><code>    CREATE INDEX c_bpartner_name\n      ON c_bpartner\n      USING btree\n      (name COLLATE pg_catalog.\"default\" varchar_pattern_ops);\n</code></pre> <p>Operator Classes are not needed in Oracle to use an index in the previously defined query, in that case if the index column defines an operator class, the operator class will have no effect.</p>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#function-based-indexes","title":"Function based indexes","text":"<p>Etendo  supports the use of functions in indexes. For instance, this along with the use of an operator class, would enable the use of indexes in case insensitive queries that use the iStartsWith operator, like this one:</p> <pre><code>    SELECT name\n    FROM c_bpartner\n    WHERE UPPER(name) LIKE 'JOHN%'\n</code></pre> <p>The following index could be used by the previous query:</p> <pre><code>    CREATE INDEX c_bpartner_name\n      ON c_bpartner\n      USING btree\n      (upper(name) COLLATE pg_catalog.\"default\" varchar_pattern_ops);\n</code></pre> <p>Any function can be used in the indexes, as long as it is deterministic. Even needed functions are supported:</p> <p><pre><code>    CREATE INDEX c_bpartner_name\n      ON c_bpartner\n      USING btree\n      (UPPER(REPLACE(name, 'a', 'b')));\n</code></pre> The following index can also be used.</p> <pre><code>    CREATE INDEX c_bpartner_name_id\n      ON c_bpartner\n      USING btree\n      (UPPER(REPLACE(name, 'a', 'b')),\n       UPPER(c_bpartner_id));\n</code></pre>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#partial-indexes","title":"Partial indexes","text":"<p><code>PostgreSQL</code> supports the definition of partial indexes. A partial index is an index where it is possible to specify the rows that are indexed. This kind of indexes are useful for commonly used WHERE conditions that use constant values.</p> <p>Thus, with a partial index it is possible to index just the table data that is most commonly used, helping to reduce the amount of disk space used by the index.</p> <p>A partial index can be created as follows:</p> <pre><code>    CREATE INDEX a_amortization_active \n      ON a_amortization (isactive)\n      WHERE isactive = 'Y';\n</code></pre> <p>Oracle does not support the creation of partial indexes in an explicit way yet. For this reason, if a partial index is found in the Etendo XML model when using an Oracle database, the partial index definition is not taken into account and it is created as a regular index.</p>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#not-null-partial-indexes-on-nullable-columns","title":"Not Null Partial Indexes On Nullable Columns","text":"<p>In an Oracle database, it does not include rows in an index if the indexed columns are NULL. That means that for the case where we are indexing a nullable foreign key column every index is a partial index.</p> <p>This is not the behavior in <code>PostgreSQL databases</code>, where we will need to define the index as partial to get the same behavior. For example:</p> <pre><code>    CREATE INDEX c_order_return_reason \n      ON c_order (c_return_reason_id)\n      WHERE c_return_reason_id IS NOT NULL;\n</code></pre>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/constraints/#indexes-for-contains-search","title":"Indexes for Contains Search","text":"<p>The indexes for contains search are those intended to provide fast searching of sub-strings within the values stored in a particular database column.</p> <p>In PostgresSQL we can define a contains search index as follows:</p> <pre><code>    CREATE INDEX c_bpartner_value_basic ON c_bpartner USING gin (value gin_trgm_ops);\n</code></pre> <p>Note</p> <p>To define this kind of indexes, we have to make use of the <code>gin</code> access method together with the <code>gin_trgm_ops</code> operator class for the indexed column. Both elements are available thanks to the <code>pg_trgm</code> extension which is included in Etendo distribution by default.</p> <p>Besides, this feature allows defining a function based index to improve icontains (case-insensitive) searching:</p> <pre><code>    `CREATE INDEX c_bpartner_value_basic ON c_bpartner USING gin (UPPER(value) gin_trgm_ops);`\n</code></pre> <p>Info</p> <p>This kind of indexes are not supported in Oracle yet: if they are present in the XML model, they will be created as regular indexes in the database.</p> <p>This work is a derivative of Constraints_and_Triggers by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo. </p>","tags":["Concepts","Constraint","Indexes"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/","title":"Data Access Layer","text":"","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#overview","title":"Overview","text":"<p>The goal of the Etendo Data Access Layer (DAL) development is to strengthen the middle-tier in the application, i.e. to implement business logic in Java. The DAL provides the application developer with the following functionality:</p> <ul> <li>Type safe querying and retrieval of business objects from the database. </li> <li>A convenient API to update or create new data in the database. </li> <li>A type safe interface to update information of a business object, increased productivity by making the properties of a business object directly visible through getters and setters (in the IDE). </li> <li>Transaction and context handling. </li> <li>Security and validation checking. </li> <li>Automatically maps new entries in the Application Dictionary to database tables and columns. </li> <li>Generates Java class business objects (and their associations) on the basis of the Application Dictionary model. </li> </ul> <p>The DAL consists of a development-time and runtime part. The development-time part takes care of generating Java business object classes. The runtime part takes care of mapping Java classes to the database and supporting functionality such as security and validation.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#a-hello-world-example","title":"A 'Hello World' Example","text":"<p>As a first simple example, let's create a new business partner group and store it in the database: <pre><code>     // create the object through the factory\n      final Category bpg = OBProvider.getInstance().get(Category.class); \n\n     // set some values\n     bpg.setDefault(true);\n     bpg.setDescription(\"hello world\");\n     bpg.setName(\"hello world\");\n     bpg.setValue(\"hello world\");\n     bpg.setActive(true);\n    \u00a0\n     // store it in the database\n     OBDal.getInstance().save(bpg);\n</code></pre></p> <p>There are a number of things which are important to note:</p> <ul> <li>The above code does not set an explicit user context. The user context is set automatically when running the above code in Etendo Classic. However, in other environments, it has to be set explicitly, see here for more information. </li> <li>There is a BPGroup class which models the data of the c_bp_group table. This class has type safe getters and setters for all the data in this table. </li> <li>A factory (the OBProvider) is used to create an instance of the BPGroup class. </li> <li>The OBDal service is the main entry point into the Data Access Layer, it offers save, remove and query functionality. The OBDal API is discussed in more detail below. </li> </ul> <p>The code snippet above also shows that you do not need to work with SQL or JDBC to work with the data from the database. As a developer, you work directly with objects and the available data is directly visible through the getters and setters.</p> <p>As a next step, let's query for the business partner group, and change its description: <pre><code>     // create an OBCriteria object and add a filter\n     final OBCriteria&lt;Category&gt; obCriteria = OBDal.getInstance().createCriteria(Category.class);\n     obCriteria.add(Restrictions.eq(\"name\", \"hello world\"));\n\n     // perform the actual query returning a typed list\n     final List&lt;Category&gt; categories = obCriteria.list();\n     final Category cat = categories.get(0);\n\n     // and set a new name\n     cat.setName(\"another hello world\");\n     OBDal.getInstance().save(cat);\n</code></pre> This code snippet introduced a number of new concepts:</p> <ul> <li>The OBDal service is used to create an OBCriteria object. </li> <li>The OBCriteria object represents the query, implements the Hibernate Criteria interface and can be used as a standard Hibernate Criteria object. The OBCriteria object also supports sorting and paging parameters. The OBCriteria API is discussed in more detail below. </li> <li>The OBCriteria list method performs the actual query, it returns a type safe list of the requested objects. </li> <li>After changing the name of the business partner group, you don't need to do an explicit save. At commit time Hibernate will automatically detect dirty objects and save those. </li> </ul> <p>This was a short introduction which shows how the DAL can be used to create, store and retrieve one (simple) business object. The rest of this section will describe the Data Access Layer functionality in more detail.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#dal-architecture","title":"DAL Architecture","text":"<p>The image below shows the envisioned architecture for the data access layer in Etendo Classic.</p> <p></p> <p>This architecture is implemented:</p> <ul> <li>Runtime model: the runtime model is the main driver for generating the business objects and the Hibernate mapping. It's also used extensively in security, export/import and in webservices implementations. </li> <li>Hibernate Mapping: from the runtime model the DAL (during initialization) generates a Hibernate mapping. This Hibernate mapping is used to initialize Hibernate. </li> <li>Database Schema: the runtime model (actually the application dictionary) can be used to update the database schema. This is not available as part of the DAL but as part of the DBSourceManager product. </li> <li>Data Access Layer: the Data Access Layer (DAL) provides an API to store, query and remove business objects from the database. </li> <li>Business Model/Logic Layer : the business model/logic layer contains the implementation of the business processes. </li> <li>Business Services: the service layer exposes the business logic to the outside world. I</li> </ul> <p>The complete architecture runs inside of a context which provides security and transaction handling.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#business-object","title":"Business Object","text":"<p>This document uses the term business object to denote an entity and its dependent information. A business object can be a simple entity such as a currency which just has basic primitive fields. On the other hand it can also be a structure of entities, for example an order header with its order line.</p> <p>A business object structure always has one business object which is the owner of all the business objects in that structure, for example, for a sales order the sales order header business object is the owner of the complete structure (i.e. of the sales order lines). Another way of describing this is that the sales order lines depend on the sales order header, a sales order line can not exist without its sales order header and when a sales order header is removed also its sales order lines should be removed.</p> <p>The DAL uses the foreign keys from the child to parent to create the parent- child association in Java and Hibernate. More specifically: the foreign key columns which have the field isParent set to yes (checked/true) define the business object parent-child relations, other foreign key columns define standard many-to-one associations. For example the foreign key field c_order_id in c_order_line is used to create the one-to-many association (in the in-memory runtime model) from c_order to c_order_line . This one- to-many association is then used to generate a List member in the Java Order class and a one-to-many mapping in Hibernate. <p>It is possible not to generate those one-to-many associations in the parent entity. This can be avoided by setting Child Property in Parent Entity field to false in Column tab. </p> <p>Note</p> <p>Generated one-to-many properties in the parent entity, load all children in memory when invoked, so they should be only generated when the expected amount of child records is low, otherwise it might cause an <code>OutOfMemoryError</code>.</p> <p>In order to keep a backward compatible API, <code>hb.generate.all.parent.child.properties=true</code> preference can be set in etendo.propeties, in this way all foreign key columns will generate a one- to-many property in the parent entity.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#dal-main-interfaces","title":"DAL Main Interfaces","text":"<p>The DAL offers three main services to instantiate, create and query Etendo Classic business objects: OBDal, OBCriteria and OBProvider. The service classes can all be found in the org.openbravo.dal.service package.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#obdal","title":"OBDal","text":"<p>The  OBDal  instance (available through OBDal.getInstance() ) is the main entrance point for retrieving and storing business objects in the database in a validated and secure way. It provides the following functions:</p> <ul> <li>save: stores a new business object in the database or an existing business object is updated. For existing business objects, it is not required to call this method as Hibernate does automatic dirty checking. </li> <li>get: retrieves a single business object using its ID. There are two versions: one using the class name (of the generated business object) and one using the entity name. </li> <li>remove: delete a business object from the database, the actual database delete is done at commit time. </li> <li>create OBCriteria: OBCriteria objects are used for querying. </li> <li>commitAndClose and rollbackAndClose: these methods can be used to implement custom transaction handling. Normally, this is done by the environment (Etendo web container or Etendo test). </li> </ul> <p>The OBDal API makes extensive use of the  OBCriteria  and  OBQuery  classes to support querying.</p> <p>The OBDal class allows accessing to the  read-only database (pool). In this case, the instance must be retrieved with the OBDal.getReadOnlyInstance() method. It is important to note that if the read-only pool is not configured, this method will use the standard pool to get the database connections.</p> <p>Once the read-only pool is configured, there are two ways to override OBDal.getReadOnlyInstance() behavior:</p> <ul> <li>Creating a record in Data Pool Selection , which associates a database pool with a particular report. </li> <li>Using the Default DB Pool used by reports Preference, which defines the default pool returned by OBDal.getReadOnlyInstance() if no entry in Data Pool Selection is made for the current Process. </li> </ul>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#obcriteria","title":"OBCriteria","text":"<p>The  OBCriteria  class implements the Hibernate Criteria interface. It extends the standard Hibernate Criteria functionality for filtering on active, client and organization. In addition, it offers convenience methods to set orderby and to perform count actions.</p> <p>Summarizing, the OBCriteria object supports all Hibernate Criteria features:</p> <ul> <li>Setting the where-clause of a filter using the Hibernate Criterion concept. </li> <li>Setting paging parameters such as first row and maximum number of results. </li> <li>Setting order by on the query. </li> <li>Specifying joins for performance reasons. </li> <li>Performing counts, average etc. </li> </ul> <p>For more information, see the Hibernate Criteria on Criteria queries.</p> <p>The functionality of OBCriteria is illustrated with a number of code snippets:</p> <p>An OBCriteria instance is created as follows: <pre><code>final OBCriteria obc = OBDal.getInstance().createCriteria(Currency.class);\n</code></pre> Query on the name property: <pre><code>obc.add(Restrictions.eq(\"name\", \"testname\"));\n</code></pre> Restrictions.eq is an instance of the Hibernate Criterion class. The Hibernate Criterion concept is an expression language coded in Java supporting most commonly used expressions (and, or, equal, not-equal, in, between, etc.).</p> <p>Setting a descending order by on the name property: <pre><code>obc.addOrderBy(\"name\", false);\n</code></pre> Or another one: order by the name property of a referenced business object product: <pre><code>obc.addOrderBy(\"product.name\", false);\n</code></pre> Set some paging parameters, return 10 objects, beginning with the 100th: <pre><code>     obc.setFirstResult(100);\n     obc.setMaxResults(10);\n</code></pre> Also return inactive objects (as a default only active objects are returned): <pre><code>obc.setFilterOnActive(false);\n</code></pre> Count the number of Currency objects in the database: <pre><code>final int bpGroupCount = obc.count();\n</code></pre> Retrieve the list of Business Objects: <pre><code>     final List&lt;BPGroup&gt; bpgs = obc.list();\n</code></pre> Get a specific currency: <pre><code>     final OBCriteria&lt;Currency&gt; obc = OBDal.getInstance().createCriteria(Currency.class);\n     obc.add(Restrictions.eq(\"isoCode\", \"USD\"));\n     final List&lt;Currency&gt; cs = obc.list();\n     final Currency c = cs.get(0);\n</code></pre></p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#obquery","title":"OBQuery","text":"<p>The OBQuery  class is an extension of the  Hibernate Query object. It extends the standard Hibernate Query functionality for filtering on active, client and organization.</p> <p>The OBQuery object is created through the OBDal.createQuery method. The first argument of the createQuery is a class or an entity name, the second argument is the where-clause. The where-clause can be a simple one: <pre><code>    name='test'\n</code></pre></p> <p>or one which also declares an alias: <pre><code>    as ol where ol.order.id='abc'\n</code></pre></p> <p>In code: <pre><code>final OBQuery&lt;Category&gt; obQuery = OBDal.getInstance().createQuery(Category.class,\"name='testname' or searchKey='testvalue'\");\nfinal List&lt;Category&gt; bpgs = obQuery.list();\n</code></pre></p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#obprovider","title":"OBProvider","text":"<p>Etendo business objects should not be instantiated directly using the new operator. Instead the  OBProvider  class should be used to create an instance of the required business object. The OBProvider is located in the org.openbravo.base.provider package and can be retrieved using the method OBProvider.getInstance(). The OBProvider offers methods to instantiate using a class name or using an entity name. Some code examples: <pre><code>      final Category bpg = OBProvider.getInstance().get(Category.class); \n\n     // The ENTITYNAME constant is created by the business object generation logic\n     final BPGroup bpg = (BPGroup)OBProvider.getInstance().get(BPGroup.ENTITYNAME);\n</code></pre></p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#etendo-business-objects","title":"Etendo Business Objects","text":"<p>The DAL generates, instantiates and uses Etendo business objects. This part of the development manual describes their structure and main interfaces.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#baseobobject","title":"BaseOBObject","text":"<p>All Etendo Classic business objects inherit from the BaseOBObject  class. This class is located in the org.openbravo.base.structure package.</p> <p>The BaseOBObject class offers the following functionality:</p> <ul> <li>Direct access (called the dynamic API) to all the properties and values of the data within the business object through the get(String propertyName) and set((String propertyName, Object value) methods. These methods are particularly useful when working with generic functions such as security and logging. </li> <li>Access to the Entity describing the type and properties of the business object. </li> <li>Security and validation checks when getting and setting values. </li> <li>Access to the ID of the object through the getId method. </li> <li>Access to the identifier of the object: the getIdentifier method of the BaseOBObject uses the identifier properties of the object to create a displayable title for that object. </li> </ul> <p>The section on runtime model and dynamic API below, gives an example on how the dynamic API and the runtime model can be used.</p> <p>As all Etendo Classic business objects should extend this class, it is safe to cast an object to this class when required.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#generated-business-object-classes","title":"Generated Business Object Classes","text":"<p>At development time, the DAL will generate business object classes for each table defined in the application dictionary. This is done as part of the compile.complete ant tasks or can be done separately through the generate.entities ant task. These generated classes are the classes which are normally used by a developer because they offer compile-time-checked typed access to properties. The generated classes are created in the src-gen folder in the Etendo Classic development project and are part of the org.openbravo.base.model package and its subpackages.</p> <p>The generated classes extend the BaseOBObject and offer typed wrapper getters and setters around the generic set and get method of the parent BaseOBObject class: <pre><code>     public String getRecord() {\n      return (String) get(\"record\");\n     }\n\n     public void setRecord(String record) {\n      set(\"record\", record);\n     }\n</code></pre> In addition, the generated Java classes set default values (in the constructor) and have a static ENTITYNAME variable which must be used when it is required to refer directly to an entity name of an entity.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#entity-property-and-column-naming","title":"Entity, Property and Column Naming","text":"<p>The Data Access Layer uses names defined in the Application Dictionary for different purposes:</p> <ul> <li>xml tag names in REST web services and import export </li> <li>class names of generated Entity classes </li> <li>member names of members of generated Entity classes </li> <li>to detect that a certain Entity implements/supports a certain interface (see here) </li> </ul> <p>The application dictionary historically allows many different types of names (also ones that are illegal for xml/java). Therefore, the data access layer applies specific conversion logic to always ensure that names are allowed and unique for xml/Java.</p> <p>For a full listing of all entity and property names, see the Data Model Reference section.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#entity-naming","title":"Entity Naming","text":"<p>An entity (corresponds to a table in Etendo Classic) has different names, relevant for different situations:</p> <ul> <li>A table name (stored in AD_Table.tablename ) which is the database table name in the physical database. </li> <li>An entity name (present in AD_Table.name ) which is a globally unique name. It corresponds to the XML tag name used for that entity. It is, for example, used in REST webservices and client export/import. </li> <li>A Java class name (stored in AD_Table.classname ), the classname is used when generating the Java business object. It is unique within the data package of the table. </li> </ul> <p>Each table (i.e. entity) in Etendo Classic belongs to a data package. A data package has a Java package field which defines the Java package in which the entity Java class is generated.</p> <p>Warning</p> <p>AD_Table.name shouldn't contain blank spaces. If the name of the table contains spaces, the process of building the entity name will remove those spaces, e.g. 'My Table' will be converted to 'MyTable'.  </p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#property-naming","title":"Property Naming","text":"<p>For property naming, the logic is slightly different. The property naming logic has two distinct steps: </p> <p>1) first determine an initial property name, and</p> <p>2) correct/convert this property name.</p> <p>The initial property name is determined as follows:</p> <ul> <li>Properties for standard primitive type (varchar, numeric, etc.) and foreign key columns: for these properties the value in AD_Column.name is used as the start of the property name calculation. </li> <li>Properties which model a list of child entities: the so-called one-to-many or list properties. For example, the Order class has a property OrderLineList . The initial name of this property is set as follows: <ul> <li>(common case) if the column name on the other side (from the child to the parent) is the same as the primary key column name of the parent, then use the entity name of the child plus the suffix 'List'. For example, the c_orderline table has a foreign key c_order_id to the c_order table. This results in a property orderLineList in the Order entity. </li> <li>(non-common case) if the column name, which points from the child to the parent, is different than the primary key column name of the parent, then the following naming rule is used: target entity name + \"_\" + referenced property name + \"List\". For example, if the c_orderLine table has a column: c_orderheader_id with property name orderHeader then the resulting list property in the Order would be: OrderLine_orderHeaderList. </li> </ul> </li> </ul> <p>Next, the property name generation performs the following steps:</p> <ul> <li>Spaces are removed and used to camelcase, for example the name 'Enable in Cash' is converted to: EnableInCash (note the uppercased I). </li> <li>Underscores are removed and used to camelcase: for example the name 'C_Poc_email_ID' is translated to CPocEmailID. </li> <li>'illegal' characters are removed: only characters from a to z and A to Z and numbers (not as prefix) are maintained, so 'G/L Item' will be translated to 'GLItem'. </li> <li>The first character is lowercased: AccountingFact is converted to accountingFact. </li> </ul>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#property-naming-and-supported-interfaces","title":"Property Naming and Supported Interfaces","text":"<p>The data access layer automatically detects that an entity supports a certain interface by analyzing the name of the properties of that entity. It is therefore very important to be precise in naming of properties. The naming of properties and the interfaces supported by specific properties are discussed in the following section.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#important-interfaces","title":"Important Interfaces","text":"<p>The generated classes implement a set of interfaces which can be used to check if a certain instance of a class has specific functionality available:</p> <ul> <li>ClientEnabled  : flags an object as having a getClient/setClient method and as an object which is stored by Client.</li> </ul> <p>Note</p> <p>Etendo automatically detects that a table (==Entity) implements this interface if it has a column with the name: client (defined in the ad_column.name field). When this interface is implemented/detected then the client property is used to automatically filter objects (on the readable clients) when querying and to do security checks when persisting an object.</p> <ul> <li>OrganizationEnabled: an object implementing this interface has getOrganization/setOrganization methods. </li> </ul> <p>Note</p> <p>Etendo automatically detects that a table (==Entity) implements this interface if it has a column with the name: organization (defined in the ad_column.name field). When this interface is implemented/detected, then the organization property is used to automatically filter objects (on the readable organizations) when querying and to do security checks when persisting an object. </p> <ul> <li>ActiveEnabled: an object implementing this interface has an active flag (boolean) which can be reached through the isActive/setActive methods. </li> </ul> <p>Note</p> <p>Etendo automatically detects that a table (==Entity) implements this interface if it has a column with the name: active (defined in the ad_column.name field). When this interface is detected/implemented then the active field is used in automatic filtering of objects when querying through the data access layer. </p> <ul> <li>Traceable: a Traceable object has audit information: created and updated (date fields), and createdby and updatedby (contain a User). This audit information is reachable through corresponding accessors. </li> </ul> <p>Note</p> <p>Etendo automatically detects that a table (==Entity) implements this interface if it has the following columns (all are required): creationDate, created, updated, updatedBy (set in the ad_column.name field). See specifically the name of the date of creation property, it should be: creationDate. When this interface is implemented/detected then the data access layer will automatically set audit fields when an object is persisted. </p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#client-and-organization-and-audit-information","title":"Client and organization and Audit information","text":"<p>The above interfaces are used by the DAL when an object is saved for the first time or updated in the database:</p> <ul> <li>a ClientEnabled object for which the Client is not set will get the current Client of the user (present in the user context). </li> <li>an OrganizationEnabled object for which the Organization is not set will get the current Organization of the user (present in the user context). </li> <li>a Traceable object: when saved for the first time, the created, createdby, updated and updatedby are set. When an object is updated, then the updated and updatedby are set. </li> </ul> <p>So, a developer does not need to explicitly set this information in a new or existing object. </p> <p>Note</p> <p>For the data access layer to detect that a table supports the above interfaces, the column names (AD_Column.name) need to adhere to specific standards, see here for more information.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#creating-a-new-instance-of-a-business-object","title":"Creating a new instance of a Business Object","text":"<p>A business object may never be created using the Java new operator. All business objects should be created using the  OBProvider  factory class: <pre><code>     // create the object through the factory\n      final Category bpg = OBProvider.getInstance().get(Category.class);\n</code></pre> Hibernate will detect that a business object is new when:</p> <ul> <li>the ID of the business object is not set </li> <li>when the flag newOBObject is set to true explicitly </li> </ul> <p>So, if you want to create a new business object with a specific ID (by calling setId(...)) then you explicitly need to call businessObject.setNewOBObject(true). Otherwise, Hibernate will throw an exception ('count of batch update operation....').</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#user-context","title":"User Context","text":"<p>The DAL operates within a user context. The user context is implemented in the OBContext  class in the org.openbravo.dal.core . The OBContext is initialized using a userId. On the basis of this userId, the OBContext computes the role, clients, organizations and accessible entities. This information is used by the DAL for security checking and automatic filtering on client and organization.</p> <p>The OBContext is stored as a ThreadLocal variable and the DAL always assumes that there is one available. The OBContext can be retrieved using the call OBContext.getOBContext().</p> <p>Normally a developer can assume that there is always a user context available. The following sections discuss this in detail.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#user-context-in-a-running-etendo-classic-instance","title":"User Context in a running Etendo Classic Instance","text":"<p>When the code runs inside of an Etendo Classic application then the user context is always set. This is done through a request filter (the DalRequestFilter in the org.openbravo.dal.core package). This request filter ensures that the OBContext ThreadLocal is set to the current user (of Etendo), puts the OBContext in the http session and cleans up the OBContext when the thread ends (as the thread may be reused by another user).</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#user-context-in-a-test-environment","title":"User Context in a Test environment","text":"<p>The DAL uses a base class for its test cases (see topic Testing further below). This base class takes care of setting the user context when running tests.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#user-context-in-a-standalone-situation","title":"User Context in a Standalone situation","text":"<p>The user context can also be set by calling OBContext.setOBContext(userId) with a userId which exists in the ad_user table. This will setup a user context and place it in the OBContext ThreadLocal member to be used by the DAL.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#administrator-mode","title":"Administrator Mode","text":"<p>As was just mentioned, DAL operates within a user context, and provides automatic security checking mechanisms to prevent the user from accessing data which according to the Etendo Security Model should not be accessed.</p> <p>However, in most cases, the piece of code developed is contained within an object which in itself automatically provides part of the security checking, in particular the entity access. For example, if the piece of code is part of a process which is called from a button, the user will only be able to click that button if he is already in the window (and therefore, has access to that entity). The same happens when the code is part of a callout (the callout will only be fired if the user is already in the window).</p> <p>The OBContext provides an Administrator Mode which can be used to perform administrative actions even if the user does not have enough privileges. This mode bypasses the Entity Access checking, and it does not filter by Client or Organization.</p> <p>An additional Administrator Mode is provided, which bypasses the Entity Access checking, but it does filter by Client Organization. It is encouraged to use this restricted Administrator Mode, as it conveniently filters by Client and Organization, something that is usually needed on Business Logic code.</p> <p>The syntax to activate the restricted Admin Mode: <pre><code>    try {\n      OBContext.setAdminMode(true);\n    \u00a0\n      // do administrative things here\n    \u00a0\n    } finally {\n      OBContext.restorePreviousMode();\n    }\n</code></pre></p> <p>In some cases, it is necessary, though, to prevent also client/organization check, this can be done using <code>OBContext.setAdminMode(false)</code> .</p> <p>Note</p> <p>The calls to setAdminMode/restorePreviousMode are balanced, meaning that for each call to setAdminMode there is also exactly one call to restorePreviousMode. If in one request the number of calls to setAdminMode is unequal to the number of calls to restorePreviousMode then a warning is displayed: Unbalanced calls to enableAsAdminContext and resetAsAdminContext.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#cross-organization-reference-administrator-mode","title":"Cross Organization Reference Administrator Mode","text":"<p>Validation for referenced object's organization in columns supporting it can be bypassed by using a special Administrator mode: <code>setCrossOrgReferenceAdminMode</code> . Restoring previous mode is done by <code>restorePreviousCrossOrgReferenceMode</code> . Similarly to standard admin mode, calls must be balanced for this mode, independently from standard admin mode. <pre><code>      OBContext.setCrossOrgReferenceAdminMode();\n      try {\n    \u00a0\n        // cross organization references are allowed here\n    \u00a0\n      } finally {\n        OBContext.restorePreviousCrossOrgReferenceMode();\n      }\n</code></pre></p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#transaction-and-session","title":"Transaction and Session","text":"<p>The DAL implements the so-called open-session-view [https://developer.jboss.org/docs/DOC-13954] pattern. With a slight variation that the DAL will automatically create a Hibernate Session and start a transaction when the first data access takes place (if none existed). So not when the HTTP requests begins. The Session and Transaction are placed in a ThreadLocal and re-used for subsequent data access actions in the same thread.</p> <p>An important thing to be aware of is that normally all database actions are flushed to the database when the session is committed. In a web environment, this is at the end of the http request. To perform flush on demand, call the OBDal.getInstance().flush() method.</p> <p>Normally a developer does not need to explicitly commit or rollback a Session or Transaction:</p> <ul> <li>Within Etendo Classic: the open-session-view [https://developer.jboss.org/docs/DOC-13954] pattern is used, when running the code in the Etendo Classic application, the transaction commit and session close takes place at the end of the http request (see the DalRequestFilter). If an exception occurs, then a rollback is performed. </li> <li>In the Etendo Classic test environment: The DAL base test class (OBBaseTest) takes care of committing or rollingback transactions. </li> <li>Standalone: if the code is running standalone, then an explicit commit or rollback needs to be performed. This can be done through the OBDal methods: OBDal.getInstance().commitAndClose() or OBDal.getInstance().rollbackAndClose()) . </li> </ul> <p>Warning</p> <p>SQLC and DAL: The standard Etendo Classic database access (through Windows) works outside of the DAL. This means that, database access uses a different connection than the DAL. If both connections update the database, then it is possible that a deadlock situation happens. So, when working/updating through both the DAL and SQLC one should always first commit/close the connection of the DAL explicitly before continuing with SQLC or the other way around.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#security-and-validation","title":"Security and Validation","text":"<p>The DAL performs many different security and validation checks, in both read and write mode. A security violation results in a  SecurityException , a validation error in a  ValidationException. Different exceptions are thrown at different points: some Security Exceptions are thrown when reading a business object (e.g. read security violations), others are thrown when the session commits or flushes (write security violations) or when a setter is called (ValidationException).</p> <p>If you need to work without this security checks, you should use the Administrator Mode, or the restricted Administrator Mode. You can find more information about them in Administrator Mode.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#write-access","title":"Write Access","text":"<p>Write access checks are done when the OBDal save or remove methods are called or when a business object is saved by hibernate (at flush/commit). For write access, the following checks are performed:</p> <ul> <li>The user must have access to a window/tab which displays the entity. See the  AD_Window_Access  table. </li> <li>The organization of the business object must be in the list of writable organizations of that user. Writable organizations are organizations directly linked to the role of the user. </li> <li>The client of the business object must be in the list of writable clients of that user. </li> </ul> <p>If any of the above checks fails, then a SecurityException is thrown.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#read-access","title":"Read Access","text":"<p>A user can only view information from their own clients and accessible organizations. This is ensured by the DAL by automatically adding filter criteria in the OBCriteria object.</p> <p>Read access is checked for both direct read access and derived read access. Direct read access allows a user to see all the information of a certain entity. With derived read access only the active property, audit info and the ID and identifier may be read by a user.</p> <p>Direct read access is based on the window access tables, i.e. a user can read all the information of a certain entity if the user has access to a window displaying that entity. The read access for a certain table/entity can be overridden using the ad_table_access table. The set of directly readable entities is computed by the  EntityAccessChecker  in the <code>org.openbravo.dal.security</code> package.</p> <p>Derived read access is computed as follows: For each directly readable entity it is determined to which other entities it refers. These other entities are derived read accessible. For example, if a user may directly read an invoice entity, and an invoice refers to a currency then the user has derived read access to a currency. The derived readable entities are also computed in the EntityAccessChecker.</p> <p>Direct and derived read access are checked at different points:</p> <ul> <li>Direct read access is checked when a method on the OBDal instance is called. </li> <li>Derived read access is checked when a getter is invoked or the generic get method is called. </li> </ul>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#delete-check","title":"Delete Check","text":"<p>A user may delete a business object if:</p> <ul> <li>They have write access to the entity of the business object. </li> <li>The entity is not set as not-deletable, this is defined in the ad_table . </li> </ul> <p>Both security checks are done when the session is committed or flushed. See the  OBInterceptor class for more details.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#table-access-validation","title":"Table Access Validation","text":"<p>Different tables in Etendo Classic have different access levels. Some tables only allow information from client 0 and organization *. Other tables allow objects from any organization.</p> <p>When a business object is saved, a check is done if the client and organization of that business object are valid for the table access level of the table. The check has been implemented in the  AccessLevelChecker  in <code>org.openbravo.base.validation</code> . This check is performed when the session commits or is flushed.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#validation","title":"Validation","text":"<p>Property values are validated when the setter is called or the generic set method on the BaseOBObject is called. The following checks are performed:</p> <ul> <li>a check is done if the instance of the value is valid for that property </li> <li>for String values, a check is done on length or on the allowed String values (list/enumerate values) </li> <li>for numeric values, the min and max are checked </li> <li>for mandatory values, a check is done if the value is unequal to null </li> </ul> <p>The property validation is performed by the classes in <code>org.openbravo.base.validation</code>  . The validation structure is initialized when the runtime model is created. For each property a corresponding PropertyValidator is created. Different types of properties have different types of PropertyValidators.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#entity-organization-validation","title":"Entity Organization Validation","text":"<p>A business object may only refer to other business objects which belong to the natural tree of the organization of the business object. This validation is done when a business object is saved (i.e. when the session commits/flushes).</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#cross-organization-references","title":"Cross Organization References","text":"<p>Entity Organization validation can be bypassed if the following conditions are all fulfilled:</p> <ul> <li>The foreign key column that references to the other object is marked as Allow Cross Organization Reference . This can be set in Tables and Columns &gt; Column tab. </li> <li>Context is in Cross Organization Reference Administrator Mode. </li> </ul>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#cross-organization-references-in-ui","title":"Cross Organization references in UI","text":"<p>Columns allowing cross organization references allow users to select records from organizations not included in the tree of the record they are referenced from.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#dal-support-for-database-views","title":"DAL support for Database Views","text":"<p>The DAL supports views in practically the same way as normal tables defined in the application dictionary. This means that:</p> <ul> <li>database views are considered as normal business objects </li> <li>entities are generated for database views </li> <li>database views can be queried using HQL and the DAL query apis </li> <li>database views can be accessed through the  XML  and  JSON REST web service apis </li> </ul> <p>There is one difference between a database view and a database table: the DAL does not support updates on views, view business objects can be read and queried but not inserted or updated.</p> <p>Note</p> <p>For the DAL to consider a view as a business object it needs to have a primary key column defined in the application dictionary. This column does not need to be a real primary key in the database but it must hold unique values for each record of the view.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#sql-functions-in-hql","title":"SQL Functions in HQL","text":"<p>To use SQL Functions in HQL, you first must make sure that Hibernate knows about your function. So in your java code you have to register the function. This is done by creating a class that implements the SQLFunctionRegister interface and annotated as @ApplicationScoped . <pre><code>    @ApplicationScoped\n    public class ExampleSQLFunctionRegister implements SQLFunctionRegister {\n      @Override\n      public Map&lt;String, SQLFunction&gt; getSQLFunctions() {\n        Map&lt;String, SQLFunction&gt; sqlFunctions = new HashMap&lt;&gt;();\n        sqlFunctions.put(\"ad_column_identifier_std\", new StandardSQLFunction(\"ad_column_identifier_std\",\n            StandardBasicTypes.STRING));\n        sqlFunctions.put(\"now\", new StandardSQLFunction(\"now\", StandardBasicTypes.DATE));\n        return sqlFunctions;\n      }\n    }\n</code></pre></p> <p>The getSQLFunctions() method should be implemented providing a map with the SQL functions to be registered. This map will be retrieved during the DAL layer initialization in order to perform the registration automatically.</p> <p>Please note that there are several SQL functions being already registered by default in core. See  here  and  here.</p> <p>After registering the function you can use it directly in an HQL like this: <pre><code>    final Session session = OBDal.getInstance().getSession();\n    final String qryStr = \"select bc.id, ad_column_identifier_std('C_BP_Group', bc.id) from \" + Category.ENTITY_NAME + \" bc\";\n    final Query qry = session.createQuery(qryStr);\n</code></pre></p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#executing-native-sql-queries","title":"Executing Native SQL Queries","text":"<p>The DAL also allows the execution of native SQL queries: <pre><code>      String documentNo = (String) OBDal.getInstance().getSession()\n            .createNativeQuery(\"SELECT documentNo FROM c_order WHERE c_order_id =\u00a0:id\")\n            .setParameter(\"id\", orderId)\n            .uniqueResult();\n\n\n    \u00a0\n      // retrieving several records with multiple columns\n      @SuppressWarnings(\"unchecked\")\n      List&lt;Object[]&gt; warehouseInfo = OBDal.getInstance().getSession()\n            .createNativeQuery(\"SELECT name, value FROM m_warehouse WHERE ad_org_id =\u00a0:id\")\n            .setParameter(\"id\", orgId)\n            .list();\n</code></pre></p> <p>Note</p> <p>The createNativeQuery method accepts a second argument where the returning result type may be specified. But this is NOT supported due to a bug  in Hibernate. </p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#runtime-model-and-the-dynamic-api","title":"Runtime Model and the Dynamic API","text":"<p>The DAL makes the model (defined in the Application Dictionary) available at runtime. The runtime model is especially useful in generic functionality such as import and export and security and validation.</p> <p>The runtime model consists of two main concepts:</p> <ul> <li>Entity: an entity models a database table and its associations to and from other tables (i.e. entities). An entity has an Entityname which is globally unique. In addition, an entity has a runtime Java class which is used for the runtime Java representation. The entity class has methods to retrieve the full list of properties, the ID properties or the identifier properties. </li> <li>Property: a property corresponds to a column in the database. Some property specifics: <ul> <li>A property can be a primitive property (String, Date, numeric) or a reference to another entity (which can be retrieved through the getTargetEntity method). </li> <li>A property can be part of the primary key ( isId() == true ). </li> <li>A property can be part of the identifier of an entity ( isIdentifier() == true ). </li> </ul> </li> </ul> <p>The runtime model is available through the  ModelProvider  class (in org.openbravo.base.model ) which can be retrieved by calling ModelProvider.getInstance() . The ModelProvider offers several methods to retrieve Entities from the in-memory model (the full list, by entity name or by Java class).</p> <p>The runtime model makes it possible to use model-driven development techniques also at runtime. For example, the runtime model together with the dynamic API offered by the BaseOBObject makes it possible to iterate through all properties (and their values) of a business object without knowing the exact type of the business objects.</p> <p>The example below illustrates how to do this. This method below will translate any Etendo Classic business entity into a simple XML document using the runtime model and the dynamic API: <pre><code>      private void printXML(BaseOBObject bob) {\n        // used to print a bit nicer xml\n        final String indent = \"\\t \";\n\n        // get the entity from the runtime model using the entity name of the object\n        final String entityName = bob.getEntityName();\n        final Entity e = ModelProvider.getInstance().getEntity(entityName);\n        // Note: bob.getEntity() also gives the entity of the object\n    \u00a0\n\n        // print the opening tag\n        System.err.println(\"&lt;\" + e.getName() + \"&gt;\");\n\n        // iterate through the properties of the entity\n        for (Property p\u00a0: e.getProperties()) {\n\n          // and get the value through the dynamic api offered by the BaseOBObject\n          final Object value = bob.get(p.getName());\n\n          // handle null, just create an empty tag for that\n          if (value == null) {\n            System.err.println(indent + \"&lt;\" + p.getName() + \"/&gt;\");\n            continue;\n          }\n\n          // make a difference between a primitive and a reference type\n          if (p.isPrimitive()) {\n            // in reality some form of xml conversion/encoding should take place...\n            System.err.println(indent + \"&lt;\" + p.getName() + \"&gt;\" + value + \"&lt;/\" + p.getName() + \"&gt;\");\n          } else {\n            // cast to the parent of all openbravo objects\n            final BaseOBObject referencedObject = (BaseOBObject) value;\n            // assumes that the id is always a primitive type\n            System.err.println(indent + \"&lt;\" + p.getName() + \"&gt;\" + referencedObject.getId() + \n            \"&lt;/\" + p.getName() + \"&gt;\");\n          }\n        }\n\n        // and the closing tag\n        System.err.println(\"&lt;/\" + e.getName() + \"&gt;\");\n      }\n</code></pre> This example executes the following steps:</p> <ul> <li>Get the entityname from the object and retrieve the Entity from the runtime model through the ModelProvider instance. </li> <li>Create an opening tag and iterate through all properties of the entity (i.e. all columns of the table). </li> <li>For each property, do the following: <ol> <li>Get the value for the property from the business object through the dynamic API. </li> <li>Handle null values and check if the property is a primitive type or not. </li> <li>For a primitive type, just print the value. </li> <li>For a reference type, cast the value to a BaseOBObject and print the ID of the referenced object. </li> </ol> </li> </ul> <p>The above method will print the following output for a business partner group like the one stored in the hello world example above: <pre><code>    &lt;CoreBPGroup&gt;\n         &lt;deflt&gt;true&lt;/deflt&gt;\n         &lt;description&gt;hello world&lt;/description&gt;\n         &lt;name&gt;hello world&lt;/name&gt;\n         &lt;value&gt;hello world&lt;/value&gt;\n         &lt;updatedby&gt;1000001&lt;/updatedby&gt;\n         &lt;updated&gt;Sat Oct 04 12:31:57 CEST 2008&lt;/updated&gt;\n         &lt;createdby&gt;1000001&lt;/createdby&gt;\n         &lt;created&gt;Sat Oct 04 12:31:57 CEST 2008&lt;/created&gt;\n         &lt;active&gt;true&lt;/active&gt;\n         &lt;org&gt;1000000&lt;/org&gt;\n         &lt;client&gt;1000000&lt;/client&gt;\n         &lt;id&gt;ff8081811cc769b4011cc769e49b0002&lt;/id&gt;\n    &lt;/CoreBPGroup&gt;\n</code></pre> In general, when you are working with very generic code (cross-cutting concerns) which applies to all business objects, then using the runtime model can be considered.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#testing","title":"Testing","text":"<p>It is of vital importance to follow a test-driven development approach for every development project. This applies especially to backend process development (a little less for UI development which is more difficult to test automatically). The Data Access Layer is tested using many JUnit test cases. These can be found in the src-test folder in the Etendo Classic project.</p> <p>As a developer, you can make use of the same test infrastructure as the Data Access Layer test cases. The only thing you need to do is to let your test class inherit from the OBBaseTest  class. The OBBaseTest class takes care of managing transactions, the context and initializing the DAL.</p> <p>You can choose to run the test cases for specific users, see the methods in the OBBaseTest class for more information. <pre><code>      public void testMyStuff() {\n       setTestUserContext();\n    \u00a0\n        // do your test here\n      }\n</code></pre> For more information, visit How to develop test cases. </p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#test-your-hql-the-hql-query-tool","title":"Test your HQL: the HQL Query Tool","text":"<p>There is an Etendo HQL Query Tool which allows you to try an HQL query directly in the Etendo Classic interface. The module can be found in the Github repository. </p> <p>This module creates a System Administrator window in which you can enter an HQL query and see the result. This window includes a list of all entities and their properties. The HQL Query Tool is a very useful tool to test HQL queries and to see the result of the query.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#calling-processesstored-procedures-from-the-dal","title":"Calling Processes/Stored Procedures from the DAL","text":"<p>Sometimes, it makes sense to call a stored procedure from the DAL using the same db connection as it is being used by the DAL. For this purpose, the DAL includes two utility classes which make it easier to call processes and stored procedures through the DAL:</p> <ul> <li>CallProcess </li> <li>Call Stored Procedure</li> </ul> <p>These classes make use of the same database connection as the DAL, in addition instead of working with String parameters, you can work with the java (primitive) objects directly.</p> <p>Both classes contain javadoc with a detailed description on how to use the class.</p> <p>Another interesting part when working with direct database updates (outside of Hibernate) is the following section in the trouble shooting guide: changes not visible in the DAL after calling stored procedure.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#the-dalconnectionprovider","title":"The DalConnectionProvider","text":"<p>To access and make use of classic Etendo code, it is often needed to have a ConnectionProvider object available. When combining DAL actions with classic Etendo operations, it makes sense to use one overall database connection and commit all actions in one step.</p> <p>To support this, the DAL provides a special ConnectionProvider implementation which makes use of the DAL database connection: the DalConnectionProvider. This class is simple to use, check out the javadoc for more information. The class can simply be used by instantiating it: <pre><code>    ConnectionProvider cp = DalConnectionProvider();\n</code></pre> No additional information is needed for it to work properly.</p> <p>For those queries that want to use the read-only pool, the connection provider must be defined as follows: <code>java\u00a0     ConnectionProvider cp = DalConnectionProvider.getReadOnlyConnectionProvider();</code></p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#using-the-data-access-layer-in-an-ant-task","title":"Using the Data Access Layer in an Ant task","text":"<p>To ease the use of the DAL in Ant, a base Ant task class is offered by the DAL: the DalInitializingTask in the org.openbravo.dal.core package. This class is in charge of of initializing the DAL layer and other details (i.e. using the correct classloader).</p> <p>To make use of this class, the following changes need to be made to the Ant task and the custom Java Ant task implementation:</p> <ul> <li>The custom Ant task Java class should inherit from the DalInitializatingTask . </li> <li>The custom Ant task Java class should implement a doExecute method instead of the execute method in the custom Ant Java class (renaming the execute method to doExecute is enough). </li> <li>Two additional properties are required in the ant task definition (in the build.xml): <ul> <li>propertiesFile= <code>${base.config}/Openbravo.properties</code>. </li> <li>userId=\"100\". </li> </ul> </li> </ul> <p>The first property configures the location where the Openbravo.properties file can be found. The second property sets the user under which the task is performed.  </p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#important-information","title":"Important Information","text":"","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#hibernate-proxies","title":"Hibernate Proxies","text":"<p>To improve performance of single-ended associations, the DAL makes use of the Hibernate proxy functionality. The Hibernate proxy functionality wraps an object inside a Hibernate proxy object. This is done at runtime using cglib. The Hibernate proxy object takes care of loading the business object when it is actually accessed. The advantage of this approach is that if an object is never accessed then it is neither loaded, saving performance.</p> <p>However, the Hibernate proxy is very visible when a developer debugs through an application because the instance of an object at runtime will not be the exact class (for example BPGroup) but an instance of a Hibernate proxy class.</p> <p>To understand what the consequence of using Hibernate proxies, it is essential that a developer using the DAL reads this part of the Hibernate manual.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#performance-getting-the-id-of-a-baseobobject","title":"Performance: getting the ID of a BaseOBObject","text":"<p>The previous section discussed the Hibernate proxy concept. A Hibernate proxy will load its wrapped business object when one of the methods on the business object is called. In many cases, a developer just wants access to the ID or entityname of an object. To prevent loading of the business object when retrieving just this information, the DalUtil class in org.openbravo.dal.core offers a getId method and a getEntityName method. These methods work directly with the HibernateProxy object and do not load the underlying business object.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#hibernate-inner-workings","title":"Hibernate inner workings","text":"<p>To understand how Hibernate operates internally, it is strongly encouraged to read chapter 21 of the Hibernate manual: Improving Performance.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#classloading","title":"Classloading","text":"<p>The DAL loads classes when initializing the DAL. The DAL as a default uses the context class loader of the thread. In some cases, this does not work correctly (for example when using the DAL in Ant). The DAL uses the OBClassLoader class to make the classloader configurable. By calling OBClassLoader.setInstance with your own OBClassLoader, you can control the class loader used by the DAL.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#creating-a-new-business-object-with-a-specific-id","title":"Creating a new business object with a specific ID","text":"<p>Hibernate will detect that a business object is new when:</p> <ul> <li>the ID of the business object is not set </li> <li>when the flag newOBObject is set to true explicitly </li> </ul> <p>So if you want to create a new business object with a specific ID (by calling setId(...)) then you explicitly need to call businessObject.setNewOBObject(true). Otherwise, Hibernate will not detect the business object as being new and throw an exception ('count of batch update operation....').</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#coding-practices-when-usingextending-the-dal","title":"Coding Practices when using/extending the DAL","text":"<p>This section discusses a number of essential coding practices which should be followed when using or extending the DAL.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#exception-structure","title":"Exception Structure","text":"<p>All exceptions thrown by the DAL extend the base OBException class. The OBException is a RuntimeException so no explicit catch and throw statements are required.</p> <p>The OBException class takes care of logging the exception in a correct way.</p> <p>When creating your own exception class, it is best to extend OBException so that you can make use of the standard logging capabilities in the OBException (the logging capabilities will be extended over time).</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#runtime-invariants-the-check-class","title":"Runtime Invariants: The Check class","text":"<p>The Data Access Layer in various locations performs assertions or runtime invariant checks. For example, to check if arguments are not null or that a certain condition is met. Implementing these type of checks helps to make your system much more robust. To make implementing these type of checks more convenient the Data Access Layer uses the Check class which is located in the org.openbravo.base.util package. The Check class offers methods to check for instanceof , isNull , isNotNull , etc.</p> <p>Using a common class for assertions throughout your code makes your code more readable and easier to understand (compared to implementing your own assertion checking).</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#code-formatting","title":"Code Formatting","text":"<p>The source code, which is part of the Data Access Layer, is formatted using one formatting template. It is essential that when developing code in or using the Data Access Layer that this same code format template is used.</p> <p>A common code format has the following benefits:</p> <ul> <li>All Etendo Classic code gets a uniform look and feel, looks cleaner/tidier and, therefore, is more professional. </li> <li>The code will be easier to understand, less mistakes will be made. </li> <li>It is possible to do diff's on different versions of the code in mercurial (through your IDE), it is easier to understand changes over time. </li> <li>Solving mercurial conflicts is easier. </li> </ul> <p>The code formatting template and his configuration can be found in the following article: IntelliJ Code Formatting.</p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-access-layer/#tips-tricks-and-troubleshooting","title":"Tips &amp; Tricks and Troubleshooting","text":"<p>Info</p> <p>For tips and tricks and common issues (and solutions) you may find, please visit the troubleshooting section.</p> <p>This work is a derivative of Data Access Layer by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo. </p>","tags":["Concepts","Data Access Layer","Business Logic","Hibernate","Business Object","Development Architecture"]},{"location":"developer-guide/etendo-classic/concepts/data-model/","title":"Data Model","text":"","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#overview","title":"Overview","text":"<p>Etendo Data Model is defined in Application Dictionary. At data model, Application Dictionary maps physical database tables and columns in its own tables (<code>AD_Table</code> and <code>AD_Column</code>) and on top of this it is built the rest of the system (Windows, tabs, fields, etc.).</p> <p>This document explains how tables and columns are defined in physical database and how they are mapped in Application Dictionary's Data Model.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#tables-in-application-dictionary","title":"Tables in Application Dictionary","text":"<p>Once tables are physically defined in database, they must be mapped with Application Dictionary. This mapping is done through <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> &gt; <code>Table</code> tab, which populates <code>AD_Table</code> table.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#table-naming","title":"Table Naming","text":"<p>A table defined in the application dictionary has several names which are used by Etendo in different ways:</p> <ul> <li>Logical name (<code>AD_Table</code>.name): used by the Data Access Layer in XML and JSON REST web services. See here for more information.</li> <li>Physical name (<code>AD_Table</code>.tablename): is the name of the table in the database.</li> <li>Class name (<code>AD_Table</code>.classname): the name of the generated entity java class.</li> </ul>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#columns-in-application-dictionary","title":"Columns in Application Dictionary","text":"<p>After defining the table in Application Dictionary, the next step is to add columns to it. There's a process which reads columns from database and inserts them as columns in the table. This process is invoked from the Create columns from DB button in <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> &gt; <code>Table</code> tab.</p> <p>After that it is possible to check all the columns in the table in the <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> &gt; <code>Table</code> &gt; <code>Column</code> tab, and fine tune them if needed. There is a detailed explanation for all fields in that tab in the documentation about <code>AD_Column</code> table.</p> <p>The following sections explain some details to be taken into account when defining a column.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#column-naming","title":"Column Naming","text":"<p>A column defined in the application dictionary has several names which are used by Etendo in different ways:</p> <ul> <li>The logical name (<code>AD_Column</code>.name): this name is used by the Data Access Layer for automatically detecting supported interfaces and XML and Java property naming.</li> <li>The physical column name (<code>AD_Column</code>.columnname): is the name of the column in the database table.</li> </ul> <p>Important</p> <p>When naming columns related to audit info, client/organization and active it is very important to be precise in the name. If a wrongly spelled name is used then Etendo will not be able to detect that an entity supports a certain interface and specific automatic behavior is disabled. See here for a list of interfaces and their expected logical column names.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#defining-business-objects-the-isparent","title":"Defining Business Objects: the isParent","text":"<p>The column definition in the application dictionary is also used to define business object structures in Etendo. If the <code>isParent</code> field of a foreign key column is set (checked/true) then this foreign key models an association from a child to a parent. With this information the Data Access Layer will automatically create an association (in-memory) from the parent to the child.</p> <p>For example the <code>C_OrderLine</code> table has a column <code>c_order_id</code>. In the application dictionary this column is flagged as <code>isParent</code> (so the <code>c_order_id</code> points to the parent of the order line: the order header). The data access layer will translate this foreign key column in two association in the entity model:</p> <ul> <li>A many-to-one association from the order line entity to the order (its parent)</li> <li>A one-to-many association from the order to the order lines, in java this results in a member of type <code>java.util.List</code>.</li> </ul> <p>For more information, see here.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#references","title":"References","text":"<p>References are used in Etendo Application Dictionary for two purposes:</p> <ul> <li> <p>Define the type of data stored in a column:   Depending on the reference a column has, this column will hold different data types, for example numeric values, plain text, links to other columns, etc.</p> </li> <li> <p>Define how the fields linked to a column will be represented in the UI:   A column's reference also indicates how the fields associated to that column will be represented within tabs, for example a drop down list, a text box with a button to show a selector, etc.   Thus each column in Application Dictionary has one and only one reference.</p> </li> </ul>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#types-of-references","title":"Types of References","text":"<p>There are two basic types of references: Base and Subreferences. References are set in <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> &gt; <code>Table</code> &gt; <code>Column</code> tab using <code>Reference</code> field for data type references and <code>Reference Search Key</code> for sub types.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#base-references","title":"Base References","text":"<p>These references can be directly associated to a column. Examples of data references are date, price, list, etc.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#subreferences","title":"Subreferences","text":"<p>Some base references require another reference to completely define the data the column will contain. This is when sub references are used. The base references defined in core that require a sub reference are: <code>List</code> , <code>Search</code> and <code>Table</code>. Thus when one of these base references is associated to a column it is necessary to also associate to that column another subtype reference. For example, to set a column to a Business Partner search it is necessary to set the main reference for this column to <code>Search</code> and the secondary one to <code>Business Partner Search</code>.</p> <p>Info</p> <p>When columns in Application Dictionary are automatically created based on their database physical description using the <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> &gt; <code>Table</code> &gt; <code>Create Columns from DB</code> process, it sets the references that are prone to be the proper ones, but in some cases they need to be changed. It is a good practice to review all the automatically assigned references for new columns after executing this process.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#core-base-references","title":"Core Base References","text":"<p>The following sections describe the base references defined in core.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#numeric-references","title":"Numeric references","text":"<p><code>Integer</code> , <code>Number</code> , <code>Amount</code> , <code>Quantity</code> and <code>General Quantity</code> are used to maintain numeric values. When defining one of these references, it is possible to include the minimum and/or the maximum value for the column if wanted, notice that the check for this values will be done just in UI but not a database level, so it would be possible to add data out of range using any process. To enforce this restrictions in database, use database check constraints.</p> <p></p> <p>When there is a field in a tab associated to a column with one of these references, the way it is represented will look like the picture below.</p> <p></p> <p>The physical description of columns using this references must be <code>number</code>.</p> <p>Note</p> <p>The way decimal numbers are represented is defined in <code>config/Format.xml</code> file with these equivalences: - <code>euroEdition</code>: Amount - <code>qtyEdition</code>: Quantity - <code>priceEdition</code>: Price - <code>IntegerEdition</code>: Integer - <code>generalQtyEdition</code>: General Quantity and Number</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#price","title":"Price","text":"<p><code>Price</code> reference is similar to the previous numeric ones and is intended to store monetary quantities. When defining it, it does not allow maximum and minimum values.</p> <p>The physical description of columns using this references must be <code>number</code>.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#text-references","title":"Text References","text":"<p><code>String</code> , <code>Text</code> and <code>Memo</code> references are used for text columns. The difference between them is the text length they are supposed to store.</p> <ul> <li>String is for short text and it will always be displayed in UI as a one line text box.</li> <li>Text and Memo are displayed in multiple lines depending on the length defined in the <code>Length</code> field.</li> </ul> <p>The physical description of columns using this references must be <code>char</code>, <code>varchar</code> or <code>nvarchar</code>.</p> <p>This is how a text reference looks like in UI:</p> <p></p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#url-link","title":"URL link","text":"<p><code>Link</code> reference is used to represent URL links. Columns with this reference are text columns.</p> <p>The UI for this reference is:</p> <p></p> <p>When clicking on the button next to the text box, a new browser is opened with the link in the box.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#time-references","title":"Time References","text":"<p><code>Date</code> , <code>Time</code> , <code>DateTime</code> <code>Absolute Time</code> and <code>Absolute DateTime</code> are used for columns storing date or time values. Date displays a date without hours; Time displays time without date, this is just hour, minutes and seconds; DateTime displays date with time.</p> <p>When defining a column of type Date maximum and minimum values are accepted.</p> <p>In Oracle, physical database columns for these references must be <code>DATE</code> or <code>TIMESTAMP</code> types. In PostgreSQL the data type is <code>Timestamp without timezone</code>.</p> <p>An example of how a field for a column with reference date is represented is as follows:</p> <p></p> <p>Notice that a calendar button is displayed next to the text box, this facilitates the dates selection, when clicking on it a calendar poup-up is opened:</p> <p></p> <p>And this is an example of a DateTime field:</p> <p></p> <p>The date-picker for this reference is like the Date reference one but also it adds a time-picker. If the input value is empty, this time picker value is the current time.</p> <p></p> <p>The format for displaying time and dates is defined in <code>config/Openbravo.properties</code> file by the <code>dateFormat.sql</code> and <code>dateTimeFormat.sql</code> using SQL format. Example:</p> <pre><code>dateFormat.sql=DD-MM-YYYY\ndateTimeFormat.sql=DD-MM-YYYY HH24:MI:SS \n</code></pre> <p>Time and DateTime are relative references, that means that the stored value is loaded from the backend with the backend/server timezone and displayed in the client/browser with the own client timezone:</p> <ul> <li>The value is stored with server timezone.</li> <li>When loading into the client, the server transforms the value to UTC and it sends it to the client. The client transforms this UTC value to client timezone.</li> <li>When saving in the server, the client timezone value is transformed to UTC and sent to the server. The server reads this UTC value, it transforms it to server timezone and stores it in the database.</li> </ul> <p><code>Absolute Time</code> and <code>Absolute DateTime</code> are, as their name indicates, absolute references, that means that the stored value in the backend/server is exactly the same than is displayed in the client/browser:</p> <ul> <li>When passing the time/datetime from the client to the server, the value is passed as it is read from the database, so there is no UTC conversion. There are some mechanisms in the client to display the value as it comes, so there are no convesions here.</li> <li>When receiving a value from the client, it is stored also as it comes from the client without any UTC conversion.</li> </ul>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#yesno-reference","title":"Yes/No Reference","text":"<p><code>YesNo</code> reference is used for columns accepting boolean values (yes or no). In the UI a checkbox is shown, when it is checked the column will take 'Y' as value, when it is not it will take 'N'.</p> <p>Physical database columns for these references must be <code>CHAR(1)</code> .</p> <p>UI for this reference is:</p> <p></p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#image","title":"Image","text":"<p>Image BLOB reference is used to store images in the database. All images are physically stored in a binary field of the table <code>AD_IMAGE</code>, and the table column used must be a reference to this table. Image types supported are the raster types: PNG, JPEG and BMP, and the vector type SVG.</p> <p>Info</p> <p>SVG images are fully supported in the browsers Chrome, Firefox, Safari and Microsoft Edge. Not in Internet Explorer. In this browser, SVG images may be clipped and not properly displayed.</p> <p></p> <p>The image column can have an associated action that defines a validation and a transformation to be done for images saved in the database based on the original size of the image. Note that vector images SVG never apply for these actions.</p> <p></p> <p>The image size values actions defined are:</p> <ul> <li>None . Any image can be saved and no transformation is done to the image</li> <li>Allowed - Exact size . Only images with the size defined in the fields Image width and Image height are allowed.</li> <li>Allowed - Minimum size . Only images with at least the size defined in the fields Image width and Image height are allowed.</li> <li>Allowed - Maximum size . Only images with a maximum of the size defined in the fields Image width and Image height are allowed.</li> <li>Recommended - Exact size . If the image does not have the size defined in the fields Image width and Image height a warning is displayed to the user.</li> <li>Recommended - Minimum size . If the image does not have at least the size defined in the fields Image width and Image height a warning is displayed to the user.</li> <li>Recommended - Maximum size . If the image size is larger than size defined in the fields Image width and Image height a warning is displayed to the user.</li> <li>Resize - Exact resize (without maintaining the aspect ratio) . The image saved is resized to the size defined in the fields Image width and Image height. The aspect ratio is not maintained and may change.</li> <li>Resize - Closest to the maximum size (maintaining aspect ratio) . The image saved is resized to the size defined in the fields Image width and Image height . But the aspect ratio is maintained adjusting the width or the height of the image to keep in the size defined.</li> <li>Resize - Closest to the maximum size only if larger image . Similar to the previous action but the resize it is performed only if the image size is larger than the size defined in the fields Image width and Image height.</li> </ul> <p>When there is a field in a tab associated with one of these references, the way it is represented will look like the following picture:</p> <p></p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#button","title":"Button","text":"<p>Buttons in Etendo must also be contained in a column though the value for this column is not directly modifiable by the user. Buttons are used to call processes.</p> <p>When a column is assigned with <code>Button</code> reference the following additional fields are displayed: <code>Process</code> and <code>Ref Search Value</code>.</p> <p></p> <p>In Process list, we will select the process that is called when the button is clicked, this field is mandatory when the reference is button.</p> <p>An optional Ref Search Value field is also available, here it is possible to select a reference list (see reference list below). If no value in this field is selected the text inside the button will be static (the process name), but if a reference list is selected the text in the box will be the name of the list having the same value as the current value in the list. For example if we define a list with the pairs value, name like: [{'N', 'Process'}, {'Y','Unprocess'}] and we select it, when the columns value is 'N', 'Process' will be displayed but 'Unprocess' when it is 'Y'.</p> <p>When displaying a tab with a button it looks like:</p> <p></p> <p>Note</p> <p>When clicking on it a popup with the process interface is opened. By default, before opening this popup, the modifications for the current record are autosaved, after the execution of the process, current record is refreshed. This is the reason not to show the buttons while not all mandatory fields are not filled. These defaults are skipped in case the column is unmarked as <code>Triggers Autosave</code>.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#docaction-buttons","title":"DocAction buttons","text":"<p>Action buttons are a special kind of buttons used to perform process actions on certain documents (such as invoices, orders, etc.). These buttons have as column name DocAction.</p> <p>When they are clicked a popup as follows is opened:</p> <p></p> <p>The available actions shown in this popup depend on the document status, and are calculated by <code>org.openbravo.erpCommon.ad_actionButton.ActionButtonUtility.docAction</code> method.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#post-buttons","title":"Post buttons","text":"<p>Another special button is the one issued in documents that support accounting to post/unpost. The column name must be <code>Posted</code>, and the process is left empty. These buttons call directly the accounting process.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#list","title":"List","text":"<p><code>List</code> reference is used to limit the values a column can take to those ones defined in a list. When a column is defined as list reference, it is necessary to select a sub reference among the existing lists in Application Dictionary, this is done selecting the correct value in the <code>Reference Search Key</code> field.</p> <p></p> <p>Physical columns for this reference must be <code>VARCHAR(60)</code>.</p> <p>The actual values the column will get are the ones defined as Search Key in the list, for more information see defining lists section.</p> <p>The UI for lists is a drop down list.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#when-to-use-lists","title":"When to use lists","text":"<p>List are useful to maintain list of fixed values that rarely need to include new ones and which maintenance can be done by a System Administrator role, not by a standard user.</p> <p>Let us explain through an example. There are 3 types of Modules: Modules, Templates and Packages. This definition is not going to change very often, it is possible that in future releases a new module type to be added but is nothing that is going to change daily, apart of that if it changes for sure no standard user would have to do the modification but System Administrator would have to. There are two possible solutions for this:</p> <ol> <li>Create a table for module types and add in module table a foreign key column to this table.</li> <li>Create a list of module types and add in module table a column of list reference using this new reference.</li> </ol> <p>The second approach is easier to implement and maintain, additionally it does not create a database table with just 3 fixed records. In fact, behind the scenes, all data for all lists in Etendo is stored in a single database table (<code>AD_Ref_List</code>).</p> <p>Furthermore lists are translatable, this means that the drop down lists can be displayed in the user's language, so following the 1st approach would have required to create a new additional table to hold translations.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#defining-lists","title":"Defining lists","text":"<p>List references, as the rest of references, are managed from <code>Application Dictionary</code> &gt; <code>Reference</code> &gt; <code>Reference</code> tab.</p> <p>To create a new one click on New, insert a name for it and select List as Parent reference. This step creates the header for the list.</p> <p>In this header, it is possible to select <code>Display value</code> field. In case this is selected, the list items will be represented by concatenating their value and their name, if not, only name will be displayed.</p> <p>The next step is to add values to the list. To do so, go to List Reference tab, and create the values you need. Here there are three important fields to take into account:</p> <ul> <li>Search Key this is the value (not visible in UI) that the column using this reference will take when it is selected.</li> <li>Name it is the name that will be displayed in the drop down list.</li> <li>Sequence Number it is the position of the element when the drop down list is rendered. This field is nullable, depending on the values it has in the elements of the list, the sorting is done as follows:</li> <li>If the value of this field is null for all the elements in the list, the list will be sorted alphabetically.</li> <li>If all the elements have this value set, they will be ordered taking it into account.</li> <li>If some of the elements have it and some have not, the ones having it will be shown at the beginning of the list sorted by this number, the rest of them will be shown at the end ordered alphabetically.</li> </ul> <p>Just an additional consideration, it is possible to add elements in a module different to its header one, in this case the Search Key for the values must start with the module's DBPrefix to avoid naming clashes.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#id","title":"ID","text":"<p>Etendo uses UUID as primary key for its tables. The standard name for a primary key column is TableName_ID , so for example for <code>HR_Salary</code> table its primary key column would be name <code>HR_Salary_ID</code>.To be able to store UUIDs the physical type for the column must be <code>VARCHAR2(32)</code>. In addition, that column must be set as primary key in database.</p> <p><code>ID</code> reference is used for primary key columns. Usually, it should not be displayed to the user because this key is senseless for them (use identifiers instead), but if it shown the UI for this reference is like String reference, a one-line textbox.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#tabledir","title":"TableDir","text":"<p><code>TableDir</code> reference stands for Table Direct. As explained in the previous section the standard name for a primary key column is TableName_ID, in the same way the standard name for a foreign key column is the name of the foreign primary key column. For example if we create a new table named <code>HR_MyTable</code> and we want add a foreign key to <code>HR_Salary</code> , the column should be named <code>HR_MyTable.HR_Salary_ID</code>. If this naming rule is followed the <code>Create columns from DB</code> process will set this new column as TableDir reference. When the UI for this column is created a drop down list is generated with all the elements in the foreign table that can be referred from the current record. If the column name is not the same of the foreign key table's primary key column's name TableDir reference will not work, it will be necessary to define a Table reference for that column.</p> <p>Physical columns for foreign keys must be <code>VARCHAR(32)</code> type to be able to store UUIDs. It is also required the physical table defines a foreign key to the other table.</p> <p>This is the UI for TableDir reference:</p> <p></p> <p>It is a dropdown list, note that the label is a link, clicking on it the user will navigate to the selected foreign element. Note also that although the actual value the column will take is the UUID of the selected element, UUIDs are not displayed, instead of that the shown values are the identifiers defined in the foreign table.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#table","title":"Table","text":"<p><code>Table</code> reference is similar to TableDir but does not have the naming limitation it also allows to define a <code>where clause</code> to limit the number of records that will be displayed as well as and order by clause to show it in certain order. When Table reference is selected for a column the <code>Reference Search Key</code> field becomes visible containing a list of all the available table dir subtypes, it is necessary to select one of them. These subtypes define the table the column makes reference to.</p> <p>As the column for this reference is also a foreign key it must be in database physically identical to the ones defined for TableDir references.</p> <p>Visually the UI for this reference is identical to the one for TableDir.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#when-to-use-table-reference","title":"When to Use Table Reference","text":"<p>Usually Table references are used when the column name does not match with the name for the column it is linked to. In this case is mandatory to use this reference (or Search reference if it is available for that table).</p> <p>Other cases is when the default order in TableDir reference is not appropriate.</p> <p>Info</p> <p>It is not required to define a Table reference to limit the records that are displayed in a TableDir since it is possible to do it using a Validation.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#defining-a-table-reference","title":"Defining a Table reference","text":"<p>As all the references Table references are defined in <code>Application Dictionary</code> &gt; <code>Reference</code> &gt; <code>Reference</code> tab.</p> <p>To create a new one:</p> <ol> <li> <p>Click on New, insert a name for it and select Table in Parent Reference field. This step creates the header for the table.</p> </li> <li> <p>The next step is define the table to link to. To do so, go to Table Reference tab, and create a new record.</p> </li> <li> <p>In Table field select the table the column is linked to in <code>Key column</code> field the value to be stored in the column (usually it its the primary key column), and in Displayed column the column that will be shown in the drop down list, note that here only one column can be selected and it is not possible to select the table's record identifier. <code>SQL where clause</code> and Order by are optional fields that can be used in case we want to restrict the records to be displayed or if we want to order them in some specific manner.</p> </li> </ol> <p>Note</p> <p>It is highly recommendable to look in the already defined Table references for one that fits our requirements before creating a new one.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#search","title":"Search","text":"<p><code>Search</code> reference, as Table and TableDir, is used to define column that are foreign keys to other tables.</p> <p>When a column is defined to use a Search reference, it is necessary to define which of the available search subtypes is going to call, this is done setting the Reference Search Key field.</p> <p>As the columns using search reference store foreign keys (this is UUIDs) they must be defined in database as VARCHAR(32) and a foreign key constraint added to the table.</p> <p>Visually the difference in UI with Table and TableDir is that, instead of displaying a drop down list with all the values in the referred table, it is shown the currently selected value using some filters.</p> <p></p> <p>When the button next to the text box is clicked a pop-up is opened, this pop-up allows to select one value from the available ones.</p> <p></p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#when-to-use-search-reference","title":"When to use Search reference","text":"<p>Search reference are specially useful when the foreign table has a big number of records because it facilitates a lot the task of selecting one record.</p> <p>It is only possible to use one of the existent selectors, the ones defined in core. In case none of this fits our requirements, it is possible to create new ones:</p> Search name Referred table Account <code>C_ValidCombination</code> Business Partner <code>C_BPartner</code> Debt/Payment <code>C_Debt_Payment</code> Invoice <code>C_Invoice</code> Invoice Line <code>C_InvoiceLine</code> Location <code>C_Location</code> Locator <code>M_Locator</code> Order <code>C_Order</code> Order Line <code>C_OrderLine</code> Product <code>M_Product</code> Product Complete <code>M_Product</code> Project <code>C_Project</code> Shipment/Receipt <code>M_InOut</code> Shipment/Receipt Line <code>M_InOutLine</code>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#password-not-decryptable","title":"Password (not decryptable)","text":"<p>Columns with this reference are stored in database as a hash of the value the user entered; although it is not possible to recover the original plain text value, it can be checked whether a plain text corresponds to a hashed value.</p> <p>SHA-512 with a random salt is used to hash passwords. Previously, SHA-1 was used.</p> <p>To verify a plain text matches a hash (this is backwards compatible and checks both algorithms), use: \u00a0</p> <p><pre><code>boolean matches = PasswordHash.matches(plainTextPassword, hashedPassword);\n</code></pre> To generate a new hash use:</p> <pre><code>String newPassword = PasswordHash.generateHash(plainText);\n</code></pre>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#password-decryptable","title":"Password (decryptable)","text":"<p>The value of the password is encrypted when being saved, however in a way that the clear text password (as entered) can be recovered. Example use-case is to store a password which needs to be passed later as clear text to some external service (i.e. a email server password).</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#references-in-modules","title":"References in modules","text":"<p>It is allowed for modules to define base references.</p> <p>Prior to this, release modules only could define subreferences for the base ones provided in core, this means that new List, Table and Selector references could be added to modules.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#validations","title":"Validations","text":"<p>Validations allow to filter the records that appear in generated drop down lists. Validations are applicable to the following data references List, Table, TableDir and Button.</p> <p>When a column has a validation, WAD generates a callout for it (<code>ComboReload</code>) to implement the validation.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#defining-a-validation","title":"Defining a validation","text":"<p>Validations are defined in <code>Application Dictionary</code> &gt; <code>Setup</code> &gt; <code>Validation Setup</code> &gt; <code>Validation</code> , they consist in a where sql clause that will be applied to the query that generates and retrieves the data for the drop down list.</p> <p>It is possible to do reference to columns within the foreign table in the code of the validation, to do it include the full table name. In case the reference is List type the table is <code>AD_Ref_List</code> and the column where values are stored in is Value.</p> <p>It is also possible to use session variables in the filter, session variables are surrounded by <code>@</code>, thus <code>@AD_Client_ID@</code> referrers to the client the user has log in the application with.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#record-identifier","title":"Record identifier","text":"<p>Etendo uses UUIDs to unequivocally identify each record internally within a table. These values are stored in a column in the table that is defined as the primary key in the database and a key column inside Application Dictionary. UUIDs are 32 character strings that are automatically generated by the system, thus these strings are of very little use to the end-user when it comes to identifying records. Consequently, these values are used only internally by the application and are not displayed in the UI. Instead, users always see a friendly representation of a record called record identifier.</p> <p>A record identifier is a simple concatenation of the values of one or several columns of a record within a table. Each table defined within the Application Dictionary MUST have at least one column set as a record identifier.</p> <p>When one of the columns that are part of the record identifier is a foreign key to another table, instead of concatenating the column's actual value (which is a UUID), the record identifier for corresponding foreign key table record is taken and concatenated.</p> <p>As record identifiers are used to identify a single record, they should include a set of columns that is known to be unique. This can be guaranteed at the database level adding a unique constraint to these columns.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#defining-a-record-identifier","title":"Defining a Record Identifier","text":"<p>Record Identifiers are defined in <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> &gt; <code>Table</code> &gt; <code>Column</code>. To set a column as part of the record identifier for its table mark the <code>Used as Record identifier</code> check.</p> <p>As many columns in the same table can be part of the record identifier, the way to define the order they will be displayed in it is set in the <code>Sequence number</code> field.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#callout","title":"Callout","text":"<p>A Callout is a piece of code that is triggered when a field is modified. The callout is associated to the column which associated field will trigger the action.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#what-callouts-can-do","title":"What Callouts can do","text":"<p>Callouts are implemented by Java classes, so they can do virtually anything. But it must be taken into account that they are triggered when the field for the column they are associated with is modified. This happens before saving it to database, so it is possible the record in database does not already exist. Taking this into account, they should query in database for the current record.</p> <p>They are typically used to:</p> <ul> <li>Load or change dynamically information in UI after a user change. For example, set a default price when a product is selected.</li> <li>Show messages after modifying a field.</li> <li>Execute a Javascript function.</li> <li>Move the cursor to a field.</li> </ul>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#callouts-vs-triggers","title":"Callouts vs Triggers","text":"<p>Both callouts and triggers are executed when there are changes in data. The main difference between callouts and database triggers is that callouts are executed in the front end whereas triggers are in the back end. This means that callouts should affect primary to data displayed in UI and triggers to data in database, additionally callouts are only executed when the user is modifying data manually through UI but they are not exectued in case the same data is modified by any other process.</p> <p>Important</p> <p>Due to all these reasons, data integrity should not be relied only on callouts. It should be also implemented in database, through triggers or constraints.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#defining-a-callout","title":"Defining a Callout","text":"<p>There is a guide related to callouts you can read to have an step by step example for a callout creation.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#application-dictionary","title":"Application Dictionary","text":"<p>Callouts are defined in <code>Application Dictionary</code> &gt; <code>Setup</code> &gt; <code>Callout</code> window and then associated with the column that will invoke them when it is modified.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#java-implementation","title":"Java Implementation","text":"<p>Callouts are implemented by a Java Servlet.</p> <p>Note</p> <p>The simplest way to implement a callout is using the <code>SimpleCallout</code> class, that keeps you out from the 'plumbing' of building the response.</p> <p>The things to consider are:</p> <ul> <li>The command callouts are invoked with is always DEFAULT.</li> <li>Callouts receive a parameter called <code>inpLastFieldChanged</code>, this parameter has the name of the field that triggered the callout. Using this parameter, it is possible to reuse the same callout for different columns, this makes sense in case the action for both columns is related.</li> <li>Callouts should use the <code>org/openbravo/erpCommon/ad_callouts/CallOut</code> xmlEngine template.</li> <li>This template must receive a parameter called array with the following Javascript syntax:</li> </ul> <p><pre><code> var calloutName='MyCalloutName';\n var respuesta = new Array(\n new Array(\"inpfieldName\", \"value\"),\n new Array('MESSAGE', \"Message to display\"),\n new Array(\"EXECUTE\", \"displayLogic();\"),\n new Array(\"CURSOR_FIELD\", \"inpfieldName\")\n );\n</code></pre> After executing a callout with the previous output, the result would be:</p> <ul> <li>The field called <code>inpfieldName</code> would take the value <code>value</code>.</li> <li>A message would be displayed.</li> <li>The <code>displayLogic()</code> Javascript function would be executed.</li> <li>The field <code>inpfieldName</code> would take the focus.</li> </ul> <p>Info</p> <p>The type of available messages: <code>MESSAGE</code>, <code>INFO</code>, <code>ERROR</code>, <code>SUCCESS</code>, <code>WARNING</code>. <code>MESSAGE</code> and <code>INFO</code> are equivalents.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#execute-on-new","title":"Execute on New","text":"<p>By default, all callouts associated with drop down lists are exectued whenever a new record is created. This is done to guarantee all the logic implemented in callouts are executed for the default values that are presented in new record.</p> <p>In case there is a big number of dropdown lists with callouts or ComboReloads, this can cause performance issues.</p> <p>In case it is known the validations and the callouts for a column will not do any change when creating a new record, the callout execution for that column can be disabled while new record creation. This can be done by unchecking the Validate on New field in Column tab.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/data-model/#dynamic-expressions","title":"Dynamic expressions","text":"<p>Default Value, Read only logic and Transient condition are values that allow a dynamic expression. Visit this document explaining how dynamic expressions are defined.</p> <p>This work is a derivative of Data Model by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Concepts","Data Model","Application Dictionary","Tables","Columns"]},{"location":"developer-guide/etendo-classic/concepts/datasets/","title":"Datasets","text":"","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#overview","title":"Overview","text":"<p>The Dataset concept allows you to define sets of data from different tables and export this data in one step. Datasets are especially useful for managing reference data for a module, for example tax rates or default data in new tables added by a module. The reference data is published, distributed and installed together with the program code implementing the module.</p> <p>The content of a Dataset is defined by its Dataset Tables and Dataset Columns. The first defines which tables are exported, the second one which columns from those tables are exported.</p> <p>Datasets can be defined at System, Organization, or Client/Organization levels. System-level datasets are applied when the module containing them is installed in the system. Their data is system-level.</p> <p>Organization-level datasets can be applied in <code>Initial Organization Setup</code> (when creating a new organization), or can also be applied to an existing organization using the <code>Enterprise Module Management</code> window. They contain Organization level information.</p> <p>Client/Organization-level datasets work like Organization-level datasets, but can also be applied on Initial Client Setup when creating a new client. They contain Organization/Client level information.</p>","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#main-concepts","title":"Main Concepts","text":"","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#dataset","title":"Dataset","text":"<p>A Dataset is a grouping of different tables (entities) which are exported together. Datasets are defined through the <code>Dataset</code> menu in the Application Dictionary. Below there is an example of a Dataset.</p> <p></p> <p>Some important things to note:</p> <ul> <li>A Dataset belongs to a module, so modules can add new datasets to an Etendo instance. </li> <li>Data Access Level: filter the tables which can be selected for this dataset, only tables with the set data access level can be included in the data set.</li> </ul> <p>If the <code>export allowed</code> column is flagged, then an <code>export</code> button is displayed. When clicking this button the data is exported to the modules directory of the module to which the Dataset belongs:</p> <pre><code>modules\n\u2514\u2500\u2500 org.openbravo.localization.spain.referencedata.taxes\n    \u2514\u2500\u2500 referencedata \n        \u2514\u2500\u2500 standard\n            \u251c\u2500\u2500 Impuestos_ES.xml\n            \u2514\u2500\u2500 Spanish_Tax_Alerts.xml\n</code></pre>","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#datasettable","title":"DatasetTable","text":"<p>The DatasetTable defines which data of one table is to be exported. It defines both the records (through a where clause) and the columns per record. </p> <p>Note</p> <p>A Dataset should have one or more Dataset Tables, a Dataset Table always belongs to exactly one Dataset.</p> <p></p> <p>Some important aspects:</p> <ul> <li>A Dataset Table has a module, so you can add a new Dataset Table to an existing Dataset (of another module). </li> <li>The HQL where clause is an HQL where Clause. The properties which can be used in the clause are the properties of the table entity of the DatasetTable. </li> <li><code>Include all columns</code>: if flagged, all columns are exported, except the ones excluded in the DataSet Column, if not flagged then the DatasetColumn definition is used. </li> <li><code>Exclude Audit Info</code>: only relevant if include all columns is flagged, in that case this field can be used to exclude audit info. In most situations, it makes sense to activate this flag , as audit info (information about which user created and updated every record, and in which date this happened) is most of the times irrelevant, when exporting business data to a dataset which is meant to be generic and used in several different systems. </li> <li><code>IsBusinessObject</code>: if flagged then also the 'child-records' of the table are exported, for example if the Dataset Table is defined for the <code>C_Order</code> table and this field is flagged then also the related <code>C_OrderLines</code> are exported. </li> </ul> <p>Info</p> <p>For more information read how Business Object structures are defined. </p>","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#datasettable-where-clause","title":"DatasetTable where clause","text":"<p>To select specific objects from the table to be included in the data set, it is possible to define a where clause in the DatasetTable. The HQL where clause is an HQL where Clause. The properties which can be used in the clause are the properties of the table entity of the DatasetTable. The entity and property names give an overview of all properties by their entity. There are two standard parameters which can be used in the HQL clause:</p> <ul> <li><code>ClientID</code>: denoting the current client of the user exporting the data </li> <li><code>moduleid</code>: the id of the module for which data is exported </li> </ul> <p>The syntax of using these parameters in the where-clause is the same as for named parameters in HQL in general.</p> <p>Here are some examples of where clauses:</p> <ul> <li><code>client.id = :ClientID</code>, export all objects from the current client </li> <li><code>client.id = '0'</code>, export only objects from the '0' client </li> <li><code>processed = true and chargeAmount &gt; 0</code>, export only objects which have been processed and for which the charge amount &gt; 0 </li> <li><code>client.id in ('0', '1000000')</code>, select all objects with a client '0' or '1000000' </li> <li><code>name like '%Product%'</code>, select objects with a name which contains the string Product </li> </ul> <p>The clause can contain inner-selects and other more advanced HQL features. However, order-by, group-by and having clauses are not supported, so the content of this field should just be the where-clause and nothing more.</p>","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#datasetcolumns","title":"DatasetColumns","text":"<p>The Dataset Columns defines the columns/properties which are exported for a certain business object. A Dataset Column always belongs to one Dataset Table, and a Dataset Table can have zero or more Dataset Columns. The Dataset Column concept can be used in two ways:</p> <ul> <li>Check the <code>Include all columns</code> in the Dataset Table and define exclusions in the Dataset Column </li> <li>Do not check the <code>Include All Columns</code> in the Dataset Table and define the exact Columns to export in the Dataset Column </li> </ul> <p></p> <p>The main fields:</p> <ul> <li>A Dataset Column has a module, so you can add a new Dataset Column to an existing Dataset Table (of another module). </li> <li>Excluded: if flagged then this column is defined to not be exported. </li> </ul>","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#usage-of-datasets","title":"Usage of Datasets","text":"<p>The main purpose of Datasets is to define reference data for modules. </p> <p>To export a dataset, it is very important to follow these steps:</p> <ul> <li>First click on the <code>Export Reference Data</code> button in the <code>Dataset</code> window. This will export the dataset contents to an xml file, and will also generate the checksum of this dataset. </li> <li>Then, execute <code>./gradlew export.database</code> to export the checksum information to the module source data. </li> </ul> <p>After this, you can publish your module, which now will include the contents of the dataset. </p> <p>Note</p> <p>The reference data is inserted when a module is applied (built and installed). Or can be imported separately.</p>","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#data-ownership","title":"Data ownership","text":"<p>Data defined by a dataset is owned by this dataset. This means when there is an update of this dataset, any change on this data will be overwritten again to match the definition in the new version of the dataset.</p> <p>It is possible to mark a dataset as <code>Default Values Data Set</code> . Having this flag makes the dataset not to take ownership of the data it inserts, but moving this ownership to the instance. So, new records provided by the dataset are inserted, even in newer versions of this dataset, but any changes done in the instance will be preserved. </p> <p>Note</p> <p>In case a record provided by one of these datasets is deleted from the instance, it will be recovered back in the next update, the correct way of getting rid of undesired records is by marking them as inactive.</p>","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/datasets/#importing-reference-data-on-organization-level","title":"Importing Reference Data on Organization level","text":"<p>The module reference data can be imported into an organization using the <code>Enterprise Module Management</code> function. It is available in the menu here: <code>General Setup &gt; Enterprise &gt; Enterprise module management &gt; Enterprise module management</code>.</p> <p></p> <p>In this list, only the relevant modules containing datasets will be shown. This means that if a dataset has not changed from the last time it was applied to the selected organization, it will not be shown.</p> <p>Select the organization and the module from which to import the reference data into the organization. Then press ok. After a while the result page is displayed:</p> <p></p> <p>Note</p> <p>If a dataset is defined as Organization/Client level, then it can also be imported when using the Initial Client Setup utility to create a new client.</p> <p>This work is a derivative of Datasets by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Concepts","Dataset","Dataset Table","Reference Data","Business Objects"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/","title":"Development Build Tasks","text":"","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#overview","title":"Overview","text":"<p>This document discusses the gradle tasks used during the build process of Etendo. It explains what the gradle tasks are used for and which properties can be used to control their behavior. </p> <p>Note</p> <p>Notice that Gradle is case sensitive.</p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#main-build-tasks","title":"Main Build Tasks","text":"<p>This section explains the main build tasks following the steps as illustrated in the image.</p> <p>In most of the cases, it is only necessary to use 3 tasks (<code>install</code> , <code>smartbuild</code> and <code>export.database</code>). There are a number of other tasks that can be used but they are not required for the standard process. </p> <p>Info</p> <p>For more information, see Detailed Build Tasks section.</p> <p>The main task for the standard process is <code>smartbuild</code> which performs all the required processes as explained below. This task accepts an optional property:</p> <ul> <li><code>local</code> for local or remote developments which by default is set to yes . </li> </ul> <p>The difference between <code>local</code> and <code>remote</code> development is illustrated in the diagram. Local development are changes by the developer him/herself. Remote developments are changes done by other developers. Changes by remote developments are pulled from the source code revision system.</p> <p></p> <p>Info</p> <p><code>remote</code> means that the user is bringing changes to the workspace from an external location, e.g. with a <code>git pull</code>.</p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#initial-installation","title":"Initial installation","text":"<p>After downloading the Etendo ERP source files. It is necessary to install and deploy it. Check our guide about Etendo Install</p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#database-export","title":"Database export","text":"<p>In most cases developments include modifications on the database. This modifications can be persisted in <code>xml</code> files using the DBSourceManager tool. DBSourceManager exports to <code>xml</code> files only the modules (including core) that are set as <code>In Development</code>. To export the database execute:</p> Terminal<pre><code>./gradlew export.database\n</code></pre> <p>After this step, the changed model <code>xml</code> files can be pushed/committed to the source code revision system, so that other developers can pick them up and continue working on top of it.</p> <p>When a module is exported using the <code>export.database</code> task, it is first validated to check for common errors. If the validation fails then the <code>export.database</code> task will also fail and export is not possible.</p> <p>The following checks are currently done:</p> <ul> <li>A table defined in the Application Dictionary should be present in the database and vice versa. </li> <li>Column definitions in the database and the Application Dictionary are compared, any mismatch is reported. The column datatype, default value and length are checked. </li> <li>Tables should have a primary key. </li> <li>Foreign key fields should be part of a foreign key constraint. </li> <li>Names of tables, columns and constraints are checked for their length (Oracle and PostgreSQL has a 30 character limit there). </li> </ul>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#update-database","title":"Update database","text":"<p>Database model changes are distributed by committing the database schema as <code>xml</code> to <code>SCM</code>. Other developers pull the changes from <code>SCM</code> and can apply them to update their own database. After updating the database the process is exactly the same as the local one, that is compile and deploy the elements that have been modified since last build.</p> Terminal<pre><code>./gradlew update.database\n./gradlew smartbuild\n</code></pre> <p>All the required actions (update database, compile last modifications and deploy them) can be done with only the <code>smartbuild</code> command:</p> Terminal<pre><code>./gradlew smartbuild -Dlocal=no -Dforce=yes\n</code></pre> <p>The only difference with the local development is in the <code>local</code> parameter which makes the process to update the database in case the <code>xml</code> files were changed.</p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#module-consistency-check","title":"Module Consistency Check","text":"<p>An instance is consistent in case the dependencies of all the modules it has installed are satisfied. Development instances can define inconsistencies (for example by creating a dependency on a module version which is not installed) whereas production instances where all the modules are installed through obx or Central Repository should not be inconsistent because it is guargradleeed by the installation process.</p> <p>Inconsistent instances can be in a situation where it is not possible to update any of the modules (including core) they have installed. This is due the fact that Central Repository only proposes updates to consistent sets of versions and it is possible the inconsistency cannot be resolved by any.</p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#detailed-build-tasks","title":"Detailed Build Tasks","text":"<p>This section contains a detailed listing of all available build tasks.</p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#libraries-build-tasks","title":"Libraries build tasks","text":"Task Description Notes <code>core.lib</code> Compiles and generates a <code>.jar</code> file from the <code>src-core</code> project. Which is needed by <code>wad.lib</code> and the rest of build tasks. Required by: wad.lib <code>wad.lib</code> Compiles and generates a <code>.jar</code> file from the <code>src-wad</code> project. Which is needed by the build tasks. This project contains the WAD, the automatic window generator. Requires: <code>core.lib</code>, database created Required by: compile.* <code>trl.lib</code> Compiles and generates a <code>.jar</code> file from the <code>src-trl</code> project. Which is needed by the translate task. This project allows to translate to different languages manual windows. Requires: core.lib","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#build-tasks","title":"Build tasks","text":"Task Description Notes <code>install</code> Installs the whole application: creates the database, compiles it and generates a war file to be deployed or copies the classes to Tomcat's directory (depending on the <code>deploy.mode</code> property set in Openbravo.properties). Calls: <code>create.database</code>, <code>core.lib</code>, <code>wad.lib</code>, <code>trl.lib</code>, <code>compile.complete.deploy</code>, <code>applyModule</code>. <code>smartbuild</code> Makes an incremental build of the application. Including:  <code>update.database</code>  compile  deploy  All these tasks are done only if needed. Requires: Database must be created and populated with data Properties:  <code>local</code>: (<code>yes/no</code> default as <code>yes</code>) when this property is set to no <code>update.database</code> task is executed, otherwise it is not executed.  <code>tr</code>: (<code>yes/no</code> default as <code>yes</code>) if set to no, translation process is not executed.  <code>force</code>: (<code>yes/no</code> default as <code>no</code>) used with <code>local=no</code>. If set to yes it will overwrite the changes in the database with the XML information. Note: All un-exported changes will be lost. <code>compile.complete</code> Compiles all modified classes (including the generated ones) but before removes all the generated and built files, so the whole application is built Requires: <code>wad.lib</code>, <code>trl.lib</code>, database created and populated. Calls: translate  Properties:  tab: specifies the window name(s) to be generated, to specify more than one window add them as a list of comma separated values. Note that even window is specified by this property, its 2.50 code will not be generated unless it is required or forced.  tr: if set to \"no\" it will not call the translation process.  module: a list of comma separated javapackages of modules to generate just the windows containing objects for those modules.  <code>generate.entities</code> Generates the Java files for <code>src-gen</code> directory, and compiles them. They are used by DAL to access to the database information. Requires: Database must be created and populated with data. <code>translate</code> Checks in the manual windows User Interface files the translateable elements that have not been yet registered and registers them, this is necessary to be able to translate those interfaces to different languages. Requires: <code>trl.lib</code> Called by: This task is called by the compile.* tasks in case the tr property is not set to \"no\". <code>antWar</code> Generates a war file from the existing built code. In fact it only zips the application in a single war file. Requires: compile.*: the application must be built before calling this task. <code>deploy.context</code> Deploy the existing war file in the tomcat context using the tomcat manager. Requires:  war file must be created  Tomcat manager must be running  These properties must be properly set in the <code>Openbravo.properties</code> file:  <code>tomcat.manager. url</code> <code>tomcat.manager.username</code> <code>tomcat.manager.password</code>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#database-tasks","title":"Database tasks","text":"Task Description Notes Sub Tasks <code>create.database</code> Creates the database from the <code>xml</code> files, note that the database is first removed. If the <code>apply.on.create</code> property is set, masterdata and sampledata will be inserted in the database. If not, only sourcedata will be inserted. Properties: <code>apply.on.create</code>: If is set to true and there are modules they will be applied, otherwise they will be set as In process status. <code>create.database.script</code>: The same as <code>create.database.structure</code> but does not affect the database it only generates the <code>sql script</code> file with all the statements that would be executed by the other tasks. <code>update.database</code> Synchronizes database with the current database xml files. By default it checks that no changes in application dictionary in database are done, if so the process stops. Properties: <code>force</code>: (<code>yes/no</code> default as <code>no</code>) Do not check for database modification and update directly. This can cause lose of database data. <code>update.database.script</code>: It is the same as <code>update.database.structure</code> but does not modify the database. It only generates a <code>sql</code> script file with the statements that would be executed by the other tasks. <code>export.database</code> Synchronizes xml files with the database current contents. By default they are only exported in case there are modifications in the database. In addition performs database validations for the modules which are exported. Properties: <code>force</code>: (<code>yes/no</code>default as <code>no</code>) Forces the export skipping the check of which files had been modified since last <code>update.database</code>.  <code>validate.model</code>: (<code>yes/no</code> default as <code>yes</code>) Checks the model that is being exported fulfills a series of rules related to modularity, <code>oracle-postgreSQL</code> compatibility, etc. In case any of these rules is not complied, export will not be done and an error message will be raisen. <p>Info</p> <p><code>update.database</code> and <code>export.database</code> tasks support multi-thread parallel execution for some of their actions such as index creation or function standardization. By default, the number of threads used is calculatedas the half of the available number of cores in the machine where the task isexecuted. This value can be set by adding the <code>-Dmax.threads=numOfThreads</code> parameter. </p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#test-tasks","title":"Test Tasks","text":"Task Description <code>test</code> By default, all Etendo tests are run. You can use the <code>--tests \"&lt;package&gt;\"</code> to specify which tests you want to run. <p>Info</p> <p>For more information about execution test in Gradle visit Test Filtering in Gradle</p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/development-build-tasks/#other-tasks","title":"Other Tasks","text":"Task Description <code>migrate.attachments</code> Migrates the attachments to the new attachment model. <p>This work is a derivative of Development Build Tasks by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Concepts","Gradle Task","Build Task","Install","Export Database","Update Database"]},{"location":"developer-guide/etendo-classic/concepts/element-and-synchronize-terminology/","title":"Element and Synchronize Terminology","text":"","tags":["Concepts","Application Dictionary","Element","Field Labels","Translation","Synchronize Terminology"]},{"location":"developer-guide/etendo-classic/concepts/element-and-synchronize-terminology/#element","title":"Element","text":"<p>Elements  define the text in the label to be displayed for each field in the application as well as its related help. Each column in the Application Dictionary is linked to an element, note that more than one column can be linked to a single element, this is the way to reuse the same text for different columns (and finally fields) in the application. </p> <p>For example, <code>C_BPartner_ID</code> is the name for a number of columns in the application, all of them are a reference to a business partner thus, the text to be displayed as well as the help for all of them is the same; instead of maintaining that information redundantly in each column all these columns use the same element.</p>","tags":["Concepts","Application Dictionary","Element","Field Labels","Translation","Synchronize Terminology"]},{"location":"developer-guide/etendo-classic/concepts/element-and-synchronize-terminology/#element-maintenance","title":"Element maintenance","text":"<p>Elements can be edited in <code>Application Dictionary</code> &gt; <code>Setup</code> &gt;<code>Element</code>  window (as System Administrator); but, usually, elements are not directly created using this window but by the Synchronize terminology . Once the element is created, this window is used to edit its contents.</p>","tags":["Concepts","Application Dictionary","Element","Field Labels","Translation","Synchronize Terminology"]},{"location":"developer-guide/etendo-classic/concepts/element-and-synchronize-terminology/#synchronize-terminology","title":"Synchronize Terminology","text":"<p>It is the process that creates the elements for the columns that do not already have an associated one and copies the information in the elements to the columns and fields which are linked to them.</p> <p>To run it, go to  <code>Application Dictionary</code> &gt; <code>Synchronize Terminology</code> as System Administrator . </p> <p>Basically, this process looks for all the columns that have no linked element. In case there is an element with the same column name that the orphan column's one, this element is linked to that column, other case a new element is created with the same column name the column has. </p> <p>All that is done taking into account module, thus an element is only reused if it is defined in the same module as the column's one, or in another one dependent from the column's module. It also copies the text in the elements to the fields that represent the columns for those elements.</p> <p>Info</p> <p>When creating/editing fields is worthless to write a good text for name, description and help fields since they will be overwritten with the ones in the element. When this process is run, just leave them empty (or with some letters for mandatory ones). On the other hand, when creating a new column, if a new element from this column is created, the element will have the contents of those fields in the column. </p> <p>Note</p> <p>Note that once the element is created the changes in the column fields will also be overwritten in this process.  </p>","tags":["Concepts","Application Dictionary","Element","Field Labels","Translation","Synchronize Terminology"]},{"location":"developer-guide/etendo-classic/concepts/element-and-synchronize-terminology/#in-detail","title":"In detail","text":"<p>Here are all the steps the Synchronize Terminology process executes.</p> <ol> <li>For all the columns and process parameters in the dictionary without element, create an element in case there is no element with the same column name in the same module or in a dependent one, copying to the new element name, help and description from the column/parameter. </li> <li>Delete all the elements that are not used anymore. </li> <li>For the rest of columns and process parameters without elements, associate the existent element in the same module or in a dependent one having the same column name. </li> <li>Update columns and process parameters with the name, help and description values in their associated elements. </li> <li>Update centrally maintained fields with the name, help and description for the elements associated with their associated columns. </li> <li>Update workflow nodes with the name and description in their linked windows. </li> <li>Update menu entries with the name and description in their linked windows, processes, forms or workflows. </li> </ol>","tags":["Concepts","Application Dictionary","Element","Field Labels","Translation","Synchronize Terminology"]},{"location":"developer-guide/etendo-classic/concepts/element-and-synchronize-terminology/#central-maintenance-for-fields","title":"Central Maintenance for fields","text":"<p>In most cases, the previously defined process fits all the requirements for field labels. But in some occasions, it is wanted to have a field with a different set of label, help and description than the rest of fields associated to the same column. </p> <p>Info</p> <p>For these cases, it is possible to set no to the Central Maintenance check in <code>Application Dictionary</code> &gt; <code>Windows, Tabs and Fields</code> &gt;<code>Window &gt;&gt; Tab &gt;&gt; Field</code>, doing so, name, help and description in the field will not be overwritten with the element's ones.</p> <p>Let's see how it is used with an example:</p> <p>A very common column name is <code>AD_Language</code> , these columns are a reference to languages stored in <code>AD_Language</code> table. The name for the <code>AD_Language</code> element is Language and its help is The Language identifies the language to use for display which is very general. </p> <p>Modules have a language (which might be different to English) which they have the UI defined in. The label and help for <code>AD_Language</code> field in <code>Application Dictionary</code> &gt; <code>Module</code> are Module Language and this language defines the language used as base for the user interface elements in the module. This is done by setting the field for <code>AD_Language</code> column in Module tab as not centrally maintained and writing directly in the field the name and help.</p>","tags":["Concepts","Application Dictionary","Element","Field Labels","Translation","Synchronize Terminology"]},{"location":"developer-guide/etendo-classic/concepts/element-and-synchronize-terminology/#translations","title":"Translations","text":"<p>As elements are used to define text to be displayed in UI, they can be translated to different languages. </p> <p>The text in the element must be written in the language its module defines, and then it can be translated to other ones.</p> <p>Note</p> <p>The standard way to translate is by creating a new module with no additional functionality but just translations for the module.</p>","tags":["Concepts","Application Dictionary","Element","Field Labels","Translation","Synchronize Terminology"]},{"location":"developer-guide/etendo-classic/concepts/element-and-synchronize-terminology/#purchase-entries","title":"Purchase entries","text":"<p>If you observe the fields in the <code>Application Dictionary</code> &gt; <code>Setup</code> &gt;<code>Element</code>  you will notice there are standard fields (name, help...) and similar ones but for purchases.</p> <p>In Etendo, there are some tables that are used for sales and purchases transactions, for example <code>C_Invoice</code> table contains both sales and purchases invoices. This means that <code>Purchase Invoice</code> &gt; <code>Header</code>  and <code>Sales Invoice</code> &gt; <code>Header</code> tabs use the same table. But, it is very usual to label fields for the same column in a different way depending on whether it is a sales or purchase window. </p> <p>Instead of doing it, setting all the fields in the purchase windows as <code>not centrally maintained</code>. This is achieved by populating in the correspondent elements, the standard names and the purchase ones. Then, the windows are distinguished between sales and purchases using the Sales Transaction check in the <code>Application Dictionary</code>  &gt; <code>Windows, Tabs, and Fields</code> &gt;  <code>Window</code> &gt;  tab.</p> <p>This work is a derivative of Element and Synchronize Terminology by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Concepts","Application Dictionary","Element","Field Labels","Translation","Synchronize Terminology"]},{"location":"developer-guide/etendo-classic/concepts/etendo-jars/","title":"Etendo JARS","text":"","tags":["Etendo JARs","Java Libraries","Gradle Configuration","Module Publishing"]},{"location":"developer-guide/etendo-classic/concepts/etendo-jars/#overview","title":"Overview","text":"<p>The new version of Etendo comes with a new plugin which is focused on JARs.</p> <p>A JAR (Java ARchive) is a packaged file format containing compiled classes, metadata information and resources for a Java application in a single file. </p> <p>A JAR file provides multiple benefits:</p> <ul> <li>Security</li> <li>Portability</li> <li>Compression</li> <li>Packaging</li> <li>Distribution</li> </ul> <p>One common case of JAR uses are libraries.</p> <p>With Gradle you can make use of libraries to incorporate new functionality to your application.</p> <p>Using the 'implementation' configuration provided by gradle you can define multiple dependencies:</p> <p><code>implementation 'groupId:artifactId:version'</code></p> <p>For example, to make use of the Javax email library you need to define the next block of code in the gradle build file. <pre><code>dependencies {\n    // https://mvnrepository.com/artifact/javax.mail/mail\n    implementation group: 'javax.mail', name: 'mail', version: '1.4.7'\n}\n</code></pre></p> <p>The Etendo plugin tries to use this approach, managing all libraries and dependencies that you need to run your Etendo environment.</p>","tags":["Etendo JARs","Java Libraries","Gradle Configuration","Module Publishing"]},{"location":"developer-guide/etendo-classic/concepts/etendo-jars/#etendo-jar-modules","title":"Etendo JAR Modules","text":"<p>Modules are an important aspect of Etendo, they let you create and introduce new functionality to your application.</p> <p>To acquire all the benefits of a JAR file, the new plugin allows the user to create a JAR version of a module with all the configuration needed to be published and distributed.</p>","tags":["Etendo JARs","Java Libraries","Gradle Configuration","Module Publishing"]},{"location":"developer-guide/etendo-classic/concepts/etendo-jars/#permissions","title":"Permissions","text":"<p>To obtain permissions to  publish a new version of a module you need to run:</p> <p><code>./gradlew registerModule -Ppkg=&lt;package name&gt; -Prepo=&lt;repository rame&gt;</code></p> <p>This task gives you privileges to publish in the specified repository. It also executes internally the createModuleBuild task to generate the build.gradle file.</p> <p>Warning</p> <p>If you already have permissions to publish and the build.gradle file already exists you do not have to run this task.</p> <p>The build.gradle is a file that holds all the configuration and information used when the module is published.</p> <p>Modules containing a build.gradle file are now recognized as Gradle subprojects, creating a multi-project build.</p> <p>Info</p> <p>If you only want to generate the build.gradle file you can run <code>./gradlew createModuleBuild -Ppkg=&lt;package name&gt; -Prepo=&lt;repository rame&gt;</code> This command will overwrite the build.gradle file if is already present.</p>","tags":["Etendo JARs","Java Libraries","Gradle Configuration","Module Publishing"]},{"location":"developer-guide/etendo-classic/concepts/etendo-jars/#publishing","title":"Publishing","text":"<p>To publish a new version of a module you need to run</p> <p><code>./gradlew publishVersion -Ppkg=&lt;package name&gt; -Prepo=&lt;repository rame&gt;</code></p> <p>This task creates the JAR and ZIP version of the module, and tries to publish it in the specified repository.</p> <p>Info</p> <p>The module needs to be compiled before published. You have to be working in a compiled environment with all the autogenerated entities created.</p> <p>Info</p> <p>For more information refer to the How to Publish Modules to a GitHub Repository guide</p> <p></p>","tags":["Etendo JARs","Java Libraries","Gradle Configuration","Module Publishing"]},{"location":"developer-guide/etendo-classic/concepts/etendo-jars/#jar-file-structure","title":"JAR File Structure","text":"<p>Etendo JARs modules contains a special structure. All content of the src dir will be contained in the root of the JAR, with the compiled java classes.  Others directories like src-db, src-util etc, will be stored in the 'META-INF/etendo' location.</p>","tags":["Etendo JARs","Java Libraries","Gradle Configuration","Module Publishing"]},{"location":"developer-guide/etendo-classic/concepts/etendo-jars/#using-an-etendo-jar-module","title":"Using an Etendo JAR Module","text":"<p>To use a published version of a module in your Etendo enviroment, you need to define the dependency in the 'build.gradle' file of the root project.</p> <p>Just like a library, using the implementation configuration:</p> <p><code>implementation 'moduleGroupId:moduleArtifactId:moduleVersion'</code></p> <p>The Etendo plugin will try automatically to resolve the artifact. If the dependency is a Etendo module, it will be located in the 'build/etendo/modules' directory.</p> <p>The 'build/etendo/modules' directory is a new special location. Etendo development tasks now will use this place as a new modules location to search.</p>","tags":["Etendo JARs","Java Libraries","Gradle Configuration","Module Publishing"]},{"location":"developer-guide/etendo-classic/concepts/etendo-jars/#etendo-core-jar","title":"Etendo Core JAR","text":"<p>With the new version of Etendo, you can still work with the code in sources or the new JAR format.</p> <p>The new Etendo core JAR contains a structure similar to JAR modules.</p> <p>To make use of the Etendo core JAR, same as a library, you need to define the dependency in the build.gradle of the root project</p> <pre><code>dependencies {\n  implementation group: 'com.etendoerp.platform', name: 'etendo-core', version: '22.1.0'\n}\n</code></pre> <p>Once the artifact is resolved, the Etendo plugin will identify that the dependency is the Etendo core, and will be located in the 'build/etendo' directory.</p> <p>A config directory will be created in the root project. This directory contains the configurations templates used by Etendo to run the application.</p> <p>You need to set your own configurations using a gradle.properties file and run:</p> <p><code>./gradlew setup</code></p> <p>Once the configurations files are created, you can install the application.</p> <p><code>./gradlew install</code></p> <p>All the Etendo development tasks used with the core in sources should still be working with JARs.</p> <p>Info</p> <p>Etendo Core, (Sources and Jar), allows the user to work with  modules in both formats.</p>","tags":["Etendo JARs","Java Libraries","Gradle Configuration","Module Publishing"]},{"location":"developer-guide/etendo-classic/concepts/format-xml/","title":"Format XML","text":"","tags":["Concepts","Configuration","Numeric Formatting","XML Configuration","Format Mask"]},{"location":"developer-guide/etendo-classic/concepts/format-xml/#overview","title":"Overview","text":"<p><code>Format.xml</code> is a configuration file for Etendo installation that allows configuring the format output for numeric values. It is used by the different numeric references in Application Dictionary, but also can be used in manual code. By default, Etendo ships a <code>Format.xml.template</code> that can be copied as it is without any modification.</p> <p>Info</p> <p>If you are building Etendo from sources, the setup-properties binary makes a copy of it for you.</p>","tags":["Concepts","Configuration","Numeric Formatting","XML Configuration","Format Mask"]},{"location":"developer-guide/etendo-classic/concepts/format-xml/#formatxml-example","title":"Format.xml example","text":"<pre><code>    &lt;?xml version=\"1.0\" encoding=\"UTF-8\"\u00a0?&gt;\n    &lt;!-- license --&gt;\n    &lt;Formats&gt;\n    &lt;!-- other formats --&gt;\n       &lt;Number name=\"euroEdition\"\n           decimal=\".\" grouping=\",\" formatOutput=\"#0.00\" formatInternal=\"#0.00\" /&gt;\n    &lt;!-- other formats --&gt;\n    &lt;/Formats&gt;\n</code></pre>","tags":["Concepts","Configuration","Numeric Formatting","XML Configuration","Format Mask"]},{"location":"developer-guide/etendo-classic/concepts/format-xml/#attributes","title":"Attributes","text":"<ul> <li>name: Name of the format, used to identify it.</li> <li>decimal: Symbol (character) to be used as decimal separator.</li> <li>grouping: Symbol (character) to be used as grouping separator (used in thousands).</li> <li>formatOutput: Format mask used to mask and print numeric inputs. It must be <code>DecimalFormat</code> output format type: For more information, see DecimalFormat class.</li> <li>formatInternal: Used internally by <code>XmlEngine</code>.</li> </ul>","tags":["Concepts","Configuration","Numeric Formatting","XML Configuration","Format Mask"]},{"location":"developer-guide/etendo-classic/concepts/format-xml/#application-dictionary-format-name-mapping","title":"Application dictionary - format name mapping","text":"AD Reference Output format Decimal, Amount <code>euroEdition</code> Quantity <code>qtyEdition</code> Price <code>priceEdition</code> Integer <code>integerEdition</code> Number <code>generalQtyEdition</code> Others numeric <code>generalQtyEdition</code>","tags":["Concepts","Configuration","Numeric Formatting","XML Configuration","Format Mask"]},{"location":"developer-guide/etendo-classic/concepts/format-xml/#important-notes","title":"Important Notes","text":"<p>Ultimately, copy <code>$EtendoERP/config/Format.xml.template</code> as <code>Format.xml</code> and <code>./gradlew compile.complete -Dtab=xx -Dtr=no</code> because this way the changes will be permament and will not be lost upon the next rebuild.</p>","tags":["Concepts","Configuration","Numeric Formatting","XML Configuration","Format Mask"]},{"location":"developer-guide/etendo-classic/concepts/format-xml/#export-to-csv-format","title":"Export to CSV format","text":"<p>The export to CSV functionality uses the <code>Format.xml</code> information to format the data (specifically, it uses the decimal separator defined for the system for numeric values).</p> <p>This can be overwritten in case it is needed, by using the following preferences:</p> <ul> <li>CSV Decimal Separator: If this preference is defined, this will be used as the decimal separator for numbers.</li> <li>CSV Field Separator: If this preference is defined, this will be used as the field separator. Otherwise, a single comma <code>,</code> will be used.</li> <li>CSV Text Encoding: If this preference is set, this will be used as the encoding type of the generated file. The default encoding used is the Windows iso-8859-1, which will work correctly in Windows environments which use Microsoft Excel. Other popular encodings such as UTF-8 can be used in Linux or Mac environments which use other spreadsheets.</li> </ul> <p>This work is a derivative of Format xml by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Concepts","Configuration","Numeric Formatting","XML Configuration","Format Mask"]},{"location":"developer-guide/etendo-classic/concepts/inventory-status/","title":"Inventory Status","text":"","tags":["Concepts","Inventory Management","Inventory Status","Stock Control","Warehouse Operations"]},{"location":"developer-guide/etendo-classic/concepts/inventory-status/#overview","title":"Overview","text":"<p>This section explains the Inventory Status concept that is part of Etendo.</p>","tags":["Concepts","Inventory Management","Inventory Status","Stock Control","Warehouse Operations"]},{"location":"developer-guide/etendo-classic/concepts/inventory-status/#configuration","title":"Configuration","text":"<p>The Inventory Status will be available and configured as part of Etendo.</p> <p>By default, all the Bins will be in an undefined Inventory Status. There are two possibilities:</p> <ul> <li>Undefined. Available and Nettable, but not possible to go to Over Issue.</li> <li>Undefined OverIssue. Available and Nettable and possible to go to Over Issue.</li> </ul> <p>The initial status of the Bins will depend on the previous configuration of the Client. For those clients which were configured to Allow Negative Stock, the Undefined OverIssue Inventory Status will be set. For the rest, it will be the Undefined Inventory Status. </p> <p>Info</p> <p>For more information, visit the Allow Negative Stock user guide.</p>","tags":["Concepts","Inventory Management","Inventory Status","Stock Control","Warehouse Operations"]},{"location":"developer-guide/etendo-classic/concepts/inventory-status/#functionality","title":"Functionality","text":"<p>The Inventory Status concept is part of the inventory management of Etendo and includes the dimensions for Available, Nettable, and OverIssue to the storage bin and all stock in this bin has the same Inventory Status. The semantics of the Inventory Status refers to the condition of a specific inventory and can be configured. See examples at the end of this section.</p> <p>The master data for inventory status is maintained on system-level and the most typical values come predefined with the Etendo dataset. It is possible to add new and/or translate existing inventory status.</p> <p>Info</p> <p>To have access to this window, it is necessary to log in as system administrator.</p> <p></p> <p>In the image above, the various Inventory Status values that are supplied with the installation of the software are shown.</p> <p>The inventory status allows or disallows certain business processes.</p> <ul> <li>Ability to create/modify/delete Inventory Status with the following attributes:<ul> <li>Available: Inventory that is available for reservations and picking.</li> <li>Nettable: Inventory that is available for planning of future supply (MRP).</li> <li>OverIssue: Inventory that is allowed to go negative during the Issue of stock (not during the picking).<ul> <li>Note: It is not possible to go to negative if there are reservations against a particular stock. The reservation is always respected, regardless of the inventory status.</li> </ul> </li> </ul> </li> <li>Add an Inventory Status value to each location or bin record.</li> <li>Add the possibility to manually update the Inventory Status of a Storage Detail by moving it to a virtual, AdHoc created, bin.</li> <li>A new process that identifies affected reservations when a change of the inventory status reduces/increases the quantity available. (Once identified, the relevant users could receive an alert about the consequence of the change in availability).</li> </ul>","tags":["Concepts","Inventory Management","Inventory Status","Stock Control","Warehouse Operations"]},{"location":"developer-guide/etendo-classic/concepts/inventory-status/#inventory-status-change","title":"Inventory Status Change","text":"<p>In the Warehouse and Storage Bins window, It is possible to check the Inventory Status of a Storage Bin and also to modify it.</p> <p>By selecting a Storage Bin in this window, it is possible to check its current Inventory Status.</p> <p></p> <p>Also, by selecting a Storage Bin, a button named Change Status appears. By clicking it, it is possible to select a different Inventory Status for the selected Storage Bin.</p> <p>There are some restrictions:</p> <ul> <li>If there are existing Reservations against the Stock of the Storage Bin, this Storage Bin can not be changed to an Inventory Status that does not have the Available flag checked</li> <li>If there is negative stock in the Storage Bin, it is not possible to change the Inventory Status to one that does not have the Over Issue flag checked</li> </ul> <p></p>","tags":["Concepts","Inventory Management","Inventory Status","Stock Control","Warehouse Operations"]},{"location":"developer-guide/etendo-classic/concepts/inventory-status/#examples","title":"Examples","text":"<p>Examples of inventory status values:</p> <ul> <li>Available (YYN -&gt; Available, Nettable, Not OverIssue, Owned/Not-Owned) can be set for all inventory that is free to be picked, for sales, production or any other purpose.</li> <li>In Transit (NYN) is not free to be sold or shipped but is expected within a limited time and for that, we will take it into account for planning.</li> <li>Quarantine or Blocked (NNN) is not available nor nettable since we expect a larger duration of this status.</li> <li>Inspect (NYN) is also not available but is expected to be freed in a limited time and for that reason visible for planning/MRP.</li> <li>BackFlush (YYY) will allow going negative due to unexpected waste in manufacturing environments.</li> <li>Public (YYY) will allow going negative due to unexpected stock in public picking areas. </li> </ul> <p>Info</p> <p>The inventory status does not have an effect on the inventory value.</p>","tags":["Concepts","Inventory Management","Inventory Status","Stock Control","Warehouse Operations"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/","title":"Naming Guidelines for Modules","text":"","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#introduction","title":"Introduction","text":"<p>It is important to select an appropriate name for your module in order to make it easier for users to recognize it both in the Forge and in the Enterprise Module Management window.</p> <p>In the future, Etendo may also use these naming conventions to automatically categorize modules based on tags, therefore it is important that these naming conventions are followed.</p> <p>Here is a set of naming guidelines that we ask module authors to follow:</p>","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#branding-rules","title":"Branding rules","text":"<ul> <li>The module name should match the project name in the Forge (optional)</li> <li>Module names should not be longer than 5 or 6 words and less than 60 character long (optional)</li> <li>Module names cannot contain the word \"Etendo\"<ul> <li>JSON REST Web Services: </li> <li>Etendo JSON REST Web Services: </li> </ul> </li> <li>Exception to the previous rule: modules that Etendo decides to market as products rather than modules:<ul> <li>Etendo QuickStart Template: </li> </ul> </li> <li>You do not need to specify the Etendo version in the module name:<ul> <li>Translation: Arabic Saudi Arabia (ar_SA): </li> <li>Translation: Arabic Saudi Arabia (ar_SA) for Etendo 2.50: </li> </ul> </li> <li>Module names should not contain the word \"Module\"<ul> <li>Copy Role: </li> <li>Copy Role Module: </li> </ul> </li> </ul>","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#language-and-grammar-conventions","title":"Language and grammar conventions","text":"<ul> <li>All module names must be in English. The module description and help can be in any other language.</li> <li>Non English proper nouns are accepted as part of a module name specified in English<ul> <li>Tax Report: Modelo 349 (Spain): </li> <li>Tax Report: Form 349 (Spain):  (rationale: Modelo 349 is a proper noun and should not be  translated)</li> <li>Informe Fiscal: Modelo 349 (Spain): </li> </ul> </li> <li>The module help must differ from the module description</li> <li>Grammatically, module names should be treated as proper nouns and you should capitalize the first letter of every word in the module name (with the exception of short words and acronyms)<ul> <li>Initial Data Load: </li> <li>Initial data load: </li> <li>Direct Debit Form of Payment: </li> <li>Direct Debit Form Of Payment: </li> <li>Three Digits ISO Country Codes: </li> <li>Three Digits Iso Country Codes: </li> </ul> </li> <li>You should avoid using numeric characters to express quantities (they are OK in codes and dates)<ul> <li>Three Digit ISO Country Codes: </li> <li>3 Digit ISO Country Codes: </li> <li>Chart of Accounts - PGC 2007 General: Spain: </li> <li>Tax Report: Modelo 349 - Spain</li> </ul> </li> <li>Module names should not end with a full stop:<ul> <li>Initial Data Load: </li> <li>Initial Data Load.: </li> </ul> </li> <li>Module description should end with a full stop<ul> <li>Generador de declaraciones de impuestos. Traducci\u00f3n al espa\u00f1ol (espa\u00f1ol Espa\u00f1a) del m\u00f3dulo Tax Report Launcher.: </li> <li>Generador de declaraciones de impuestos. Traducci\u00f3n al espa\u00f1ol (espa\u00f1ol Espa\u00f1a) del m\u00f3dulo Tax Report Launcher: </li> </ul> </li> </ul>","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#specific-types-of-modules","title":"Specific Types of Modules","text":"<ul> <li>Core translations (translation of Etendo Core) should follow the convention:<ul> <li>\"Translation: $LANG $COUNTRY ($CODE)\"</li> <li>Translation: Arabic Saudi Arabia (ar_SA) </li> </ul> </li> <li>Module translations (translations of modules other than Etendo Core) should follow the convention:<ul> <li>\"$MODULE NAME Translation: $LANG $COUNTRY ($CODE)\"</li> <li>Tax Report Launcher Translation: Spanish Spain (es_ES) </li> </ul> </li> <li>The description for module translations should include an appropriate translation of the module name in the target language as well as both the name of the language and the name of the country in the target language:<ul> <li> <ul> <li>Name: Tax Report Launcher Translation: Spanish Spain (es_ES) + Description: Generador de declaraciones de impuestos. Traducci\u00f3n al espa\u00f1ol (espa\u00f1ol Espa\u00f1a) del m\u00f3dulo Tax Report Launcher. </li> </ul> </li> </ul> </li> <li>Chart of accounts modules should follow the convention:<ul> <li>\"Chart of Accounts: $COUNTRY\"</li> <li>Chart of Accounts: France </li> </ul> </li> <li>For countries with multiple charts of accounts, use the conventions<ul> <li>\"Chart of Accounts: $TYPE - $COUNTRY\"</li> <li>Chart of Accounts: PGC 2007 General - Spain </li> <li>Chart of Accounts: PGC 2007 PYMEs - Spain </li> </ul> </li> <li>Tax configuration modules should follow the convention:<ul> <li>\"Tax Configuration: $COUNTRY\"</li> <li>Tax Configuration: France </li> </ul> </li> <li>Tax report modules should follow the convention:<ul> <li>\"Tax Report: $FORM_NAME - $COUNTRY\"</li> <li>Tax Report: Modelo 347 - Spain </li> </ul> </li> <li>Region modules should follow the convention:<ul> <li>\"Regions: $COUNTRY\"</li> <li>\"Regions: Brazil\" </li> </ul> <p>Note</p> <p>Whenever the regions of a country are called something other than regions, you can use the  term in the module description. Example: + Name: Regions: United States of America + Description: US states.</p> </li> <li>Report modules (other than tax reports) should follow the convention:<ul> <li>\"Report: $REPORT_NAME\"</li> <li>Report: Shipments Awaiting Invoice </li> </ul> </li> <li>Skin modules should follow the convention:<ul> <li>\"Skin: $SKIN_NAME\"</li> <li>Skin: Blue Sea </li> </ul> </li> <li>Tutorial modules (provided as examples to illustrate how to develop modules) should follow the convention:<ul> <li>\"Tutorial: $TUTORIAL NAME\"</li> <li>Tutorial: Solitaire </li> </ul> </li> </ul>","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#bundles","title":"Bundles","text":"<ul> <li>Do not use \"module\" in bundles, everything is a module (including core) so this would be redundant.</li> <li>In general modules should not use subpackages of other modules since it might create a conflict. In particular do not use subpackages for modules included in a pack (eg. several modules in the spanish localization pack use as a package that is a subpackage of the spanish localization pack package). That inclusion is declared in the pack itself and using subpackaging would create a kind of redundancy (the module could be taken out from the pack later) or modules originally not designed for the pack could be included later.</li> <li>The only case where a subpackage makes sense are translations since that relationship can not be changed. For translations, do not use the word \"translation\" but directly the language code: translatedmodulepackage.languageCode (eg. org.openbravo.document.massinvoicing.es_ES).</li> <li>For translations of core, it does not work (org.openbravo.es_ES) because the core package is not clear enough. In that case, use org.openbravo.coretranslation.es_ES or just org.openbravo.core.es_ES)</li> <li>Do not use the \"type of artifacts\" included in the module for packaging (eg. org.openbravo.report.xxx or org.openbravo.callout.xxx are wrong). The content of a module should not be defined by the \"technical components\" used to implement them but by the functional objective of the module. It might happen that the functional objective can be reached in a different manner and it should not force repackaging.</li> <li>In some cases, functional and technical categories are the same (eg. report) - in this case, put the word \"report\" in the name of the module but not as a package (eg. org.openbravo.financial.taxreportXX instead of org.openbravo.financial.report.taxXX)</li> <li> <p>A package for a module developed by Etendo and staff should be: org.openbravo.functionalcategory.modulename</p> <ul> <li> <p>In some cases, it makes sense to use an additional level:     org.openbravo.functionalcategory.functionalsubcategory.modulename</p> </li> <li> <p>Use a common set of functional categories and subcategories (when needed). Each scrum team defines their own list of categories and subcategories. This is a starting point (split by teams):</p> <ul> <li>applicationdictionary (platform)</li> <li>kernel (platform)</li> <li>utility (platform)</li> <li>setup (erp engineering)</li> <li>common (erp engineering)</li> <li>document (erp engineering)</li> <li>warehouse (erp engineering)</li> <li>project (erp engineering)</li> <li>production (erp engineering)</li> <li>mrp (erp engineering)</li> <li>financial (erp engineering)</li> <li>erputil (erp engineering)</li> <li>localization (localization) -&gt;  subcategories for each country (eg. localization.spain)</li> <li>localizationutil (localization)</li> <li>quickstart (industry templates / verticals are a category by itself)</li> <li>quickstartspain (industry templates / verticals are a category by itself)</li> </ul> </li> </ul> </li> </ul>","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#choosing-a-db_prefix","title":"Choosing a db_prefix","text":"","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#modules-created-by-partners","title":"Modules created by Partners","text":"<ul> <li>Use a db_prefix that do not begin with the letters ET</li> <li>EM is a reserved word not allowed as a db_prefix</li> </ul>","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#modules-created-by-etendo-and-staff","title":"Modules created by Etendo and staff","text":"<ul> <li>Use a db_prefix ETX where X: from one to 5 characters for the module itself</li> </ul>","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/naming-guidelines-for-modules/#customization-modules","title":"Customization modules","text":"<ul> <li>Use a db_prefix beginning with CUST</li> </ul> <p>Usually customization modules are not intended to be published in Central Repository. In this case, DBPrefix should start with CUST. Modules with these kind of DBPrefixes cannot be registered in Central Repository but are collision safe because no other module in Central Repository can use this DBPrefix. This is an important decision to be taken before starting the module development: in case there is any chance of publishing the module at some moment, it should follow the standard rule, if it is absolutely sure that it will not be published you can use CUST and do not register it.</p>","tags":["Module Naming","Etendo Guidelines","Module Branding","Language Conventions","Module Types"]},{"location":"developer-guide/etendo-classic/concepts/processes/","title":"Processes","text":"","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#overview","title":"Overview","text":"<p>A process is a systematic series of actions directed to some end.  A process receives some parameters and taking them into account performs some actions to obtain a result. Etendo defines two main kinds of processes SQL Processes and Java Processes.</p> <p>All processes (as well as Reports) are managed from the same window: <code>Application Dictionary &gt; Report and Process</code>. </p> <p>Once a process is defined it can be added to the menu to be called directly from there, it can be invoked through a button or it can be scheduled to be executed in the background.</p> <p>Background processes can be set as Prevent Concurrent Executions . Before a process with this attribute is about to be executed, it is checked there are no other instances of the same process in execution at the same time, in this case another execution is aborted.</p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#parameters","title":"Parameters","text":"<p>When a process (SQL or Java) or a Jasper Report is set as Standard, a pop-up message is automatically generated and displayed when invoking it, this message looks like this:</p> <p></p> <p>This pop-up has a section with information about the process, this information is obtained from the Help field in the Report and Process tab.</p> <p>It also prompts for a number of parameters, and finally there are two buttons, OK to start the process and Cancel to close the pop-up and not to do anything else. In case the process did not require any parameter that section would be empty.</p> <p>When this kind of process requires parameters they must be defined in the <code>Application Dictionary &gt; Report and Process &gt; Parameter</code>tab.</p> <p></p> <p>Parameters are defined in a very similar way than columns are. Depending on the Reference field, the generated UI assigned for the parameter will be different.</p> <p>Let's overview some of the most important fields in this tab:</p> <ul> <li>DB Column name : This is the name the parameter will be passed with to the process. When the process is going to use this parameter, it will have to use this name. </li> </ul> <p>Note</p> <p>Notice that <code>Postgresql</code> is case-sensitive. In case the parameter references an existing column in database (for example, it is a parameter of type search), then the DB Column name field must be cased the same way as the column in the Application Dictionary. </p> <ul> <li>Sequence : It is a numeric value to order the parameter in the pop-up. </li> <li>Application Element : It is the Element  that will be used to get the label from, in this way parameters are translatable. </li> </ul> <p>Note</p> <p>It is also possible to set or not this element as Centrally Maintained. </p> <ul> <li>Reference , Reference Search Key and Validation: These three fields work exactly like the same ones when defining references for columns. </li> <li>Range : If it is checked, the pop-up will display two parameters in order to define a range, the first parameter will be named as specified in DB Column name field and the second one will have the same name with a TO suffix. </li> </ul>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#defining-processes","title":"Defining Processes","text":"<p>Processes can be of two different types: SQL Processes and Java Processes . SQL processes are implemented in the SQL language and are executed by the database engine. Java proceses are implemented in the Java language and are executed by the application server.</p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#sql-processes","title":"SQL Processes","text":"<p>SQL Processes are implemented by database stored procedures. </p> <p>Info</p> <p>For more information, read How to create a Stored Procedure.</p> <p>SQL processes are defined in <code>Application Dictionary &gt; Report and Process</code>. The only field to take into account for this kind of processes is Procedure: It is the procedure name in the database. </p> <p>Note</p> <p>As SQL procedures are assigned to modules, they must be named according to following the naming rules: the name of the procedure must start with the module's DBPrefix.</p> <p>As the pop-up for SQL processes is always automatically generated, the UI Pattern field must be set as Standard .</p> <p>In case the process requires any parameter, it is possible to define them. </p> <p>Info</p> <p>To learn more about how to do it read Parameters.</p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#java-processes","title":"Java Processes","text":"<p>Java processes are implemented by java classes. </p> <p>Info</p> <p>For more information, read How to create a Java Process   .</p> <p>Java processes are also defined in the <code>Application Dictionary &gt; Report and Process</code> window. Depending on the UI pattern they use, they can be split into Standard and Manual. Additionally, if the UI Pattern is set to Manual, it is necessary to include an entry in the Process Mapping to make it accessible in the <code>web.xml</code>.</p> <p>Note</p> <p>The pop-up used to invoke Java processes defined with Standard UI pattern is automatically generated in the same way the interface for SQL processes is done.</p> <p>To set a Java process to be have Standard UI just set the UI Pattern field to Standard in the <code>Application Dictionary &gt; Report and Process</code> header.</p> <p>It is also necessary to indicate the Java class that is going to implement the process. This is done by adding a new record in the Process Class tab. At least, one record in this tab must be checked as default.</p> <p>Info</p> <p>If the process requires parameters they can be defined in the Parameter tab as explained in the Parameters section of this document.</p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#executing-processes","title":"Executing processes","text":"<p>Note</p> <p>It is required to define the process compilation in order to be able to execute it. This step can be performed executing <code>./gradlew smartbuild</code> and restarting Tomcat afterwards.  </p> <p>Processes can be executed from the user interface from a menu or with a button. It can also be scheduled to be executed in the background without any user interaction.</p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#executing-a-process-from-a-menu-option","title":"Executing a process from a menu option","text":"<p>To execute a process from a menu option, you need to define a new menu option that executes the process. Menus are defined in <code>General Setup &gt; Application &gt; Menu</code>. In the Action field the Process entry must be selected, then in the Process field select the process. it will be executed immediately and then saved.</p> <p>Finally, press the Tree button to organize the new menu option in the menu tree, and now the process defined can be executed selecting this new menu created.</p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#executing-a-process-from-a-button","title":"Executing a process from a button","text":"<p>To execute a process with a button you need to define a column that references a button. In <code>Application Dictionary &gt; Tables and Columns</code>, go to the column you want to use to execute the process and in the field Reference select the Button entry, then in the Process field select the process you want to execute and save.</p> <p>When executing a process with a button, the record ID of the current record selected of the table will be passed to the process. This allows to execute functions for specific records.</p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#executing-a-process-in-the-background","title":"Executing a process in the background","text":"<p>Backgroung processes are defined in <code>General Setup &gt; Process Scheduling &gt; Process Request</code>. </p> <p>Info</p> <p>For more information, read How to create a Background Process.</p> <p>In this window you can define a background process. The process to be executed can be selected in the Process field. Then you define the scheduling for the background process and it is then ready to use.</p> <p>Note</p> <p>There is no user interaction necessary to execute the process, thus, no pop-up will appear prompting for additional parameters.</p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/processes/#kill-a-background-process","title":"Kill a background Process","text":"<p>A button Kill Process is shown in the Process Monitor window on that processes that implement the KillableProcess interface while a process is being executed (Status = Processing). The interface KillableProcess will let you kill your process using a kill mechanism.</p> <p>Mechanism to Kill</p> <p>The mechanism that your background process uses to kill itself might vary between implementations. However, the main idea in any implementation should be to check some flag perodically during execution to see if a kill has been requested, and if the flag is set, somehow abort the execution of the rest of the job's work.</p> <p>Let's see an example,</p> <p>here we have a dummy process which simply prints the identifier in the log for all the business partners:</p> <pre><code>    package com.openbravo.example.killprocess.process;\n\n    import org.apache.log4j.Logger;\n    import org.hibernate.ScrollMode;\n    import org.hibernate.ScrollableResults;\n    import org.openbravo.dal.service.OBCriteria;\n    import org.openbravo.dal.service.OBDal;\n    import org.openbravo.model.common.businesspartner.BusinessPartner;\n    import org.openbravo.scheduling.ProcessBundle;\n    import org.openbravo.service.db.DalBaseProcess;\n    import org.openbravo.service.db.DbUtility;\n    import org.quartz.JobExecutionException;\n\n    public class DummyProcess extends DalBaseProcess {\n    \u00a0\n      private static final Logger log4j = Logger.getLogger(DummyProcess.class);\n    \u00a0\n      @Override\n      protected void doExecute(ProcessBundle bundle) throws Exception {\n        try {\n    \u00a0\n          // Get all business partners\n          final OBCriteria&lt;BusinessPartner&gt; bpCri = OBDal.getInstance().createCriteria(\n              BusinessPartner.class);\n          bpCri.setFetchSize(1000);\n          final ScrollableResults partnerScroller = bpCri.scroll(ScrollMode.FORWARD_ONLY);\n          int i = 1;\n          // Loop all business partners using a ScrollabeResults to avoid performance issues\n          while (partnerScroller.next()) {\n            final BusinessPartner bp = (BusinessPartner) partnerScroller.get()[0];\n            // Print the Identifier for every business partner\n            log4j.info(bp.getIdentifier());\n    \u00a0\n            if ((i\u00a0% 100) == 0) {\n              OBDal.getInstance().getSession().clear();\n            }\n            i++;\n    \u00a0\n          }\n          partnerScroller.close();\n        } catch (Exception ex) {\n          Throwable e = DbUtility.getUnderlyingSQLException(ex);\n          log4j.error(\"Error in DummyProcess\", e);\n          throw new JobExecutionException(e.getMessage(), e);\n        }\n    \u00a0\n      }\n    \u00a0\n    }\n</code></pre> <p>Killable Process</p> <p>Now, we will see the same process but with Interface <code>KillableProcess</code> implemented with the kill method.</p> <pre><code>    package com.openbravo.example.killprocess.process;\n\n    import org.apache.log4j.Logger;\n    import org.hibernate.ScrollMode;\n    import org.hibernate.ScrollableResults;\n    import org.openbravo.dal.service.OBCriteria;\n    import org.openbravo.dal.service.OBDal;\n    import org.openbravo.model.common.businesspartner.BusinessPartner;\n    import org.openbravo.scheduling.KillableProcess;\n    import org.openbravo.scheduling.ProcessBundle;\n    import org.openbravo.service.db.DalBaseProcess;\n    import org.openbravo.service.db.DbUtility;\n    import org.quartz.JobExecutionException;\n\n    public class DummyProcessKillable extends DalBaseProcess implements KillableProcess {\n    \u00a0\n      private static final Logger log4j = Logger.getLogger(DummyProcessKillable.class);\n    \u00a0\n      // Add a variable 'stop' to control the kill implementation and set false by default\n      private boolean stop = false;\n    \u00a0\n      @Override\n      protected void doExecute(ProcessBundle bundle) throws Exception {\n        try {\n    \u00a0\n          // Get all business partners\n          final OBCriteria&lt;BusinessPartner&gt; bpCri = OBDal.getInstance().createCriteria(\n              BusinessPartner.class);\n          bpCri.setFetchSize(1000);\n          final ScrollableResults partnerScroller = bpCri.scroll(ScrollMode.FORWARD_ONLY);\n          int i = 1;\n          // Loop all business partners using a ScrollabeResults to avoid performance issues\n    \u00a0\n          // Only continue with the process if the variable 'stop' is false\n          while (partnerScroller.next() &amp;&amp;\u00a0!stop) {\n            final BusinessPartner bp = (BusinessPartner) partnerScroller.get()[0];\n            // Print the Identifier for every business partner\n            log4j.info(bp.getIdentifier());\n            // Add a timeout of 30 seconds\n            Thread.sleep(30000);\n    \u00a0\n            if ((i\u00a0% 100) == 0) {\n              OBDal.getInstance().getSession().clear();\n            }\n            i++;\n    \u00a0\n          }\n          partnerScroller.close();\n        } catch (Exception ex) {\n          Throwable e = DbUtility.getUnderlyingSQLException(ex);\n          log4j.error(\"Error in DummyProcess\", e);\n          throw new JobExecutionException(e.getMessage(), e);\n        }\n    \u00a0\n      }\n    \u00a0\n      @Override\n      public void kill(ProcessBundle bundle) throws Exception {\n        bundle.getLog().log(\"process killed\")\n        // When kill is called set variable 'stop' to true so the process will be interrupted in the\n        // next iteration: while (partnerScroller.next() &amp;&amp;\u00a0!stop)\n        stop = true;\n      }\n    \u00a0\n    }\n</code></pre> <p>Let us comment the code. First, we need to implement the KillableProcess interface.</p> <pre><code>    public class DummyProcessKillable extends DalBaseProcess implements KillableProcess {\n</code></pre> <p>We create a variable <code>stop</code> that will be used to check the continuity of the execution.</p> <pre><code>// Add a variable 'stop' to control the kill implementation and set false by default\n  private boolean stop = false;\n</code></pre> <p>In the main loop of the process, we add the check to stop the execution when the variable is set to true.</p> <pre><code>      // Only continue with the process if the variable 'stop' is false\n      while (partnerScroller.next() &amp;&amp;\u00a0!stop) {\n</code></pre> <p>We have also added a sleep (30 seconds) to make the execution time longer.</p> <pre><code>            Thread.sleep(30000);\n</code></pre> <p>Finally, we implement the kill method that sets <code>stop</code> to true.</p> <pre><code>      @Override\n      public void kill(ProcessBundle bundle) throws Exception {\n        bundle.getLog().log(\"process killed\")\n        // When kill is called set variable 'stop' to true so the process will be interrupted in the\n        // next iteration: while (partnerScroller.next() &amp;&amp;\u00a0!stop)\n        stop = true;\n      }\n</code></pre> <p>Now, we are able to kill the process from the Process Monitor. </p> <p>When a process is killed, the status in the process monitor will be Killed by User.</p> <p>This work is a derivative of Processes by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo. </p>","tags":["Concepts","SQL Processes","Java Processes","Execution Methods","Process Scheduling"]},{"location":"developer-guide/etendo-classic/concepts/selectors/","title":"Selectors","text":"","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#overview","title":"Overview","text":"<p>In this section, the process to define selectors in the Etendo system is described.</p> <p>Selectors combine a suggestion box with a popup window with filter and sorting capabilities. They have a number of important features:</p> <ul> <li>They can be completely defined without manual coding.</li> <li>The selector definition (columns, search criteria, where clause) can be changed at runtime without re-compiling or re-starting the system.</li> <li>The selector makes it very easy to show linked information of a selected entity or search, sort and filter on linked information.</li> <li>The selector suggestion box, as well as the popup grid, support paging with lookahead. This makes them also suitable for large datasets.</li> </ul>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#selector-concept","title":"Selector Concept","text":"<p>A selector is defined within the Application Dictionary, as part of a Reference definition (a domain type) and is used to represent foreign key references in the Etendo user interface.</p> <p>A selector consists of three parts:</p> <ul> <li>The reference definition.</li> <li>The selector header defining which table to select from and the where clause to use.</li> <li>The selector fields which define which columns are searched and what columns are shown in the popup window.</li> </ul>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#defining-a-selector","title":"Defining a Selector","text":"<p>To define a new selector go to <code>Application Dictionary</code> &gt; <code>Reference</code> window. Defining the selector is a three-step procedure:</p> <ol> <li>Create a new reference.</li> <li>Create a selector header.</li> <li>Create zero or more selector fields.</li> </ol> <p>This section guides you through all three steps.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#step-1-define-a-reference","title":"Step 1: Define a Reference","text":"<p>The reference is used in the column definition. The definition is shown below in the screenshot.</p> <p></p> <p>A description of the fields:</p> <ul> <li>Name, Description and Help should be set to a specific value for the reference you are creating.</li> <li>Base Reference must be set to false.</li> <li>Parent Reference must be set to <code>OBUISEL_Selector_Reference</code>.</li> <li>Model, WAD and Runtime UI Implementation can be left empty most of the time.</li> </ul>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#step-2-define-the-selector","title":"Step 2: Define the Selector","text":"<p>After defining the reference, the selector information can be entered. This is also done in the reference window. Make sure that the reference window shows the reference you have created in step 1 then click Defined Selector in the top right of the window and press the new button.</p> <p></p> <p>A description of the fields:</p> <ul> <li>Name and Help/Comment: set these to values describing the selector.</li> <li>Description: this is used as the title of the popup window.</li> <li>Template: there should normally be only one option: Selector Template. Multiple options are possible if additional templates have been installed for selectors.</li> <li>Table: normally a selector selects from a table, select the relevant table from the list.</li> <li>Column: the column in the referenced table to which the foreign key column points. If nothing is set here (the default) then the primary key column is used.</li> <li>Datasource: can be set when no table is selected. A data source can be used to provide data which is not read from the database but is, for example, computed at runtime. For more information on Datasources, see the Datasource Developers Manual.</li> <li>HQL Where Clause: this where clause is used to filter the data read from the database.</li> </ul> <p>Note</p> <p>Currently it is not possible to use session variables in the where clause.</p> <p>Note</p> <p>When using properties of the entity in the whereclause always the prefix <code>e.</code> has to be used, for example <code>e.seqno</code></p> <ul> <li>Display Field: this selector field is displayed in the drop-down of the suggestion box. Some specific aspects:<ul> <li>An empty value (the default one) means that the identifier columns of the referenced table are used to display information in the suggestion box. This default value is often a good choice.</li> <li>Initially, when creating a selector, it is not possible to select a field here as no selector fields have been defined yet (see next section). After defining one or more selector fields, it is possible to choose one of these fields here.</li> </ul> </li> <li>Value Field: this selector field is set as the value and stored in the database as the foreign key field. Some specific aspects:<ul> <li>An empty value (the default one) means that the primary key column of the referenced table is used. This is by far the most common case and therefore a good choice for most if not practically all cases.</li> <li>Initially, when creating a selector, it is not possible to select a field here as no selector fields have been defined yet (see next section). After defining one or more selector fields, it is possible to choose one of these fields here.</li> </ul> </li> <li>Sort By Field: this selector field is used to sort the records in the drop-down of the suggestion box. Some specific aspects:<ul> <li>An empty value (the default one) means that the records are ordered by the values of the display field. And in case the display field is neither defined, the identifier columns of the referenced table are used to sort information in the suggestion box. This default is often a good choice.</li> <li>initially, when creating a selector, it is not possible to select a field here as no selector fields have been defined yet (see next section). After defining one or more selector fields, it is possible to choose one of these fields here.</li> </ul> </li> </ul>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#step-3-defining-selector-fields","title":"Step 3: Defining Selector Fields","text":"<p>After defining the selector header, the next step is to define the selector field. A selector field is used for the following things:</p> <ul> <li>To define a column in the popup search grid.</li> <li>To define a column of the target table which is searched for the suggestion box.</li> <li>To define the display field of the suggestion box (what gets displayed when a user types in values in the field).</li> <li>To define the value field, the column which is used to set the value in the foreign key column.</li> <li>To define the sort by field of the suggestion box.</li> </ul> <p>A selector can have zero or more selector fields. It is possible to define a selector without selector fields. The system will use the default which is to show the identifier in the suggestion box and use the primary key of the referenced table as the value. The suggestion box is shown in the field but no popup window is shown. So this is a light-weight selector definition.</p> <p>To define a selector field click on the Defined Selector Field link shown in the top-right of the Defined Selector tab.</p> <p></p> <p>The description of the fields of the Defined Selector Field:</p> <ul> <li>Name: use a descriptive name here.</li> <li>Property: is a column/property from the table set in the selector header. This field is implemented using the selector itself. This makes it easy for a user to select the correct model property. It is possible to enter a property path. For the business partner table, it is possible, for example, to specify <code>name</code> which will show the name of the bank of the bank account of the business partner. See the next section on Property Paths for more information.</li> </ul> <p></p> <ul> <li>Description and Help/Comment: set these to meaningful values for your specific case (see also the Central Maintenance field below). The description field is for future usage.</li> <li>Show in grid: if checked, then the field is visible in the popup grid. If not checked then the field is not shown in the popup grid. It can still be used as the value field, display field, sort by field or as a search field for the suggestion box.</li> <li>Sorting of columns in a grid: the order in which the columns are shown in the popup grid. Only relevant if Show in grid is checked.</li> <li>Sortable: determines if the user can sort on this column in the popup grid. Only relevant if Show in grid is checked.</li> <li>Filterable: determines if the user filter on this column in the popup grid. Only relevant if Show in grid is checked.</li> <li>Central Maintenance: if checked then the name, description and help/comment are copied/used from the column. This is handled by the Synchronize Terminology process.</li> <li>Search in suggestion box: as a default, the suggestion box will use the string entered by the user to search in the display field (set in the selector header) or identifier. You can select additional fields to search in by setting this field (Search in suggestion box) to yes/checking it. To make search field invisible just uncheck the field show in grid, then the field is only used to search and not displayed in the popup grid.</li> </ul> <p>Note</p> <ul> <li>If none of the selector fields have show in grid checked/set to yes, then no popup grid is available and the magnifier icon is not shown, the user can only select data through the suggestion box.</li> <li>when setting a column to filterable or sortable, it is possible that a decreasing performance is encountered with a table with many thousands of records. If this happens, contact the database administrator to optimize the table by adding indexes. Note that these new indexes have to be exported to the Etendo metadata using standard <code>export.database</code> procedures.</li> </ul>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#property-paths-showing-linked-information","title":"Property Paths, Showing Linked Information","text":"<p>The selector has a very powerful feature that makes it easy to show linked information in the suggestion box and popup windows.</p> <p>To give an example of linked information. For a business partner selector, it is quite easy to show the identifier of the business partner category. This linked information can take multiple steps, so it is possible to show the name of the bank of the bankaccount of the business partner. These two examples are entered like this in the property field of the Defined Selector Field:</p> <ul> <li><code>businessPartnerCategory._identifier</code></li> <li><code>name</code></li> </ul> <p>By using the dot (.), the path takes the next step in the model. The suggestion box in the Defined Selector Field window gives support in entering the correct path.</p> <p></p> <p>This is then displayed like this:</p> <p></p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#table-and-datasource","title":"Table and Datasource","text":"<p>A selector can retrieve its content from a table or from a Datasource. When in the selector definition a table is defined then on the server Etendo will create a datasource for this table. So internally for Etendo there is no real difference between a table or datasource for the selector.</p> <p>There are a number of use-cases for which using a datasource makes sense:</p> <ul> <li>When the data for a selector requires preprocessing after retrieval from the database.</li> <li>When the data in a selector is not even read from the database but computed in memory by the system.</li> </ul> <p>A datasource is implemented by a developer and then defined in the Application Dictionary. After this, it can be used to define selectors.</p> <p>Note</p> <p>For more information on how to implement a datasource, see its Datasources page.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#translated-information","title":"Translated information","text":"<p>The Selector and Selector Fields also allow you to specify translated versions of names and titles shown in the user interface. To use translated names and titles, go to the Defined Selector translation and Defined Selector Field Translation tabs. These tabs are available at the top of the window when editing a Selector or Selector Field.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#using-a-selector","title":"Using a Selector","text":"<p>The next step is making use of the selector in the data model. The selector is the same as any other Reference in Etendo. The Reference is used in the definition of a Column. To use the defined selector and set it in a column, go to <code>Application Dictionary</code> &gt; <code>Tables and Columns</code>. Then select the table and the column you want to set the reference for.</p> <p>Then, in the reference field, choose <code>OBUISEL_Selector</code> Reference. Then in the next combo box Reference Search Key, select the specific selector. In the screenshot below a Business Partner Selector is chosen.</p> <p></p> <p>The column can be used to define a field in the Etendo window in a standard way. So in the Etendo Window/Tab/Field definition there is no special setting or handling required for the selector.</p> <p>After setting the reference in the column and using it in a specific window, you need to restart Etendo to see it in action.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#changing-a-selector-at-runtime","title":"Changing a Selector at Runtime","text":"<p>The selector definition itself can be changed at runtime without re-compiling the system. There are no real limits to what part of the selector definition which can be changed at runtime, a non-excluding list:</p> <ul> <li>Add/remove columns from the popup grid.</li> <li>Change the where clause.</li> <li>Change the fields which are searched as part of the suggestion box display.</li> </ul> <p>Note</p> <p>In order to change a selector, the module it belongs to needs to be in development. If not, then it is possible that the client-side javascript (representing the selector) is not refreshed automatically.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#defining-out-fields","title":"Defining Out Fields","text":"<p>The usual return values from a Selector is the record id and indentifier. In some cases the developer wants to return more fields and not only these two. You can mark a Selector Field as Out Field and will be part of the JavaScript returned object.</p> <p></p> <p>Note</p> <p>By default the id and identifier fields are part of the returned object.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#using-out-fields-in-manual-code-advanced","title":"Using Out Fields in Manual Code (Advanced)","text":"<p>You can use the New Selectors in manual code (not generated by WAD). You must include all the necessary JS imports. There is an empty hook function <code>onValueChanged</code> that you can override in your manual window, to perform any custom action. When the user picks a row, this function gets executed. By default it does not do anything.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#example-of-function","title":"Example of Function","text":"<p>Note</p> <p>To test this code, you must have a browser with console enabled, e.g. Firefox with Firebug.</p> <pre><code>    isc.OBSelectorLinkWidget.addProperties({\n      onValueChanged: function(selected) {\n        // selected is an object with members id and _identifier\n        // plus all Out Fields\n        window.console.log(\"%o\", selected); \n      }\n    });\n</code></pre> <p>In this case, all instances of the OBSelectorLinkWidget will execute the same function, this example function just prints the object passed as parameter.</p> <p>You can also only override the function on a particular instance.</p> <pre><code>    // sc_C_Bpartner_One_ID is an instance of OBSelectorWidget or OBSelectorLinkWidget\n    sc_C_Bpartner_One_ID.onValueChanged = function(selected) {\n      window.console.log(\"%o\", selected);\n    };\n</code></pre>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#providing-a-new-selector-template-advanced","title":"Providing a New Selector Template (Advanced)","text":"<p>The selector definition is converted to javascript code using a template. The template is selected in the selector (see step 2 above). It is possible for a module to add a new template which can be used for creating selectors. Creating a new template needs to be done by a developer with a good understanding of Etendo.</p> <p>Also to implement a new template it is necessary to understand the template processing and template handling functionality used by Etendo. The Etendo Architecture page provides detailed information. It discusses both template processing, caching, i18n and also gives pointers on how to implement a custom template.</p> <p>The template used for the selector can be found in the source tree of the <code>org.openbravo.userinterface.selector</code> module inside the <code>org.openbravo.userinterface.selector.templates</code> package in the <code>selector.ftl</code> file.</p> <p>A custom template should be created inside a separate module. To make use of it, define it inside <code>Application Dictionary</code> &gt; <code>Templates</code>.</p> <p></p> <p>The main fields to set:</p> <ul> <li>The TemplateClasspathLocation should point to the location in the source tree of the custom template.</li> <li>The ComponentType must be set to selector. The ComponentType determines if the template can be selected in the selector definition.</li> </ul> <p></p> <p>When defining selectors, the user can select the custom template.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#customizing-the-look-and-feel-of-the-selector","title":"Customizing the Look and Feel of the Selector","text":"<p>The styling of the selector is mostly automatically derived from the styling of other components. Only the icon on the right of the field needs to be styled, see this page for more information.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#troubleshooting","title":"Troubleshooting","text":"","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#the-suggestion-box-does-not-filter","title":"The Suggestion Box does not Filter","text":"<p>Symptom : When typing in values in the selection box it does not filter, all records are shown.</p> <p>Cause : This can happen when you have accidentally added boolean/yes/no fields to be search in suggestionbox.</p> <p>Solution : uncheck the search in suggestionbox fields for the boolean/yes/no fields, searching these fields is not supported by the selector in the suggestion box.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#the-suggestion-box-is-always-empty","title":"The Suggestion Box is Always Empty","text":"<p>Symptom : When typing values in the selection field the suggestion box is empty or shows much less results than expected, also selecting the direct drop down results in an empty/smaller than expected list.</p> <p>Cause : this happens because there are search in suggestionbox fields which require a join to a table while the foreign key is not always set. Only the records which have a value in the foreign key are shown.</p> <p>Solution : if the foreign key selection field is the only one on which is filtered this is fine, however if there are multiple search fields then searching on non-mandatory foreign key fields is not supported by the selector.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#advanced-topics","title":"Advanced Topics","text":"","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#hql-transformers","title":"HQL Transformers","text":"<p>It is possible to modify an HQL query entirely via java and dependency injection using transformers. To implement the new functionality, visit HQL Transformers.</p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/selectors/#using-foreign-keys-in-hql-custom-queries","title":"Using foreign keys in HQL Custom queries","text":"<p>In order to do that, the HQL select clause for that property needs to point to an entity (i.e. e.organization, instead of e.organization.name). Then in the definition of the selector field we have to select a Table reference that points to the target entity.</p> <p>This work is a derivative of Selectors by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo. </p>","tags":["Concepts","Selector","HQL","Reference"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/","title":"Standard Windows","text":"","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#overview","title":"Overview","text":"<p>Standard Windows are the windows completely defined in Application Dictionary. They allow viewing and editing records in tables.</p> <p>After defining (or modifying) a standard window, the system must be rebuilt (<code>./gradlew smartbuild</code>). During this process <code>WAD</code> generates automatically the <code>Java</code>, <code>XSQL</code>, <code>HTML</code> and <code>XML</code> code for that window and it is compiled. This means that the complete definition for standard windows is within Application Dictionary without any need of manual developments. This has a number of benefits:</p> <ul> <li>No need to write manual code: This reduces the possibility of introducing bugs.</li> <li>Faster development: As a window creation consists only in defining it in Application Dictionary, it is faster that doing it manually.</li> <li>Automatic inclusion of new features and bug fixes: Whenever <code>WAD</code> fixes a bug or adds a new feature, this is automatically propagated to all standard windows when the system is rebuilt without needing to re-code or re-define anything.</li> </ul>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#structure-windows-tabs-and-fields","title":"Structure: Windows, Tabs and Fields","text":"<p>The structure for standard windows consists in <code>Windows</code>, <code>Tabs</code> and <code>Fields</code>.</p> <ul> <li>Windows: Windows are holders for tabs. Their main purpose is to group a set of related tabs. They can be added to the application's menu.</li> <li>Tabs: Tabs are placed inside windows and can be ordered hierarchically. Each tab is linked to a unique Application Dictionary Table and contains a number of fields.</li> <li>Fields: Fields are contained within tabs. Each field is associated to a Column in the same table than its tab.</li> </ul> <p></p> <p>The following sections explain how Windows, Tabs and Fields are defined. They are managed from <code>Application Dictionary</code> &gt; <code>Windows, Tabs, and Fields</code> window.</p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#windows","title":"Windows","text":"<p>Windows are generated automatically by <code>WAD</code> from their definition in Application Dictionary, all windows have a common layout.</p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#menu","title":"Menu","text":"<p>Windows can be added to Application Menu.</p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#tabs","title":"Tabs","text":"<p><code>Tabs</code> are included within <code>Windows</code>. Each tab is limited to a single Application Dictionary <code>Table</code>. The following subsections detail some important topics to be taken into account when creating a tab.</p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#tabs-hierarchy","title":"Tabs Hierarchy","text":"<p><code>Tabs</code> are shown hierarchically, they are defined in a tree way. This means that a tab can have subtabs (it is the parent tab for them), consequently a tab can also be a child for another one and it is possible to have several tabs at the same level.</p> <p>This hierarchy is specified using two fields in the tab:</p> <ul> <li><code>Tab Level</code>: Indicates the level in the hierarchy, being 0 the top level, 1 child tabs for ones in 0, etc. Usually there is a single tab at 0 level and the rest of tabs in the window are subtabs for this one. </li> <li><code>Sequence Number</code>: It is a number that defines the order tabs are displayed. They are sorted ascendantly, so lower ones and in the left side and higher ones in the right. It is a good idea not to use consecutive numbers in order to allow new tabs inclusions between existent ones. </li> </ul> <p>The conjunction of these two values gives the position and hierarchy for each tab. Let's see through an example how the following tab structure could be defined:</p> <pre><code>     A\n     |-A1\n     |  |-A11\n     |-A2\n     |  |-A21\n     |  |-A22\n     |     |-A221\n     |-A3\n</code></pre> Tab Sequence number Tab level A 10 0 A1 20 1 A11 30 2 A2 40 1 A21 50 2 A22 60 2 A221 70 3 A3 80 1 <p>When creating subtabs, it is necessary to set which column in the parent column is going to be the master for the subtab. In order to show in the subtabs only the records that are linked to the current record in the parent one. For example let's suppose tab A is a tab for <code>C_Invoice</code> table and tab A1 is for <code>C_InvoiceLine</code> , in this case <code>C_Invoice.C_Invoice_ID</code> in tab A must be the master column for tab A1, showing in A1 only the records linking to the selected record in A.</p> <p>There are three possible ways of setting which is the master column in the parent tab:</p> <ol> <li>Using the <code>AD_Column.IsParent</code> check in the table used in the subtab. When a table in a tab contains columns checked as <code>Link to Parent Column</code>, it is looked in the parent tab a column with the same name and if found that one will be the master.</li> <li>By <code>name</code>. In case the table in subtab has a column with the same name as the parent's <code>primary key</code> one, the link will be generated using them.</li> <li>Using <code>AD_Tab.WhereClause</code>. In case it is not possible to use #1 or #2, the relation must be set in the child tab's <code>Where Clause</code> field. For more info about this clause, read the document about Dynamic Expressions. In these cases, it is possible to mark the <code>Disable Parent Key Property</code> flag, doing so only where clause will be used to create the relationship not adding any other criteria.</li> </ol>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#locking-mechanism","title":"Locking mechanism","text":"<p>All <code>WAD</code> generated tabs implement a simple Optimistic locking mechanism.</p> <p>When a record is loaded in edition mode, its updated <code>timestamp</code> is stored. If the record is modified and saved, this stored timestamp is compared with the current one in database for that record. In case they are different, that record has been modified by another user or process and the application does not allow to save the current modifications. Because otherwise, the modifications done from the record was loaded till the current time would be overwritten.</p> <p></p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#transactional-windows","title":"Transactional Windows","text":"<p>Windows for documents can be set as <code>Transactional</code>. Documents have a status, which initially is Draft. When a transactional window is accessed, it appears filtered by default. This is visualized using a <code>message</code> and a small <code>funnel</code> icon on the top right.</p> <p></p> <p>The applied filter is all the documents with status Draft or which date is in the defined <code>Transaction Range</code>. To clear the filter, click the <code>funnel</code> icon.</p> <p>To define a window as transactional, go to <code>Application Dictionary</code> &gt; <code>Windows, Tabs, and Fields</code> &gt; <code>Window</code> tab and select the <code>Window Type</code> as <code>Transaction</code>.</p> <p>To define the Transaction Range, go to <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Session Preferences</code> and define in the <code>Transaction Range</code> the maximum number of days that processed documents will be shown in.</p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#high-volume-tables","title":"High Volume Tables","text":"<p>When a table is set defined as <code>High Volume</code> (in <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> &gt; <code>Table</code> tab) and the tab that displays it is set to by default be shown in edition mode ( <code>Default Edit Mode</code> in <code>Application Dictionary</code> &gt; <code>Windows, Tabs, and Fields</code> &gt; <code>Window</code> &gt; <code>tab</code> tab), when the tab is accessed a filter is shown.</p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#filter-clause-in-tab","title":"Filter Clause in Tab","text":"<p>In <code>Application Dictionary</code> &gt; <code>Windows, Tabs, and Fields</code> &gt; <code>Window</code> &gt; <code>tab</code> tab there is a Filter Clause field,  <code>HQL Filter Clause</code>. This field allows <code>HQL where clauses</code> to be used as default filter for the tab. When the tab is accessed this filter is applied, to remove it just click on the <code>funnel</code> filter icon.</p> <p>Note</p> <p>This field is different than the <code>HQL Where Clause</code> which also accepts where clauses, but this clause is permanent and cannot be removed by the user.</p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/standard-windows/#fields","title":"Fields","text":"<p><code>Fields</code> are contained in tabs, each field has a <code>column</code> (from the same <code>table</code> as the tab's one) associated. It displays and allows editing the column's value. The way a field is displayed within the tab is determined by the reference its associated column has.</p> <p>Some of the things to take into account when configuring a field are:</p> <ul> <li><code>Read Only Logic</code> which allows determining if field is read only (applies only when field is read-write).The Read Only indicates that this field may only be Read. It may not be updated. Note that it is defined at Column level in the Application Dictionary. It is a Dynamic Expression.</li> <li><code>Display Logic</code> which allows showing or hiding the field depending on other fields' values. It is a Dynamic Expression.<ul> <li>Display logic is taken into account in <code>grid view</code> as read only logic, being only applied when a record is edited in grid view. </li> </ul> </li> <li><code>Central Maintenance</code>, how it works is explained in the document about Elements and Synchronize Terminology.</li> <li><code>Callout</code>, although it is not defined in the fields, it affects them directly becuse they are raised when fields' values are modified.</li> <li><code>Field group</code>, fields can be assigned to a field group, when a group of fields has a field group, a separator is shown in the tab. Field Groups are defined in <code>Application Dictionary</code> &gt; <code>Setup</code> &gt; <code>Field Category</code> tab.</li> </ul> <p>This work is a derivative of Standard Windows by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Concepts","Standard Windows","Application Dictionary","Windows","Tabs","Fields"]},{"location":"developer-guide/etendo-classic/concepts/tables/","title":"Tables","text":"","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#overview","title":"Overview","text":"<p>Physical database tables are the basis  Application Dictionary Data Model  is built on. This document discusses the particularities all tables in Etendo ERP must have.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#common-columns","title":"Common Columns","text":"<p>All tables in Etendo must have some common columns. All these columns must be defined as not nullable.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#primary-key","title":"Primary Key","text":"<p>All tables in Etendo have a single column primary key. This column will be automatically populated with a generated  UUID  therefore the type for this column must be VARCHAR2(32) .</p> <p>Primary Key column must be named like its table with an ID suffix. Thus, the primary key column for HT Salary table would be HT Salary ID.</p> <p>This column must be also set as primary key in database, it is not enough with defining it as ID in Application Dictionary.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#clientorganization","title":"Client/Organization","text":"<p>As Etendo ERP is a multi client and multi organization application, all data belongs to a client and an organization, so all tables must have these two columns:  </p> <ul> <li>AD_Client_ID</li> <li>AD_Org_ID</li> </ul> <p>These columns are a foreign key to AD Client  and  AD Org  tables. So, their types must also be VARCHAR2(32) , and there must be a foreign key to these tables.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#audit-information","title":"Audit Information","text":"<p>Finally, there are some columns that store information about whether a record is active and when and who created and last modified it. This information is maintained in the following columns:</p> <ul> <li>IsActive : It is a boolean value (Y/N) indicating whether the record is active or not. Its type must be CHAR(1) and generally, its default value is 'Y'. It is also good practice to create a check constraint forcing its value to be either 'Y' or 'N'. </li> <li>Created : It contains the date and time when the record was created. Its type is DATE . </li> <li>CreatedBy : Indicates the user that created the record. It is a foreign key to  AD User  so its type is VARCHAR2(32) . </li> <li>Upated : It contains the last date and time when the record was modified (or created if no modification was performed later). Its type is DATE . </li> <li>UpdatedBy : Indicates the last user that updated the record. It is a foreign key to  AD User  so its type is VARCHAR2(32) . </li> </ul>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#naming-conventions","title":"Naming conventions","text":"<p>When creating new tables it is necessary to pay special attention to the names given to tables and columns, particularly regarding modularity.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#tables_1","title":"Tables","text":"<p>The only element to take into consideration is the module's  DB Prefix  . The table's name must start with this DB prefix followed by underscore character (_).</p> <p>The following table prefixes are used by Etendo and are not allowed to be used by any modules:</p> Table prefix Description A asset management AD application dictionary C core functionality I import temporary tables and processes M material management FACT accounting GL general ledger MA manufacturing MRP material resource S service management AT,AU,EM,FIN,I,MA,R,RV,T other Core prefixes CUS, PD, US, ZZ personal developments APRM Advanced Payables and Receivables Mngmt OBUIAPP, NAVBA User Interface Application OBCHW HTML Widget OBCLFRE, OBCLKER User Interface Client Kernel OBKMO Workspace &amp; Widgets OBCQL Query/List Widget OBSERDS JSON Datasource OBJSON JSON REST Webservice OBUISEL User Interface Selector OBUISC Smartclient FINPR Orders Awaiting Delivery","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#columns","title":"Columns","text":"","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#modularity","title":"Modularity","text":"<p>In case the column belongs to the same module than its table no special rule must be followed for its name. But if the column is going to be added to a table belonging to a different module, the column name must start with EM  plus the DB Prefix of the module the column belongs to. For instance, <code>EM_MYMODULEDBPREFIX_COLUMNNAME</code>.</p> <p>Note</p> <p>The column name must not exceed the 30 characters long, that includes the EM plus the DB Prefix of the module.</p> <p>Info</p> <p>In PostgreSQL, all column names must be defined in lower case.  </p> <p>This restriction also applies for naming constraints, triggers and functions.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#primary-key-column","title":"Primary Key Column","text":"<p>Info</p> <p>Naming for primary key column is explained in Primary Key section of this document.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#foreign-key-columns","title":"Foreign Key Columns","text":"<p>It is a best practice to name, if possible, foreign key columns in the same manner than the primary key column of the table they link to. The reason for this is that in Oracle, foreign key (and the rest of the db contraints) names must be unique at a database-level. So, for example if we have in our table a column that contains a business partner it should be named C_BPartner_ID because it is a foreign key to  C_BPartner.C_BPartner_ID column. This is not possible when there is in the same table more than one column linking to the same table or when adding columns in a different module than the table's one.</p> <p>Following this naming rule allows to define standard references as TableDir when the column is defined in Application Dictionary.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#naming-of-columns-and-the-data-access-layer","title":"Naming of Columns and the Data Access Layer","text":"<p>In Etendo, Java classes are generated from the tables definition. A DAL entity is generated from every table defined in the Application Dictionary.</p> <p>Info</p> <p>For more information, visit Data Access Layer.</p> <p>It is important you take this into account when thinking about the names for your columns. The columns you define in a table will correspond to Java properties in a generated Java class. Therefore, you must not choose names which collide with Java keywords , such as class , if , int , ...</p> <p>Info</p> <p>Here you can find a list of the Java keywords.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/concepts/tables/#supported-column-data-types","title":"Supported Column Data types","text":"<p><code>DBSourceManager</code>, the utility that Etendo uses to manage database related operations, supports a subset of the datatypes that Oracle and PostgreSQL databases support. Below we include the currently supported data types:</p> Oracle PostgreSQL (n)char char (n)varchar(2) varchar blob bytea date timestamp number numeric clob text <p>This work is a derivative of Tables by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Concepts","Tables","Database","Common Columns","Primary Key","Naming Conventions"]},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/","title":"API Change Documentation","text":""},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#march-2025","title":"March 2025","text":"<p>Release 25.1.0</p>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#overview","title":"Overview","text":"<p>Provide a brief overview of the purpose of this release, including high-level objectives, key improvements, and the rationale behind major changes.</p>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#api-changes","title":"API Changes","text":""},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#etendo-software-stack","title":"Etendo Software Stack","text":""},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#ubuntu-live-server-amd64","title":"Ubuntu Live Server amd64","text":"<ul> <li>New Version Supported: <code>22.04.5</code></li> </ul>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#java-se","title":"Java SE","text":"<ul> <li>New Version Supported: <code>17.0.14</code></li> <li> <p>Notable Changes:</p> <ul> <li> <p>Java SE 12.x</p> <ul> <li>Java SE 12 Release Notes</li> <li>Java SE 12.0.2 Release Notes</li> <li>All Java 12 Updates</li> </ul> </li> <li> <p>Java SE 13.x</p> <ul> <li>Java SE 13 Release Notes</li> <li>Java SE 13.0.2 Release Notes</li> <li>All Java 13 Updates</li> </ul> </li> <li> <p>Java SE 14.x</p> <ul> <li>Java SE 14 Release Notes</li> <li>Java SE 14.0.2 Release Notes</li> <li>All Java 14 Updates</li> </ul> </li> <li> <p>Java SE 15.x</p> <ul> <li>Java SE 15 Release Notes</li> <li>Java SE 15.0.2 Release Notes</li> <li>All Java 15 Updates</li> </ul> </li> <li> <p>Java SE 16.x</p> <ul> <li>Java SE 16 Release Notes</li> <li>Java SE 16.0.2 Release Notes</li> <li>All Java 16 Updates</li> </ul> </li> <li> <p>Java SE 17 (LTS)</p> <ul> <li>Java SE 17.0.14 Release Notes (Oracle)</li> <li>All Java 17 Updates</li> </ul> </li> </ul> </li> </ul>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#postgresql","title":"PostgreSQL","text":"<ul> <li>New Version Supported: <code>16.8.1</code></li> <li> <p>Notable Changes:</p> <ul> <li> <p>PostgreSQL 16.x</p> <ul> <li>PostgreSQL 16.8 Release Notes</li> <li>PostgreSQL 16.7 Release Notes</li> <li>PostgreSQL 16.6 Release Notes</li> <li>PostgreSQL 16.5 Release Notes</li> <li>PostgreSQL 16.4 Release Notes</li> <li>PostgreSQL 16.3 Release Notes</li> <li>PostgreSQL 16.2 Release Notes</li> <li>PostgreSQL 16.1 Release Notes</li> <li>PostgreSQL 16.0 Release Notes</li> </ul> </li> <li> <p>PostgreSQL 15.x</p> <ul> <li>PostgreSQL 15.10 Release Notes</li> <li>PostgreSQL 15.9 Release Notes</li> <li>PostgreSQL 15.8 Release Notes</li> <li>PostgreSQL 15.7 Release Notes</li> <li>PostgreSQL 15.6 Release Notes</li> <li>PostgreSQL 15.5 Release Notes</li> <li>PostgreSQL 15.4 Release Notes</li> <li>PostgreSQL 15.3 Release Notes</li> <li>PostgreSQL 15.2 Release Notes</li> <li>PostgreSQL 15.1 Release Notes</li> <li>PostgreSQL 15.0 Release Notes</li> </ul> </li> </ul> </li> </ul>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#apache-tomcat","title":"Apache Tomcat","text":"<ul> <li>New Version Supported: <code>9.0.98</code></li> <li>Notable Changes:<ul> <li>Apache Tomcat 9.x<ul> <li>Apache Tomcat 9 Release Notes</li> </ul> </li> </ul> </li> </ul>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#gradle","title":"Gradle","text":"<ul> <li>New Version Supported: <code>8.12.1</code></li> <li> <p>Notable Changes:</p> <ul> <li> <p>Gradle 8.x</p> <ul> <li>Gradle 8.12.1 Release Notes</li> <li>Gradle 8.12 Release Notes</li> <li>Gradle 8.11 Release Notes</li> <li>Gradle 8.10 Release Notes</li> <li>Gradle 8.9 Release Notes</li> <li>Gradle 8.8 Release Notes</li> <li>Gradle 8.7 Release Notes</li> <li>Gradle 8.6 Release Notes</li> <li>Gradle 8.5 Release Notes</li> <li>Gradle 8.4 Release Notes</li> <li>Gradle 8.3 Release Notes</li> <li>Gradle 8.2 Release Notes</li> <li>Gradle 8.1 Release Notes</li> <li>Gradle 8.0 Release Notes</li> </ul> </li> <li> <p>Gradle 7.x</p> <ul> <li>Gradle 7.6 Release Notes</li> <li>Gradle 7.5.1 Release Notes</li> <li>Gradle 7.5 Release Notes</li> <li>Gradle 7.4.2 Release Notes</li> <li>Gradle 7.4.1 Release Notes</li> <li>Gradle 7.4 Release Notes</li> <li>Gradle 7.3.3 Release Notes</li> </ul> </li> </ul> </li> </ul> <p>Warning</p> <p>To update the Gradle wrapper, you must run <code>./gradlew wrapper --gradle-version 8.12.1</code>. For more detailed migration guidelines, refer to the Upgrading the Gradle Wrapper</p>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#etendo-gradle-plugin","title":"Etendo Gradle Plugin","text":"<ul> <li>New Version Supported: <code>2.0.0</code></li> <li> <p>Notable Changes:</p> <ul> <li> <p>New Gradle Plugin Task Terminal<pre><code>./gradlew cleanExpandCore\n</code></pre></p> <p>This new task deletes directories created by the <code>expandCore</code> task.</p> </li> <li> <p>Compatibility Flag</p> Terminal<pre><code>-Pjava.version=11\n</code></pre> <p>This new flag forces the use of Java 11 with version 25Q1.</p> </li> </ul> </li> </ul>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#third-party-library-updates","title":"Third-Party Library Updates","text":"<p>List and describe the key external libraries that have been upgraded in this release, along with the versions and any relevant breaking changes in those libraries.</p> <ul> <li> <p><code>[dbsourcemanager] 1.0.3 -&gt; 1.0.4</code></p> <ul> <li>Notable Changes:<ul> <li>Renamed jar file to dbsourcemanager-1.0.4.jar.</li> <li>Changes to use new version of Apache Commons Lang 3 library.</li> <li>Changes to use new version of Apache Commons Collections 4 library.</li> <li>Changes in deprecated or removed features used in Java 17.</li> <li>Added support for PostgreSQL 16.</li> </ul> </li> </ul> </li> <li> <p><code>[commons-beanutils] 1.8.3 -&gt; 1.9.4</code></p> </li> <li> <p><code>[commons-codec] 1.11 -&gt; 1.17.1</code></p> </li> <li> <p><code>[commons-collections] 3.2.2 -&gt; 4.4</code> </p> <ul> <li> <p>Notable Changes:</p> <ul> <li>Commons Collections 4.0 Release Notes</li> <li>Commons Collections 4.1 Release Notes</li> <li>Commons Collections 4.2 Release Notes</li> <li>Commons Collections 4.3 Release Notes</li> <li>Commons Collections 4.4 Release Notes</li> </ul> </li> <li> <p>API Changes - Migration from Apache Commons Collections 3.2.2 to 4.4</p> <p>Starting with version 25Q1 of Etendo, Apache Commons Collections has been upgraded from version 3.2.2 to 4.4. This upgrade includes a change in the package structure: all references previously pointing to <code>org.apache.commons.collections</code> must now be updated to <code>org.apache.commons.collections4</code>.</p> </li> <li> <p>Migration Instructions</p> <p>Developers should update all import statements and internal references to reflect the new package structure. The previous package <code>org.apache.commons.collections</code> has been replaced by <code>org.apache.commons.collections4</code> in the new version. Please verify that the updated classes and methods are compatible with your existing code, as some methods may have been deprecated, renamed, or modified in behavior.</p> <pre><code>// Before (Apache Commons Collections 3.2.2)\nimport org.apache.commons.collections.CollectionUtils;\n\n// After (Apache Commons Collections 4.4)\nimport org.apache.commons.collections4.CollectionUtils;\n</code></pre> <p>For more detailed migration guidelines, please refer to the Apache Commons Collections 4.4 documentation.</p> </li> </ul> </li> <li> <p><code>[commons-digester] 1.8.1 -&gt; 2.1</code></p> </li> <li> <p><code>[commons-fileupload] 1.4 -&gt; 1.5</code></p> </li> <li> <p><code>[commons-io] 2.4 -&gt; 2.16.1</code></p> </li> <li> <p><code>[commons-lang] 2.6 -&gt; 3.17.0</code></p> <ul> <li> <p>Notable Changes:</p> <ul> <li>Commons Lang 3.0 Release Notes</li> <li>Commons Lang 3.1 Release Notes</li> <li>Commons Lang 3.2 Release Notes</li> <li>Commons Lang 3.3 Release Notes</li> <li>Commons Lang 3.4 Release Notes</li> <li>Commons Lang 3.5 Release Notes</li> <li>Commons Lang 3.6 Release Notes</li> <li>Commons Lang 3.7 Release Notes</li> <li>Commons Lang 3.8 Release Notes</li> <li>Commons Lang 3.8.1 Release Notes</li> <li>Commons Lang 3.9 Release Notes</li> <li>Commons Lang 3.10 Release Notes</li> <li>Commons Lang 3.11 Release Notes</li> <li>Commons Lang 3.12.0 Release Notes</li> <li>Commons Lang 3.13.0 Release Notes</li> </ul> </li> <li> <p>API Changes - Migration from Apache Commons Lang 2.6 to 3.17</p> <p>Starting with version 25Q1 of Etendo, Apache Commons Lang has been upgraded from version 2.6 to 3.17. As part of this upgrade, the package structure has changed. All classes previously imported from <code>org.apache.commons.lang.*</code> must now be updated to use the new package <code>org.apache.commons.lang3.*</code>.</p> </li> <li> <p>Migration Instructions</p> <p>Developers should update their import statements to reflect the new package structure. The previous package <code>org.apache.commons.lang</code> has been replaced by <code>org.apache.commons.lang3</code> in the new version. Please verify that the updated classes and methods are compatible with your existing code, as some methods may have been deprecated, renamed, or modified in behavior.</p> <pre><code>// Before (Apache Commons Lang 2.6)\nimport org.apache.commons.lang.StringUtils;\n\n// After (Apache Commons Lang 3.17)\nimport org.apache.commons.lang3.StringUtils;\n</code></pre> <p>For more detailed migration guidelines, refer to the Apache Commons Lang 3 migration notes.</p> </li> <li> <p>Deprecated Library</p> <p>Although the previous version of the library is maintained for backward compatibility, it will be removed in future releases. It is strongly recommended to migrate to Apache Commons Lang 3.17 to ensure long-term support and compatibility.</p> </li> </ul> </li> <li> <p><code>[hibernate-commons-annotations] 5.1.0.Final -&gt; 5.1.2.Final</code></p> <ul> <li>Notable Changes:<ul> <li>5.1.1.Final Release Notes</li> <li>5.1.2.Final Release Notes</li> </ul> </li> </ul> </li> <li> <p><code>[hibernate-core] 5.4.2.Final -&gt; 5.6.15.Final</code></p> <ul> <li>Notable Changes:<ul> <li>5.4.x Release Notes</li> <li>5.5.x Release Notes</li> </ul> </li> </ul> </li> <li> <p><code>[istack-commons-runtime] 3.0.7 -&gt; 4.2.0</code></p> </li> <li> <p><code>[jasperreports] 6.0.0 -&gt; 6.17.0</code></p> <ul> <li>Notable Changes:<ul> <li>Releases Page \u2013 GitHub</li> </ul> </li> </ul> </li> <li> <p><code>[jasperreports-fonts] 6.0.0 -&gt; 6.17.0</code></p> </li> <li> <p><code>[poi] 3.10.1 -&gt; 5.4.0</code></p> <ul> <li> <p>Notable Changes:</p> <ul> <li>Apache POI 5.4.0 (2025-01-08)</li> <li>Apache POI 5.3.0 (2024-07-02)</li> <li>Apache POI 5.2.5 (2023-11-25)</li> <li>Apache POI 5.2.4 (2023-09-28)</li> <li>Apache POI 5.2.3 (2023-05-22)</li> <li>Apache POI 5.2.2 (2023-01-19)</li> <li>Apache POI 5.2.1 (2022-09-09)</li> <li>Apache POI 5.2.0 (2022-01-14)</li> <li>Apache POI 5.1.0 (2021-08-07)</li> <li>Apache POI 5.0.0 (2021-02-08)</li> <li>Apache POI 4.1.2 (2019-12-16)</li> <li>Apache POI 4.1.1 (2019-07-20)</li> <li>Apache POI 4.1.0 (2019-04-22)</li> <li>Apache POI 4.0.1 (2018-11-24)</li> <li>Apache POI 4.0.0 (2018-09-07)</li> </ul> <p>For older versions like 3.10.1, you can check:</p> <ul> <li>Apache POI Release Archive (source &amp; binaries)</li> <li>Full changelog overview</li> </ul> </li> </ul> <p>Info</p> <p>Refer to each library\u2019s release notes for more detailed information on changes and how they might affect your system.</p> </li> </ul>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#new-libraries","title":"New Libraries","text":"<ul> <li> <p><code>[commons-text]</code></p> <ul> <li>Version: 1.10.0</li> <li>Documentation</li> </ul> </li> <li> <p><code>[commons-math3]</code></p> <ul> <li>Version: 3.6.1</li> <li>Documentation</li> </ul> </li> <li> <p><code>[castor-core]</code></p> <ul> <li>Version: 1.4.1</li> <li>Documentation</li> </ul> </li> <li> <p><code>[castor-xml]</code></p> <ul> <li>Version: 1.4.1</li> <li>Documentation</li> </ul> </li> <li> <p><code>[itext]</code></p> <ul> <li>Version: 2.1.7.js8</li> <li>Documentation</li> </ul> </li> </ul>"},{"location":"developer-guide/etendo-classic/developer-changelog/apichanges/#removed-libraries","title":"Removed Libraries","text":"<ul> <li> <p><code>[itext-pdfa]</code></p> <ul> <li>Version: 5.5.0</li> </ul> </li> <li> <p><code>[itextpdf]</code></p> <ul> <li>Version: 5.5.0</li> </ul> </li> <li> <p><code>[jcommon]</code></p> <ul> <li>Version: 1.0.15</li> </ul> </li> <li> <p><code>[jxl]</code></p> <ul> <li>Version: 2.6.10</li> </ul> </li> </ul>"},{"location":"developer-guide/etendo-classic/developer-tools/etendo-backup-restore-tool/","title":"Etendo Backup and Restore Plugin","text":"","tags":["Plugin","Gradle","Backup","Restore"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-backup-restore-tool/#overview","title":"Overview","text":"<p>This article explains how to use the Etendo Backup and Restore plugin in Etendo Classic. This plugin allows you to easily generate and restore Etendo backups.</p>","tags":["Plugin","Gradle","Backup","Restore"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-backup-restore-tool/#install-plugin","title":"Install plugin","text":"<p>To use the Etendo Backup and Restore tool, you should add the plugin id on the <code>build.gradle</code> file, with the selected version.</p> build.gradle<pre><code>plugins {\n    id 'com.etendoerp.etendobackup' version '&lt;version&gt;'\n}\n</code></pre> <p>Info</p> <p>To know the available versions of the plugin, please visit the Release Notes.</p> <p>To resolve the plugin dependiencies, you should add the following lines on top of the <code>settings.gradle</code> file</p> settings.gradle<pre><code>pluginManagement {\n    repositories {\n        maven {\n            url 'https://maven.pkg.github.com/etendosoftware/com.etendoerp.etendobackup'\n            credentials {\n                username \"${githubUser}\"\n                password \"${githubToken}\"\n            }\n        }\n        mavenCentral()\n    }\n}\n</code></pre> <p>Warning</p> <p>Make sure you have your Github credentials (<code>githubUser</code> and <code>githubToken</code>) set in the <code>gradle.properties</code> file.</p>","tags":["Plugin","Gradle","Backup","Restore"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-backup-restore-tool/#backup-task","title":"Backup task","text":"<p>To run the backup, execute</p> Terminal<pre><code>./gradlew backup -PbkpMode=&lt;mode&gt;\n</code></pre> <p>Where the mode could be <code>manual</code> or <code>auto</code>. If the parameter is not specified, the default mode is <code>manual</code>.</p>","tags":["Plugin","Gradle","Backup","Restore"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-backup-restore-tool/#backup-properties-file","title":"Backup properties file","text":"<p>The <code>backup.properties</code> file is found inside the <code>config</code> folder on the root project. If it does not exists, run <code>./gradlew setup</code> to generate the missing files.</p> <p>You can also provide a custom location of <code>backup.properties</code> adding the next block inside <code>build.gradle</code>. build.gradle<pre><code>backup {\n    configPath = \"/path/to/backup.properties\"\n}\n</code></pre></p> <p><code>backup.properties</code> contains most of the properties that you should customize before running the backup.</p> <ul> <li> <p><code>USER</code> Sets the user who will be running the backup.</p> </li> <li> <p><code>GROUP</code> Sets the group related to the user running the backup.</p> </li> <li> <p><code>BACKUPS_DIR</code> Sets the path where the backup will be stored.</p> <p>Warning</p> <p>Ensure that the directory where the backups will be stored is already created and that the configured user has write permissions on it.</p> </li> <li> <p><code>BACKUPS_TMP_DIR</code> Sets the path where the temp directory will be created to store the generated files.</p> </li> <li> <p><code>ATTACH_COPY</code> Sets a flag (<code>yes</code> or <code>no</code>) if the external attachments (if cointained) should be included in the backup.</p> </li> <li> <p><code>ATTACH_IN_BKP</code> Sets a flag (<code>yes</code> or <code>no</code>) if the source attachments should be included in the backup.</p> </li> </ul>","tags":["Plugin","Gradle","Backup","Restore"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-backup-restore-tool/#email-properties","title":"Email properties","text":"<p>These properties are used when the backup is running in <code>auto</code> mode.</p> <ul> <li><code>EMAIL_FROM</code> Sets the address sending emails.</li> <li><code>EMAIL_SERVER</code> Sets the email server address.</li> <li><code>EMAIL_PORT</code> Sets the port for the email server..</li> <li><code>EMAIL_USER</code> Sets the user address who sends emails.</li> <li><code>EMAIL_PASSWORD</code> Sets the email user password.</li> <li><code>EMAIL_ENVIRONMENT</code> Specifies the environment for sending emails.</li> </ul> <p>Depending on the end <code>STATE</code>, the following properties are used to specify the email address where to send emails.</p> <p>Error</p> <ul> <li><code>EMAIL_ERROR_TO</code>   Sets the email address where error emails will be sent.</li> <li><code>EMAIL_ERROR_CC</code>   Sets the email address to which copies (CC) will be sent in case of error.</li> <li><code>EMAIL_ERROR_SUBJECT</code>   Sets the subject of the error email.</li> </ul> <p>Warning</p> <ul> <li><code>SEND_EMAIL_ON_WARNING</code>   Specifies whether to send an email notification in case of warning during the backup process. Accepted values are <code>yes</code> or <code>no</code>.</li> <li><code>EMAIL_WARNING_TO</code>   Sets the email address where warning emails will be sent.</li> <li><code>EMAIL_WARNING_CC</code>   Sets the email address to which copies (CC) will be sent in case of warning.</li> <li><code>EMAIL_WARNING_SUBJECT</code>   Sets the subject of the warning email.</li> </ul> <p>Success</p> <ul> <li><code>SEND_EMAIL_ON_SUCCESS</code>   Specifies whether to send an email notification in case of success during the backup process. Accepted values are <code>yes</code> or <code>no</code>.</li> <li><code>EMAIL_WARNING_TO</code>   Sets the email address where success emails will be sent.</li> <li><code>EMAIL_WARNING_CC</code>   Sets the email address to which copies (CC) will be sent in case of success.</li> <li><code>EMAIL_WARNING_SUBJECT</code>   Sets the subject of the success email.</li> </ul> <p>Note</p> <p>In order to send the email to multiple accounts, separate addresses with <code>;</code>. For example: <code>EMAIL_ERROR_CC=user1@etendo.software;user2@etendo.software</code></p>","tags":["Plugin","Gradle","Backup","Restore"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-backup-restore-tool/#end-states","title":"End states","text":"<p>The following are the possible states at the end of the <code>backup</code> task:</p> <p>Error</p> <p>Occurs when the creation of the backup fails. An email must be sent to the specified properties.</p> <p>Warning</p> <p>The backup ends with warning messages. If the <code>SEND_EMAIL_ON_WARNING</code> flag is set to yes, an email should be sent to the specified properties.</p> <p>Success</p> <p>The backup ends without warning or errors. If the <code>SEND_EMAIL_ON_SUCCESS</code> flag is set to yes, an email should be sent to the specified properties.</p>","tags":["Plugin","Gradle","Backup","Restore"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-backup-restore-tool/#restore-task","title":"Restore task","text":"<p>Warning</p> <p>The user running the restore should have <code>SUDO</code> access.</p> <p>To run the restore, execute</p> Terminal<pre><code>./gradlew restore -PbackupPath=/path/to/backup\n</code></pre> <p>Replace <code>/path/to/backup/</code> with the location of the backup to be restored.</p> <p>A menu will be shown where you can choose multiple options to be performed.</p> <p>Warning</p> <p>Make sure all the options selected are correct. The selected destination directories and database will be OVERWRITTEN.</p> <ol> <li> <p>User verification   You should run the restore with <code>SUDO</code> access (recommended). In case of not having permissions, you will have the option of inserting the <code>SUDO</code> password.</p> </li> <li> <p>Sources destination   You can select the location in which the sources will be restored. The default path is set to the root dir from the project where the restore command is being executed.</p> </li> <li> <p>Attachments verification   You can select to keep or ignore the copy of attachments (externals or contained inside the sources).</p> </li> <li> <p>Properties verification   You can select which properties to use.</p> <p>Info</p> <p>The properties set the options which the database will use on the restore.</p> <ul> <li> <p>Project properties   Obtained from the <code>gradle.properties</code> file inside the current project running the restore.    You can change these properties to select, for example, the name of the database to be restored.   Once the restore is done, the properties inside <code>config/Openbravo.properties</code> will be updated with the selected ones.</p> </li> <li> <p>Original sources properties   Obtained from the <code>gradle.properties</code> file inside the original sources.   The database will be restored with the original options (this could overwrite an existing database)   The properties inside <code>config/Openbravo.properties</code> will not change.</p> </li> </ul> </li> <li> <p>Database properties   In the end, a message will be shown with the properties which the database will use to be restored. These properties depend on the ones selected previously.</p> </li> </ol>","tags":["Plugin","Gradle","Backup","Restore"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/","title":"Etendo  Gradle  Plugin","text":"","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#overview","title":"Overview","text":"<p>This article explains how to use Gradle, an open-source build automation tool that is designed to be flexible enough to build almost any type of software. </p> <p>Note</p> <p>For additional information read: What is gradle?.</p> <p>Etendo uses Gradle to define and improve compilation, version management, modules publication, migrations and more tasks.</p>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#how-to-use-gradle","title":"How to use Gradle","text":"<p>Etendo project includes an embedded wrapper from Gradle called <code>gradlew</code>. Run the following  command in the Etendo project directory, and it will execute the mentioned task.</p> Terminal<pre><code> ./gradlew &lt;task&gt;\n</code></pre> <p>You can use <code>-P&lt;Parameter Name&gt;</code> to pass parameters in a task. For example:</p> Terminal<pre><code>./gradlew publishVersion -Ppkg=test.package\n</code></pre>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#common-gradle-flags","title":"Common Gradle flags","text":"Flag Description --offline To execute Gradle without internet connection. --stop To stop all Gradle daemons. --no-daemon To execute a Gradle task without launching a daemon. --info To give more information in the task execution. --refresh-dependencies Will force download of dependencies.","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#etendo-plugin","title":"Etendo plugin","text":"<p>Add in the <code>build.gradle</code> file the plugin version available in Gradle Plugin Release Notes or use <code>lastest.release</code> to resolve the latest version.</p> build.gradle<pre><code>plugins {\n    id 'com.etendoerp.gradleplugin' version '&lt;version&gt;'\n}\n</code></pre>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#plugin-configuration","title":"Plugin configuration","text":"<p>The plugin configuration need to be declared in the etendo block.  In the following sections, you can find all the flags or variables available to set up and a brief description of each one.</p> build.gradle<pre><code>etendo {\n  /**\n  * Flags used to indicate if the 'default' core dependencies (jar files) should be\n  * loaded (This is the case when you are working with sources and the 'default' jar files are missing)\n  * This flags should be false.\n  */\n  boolean loadCompilationDependencies = false\n  boolean loadTestDependencies = false\n\n  /**\n  * Flag used to ignore loading the source modules to perform resolution conflicts.\n  * Default true\n  */\n  boolean ignoreSourceModulesResolution = true\n\n  /**\n  * Flag used to perform or not the resolution of conflicts.\n  * Default true\n  */\n  boolean performResolutionConflicts = true\n\n  /**\n  * Flag used to ignore throwing a error if there is conflict resolutions with the Core dependency.\n  * Default false\n  */\n  boolean forceResolution = false\n\n  /**\n  * Flag used to apply the subproject dependencies to the main project.\n  * Default true\n  */\n  boolean applyDependenciesToMainProject = true\n\n  /**\n  * Flag used to prevent overwriting the transitive source modules when performing the expandModules task.\n  * Default true\n  */\n  boolean overwriteTransitiveExpandModules = true\n\n  /**\n  * Flag used to exclude the Core dependency from each subproject to all the configurations.\n  * Default true\n  */\n  boolean excludeCoreDependencyFromSubprojectConfigurations = true\n\n  /**\n  *  Flag used to indicate that the current Core version support jars.\n  *  Default true.\n  *     When this flag is set to false, the behavior of the 'expandModules' task will change, forcing to expand all the declared modules with 'moduleDeps' to sources.\n  */\n  boolean supportJars = true\n\n  /**\n  * List of Etendo artifacts to always extract and ignore from the version consistency verification.\n  */\n  List&lt;String&gt; ignoredArtifacts = []\n\n  /**\n  * Flag use to prevent throwing error on version inconsistency between modules.\n  * Default false\n  */\n  boolean ignoreConsistencyVerification = false\n\n  /**\n  * Flag used to prevent throwing error when an artifact could not be resolved.\n  * This includes transitives ones.\n  * Default false\n  */\n  boolean ignoreUnresolvedArtifacts = false\n\n  /**\n  * The list of modules that should not be re expanded.\n  * Default empty.\n  */\n  List&lt;String&gt; sourceModulesInDevelopment = []\n\n  /**\n  * Flag used to ignore the Etendo CORE jar dependency located in the\n  * build.gradle of the root project.\n  * Default false.\n  */\n  boolean ignoreCoreJarDependency = false\n}\n</code></pre>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#common-gradle-tasks","title":"Common Gradle tasks","text":"<p>Danger</p> <p>Since Etendo Classic 25Q1 all Gradle tasks with Java versions below 17 are not allowed. To add support for previous versions, the new flag <code>java.version</code> has been added.</p> Terminal<pre><code>./gradlew &lt;task&gt; -Pjava.version=11\n</code></pre> <p>This new flag forces the use of Java 11.</p> <ul> <li> <p>Creates the properties and configuration files.</p> Terminal<pre><code>./gradlew setup \n</code></pre> Command line parameters Description <code>-PforceDefaultProps=true</code> Recreates the default properties file from the template. <code>-PforceBackupProps=true</code> Recreates the backup.properties file from the template. <code>-PforceQuartzProps=true</code> Recreates the quartz.properties file from the template. </li> <li> <p>Creates the properties files from the templates in <code>/config</code> folder. The setup tasks depend on this task.     Terminal<pre><code>./gradlew prepareConfig\n</code></pre></p> </li> <li> <p>Creates the database and installs reference data.      Terminal<pre><code>./gradlew install\n</code></pre></p> </li> <li> <p>Compiles the Java classes that were modified and deploys them to Tomcat.</p> Terminal<pre><code>./gradlew smartbuild\n</code></pre> Command line parameter Description <code>PignoreConsistency=true</code> Flag used to ignore the consistency verification (verifies the versions between the local modules and the installed ones) </li> <li> <p>Deletes all the Java Classes and recompiles them.      Terminal<pre><code>./gradlew compile.complete\n</code></pre></p> </li> <li> <p>Updates the database applying the changes in XML files.     Terminal<pre><code>./gradlew update.database\n</code></pre></p> </li> <li> <p>Exports the database changes to XML files     Terminal<pre><code>./gradlew export.database\n</code></pre></p> </li> <li> <p>Exports the module Application Dictionary data.     Terminal<pre><code>./gradlew export.database\n</code></pre></p> </li> <li> <p>Exports the configuration script.      Terminal<pre><code>./gradlew export.config.script \n</code></pre></p> </li> <li> <p>Task to download core dependency.     Terminal<pre><code>./gradlew expandCore\n</code></pre></p> Command line parameter Description <code>-PforceExpand=&lt;true&gt;</code> Flag used to force the sources expansion when the core is in JAR. </li> <li> <p>Task to download the modules dependencies in sources.     Terminal<pre><code>./gradlew expandModules\n</code></pre></p> Command line parameter Description <code>-Ppkg=&lt;package name&gt;</code> The name of the module to be re expanded in case that it is already in sources. This will OVERWRITE all the changes in the module. </li> <li> <p>Task to delete directories created by the expandCore task.     Terminal<pre><code>./gradlew cleanExpandCore\n</code></pre></p> </li> </ul>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#submodules","title":"Submodules","text":"<ul> <li> <p>Creates the <code>build.gradle</code> file with all the necessary information to publish.     Terminal<pre><code>./gradlew createModuleBuild\n</code></pre></p> Command line parameters Description <code>-Ppkg=&lt;package name&gt;</code> The name of the module. <code>-Prepo=&lt;repository name&gt;</code> The name of the repository. </li> <li> <p>Publish the module to a custom repository.</p> Terminal<pre><code>./gradlew publishVersion\n</code></pre> Command Line Parameters Description <code>-Ppkg=&lt;packagename&gt;</code> Required The name of the module. <code>-Precursive=true</code> This trigger the republication of all the modules which depends on the module being published. By default false. <code>-PupdateLeaf=true</code> This updates automatically the version of the project beign published.By default false. </li> <li> <p>Uninstalls a source module.     Terminal<pre><code>./gradlew uninstallModule\n</code></pre></p> Command line parameter Description <code>-Ppkg=&lt;modulename&gt;</code> The javapackage of the source module to uninstall. </li> </ul>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#internal-developer-tasks","title":"Internal developer tasks","text":"<ul> <li> <p>Used to clone all the git submodules of a module extension (bundle). The module <code>build.gradle</code> should contain the property       Terminal<pre><code>./gradlew cloneDependencies\n</code></pre></p> build.gradle<pre><code>ext.defaultExtensionModules = [\n    'git@bitbucket.org:example1.git',\n    'git@bitbucket.org:example2.git'\n  ]\n</code></pre> Command line parameter Description <code>-Ppkg=&lt;package name&gt;</code> Required The name of the bundle </li> <li> <p>Creates all the <code>build.gradle</code> files for each module using the database from AD_MODULExml.     Terminal<pre><code>./gradlew createModuleBuild\n</code></pre></p> Command line parameter Description <code>-Ppkg=&lt;package name&gt;</code> Required The name of the bundle <code>-Prepo=&lt;repository name&gt;</code> Required The name of the repository <code>-Pbundle=&lt;bundle package name&gt;</code> The name of the bundle <code>--Ppkg=all</code> Creates all the <code>build.gradle</code> files for each module, each <code>build.gradle</code> file will contain the dependencies between projects (in the dependencies block). </li> <li> <p>Parameters to override the default core group, name and version.</p> Command line parameters Description <code>-PcoreGroup=&lt;core group&gt;</code> The core group name <code>-PcoreName=&lt;core name&gt;</code> The core name <code>-PcoreVersion=&lt;core version&gt;</code> The core version </li> <li> <p>Parameters to override the default repository. Publish all the modules located in the source modules directory.     Terminal<pre><code>./gradlew publishAll\n</code></pre></p> Command line parameters Description <code>-PupdateLeaf=true</code> This updates automatically the version of all the project beign published. By defaul false. <code>-Pupdate=&lt;mayor, minor, patch&gt;</code> Used to specify which part of the version will be updated. By default patch. <code>-PpushAndTag=true</code> Used to specify if the modules published should push the changes and create a tag in the git repository. By default false. <code>-PpushAll=true</code> Used to specify if all the modules should run the push and tag. By default false. </li> <li> <p>Task used to push and tag the modules' changes.     Terminal<pre><code>./gradlew pushToGit\n</code></pre></p> Command line parameters Description <code>-PpushAll=true</code> Used to specify if all the modules should run the push and tag. By defaul false. </li> <li> <p>Updates the version of a dependency in each <code>build.gradle</code> submodule.     Terminal<pre><code>./gradlew updateModuleBuildDependency\n</code></pre></p> <p>Warning</p> <p>If you put a wrong version, you have to revert the changes manually.</p> Command line parameters Description <code>-Pdependency=&lt;dependency name&gt;</code> The name of the module to update in each <code>build.gradle</code>. Default <code>com.etendoerp.platform.etendo-core</code> <code>-PlowerBound=&lt;version&gt;</code> The lower version bound. Example: <code>-PlowerBound=1.0.3</code> <code>-PlowerBoundInclusive=&lt;true or false&gt;</code> (Default false) <code>-PupperBound=&lt;version&gt;</code> The upper version bound. Example: <code>-PupperBound=1.0.3</code> <code>-PupperBoundInclusive=&lt;true or false&gt;</code> (Default false) <code>-PexactVersion=&lt;version&gt;</code> Will replace the current version with the specified one. The version should be between quotes. Example: <code>-PexactVersion=\"[1.0.3]\"</code> </li> </ul>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#ant-tasks","title":"Ant tasks","text":"<p>Most of ant build tasks previously used can be run with Gradle:</p> Terminal<pre><code>./gradlew &lt;ant task&gt; [params]\n</code></pre> <p>Except for some commands:</p> Old Command New Command clean antClean setup antSetup init antInit install.source antInstall war antWar","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#conflict-resolution","title":"Conflict resolution","text":"<p>Note</p> <p>Etendo makes use of the Conflict Resolution Strategy offered by GRADLE.</p> <p>This approach is used to identify conflict between Etendo artifacts published in a repository.</p> <p>For example, when you make use of an Etendo module, which depends on the Etendo core</p> build.gradle<pre><code>group          = 'com.etendo'\next.artifact   = \"moduleCextract\"\nversion        = '1.0.1'\ndependencies {\n    // Etendo CORE dependency\n    implementation 'com.etendoerp.platform:etendo-core:[22.1.1, 22.1.2]'\n}\n</code></pre> <p>and you are currently working with the Etendo core in <code>22.1.0</code>, then a conflict resolution is found.</p> <p>Depending on the type of conflict, if the problem is with the Etendo Core, then a Exception will be thrown.</p> <p>To force the dependencies' resolution must be the last step to follow</p> <p>You can force the resolution using the extension flag <pre><code>etendo {\n  forceResolution = true\n}\n</code></pre></p> <p>If you want to skip the resolution you can add to the plugin extension the flag. <pre><code>etendo {\n  performResolutionConflicts = false\n}\n</code></pre></p>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#version-consistency","title":"Version consistency","text":"<p>The version consistency approach verifies that an extracted Etendo JAR artifact is consistent with the installed one (Equal version).</p> <p>When a new Etendo JAR dependency is added or the version is updated, a <code>update.database</code> is needed to run before executing any compilation task (smartbuild, compile.complete, etc). You can force the compilation tasks by adding to the Etendo plugin extension the ignore flag</p> <p>These section explains how to ingore the consistency verification. Use this approach only if there are no conflicts between versions. </p> <p><pre><code>etendo {\n  ignoreConsistencyVerification = true \n}\n</code></pre> or run the tasks with the <code>-PignoreConsistency=true</code> flag.</p> <p>By default Etendo does not allow you to add a JAR dependency with an old version to the current installed one. You can ignore this behavior adding the module name to be updated with an old version as a configuration. <pre><code>etendo {\n  ignoredArtifacts = ['com.etendoerp.mymodulename']\n}\n</code></pre></p>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#uninstall-modules","title":"Uninstall modules","text":"Source Modules Jar Modules <p>To uninstall an Etendo module you need to run the gradle task.</p> Terminal<pre><code>./gradlew uninstallModule -Ppkg=&lt;modulename&gt;\n</code></pre> <p>This task will try to delete the source module and the source dependencies which depends on it.</p> <p>If the module to uninstall is a dependency of other source module, an exception is thrown. You can force the uninstall providing the flag <code>-Pforce=true</code>.</p> <p>You can make use of Gradle exclusion rules to prevent the extraction of a JAR dependency. In the <code>build.gradle</code> of the root project you can specify the dependency to exclude.</p> build.gradle<pre><code>configurations.implementation {\n  exclude group: 'com.test', module: 'custommodule1'\n  exclude group: 'com.test', module: 'custommodule2'\n}\n</code></pre> <p>If the dependency belongs to a <code>build.gradl</code> of a source module, it may be downloaded when the <code>javaCompile</code> task is executed. You can also make use of gradle exclude rules.</p> <p>Warning</p> <p>When you make use of exclude rules in a custom source module, the <code>pom.xml</code> can be affected when you publish a new version.</p> <p>To prevent downloading dinamic JAR modules, you need to remove the dependency from each <code>build.gradle</code>.</p> <p>The JAR module could also be a transitive dependency. You can see the transitive dependencies tree running the gradle task <code>./gradlew dependencies --info</code> and remove the root parent dependency.</p> <p>When you declare a dependency you can also exclude custom modules. See Gradle dependency exclusion.</p> <p>Info</p> <p>Etendo JAR modules are dinamically extracted in the root project <code>build/etendo/modules</code> directory.</p> <p>Warning</p> <p>Each <code>build.gradle</code> file (from the root project or source modules) can be using the dependency directly or by transitivity and this can lead to resolution of the module.</p> <p>Finally you need to rebuild the system:</p> Terminal<pre><code>./gradlew update.database compile.complete\n</code></pre>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#recompile-css-files","title":"Recompile CSS files","text":"","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#requirements","title":"Requirements","text":"<ul> <li>Node.js: Version 16 or higher.</li> <li>npm: Node Package Manager.</li> <li>Sass: Must have a Sass compiler installed.</li> </ul> How to install Node.js, npm and Sass  Linux Mac OS Windows <p>Node.js 16.10.0 using NVM:</p> <ol> <li> <p>Install NVM (Node Version Manager): <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\n</code></pre> Close and reopen your terminal to start using NVM, or execute the following commands: <pre><code>export NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"\n[ -s \"$NVM_DIR/bash_completion\" ] &amp;&amp; \\. \"$NVM_DIR/bash_completion\"\n</code></pre></p> </li> <li> <p>Install Node.js version 16.10.0: <pre><code>nvm install 16.10.0\n</code></pre></p> <p>Note: If you encounter errors during the installation of Node.js with the <code>nvm install 16.10.0</code> command, it might be because <code>curl</code> isn't installed or is misconfigured on your system. In such cases, you can try running the following commands:</p> <pre><code>sudo snap remove curl\nsudo apt install curl\n</code></pre> <p>After successfully configuring <code>curl</code> using this method, return to this guide and execute the steps above to install NVM and set up Node.js.</p> </li> <li> <p>Set Node.js version 16.10.0 as the default version: <pre><code>nvm use 16.10.0\nnvm alias default 16.10.0\n</code></pre></p> </li> <li> <p>Verify the installation: <pre><code>node -v\nnpm -v\n</code></pre></p> </li> </ol> <p>Homebrew Installation:</p> <ul> <li>Install Homebrew by running the following command in the terminal:</li> </ul> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> <ul> <li>Once Homebrew is installed, verify it by checking its version:</li> </ul> <pre><code>brew --version\n</code></pre> <p>Node.js &amp; npm Installation using Homebrew:</p> <ol> <li> <p>Update Homebrew (ensuring you have the latest package definitions): <pre><code>brew update\n</code></pre></p> </li> <li> <p>Install Node.js and npm: <pre><code>brew install node\n</code></pre></p> </li> <li> <p>Verify the installation of Node.js and npm: <pre><code>node -v\nnpm -v\n</code></pre></p> </li> </ol> <p>Node.js &amp; npm:</p> <ol> <li> <p>Download the Node.js Windows Installer from the official website.</p> </li> <li> <p>Run the installer and follow the instructions.</p> </li> <li> <p>After installation, open a command prompt or PowerShell and verify the installation: <pre><code>node -v\nnpm -v\n</code></pre></p> </li> </ol> <p>Installing npm (Node Package Manager)</p> <p>If you don't have npm installed on your system, follow these steps:</p> <ul> <li>Install npm globally using the following command:</li> </ul> <pre><code>npm install -g npm\n</code></pre> <ul> <li>Confirm the installation by checking the versions of node and npm:</li> </ul> <pre><code>node -v\nnpm -v\n</code></pre> <p>Installing Sass (Syntactically Awesome Style Sheets)</p> <p>If you have npm installed and need the Sass compiler, follow these instructions:</p> <ul> <li>Use npm to install Sass globally on your system:</li> </ul> <pre><code>npm install -g sass\n</code></pre> <ul> <li>Confirm the Sass installation by running:</li> </ul> <pre><code>sass --version\n</code></pre> <p>Seeing the Sass version number means that Sass has been installed correctly.</p>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#execution","title":"Execution","text":"<p>The <code>cssCompile</code> task in the Etendo Gradle configuration is specifically designed to convert <code>.scss</code> files into <code>.css</code> files. To customize the Etendo skin, you will need to work with <code>.scss</code> files. </p> Terminal<pre><code>./gradlew cssCompile smartbuild\n</code></pre> <p>After executing the task, look for the following output to indicate a successful build:</p> <p>Successful Execution</p> <p>After executing the task, the following output indicates a successful build:</p> <pre><code>&gt; Task :cssCompile\n&gt; BUILD SUCCESSFUL\n</code></pre> <p>This confirms the successful processing of the files.</p> <p>Finally, restart Tomcat to apply the changes and ensure the updated <code>.css</code> files are properly deployed.</p>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-gradle-plugin/#delete-client-process","title":"Delete Client Process","text":"<ul> <li> <p>The <code>delete.client</code> task allow runs Delete Client Process directly from gradlew, also this task allows runs this process with Tomcat service down to avoid database locks.</p> Terminal<pre><code>./gradlew delete.client\n</code></pre> Command line parameters Description <code>-DclientId=&lt;AD_Client_ID&gt;</code> <code>AD_Client_ID</code> of <code>AD_Client</code> table to be used on this process to delete all information of this client. <p>Danger Process</p> <p>This task execute the same legacy process that you can run in the application like as System Administrator role. It is a very sensitive task you must be very careful because this can lead to crashes in the system if used incorrectly. A backup previous to executing the task is recommended.</p> </li> </ul>","tags":["Gradle","Tasks","Plugin","Parameters"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-testing-plugin/","title":"Etendo Testing Plugin","text":"","tags":["Plugin","Gradle","Testing","JUnit","Spock"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-testing-plugin/#overview","title":"Overview","text":"<p>This article describes how to use the Etendo Testing Plugin. This plugin provides a standardized test environment compatible with Groovy, Spock, JUnit 4/5, and Mockito for Etendo Classic projects.</p>","tags":["Plugin","Gradle","Testing","JUnit","Spock"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-testing-plugin/#installation","title":"Installation","text":"<p>Add the plugin to your <code>build.gradle</code> file:</p> build.gradle<pre><code>plugins {\n    id 'com.etendoerp.testing.gradleplugin' version '&lt;version&gt;'\n}\n</code></pre> <p>Info</p> <p>Check the available plugin versions in the Release Notes.</p>","tags":["Plugin","Gradle","Testing","JUnit","Spock"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-testing-plugin/#test-structure","title":"Test structure","text":"<p>The plugin includes the following test directories by default:</p> <pre><code>src-test/\n\u251c\u2500\u2500 src/          \u2192 Java test sources\n\u251c\u2500\u2500 test/groovy/  \u2192 Groovy/Spock tests\n\u251c\u2500\u2500 resources/    \u2192 Test resources\n</code></pre> <p>It also dynamically includes test sources from:</p> <ul> <li><code>modules/**/src-test/src</code></li> <li><code>modules_core/**/src-test</code></li> </ul>","tags":["Plugin","Gradle","Testing","JUnit","Spock"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-testing-plugin/#example-usage","title":"Example usage","text":"<p>Run tests:</p> <pre><code>./gradlew test\n</code></pre> <p>Generate reports:</p> <ul> <li>Spock HTML reports are enabled via <code>spock-reports</code></li> <li>Use standard Gradle test reports in <code>build/reports/tests/test/index.html</code></li> </ul>","tags":["Plugin","Gradle","Testing","JUnit","Spock"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-testing-plugin/#advanced-options","title":"Advanced options","text":"<p>You can add additional libraries to <code>lib/test/</code> and they will be automatically included:</p> <pre><code>testImplementation fileTree(project.projectDir) {\n    include \"lib/test/*.jar\"\n}\n</code></pre> <p>The plugin also registers an optional helper task:</p> <pre><code>./gradlew depsTest\n</code></pre> <p>Which injects compile-time dependencies into <code>testImplementation</code>.</p>","tags":["Plugin","Gradle","Testing","JUnit","Spock"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-testing-plugin/#technologies-used","title":"Technologies used","text":"<ul> <li>Groovy 3.0.9  </li> <li>Spock Framework 2.0 (Groovy 3)</li> <li>JUnit 4.13.1 + JUnit Platform</li> <li>Mockito 5.0.0</li> <li>Spock Reports 2.0</li> </ul>","tags":["Plugin","Gradle","Testing","JUnit","Spock"]},{"location":"developer-guide/etendo-classic/developer-tools/etendo-testing-plugin/#compatibility","title":"Compatibility","text":"Plugin Version Gradle Java 1.0.0 7.0+ 11+ 2.0.0 8.0+ 17+","tags":["Plugin","Gradle","Testing","JUnit","Spock"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-etendo-development-environment/","title":"Install Etendo Development Environment","text":"","tags":["Getting Started","Development Mode","Develop","Install Etendo"],"boost":2},{"location":"developer-guide/etendo-classic/getting-started/installation/install-etendo-development-environment/#overview","title":"Overview","text":"<p>This section explains how to install and run a new local Etendo environment.</p>","tags":["Getting Started","Development Mode","Develop","Install Etendo"],"boost":2},{"location":"developer-guide/etendo-classic/getting-started/installation/install-etendo-development-environment/#install-etendo-in-local-environment","title":"Install Etendo in local Environment","text":"<p>To install Etendo in a development environment, follow the same steps as described in the Etendo Installation Guide, the only difference is that we open the project with intelliJ and run Tomcat locally.</p>","tags":["Getting Started","Development Mode","Develop","Install Etendo"],"boost":2},{"location":"developer-guide/etendo-classic/getting-started/installation/install-etendo-development-environment/#run-etendo-development-environment","title":"Run Etendo Development Environment","text":"IntelliJ IDEA Community EditionIntelliJ IDEA Ultimate <ol> <li> <p>Download and install IntelliJ IDEA Community Edition</p> </li> <li> <p>Open Etendo source directory with IntelliJ:     </p> </li> <li> <p>Install Smart Tomcat plugin:     To install, go to <code>Settings</code> &gt;&gt; <code>Plugins</code> and search for <code>\u201cSmart Tomcat\u201d</code> </p> </li> <li> <p>Download Apache Tomcat and unzip it in the project directory</p> </li> <li> <p>Setting up Tomcat</p> <ul> <li>Go to Current File &gt;&gt; Edit configurations. </li> <li>Add new Smart Tomcat Configuration, clicking \"+\"</li> <li>Name: Tomcat</li> <li>Tomcat Server: Select unziped Apache Tomcat directory</li> <li>Deployment directory: Select <code>WebContent</code> directory in the project</li> <li>Context path: define the same context path defined in gradle.properties file (by default \"/etendo\" )</li> <li>Before launch: Remove all default tasks</li> </ul> <p> </p> </li> <li> <p>Start the Tomcat </p> <p></p> <p>Success</p> <p>Now you have a new Etendo environment running in http://localhost:8080/etendo</p> <p>Default credentials</p> <p>User: admin Password: admin</p> </li> </ol> <ol> <li> <p>Download and install IntelliJ IDEA Ultimate</p> </li> <li> <p>Open Etendo source directory with IntelliJ:</p> <p></p> </li> <li> <p>Seting up Tomcat</p> <ul> <li> <p>Go to Current File &gt;&gt; Edit configurations.</p> <p></p> </li> <li> <p>Select the Tomcat configuration that appears first in the list, check the Tomcat server configuration on your machine.</p> <p></p> </li> <li> <p>In the Deployment section, add external sources </p> <p></p> </li> <li> <p>Selec the C <code>${env.CATALINA_HOME}/webapps/etendo</code> folder  or  the and then click the OK button.</p> <p></p> </li> </ul> </li> <li> <p>Start the Tomcat</p> <p></p> <p>Success</p> <p>Now you have a new Etendo environment running in http://localhost:8080/etendo</p> <p>Default credentials</p> <p>User: admin Password: admin</p> </li> </ol>","tags":["Getting Started","Development Mode","Develop","Install Etendo"],"boost":2},{"location":"developer-guide/etendo-classic/getting-started/installation/install-etendo-development-environment/#enable-etendo-logs-optional","title":"Enable Etendo Logs (Optional)","text":"<ol> <li> <p>Open the file <code>config/log4j2-web.xml</code>, find the line <code>&lt;!-- &lt;AppenderRef ref=\"Console\"/&gt; --&gt;</code> and uncomment it:</p> <p>config/log4j2-web.xml<pre><code>...\n&lt;Loggers&gt;\n    &lt;Root level=\"info\"&gt;\n    &lt;AppenderRef ref=\"RollingFile\"/&gt;\n    &lt;!-- Add this appender to show log messages in console i.e Eclipse: --&gt;\n    &lt;AppenderRef ref=\"Console\"/&gt;  &lt;&lt; UNCOMMENT THIS LINE\n    &lt;/Root&gt;\n...\n</code></pre> 2. Run smartbuild task</p> Terminal<pre><code>    ./gradlew smartbuild --info \n</code></pre> </li> </ol>","tags":["Getting Started","Development Mode","Develop","Install Etendo"],"boost":2},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/","title":"Install Modules in Etendo Classic","text":"","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#overview","title":"Overview","text":"<p>This guide explains two different ways to install modules in Etendo Classic:</p> <ul> <li> <p>Gradle Standard Installation: This method involves manually defining the dependencies in the project's <code>build.gradle</code> file, specifying the modules to be included either as JAR or Source format.</p> </li> <li> <p>Using the Dependency Manager: A module pre-installed in Etendo instances that allows managing and installing dependencies directly from the Etendo Classic user interface, without the need to manually edit configuration files.</p> </li> </ul> <p></p> <p>Important Notice</p> <p>It is strongly recommended to choose only one method for managing dependencies: either Gradle Standard Installation or the Dependency Manager. Once you start using the Dependency Manager, it takes precedence over the <code>build.gradle</code> file, and dependency information will be managed through the database instead. Combining both methods is not supported and may result in unexpected behavior or inconsistencies during the installation or upgrade of modules.</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#authentication","title":"Authentication","text":"<p>It is important to mention that the dependencies are resolved from GitHub, so you must have the credentials properly configured as explained in the Use of Repositories in Etendo.  Depending on the level of access your GitHub user has, you have access to public or private (commercial) packages.</p> <p>Info</p> <p>Along your license, you have access to all packages distributed by Etendo.</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#gradle-standard-installation","title":"Gradle Standard Installation","text":"","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#checklist","title":"Checklist","text":"<p> Set up credentials. Search for modules or bundles to install. Choose module format (Source or JAR). Set dependencies in the <code>build.gradle</code> file. Expand Sources Code or resolve dynamic dependencies (JAR). Install modules. Restart Tomcat service and verify installation.</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#search-for-dependencies","title":"Search for Dependencies","text":"<p>There are two options to search and install modules in Etendo Classic. Choose one of the following:</p>  Marketplace GitHub Packages <p>You can install modules from the Etendo Marketplace, which contains packages grouped by functionality.</p> <p></p> <p>Steps to follow:</p> <ol> <li>Open Etendo Marketplace.</li> <li>Search for the module or bundle you want to install.</li> <li>Select it to see details and instructions.</li> <li>Choose the Etendo Classic Version, to determine the compatibility range of the dependency.</li> <li>Copy the installation line in your preferred format: Source Code (allows customizations) or JAR (precompiled).</li> </ol> <p></p> <p>Info</p> <p>By selecting the Etendo Classic Version, the compatibility range is determined, which guarantees to always resolve to the latest version available for that Etendo version.</p> <p>Tip</p> <p>In addition, in each bundle you will find a link to the release notes with more information about each version, compatibilities and more.   </p> <p>Tip</p> <p>If your Etendo Classic instance predates the supported versions, you must select version 24.x</p> <p>Not Recommended</p> <p>Avoid using the <code>latest.release</code> version as it may not be compatible with your current Etendo version.</p> <p>If you want to install specific modules directly from GitHub:</p> <p>Steps to follow:</p> <ol> <li>Visit the packages section on Etendo Software GitHub or search within your own repository.</li> <li>Select the required module to get the necessary information.</li> <li>Copy the module information to include it in your <code>build.gradle</code> file.</li> </ol> <p>For example, to install the Banking Pool module, copy the provided information there.</p> <p> </p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#set-dependencies-in-etendo-classic","title":"Set Dependencies in Etendo Classic","text":"<p>Based on the modules format you want to work with:</p> <ul> <li>In the Etendo project, open the <code>build.gradle</code> file.</li> <li>In the dependencies area, paste the modules or bundle to install.</li> </ul>  Sources Format JAR Format <p>If you want to work with source modules, declare your dependencies using the moduleDeps configuration (notice the @zip extension).</p> ModuleDeps Template<pre><code>    moduleDeps('&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;@zip'){ transitive = true }\n</code></pre> <p>E.g:</p> build.gradle<pre><code>dependencies {\n    // Add your dependency here\n    moduleDeps('com.etendoerp:production.extensions:[3.0.0,4.0.0)@zip'){ transitive = true }    \n}\n</code></pre> <p>If you want to work with JARs modules, declare your dependencies using the implementation configuration.</p> <p>Implementation Template<pre><code>    implementation('&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;')\n</code></pre> E.g:</p> build.gradle<pre><code>dependencies {\n// Add your dependency here\n    implementation('com.etendoerp:production.extensions:[3.0.0,4.0.0)')\n}\n</code></pre> <p>Info</p> <ul> <li>You can declare a specific version (e.g. '1.0.0') or an interval of versions: </li> <li>[begin, end] Both versions are included </li> <li>(begin, end)  Both versions are not included </li> <li>[begin, )  From a base version to the latest one </li> <li>And any other possible combination.</li> </ul> <p>Gradle Exclusion Rules</p> <p>You can make use of Gradle exclusion rules to prevent downloading a specific transitive module. Refer to Gradle Documentation</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#resolve-dependencies","title":"Resolve Dependencies","text":"Sources Format JAR Format <p>To work with source code, you must expand manually the modules using a Gradle task.</p> Terminal<pre><code>./gradlew expandModules\n</code></pre> <p>This task will try to download or update the modules declared as moduleDeps in the <code>build.gradle</code> file.\u00a0 A menu is displayed showing the modules that will be expanded, you have to confirm manually to continue with the expansion.</p> <p></p> <p>Tip</p> <p>Only the main dependency defined in Source Code (moduleDeps) format will be expanded. If you want all transitive dependencies to also be resolved in this format, set the <code>supportJars</code> property to <code>false</code> in the <code>build.gradle</code> file:</p> <p>build.gradle<pre><code>etendo {\n    supportJars = false\n}\n</code></pre> This ensures that all dependencies are expanded as source code instead of using JAR files.</p> <p>Tip</p> <p>To expand only a specific module, you can use the <code>-Ppkg</code> flag and have defined the module in the moduleDeps configuration.</p> Terminal<pre><code>./gradlew expandModules -Ppkg=com.etendoerp.custommodule\n</code></pre> <p>To work with JAR modules, you need to resolve the dependencies explicitly by running the <code>dependencies</code> task, which displays the resolved dependency tree:</p> Terminal<pre><code>./gradlew dependencies\n</code></pre> <p>However, note that when executing any Gradle task, the JAR dependencies (declared with <code>implementation</code>) are dynamically resolved beforehand. </p> <p>When a new Etendo JAR dependency is added or its version is updated, it is necessary to run update.database before executing any compilation task (e.g., <code>smartbuild</code>, <code>compile.complete</code>, etc.).</p> <p>Tip</p> <p>You can force the compilation tasks adding to the Etendo extension the ignore flag</p> build.gradle<pre><code>etendo {\n    ignoreConsistencyVerification = true\n}\n</code></pre> <p>Or run the tasks with the <code>-PignoreConsistency=true</code> flag.</p> <p>Warning</p> <p>By default, Etendo does not allow you to add a JAR dependency with an old version to the current installed one.</p> <p>You can ignore this behavior adding the module name to be updated with an old version in the</p> <pre><code>etendo {\n    ignoredArtifacts = ['com.etendoerp.mymodulename']\n}\n</code></pre>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#install-dependencies","title":"Install Dependencies","text":"<p>Finally, update the database and compile the new modules.</p> Terminal<pre><code>./gradlew update.database smartbuild \n</code></pre> <p> Restart the Tomcat</p> <p>Restart the Tomcat server and check the installation.  The module is ready to use in Etendo!</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#dependency-manager","title":"Dependency Manager","text":"<p> Javapackage: <code>com.etendoerp.dependencymanager</code></p> <ul> <li>With this module, the user can access from the Etendo Classic interface all Etendo packages published in Etendo Software repositories. </li> <li>In addition, from the Module Management window you can query packages, available versions, dependencies and install new packages. </li> <li>Then, from the Dependency Management window you can update, remove and change the format of already installed modules. </li> </ul>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#installation","title":"Installation","text":"<p>The Dependency Manager is distributed by default in the current versions of Etendo Classic, in case it is not installed in your instance you can do it by following the Gradle Standard Installation section described above.</p> <p>Tip</p> <p>You can find the module in the Etendo Marketplace at the following link: Dependency Manager - Marketplace</p> <p>Warning</p> <p>You must make sure to use Etendo Gradle Plugin in version <code>1.5.1</code> or higher, check the plugins section in the <code>build.gradle</code> file.  For more information about plugin releases see, Etendo Gradle Plugin - Release Notes</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#module-management-windows","title":"Module Management Windows","text":"<p> <code>Application</code> &gt; <code>Etendo Dependencies Management</code> &gt; <code>Module Management</code></p> <p>Logged as System Administrator role, in the <code>Module Management</code> window, the user can see all the modules to be added and select the corresponding version in the versions tab. Once one of the versions is selected, the dependencies of such version can be found in the dependencies subtab.</p> <p></p> <p>Info</p> <p>The fields in this window are read-only.</p> <p>Fields to note:</p> <ul> <li>Active: Checkbox to select if this module is active or not.</li> <li>Group: the identifier of the artifact.</li> <li>Artifact: the unit of deployment fetched and used.</li> <li>Installed Version: the version of the module if it is installed.</li> <li>Is bundle: Field to filter if this module is a bundle or not.</li> </ul> <p>This window presents two buttons that can be used: Add dependency and Update Packages.</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#buttons","title":"Buttons","text":"","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#add-dependency-button","title":"Add Dependency Button","text":"<p>This button allows you to add the dependencies associated with a specific version of the selected module. When clicked, a pop-up window will display all the dependencies and modules that will be installed.</p> <ul> <li> <p>If a package bundle is selected: you will have the option to add all the modules within the bundle or select only the ones you need. Below, a new read-only grid will appear, showing the dependencies of the selected modules. This grid is for informational purposes, allowing you to see which dependencies will be added.</p> </li> <li> <p>If a non-bundle package is selected: the grid will be read-only, displaying only the necessary dependencies for the module to work correctly. If no dependencies are displayed, it means that the module has no additional dependencies.</p> </li> </ul> <p>Warning</p> <p>A warning notification is shown to inform the user about versions compatibility before installing the dependencies shown.</p> <p>Info</p> <p>Consider that by default, all dependencies are added in Source format.</p> <p></p> <p>Once the process is done, the Dependency Management window is opened and all the installed dependencies are shown.</p> <p>Dependency Version Handling Rules</p> <ol> <li> <p>If the dependency version is greater than the installed version::</p> <ul> <li>No installed module and no record in <code>Dependency Management</code>window: New dependency record added. </li> <li>No installed module but record exists in <code>Dependency Management</code>window: Update the existing record version.</li> <li>Installed module and the dependency record exists in <code>Dependency Management</code>window: Update the existing record version.</li> <li>Installed module but no dependency record exists in <code>Dependency Management</code>window: The local dependency is deleted, and a new record is added in <code>Dependency Management</code>. </li> </ul> </li> <li> <p>If the dependency version is less than the installed version:</p> <ul> <li>Display error and disable the process, preventing installation of an older version to avoid compatibility issues. This approach ensures that dependencies are handled properly, maintaining compatibility and minimizing the risk of functionality loss. In case you need to install the dependency version anyway, you must downgrade the version from the <code>Dependency Management</code> window with the change version button.  </li> </ul> </li> </ol>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#update-packages-button","title":"Update Packages Button","text":"<p>This button is used to execute the Update Packages process which updates the list of available packages with the latest information.</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#dependency-management-windows","title":"Dependency Management Windows","text":"<p> <code>Application</code> &gt; <code>Etendo Dependencies Management</code> &gt; <code>Dependency Management</code></p> <p>Logged as System Administrator role, in the <code>Dependency Management</code> window, the user can find all the dependencies installed in the previous step.</p> <p></p> <p>Fields to note:</p> <ul> <li>Active: Checkbox to select if this dependency is active or not.</li> <li>Group: The identifier of the artifact.</li> <li>Artifact: The unit of deployment fetched and used.</li> <li>Version: Version of the module</li> <li>Format: Describes the dependency format. They can be <code>Source</code>, <code>JAR</code> or <code>local</code>.<ul> <li><code>Source</code>: In this case, the source code is available, to download the dependencies the user must excecute the <code>./gradlew expandModules</code> Gradle task and then compilation is required.</li> <li><code>JAR</code>: In this case, a standard format for java packages distribution, these include the compiled Java classes, and the dependencies resolution is dynamic.</li> <li><code>Local</code>: The local format implies that the module is installed but it is not declared as a repository dependency. </li> </ul> </li> <li>Installation Status: It describes the dependency current status.<ul> <li>Pending download: This is the status by default when a new dependency is added or updated.  To be installed, it is necessary to compile the environment and, in such case, the dependency is in <code>source</code> format. </li> <li>Installed: Used once the dependency is already installed.</li> </ul> </li> <li>Module: A reference that appears to the module when it is installed.</li> <li>Version Status: It describes the dependency version status.<ul> <li>Untracked: Only for external and local dependencies.</li> <li>Update Available: In case there are new available versions.</li> <li>Updated: The latest available version is installed.</li> </ul> </li> <li>External Dependency (Only available for <code>JAR</code> dependencies): Checkbox that identify an external library or module required by the project, managed by Gradle. These dependencies are retrieved from remote repositories during the build process.</li> </ul>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#buttons_1","title":"Buttons","text":"","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#change-version","title":"Change Version","text":"<p>This button is used to update or downgrade versions. </p> <p>When the version of a module is modified, its related dependencies could be modified as well. In this case, it is possible to add new, update or delete versions. </p> <p>Warning</p> <p>A warning notification is shown to inform the user about versions compatibility before executing the process.</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#change-format","title":"Change Format","text":"<p>This button is used to change the format of the module.  This process needs to be executed when it is necessary to migrate from a local format to a gradle dependency, while keeping the modules updated.  The options are <code>source</code>, <code>JAR</code> or <code>local</code>.</p> <ul> <li> <p>In case the module is originally in <code>local</code> format, the options in the Change format popup window are <code>JAR</code> or <code>source</code>.</p> </li> <li> <p>In case the module is originally in <code>source</code> format, the only option in the Change format popup window is <code>JAR</code>.</p> </li> <li> <p>In case the module is originally in <code>JAR</code> format, the only option in the Change format popup window is source. In this case, the window shows a warning notification to remind the user that the original directory is deleted once the process is finished.</p> </li> </ul>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#delete-dependency","title":"Delete Dependency","text":"<p>This button is used to delete dependencies.</p> <ul> <li> <p>JAR format dependency: In case you need to remove a dependency to actually complete the action, the environment must be compiled.</p> <p></p> </li> <li> <p>Local or Souce format dependency: In case you need to remove a dependency to actually complete the action, the environment must be compiled. Also, note that both <code>Source</code> and <code>Local</code> dependencies must be manually removed from the <code>/modules</code> folder prior to compilation.</p> <p></p> <p>Warning</p> <p>A warning notification is displayed to inform the user of the steps to remove it.</p> </li> </ul>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#add-local-dependencies-process","title":"Add Local Dependencies Process","text":"<p> <code>Application</code> &gt; <code>Etendo Dependencies Management</code> &gt; <code>Add Local dependencies</code></p> <p></p> <p>This process, in <code>Add Local dependencies</code> window, also part of the Dependencies Management, is in charge of identifying all the locally installed modules without related dependencies, add them to the Dependency Management window with the <code>local</code> format.</p> <p>Note</p> <p>The main objective of this process is to add the dependencies in <code>local</code> format, so that in case of being distributed as an Etendo module it can be easily migrated to <code>Sources</code> or <code>Jar</code> format. </p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-modules-in-etendo/#update-packages-information-process","title":"Update Packages Information Process","text":"<p> <code>Application</code> &gt; <code>Etendo Dependencies Management</code> &gt; <code>Update Packages Information</code></p> <p>Since the information about packages is daily updated, the user can execute manually the process from <code>Update Packages Information</code> window to update the list of packages with the latest information.</p> <p>Info</p> <p>The same process can be executed from the Module Management window, selecting one record and clicking the Update packages button.</p> <p>Note</p> <p>Each time the server is restarted, the update process is executed automatically.</p>","tags":["Getting Started","Install","Modules","Bundles","Dependencies","Dependency Manager"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-translation-bundles-in-etendo/","title":"Install Translation Bundles in Etendo Classic","text":"","tags":["Install Translations","Translation","Translation Bundle"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-translation-bundles-in-etendo/#overview","title":"Overview","text":"<p>This page explains how to install translation bundles in Etendo Classic, which is slightly different from standard module installation.</p>","tags":["Install Translations","Translation","Translation Bundle"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-translation-bundles-in-etendo/#installation-steps","title":"Installation steps","text":"<p>Follow the standard module installation guide, but make sure to include both the original bundle and its corresponding translation bundle, copying the installation line from the Etendo Marketplace, you can filter the Translation category to find all available translations.</p> <p>Warning</p> <p>Always include both the original module and its translation bundle as dependencies. Missing either will cause compilation to fail.</p>  JARs Sources <pre><code>dependencies {\n    // Add your dependency here\n    implementation ('com.etendo:example.module:[3.0.0,4.0.0)')\n    implementation ('com.etendo:example.module.es_es:[1.0.0,)')\n}\n</code></pre> <pre><code>dependencies {\n    // Add your dependency here\n    moduleDeps ('com.etendo:example.module:[3.0.0,4.0.0)@zip'){ transitive = true }\n    moduleDeps ('com.etendo:example.module.es_es:[1.0.0,)@zip'){ transitive = true }\n}\n</code></pre>","tags":["Install Translations","Translation","Translation Bundle"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-translation-bundles-in-etendo/#bundle-compatibility","title":"Bundle Compatibility","text":"<p>To check compatibility between a module and its translation bundle. For example, the Warehouse Extensions ES - Release Notes.</p>","tags":["Install Translations","Translation","Translation Bundle"]},{"location":"developer-guide/etendo-classic/getting-started/installation/install-translation-bundles-in-etendo/#troubleshooting","title":"Troubleshooting","text":"<ol> <li> <p>By default, translations are applied when you update the database. If they are not, or if you update the module version, run:</p> Terminal<pre><code>./gradlew install.translation -Dmodule=&lt;javapackage&gt;\n./gradlew update.database smartbuild\n</code></pre> <p>Info</p> <p><code>install.translation</code> sets the module status to pending to install. The translations will apply during the next <code>update.database</code> run.</p> </li> <li> <p>To force installation of all translation modules, add <code>forceRefData=true</code> to <code>gradle.properties</code> file,  then run:</p> Terminal<pre><code>./gradlew setup\n./gradlew update.database smartbuild\n</code></pre> </li> </ol>","tags":["Install Translations","Translation","Translation Bundle"]},{"location":"developer-guide/etendo-classic/getting-started/installation/intellij-code-formatting/","title":"Code Formatting Style in IntelliJ","text":"","tags":["IntelliJ","Formatting","Code Formatting"],"boost":1.5},{"location":"developer-guide/etendo-classic/getting-started/installation/intellij-code-formatting/#overview","title":"Overview","text":"<p>This document covers how IntelliJ IDEA  is capable of importing code formatter settings.</p>","tags":["IntelliJ","Formatting","Code Formatting"],"boost":1.5},{"location":"developer-guide/etendo-classic/getting-started/installation/intellij-code-formatting/#code-formatting","title":"Code Formatting","text":"<ol> <li>First, download the following IntelliJ formatting file.</li> <li>Open  IntelliJ IDEA Settings </li> <li>Search Code Style \u2192 Java</li> <li> <p>Click the gear icon \u2192 Import Schema \u2192 IntelliJ IDEA code style XML. </p> <p></p> </li> <li> <p>Select the file downloaded first and import the schema.</p> </li> </ol>","tags":["IntelliJ","Formatting","Code Formatting"],"boost":1.5},{"location":"developer-guide/etendo-classic/getting-started/installation/postgresql-configuration/","title":"PostgreSQL Configuration","text":"","tags":["PostgreSQL Configuration","User configuration","Database","PostgreSQL Extension"]},{"location":"developer-guide/etendo-classic/getting-started/installation/postgresql-configuration/#overview","title":"Overview","text":"<p>This section explains how to set up postgres to work properly with Etendo Classic, once you have installed postgres, you need to make sure that the configuration is set up properly.</p>","tags":["PostgreSQL Configuration","User configuration","Database","PostgreSQL Extension"]},{"location":"developer-guide/etendo-classic/getting-started/installation/postgresql-configuration/#system-user-configuration","title":"System User configuration","text":"<p>When you install postgres, it creates a system user called <code>postgres</code>, if you not set up a password for this user, you can do it by running the following command</p> <p>Terminal<pre><code>sudo -u postgres psql\n</code></pre> You will inmediatly enter the postgresql shell, then you can set up the password by running the following example:</p> Postgresql Shell<pre><code>ALTER USER postgres PASSWORD 'syspass';\n</code></pre> <p>Info</p> <p>Etendo Classic has <code>syspass</code> preconfigured as the default password for the postgres user. In case of changing the system password, this configuration variable should be changed by following the Etendo Classic installation guide.</p>","tags":["PostgreSQL Configuration","User configuration","Database","PostgreSQL Extension"]},{"location":"developer-guide/etendo-classic/getting-started/installation/postgresql-configuration/#etendo-classic-user-configuration","title":"Etendo Classic User configuration","text":"<p>Warning</p> <p>In case of installing Etendo from scratch by executing the command <code>./gradlew install</code>, the installation process creates the default user and password <code>tad</code> automatically, and they are already includes preconfigured. In case you do not need to change the <code>tad</code> user, you can skip this section.</p> <p>If you need to create a Postgres user and password for the Etendo application, you can do it by running the following command</p> Terminal<pre><code>PGPASSWORD=system_password psql -U postgres -d postgres -h localhost\n</code></pre> <p>You will inmediatly enter the postgresql shell, then you can create the user by running the following example:</p> Postgresql Shell<pre><code>CREATE ROLE tad LOGIN PASSWORD 'tad'  CREATEDB CREATEROLE VALID UNTIL 'infinity';\n</code></pre> <p>Note</p> <p>The user and password created can be configured in the <code>gradle.properties</code> file, as can be seen in the Etendo Classic installation guide.</p>","tags":["PostgreSQL Configuration","User configuration","Database","PostgreSQL Extension"]},{"location":"developer-guide/etendo-classic/getting-started/installation/postgresql-configuration/#required-configuration","title":"Required Configuration","text":"<p>Make sure you have the following PostgreSQL configuration in your <code>postgresql.conf</code>, this file is located wherever you have postgresql installed</p> postgresql.conf<pre><code>lc_numeric = 'en_US.UTF-8'\nmax_locks_per_transaction = 128\n</code></pre>","tags":["PostgreSQL Configuration","User configuration","Database","PostgreSQL Extension"]},{"location":"developer-guide/etendo-classic/getting-started/installation/postgresql-configuration/#required-postgresql-extensions","title":"Required PostgreSQL extensions","text":"<p>Etendo Classic currently requires two PostgreSQL extensions to be available:</p> <p>uuid-ossp to generate UUID's pg_trgm to have index support for fast contains search</p> <p>Since version 10 those are part of the normal PostgreSQL server installation.</p> <p>Note</p> <p>After modifying the file restart postgresql service</p>","tags":["PostgreSQL Configuration","User configuration","Database","PostgreSQL Extension"]},{"location":"developer-guide/etendo-classic/getting-started/installation/use-of-repositories-in-etendo/","title":"Use of Repositories in Etendo","text":"","tags":["Repositories","Packages","Access Token"]},{"location":"developer-guide/etendo-classic/getting-started/installation/use-of-repositories-in-etendo/#overview","title":"Overview","text":"<p>Etendo supports any Maven package repository, but this guide focuses on configuring credentials for Etendo's standard repositories.</p> <p>Tip</p> <p>By default, Etendo Classic and extension bundles are downloaded from the Etendo GitHub repositories.</p> <p>To access Etendo's GitHub repositories and resolve dependencies, you need the appropriate credentials. This involves using a Personal Access Token. This guide explains how to set up and use these credentials.</p>","tags":["Repositories","Packages","Access Token"]},{"location":"developer-guide/etendo-classic/getting-started/installation/use-of-repositories-in-etendo/#github-token","title":"GitHub Token","text":"","tags":["Repositories","Packages","Access Token"]},{"location":"developer-guide/etendo-classic/getting-started/installation/use-of-repositories-in-etendo/#generating-a-personal-access-token","title":"Generating a Personal Access Token","text":"<p>Info</p> <p>As part of your Etendo License, you will receive an email invitation to join the Etendo Partners Team on GitHub. You must create or associate a GitHub account with the invited email. Your user will then have read access to all Etendo repositories.</p> <p>Follow these steps to generate a Personal Access Token:</p> <ol> <li>Log in to your GitHub account.</li> <li>Click your profile picture in the top-right corner and select Settings.</li> <li> <p>Navigate to Developer settings in the left menu and click Personal access tokens.</p> <p> </p> </li> <li> <p>Click Generate new token (classic).</p> </li> <li> <p>Provide a name for your token and select the required permissions. At a minimum, ensure the <code>read:packages</code> permission is selected.</p> <p>Warning</p> <p>It is highly recommended to set an expiration date for the token. However, you can also choose to leave it without an expiration date.</p> <p> </p> </li> <li> <p>Click Generate token and copy the token value.</p> <p>Warning</p> <p>You will not be able to view the token again, so make sure to copy it and store it securely.</p> </li> </ol>","tags":["Repositories","Packages","Access Token"]},{"location":"developer-guide/etendo-classic/getting-started/installation/use-of-repositories-in-etendo/#configuring-the-github-token-in-etendo-projects","title":"Configuring the GitHub Token in Etendo Projects","text":"<p>After generating a Personal Access Token, configure it in your Etendo project by following these steps:</p> <ol> <li>Open the <code>gradle.properties</code> file in your project.</li> <li> <p>Add the following lines, replacing <code>YOUR_GITHUB_USERNAME</code> and <code>YOUR_PERSONAL_ACCESS_TOKEN</code> with your actual GitHub username and token:</p> gradle.properties<pre><code>nexusUser=\nnexusPassword=\ngithubUser=YOUR_GITHUB_USERNAME\ngithubToken=YOUR_PERSONAL_ACCESS_TOKEN\ncontext.name=etendo\nbbdd.sid=etendo\nbbdd.port=5432\n</code></pre> </li> <li> <p>Save the <code>gradle.properties</code> file.</p> </li> </ol>","tags":["Repositories","Packages","Access Token"]},{"location":"developer-guide/etendo-classic/getting-started/installation/use-of-repositories-in-etendo/#using-the-personal-access-token-in-gradle-tasks","title":"Using the Personal Access Token in Gradle Tasks","text":"<p>Once your GitHub Token is configured, Gradle tasks can seamlessly interact with Etendo's GitHub repositories. For example, when running the following command:</p> Terminal<pre><code>./gradlew dependencies\n</code></pre> <p>Gradle will automatically use your Personal Access Token to authenticate with GitHub and securely resolve dependencies.</p>","tags":["Repositories","Packages","Access Token"]},{"location":"developer-guide/etendo-classic/getting-started/installation/use-of-repositories-in-etendo/#revoking-a-personal-access-token","title":"Revoking a Personal Access Token","text":"<p>If you no longer need a token or suspect it has been compromised, revoke it immediately by following these steps:</p> <ol> <li>Go to your Settings page on GitHub.</li> <li>Navigate to Developer settings in the left-hand sidebar.</li> <li>Click Personal access tokens.</li> <li>Locate the token you want to revoke and click Revoke.</li> <li>Confirm the revocation.</li> </ol> <p>The token will be invalidated immediately and can no longer be used.</p>","tags":["Repositories","Packages","Access Token"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/","title":"Migrating to Etendo (from Openbravo)","text":"","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#overview","title":"Overview","text":"<p>This guide provides the necessary information to migrate an existing Openbravo instance to a new Etendo instance (in its latest release). </p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#requirements","title":"Requirements","text":"<p>Before the migration process begins, either if it is done on Linux or on Windows, make sure to have the following items:</p> <p>Info</p> <ul> <li>Current Openbravo instance updated to 21Q3.2 (How to upgrade?)</li> <li>If previous installation had custom patches applied, they must be ready to be applied in an 21Q3.2 updated environment.</li> <li>Database should not have local changes.</li> <li>Enough disk space for new installation.</li> <li>Environment license and GitHub name and token (Create the credentials by following this guide).</li> </ul> <p>Warning</p> <ul> <li>The server where the database is hosted needs to have enough free space to hold a copy of the current database.  </li> <li>The server where the sources are hosted also needs to be able to hold a copy of the current sources.  </li> <li>Attachments are kept in the same place as they were before.</li> </ul>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#instructions-for-the-migration-process","title":"Instructions for the Migration Process","text":"","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#before-starting-the-migration","title":"Before starting the migration","text":"<p>It is necessary to ensure following the next steps:</p> <ol> <li> <p>Stop the Tomcat Server.</p> Terminal<pre><code>sudo /etc/init.d/tomcat stop\n</code></pre> <p>Info</p> <p>Depending on your server, this command may need to be changed.</p> </li> <li> <p>Create a backup of your instance.</p> </li> </ol>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#manual-migration-process","title":"Manual Migration Process","text":"<p>These are the steps to follow for the manual migration from OpenbravoERP to Etendo Classic:</p> <ol> <li> <p>Create and enter the folder Etendo Classic.</p> </li> <li> <p>Insert the etendo_base sources in the Etendo Classic folder. They can be extracted after downloading Etendo from Resources. To do this, use your gitHub user and token.</p> </li> <li> <p>The <code>gradle.properties</code> file has default params but if needed this can be changed.  </p> Note <p>Remember to set up the GitHub user and token since they are used to expand private modules. Create the credentials by following the Use of Repositories technical guide.</p> gradle.properties<pre><code>githubUser=\ngithubToken=\n\ncontext.name=etendo\n\nbbdd.sid=etendo\nbbdd.port=5432\nbbdd.systemUser=postgres\nbbdd.systemPassword=syspass\nbbdd.user=tad\nbbdd.password=tad\n</code></pre> <p>Info</p> <p>Check if it is necessary to keep the Openbravo database or create a new one for Etendo. In case of creating a new one, use the previous Openbravo one as a base.</p> </li> <li> <p>In a new terminal opened in <code>EtendoERP</code> folder, run in the      Terminal<pre><code>./gradlew expandCore\n</code></pre></p> </li> <li>Run in the terminal      Terminal<pre><code>./gradlew setup\n</code></pre></li> <li> <p>Move the existing modules from <code>Openbravo/modules</code> folder to the <code>EtendoERP/modules</code> folder, except for the following ones:</p> <p>Warning</p> <p>com.smf.securewebservices com.smf.smartclient.boostedui com.smf.smartclient.debugtools org.openbravo.advpaymentmngt org.openbravo.apachejdbcconnectionpool org.openbravo.base.weld org.openbravo.client.application org.openbravo.client.htmlwidget org.openbravo.client.kernel org.openbravo.client.myob org.openbravo.client.querylist org.openbravo.client.widgets org.openbravo.financial.paymentreport org.openbravo.reports.ordersawaitingdelivery org.openbravo.service.datasource org.openbravo.service.integration.google org.openbravo.service.integration.openid org.openbravo.service.json org.openbravo.userinterface.selector org.openbravo.userinterface.skin.250to300Comp org.openbravo.userinterface.smartclient org.openbravo.utility.cleanup.log org.openbravo.v3 org.openbravo.v3.datasets org.openbravo.v3.framework</p> <p>These modules will already be in the <code>EtendoERP/modules_core</code> folder since they are core modules in Etendo. </p> </li> <li> <p>Run     Terminal<pre><code>./gradlew update.database compile.complete.deploy --info\n</code></pre></p> </li> </ol> <p>Info</p> <p>Compilation errors associated with API changes may occur due to the version change in custom modules. If this happens, make sure to fix them by using the documented GitHub issues. </p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#post-migration-configuration","title":"Post Migration Configuration","text":"","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#remove-previous-instance-deployed-context","title":"Remove previous instance deployed context","text":"Terminal<pre><code>rm -r /var/lib/tomcat/webapps/openbravo\n</code></pre> <p>Warning</p> <p>Make sure this step is done before starting Tomcat, otherwise you will risk having two environments running at the same time, which can cause problems (especially when background processes are involved).</p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#start-tomcat","title":"Start Tomcat","text":"<p>Info</p> <p>Depending on your server, this command may need to be changed.</p> Terminal<pre><code>sudo /etc/init.d/tomcat start\n</code></pre>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#attachments-configuration","title":"Attachments Configuration","text":"<p>Warning</p> <p>Before removing your previous instance, make sure you migrate your attachment files.</p> <p>In the migration process, the attachments directory configuration is not changed. To move them to a new folder (for example <code>/opt/EtendoERP/attachments</code>), you must edit the <code>Openbravo.properties</code> file:</p> Terminal<pre><code>vi /opt/EtendoERP/config/Openbravo.properties\n## Change the attach.path property like this (do not include the #):\n## attach.path=/opt/EtendoERP/attachments\n</code></pre> <p>and move the attachments manually: </p> Terminal<pre><code>mv /opt/OpenbravoERP/attachments /opt/EtendoERP/attachments\n## Deploy changes to tomcat\n./gradlew smartbuild\n</code></pre> <p>Info</p> <p>Special consideration may have to be taken into account if your attachment folder is in a network drive, or a different partition (with or without a symbolic link in place). Be careful when changing the attachment configuration, and make sure you have a recent backup available.</p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#customizations-to-core","title":"Customizations to Core","text":"<p>Reapply patches to core if necessary, and compile.</p> <p>Info</p> <p>Compilation tasks now can be made with the Gradle Wrapper.</p> Terminal<pre><code>patch -p1 &lt; customPatchToCore.patch\n## Apply other patches as needed\n./gradlew smartbuild\nsudo /etc/init.d/tomcat restart\n</code></pre>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#apache-configuration","title":"Apache Configuration","text":"<ol> <li> <p>If necessary, change apache configuration to use jkmount in the correct context (\"openbravo\" by default in old installation).     Configuration file should be in <code>/etc/apache2/conf-enabled/openbravo.conf</code>, <code>/etc/apache2/conf-available/openbravo.conf</code>or <code>/etc/apache2/sites-available/000-default.conf</code> / <code>/etc/apache2/sites-available/000-default-le-ssl.conf</code>     Replace <code>jkMount /openbravo* ajp13_worker</code> by <code>jkMount /etendo* ajp13_worker</code></p> </li> <li> <p>Change apache configuration to redirect to new context (\"openbravo\" by default in old installation).         Configuration file should be in <code>/var/www/html/index.html</code>.         Replace <code>&lt;META HTTP-EQUIV=\"Refresh\" CONTENT=\"0; URL=openbravo\"&gt;</code> by <code>&lt;META HTTP-EQUIV=\"Refresh\" CONTENT=\"0; URL=etendo\"&gt;</code> </p> <p>Warning</p> <p>Make sure to replace  by the context you chose when in the <code>gradle.properties</code>file.</p> </li> <li> <p>Restart apache:</p> </li> </ol> Terminal<pre><code>sudo service apache2 restart\n</code></pre>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#activate-your-instance","title":"Activate your instance","text":"<ol> <li>Login as System Administrator and use the Instance Activation window to activate your instance.</li> <li>Use Refresh Online</li> <li>Enter your instance purpose and your activation key.</li> </ol> <p>Success</p> <p>Your instance is activated!</p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#change-backup-and-restore-script","title":"Change backup and restore script","text":"<ol> <li> <p>Make sure that the backup script now obtains its data from the correct <code>Openbravo.properties</code>, for example in folder <code>/opt/EtendoERP/</code>         The backup script is usually located in <code>/usr/share/openbravo/backup/backup</code>. You should change the lines to point to the actual <code>Openbravo.properties</code> file. For example:</p> Terminal<pre><code>db_login=$(awk -F = '/^bbdd.user/ {print $2}' /opt/OpenbravoERP/config/Openbravo.properties)\n</code></pre> <p>Should be changed for something like this:</p> Terminal<pre><code>db_login=$(awk -F = '/^bbdd.user/ {print $2}' /opt/EtendoERP/config/Openbravo.properties)\n</code></pre> <p>This will vary depending on the path that has been selected for the migration.</p> <p>Warning</p> <p>Remember that in the current state <code>Openbravo.properties</code> does not change its name. This should not be changed until further notice from the development team. Also, you must not change the Openbravo name anywhere else. Do it only in the paths for the properties file.</p> <p>Info</p> <p>A dedicated backup tool is in development.</p> </li> <li> <p>The same should be done for <code>/usr/bin/openbravo-restore</code>. Given that the scripts are highly hardcoded, you have to change some lines manually.</p> </li> </ol> <p>The database to be dropped should be the Etendo database, but the script will drop the openbravo db. This should be changed to drop the Etendo database. </p> <ul> <li> <p>Change:</p> <pre><code>su - postgres -c \"psql -U postgres -c \"drop database openbravo\"\" || true\n</code></pre> <p>for: <pre><code>su - postgres -c \"psql -U postgres -c \"drop database etendo\"\" || true\n</code></pre></p> </li> <li> <p>Change the line that creates the database:</p> <pre><code>su - postgres -c \"psql -U postgres -c \"create database openbravo WITH ENCODING='UTF8' OWNER=TAD;\"\"\n</code></pre> <p>for</p> <pre><code>su - postgres -c \"psql -U postgres -c \"create database etendo WITH ENCODING='UTF8' OWNER=TAD;\"\"\n</code></pre> </li> <li> <p>Change the target database on the lines that the pg_restore is done, for example:</p> <pre><code>PGPASSWORD=tad pg_restore -U tad -h localhost -d openbravo -O $TEMP_FOLDER/db_backup.dmp || true\n</code></pre> <p>for</p> <pre><code>PGPASSWORD=tad pg_restore -U tad -h localhost -d etendo -O $TEMP_FOLDER/db_backup.dmp || true\n</code></pre> </li> <li> <p>Change the line which erases the tomcat files:</p> <pre><code>rm -rf /var/lib/tomcat/webapps/openbravo || true\n</code></pre> <p>for</p> <pre><code>rm -rf /var/lib/tomcat/webapps/etendo || true\n</code></pre> </li> <li> <p>Change the path of the sources for the new path created for Etendo, for example:</p> <pre><code>sudo chown openbravo:openbravo /opt/OpenbravoERP/\n</code></pre> <p>for</p> <pre><code>sudo chown openbravo:openbravo /opt/EtendoERP/\n</code></pre> </li> </ul> <p>Warning</p> <p>The same warning for the backups applies here. Be careful with what you rename. If you see an error, please ask for support.</p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#change-initial-directory-on-login","title":"Change initial directory on login","text":"<p>Inside <code>~/.bashrc</code> you may have a command that lets you log in directly to the <code>/opt/OpenbravoERP</code> folder. Change it so it points to your new instance folder:</p> .bashrc<pre><code>## Change\ncd /opt/Openbravo\n## To\ncd /opt/EtendoERP\n</code></pre>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#change-server-user","title":"Change server user","text":"<p>You may change the current user from Openbravo to Etendo, if you want. This guide does not cover how to do so.</p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#remove-previous-installation","title":"Remove previous installation","text":"<ol> <li> <p>Remove Openbravo context from Tomcat folder:</p> Terminal<pre><code>rm -r /var/lib/tomcat/webapps/openbravo\n</code></pre> </li> <li> <p>Remove Openbravo installation:</p> Terminal<pre><code>rm -r /opt/OpenbravoERP\n</code></pre> </li> <li> <p>Remove Openbravo database:</p> Terminal<pre><code>psql -h localhost -U postgres -d etendo -c \"DROP DATABASE openbravo;\"\n</code></pre> </li> </ol> <p>Warning</p> <p>Make sure above commands are pointing to the correct databases, user and host, and that you have done a backup before executing the command.</p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#apply-303-taxes-and-tax-report-fixes","title":"Apply 303 Taxes and Tax Report Fixes","text":"<p>This step is only necessary if the following conditions happen in your environment:</p> <ul> <li>The <code>org.openbravo.module.aeat303.temporal.taxes.es</code>, <code>org.openbravo.module.aeat303.temporal.taxparameters.es</code>, <code>org.openbravo.localization.spain.referencedata.taxes.es</code> and <code>org.openbravo.module.aeat303.es</code> modules are installed and their datasets applied in the ERP</li> <li>You want to update the <code>Spain Localization Extensions</code> bundle to version <code>1.8.0</code> or higher, otherwise, you want to update the afforementioned modules to these versions:<ul> <li><code>org.openbravo.localization.spain.referencedata.taxes.es</code>: version <code>1.8.0</code> or higher</li> <li><code>org.openbravo.module.aeat303.es</code>: version <code>1.14.0</code> or higher</li> </ul> </li> </ul> <p>To solve issues with taxes arising from these modules being migrated from Openbravo to Etendo, refer to the related Known Issue </p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#apply-390-taxes-and-tax-report-fixes","title":"Apply 390 Taxes and Tax Report Fixes","text":"<p>This step is only necessary if the following conditions happen in your environment:</p> <ul> <li>The <code>org.openbravo.module.aeat303.temporal.taxes.es</code>, <code>org.openbravo.module.aeat303.temporal.taxparameters.es</code>, <code>org.openbravo.localization.spain.referencedata.taxes.es</code> and <code>org.openbravo.module.aeat390.es</code> modules are installed and their datasets applied in the ERP</li> <li>You want to update the <code>Spain Localization Extensions</code> bundle to version <code>1.8.0</code> or higher, otherwise, you want to update the afforementioned modules to these versions:<ul> <li><code>org.openbravo.localization.spain.referencedata.taxes.es</code>: version <code>1.8.0</code> or higher</li> <li><code>org.openbravo.module.aeat390.es</code>: version <code>3.9.0</code> or higher</li> </ul> </li> </ul> <p>To solve issues with taxes arising from these modules being migrated from Openbravo to Etendo, refer to the related Known Issue </p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/migrating-to-etendo-from-openbravo/#conclusion","title":"Conclusion","text":"<p>Info</p> <p>With these steps, you should have successfully migrated your Openbravo data to Etendo either on a Linux system or on a Windows system. If you encounter any problems during the process, please reach out to the Etendo support team for assistance.</p>","tags":["Migration","Openbravo","Attachments Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/upgrading-to-openbravo-21q3-2/","title":"Upgrading to Openbravo 21Q3.2","text":"","tags":["Upgrade","Openbravo","Target Version","21Q3.2"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/upgrading-to-openbravo-21q3-2/#overview","title":"Overview","text":"<p>This guide explains how to upgrade your current Openbravo environment to version 21Q3.2. This involves two main steps:</p> <ul> <li>Identify and extract custom patches made to your current version of Openbravo</li> <li>Upgrade to Openbravo 21Q3.2</li> </ul> <p>Info</p> <p>This upgrade is required in order to migrate Openbravo to Etendo.</p>","tags":["Upgrade","Openbravo","Target Version","21Q3.2"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/upgrading-to-openbravo-21q3-2/#how-to-upgrade-to-openbravo-21q32","title":"How to upgrade to Openbravo 21Q3.2","text":"<p>Requirements</p> <ul> <li>Git  </li> <li>A diffing/merging tool if patches need to be generated</li> </ul>","tags":["Upgrade","Openbravo","Target Version","21Q3.2"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/upgrading-to-openbravo-21q3-2/#identify-and-extract-custom-patches-made-to-your-current-version-of-openbravo","title":"Identify and extract custom patches made to your current version of Openbravo","text":"<ol> <li> <p>Clone core repository in the new version</p> Terminal<pre><code>git clone --depth 1 --branch YOURVERSIONTAG git@gitlab.com:openbravo/product/openbravo.git\n</code></pre> <p>Info</p> <p>Replace YOURVERSIONTAG tag with your current Openbravo version, e.g.: 3.0PR19Q4</p> </li> <li> <p>Identify patches applied to core in current installation, to be re-applied later:</p> </li> <li> <p>Use a diffing tool like Meld or Kdiff3 to compare the differences between your environment and the standard Openbravo you just cloned.</p> </li> <li>Extract custom patches (avoid generating patches for changes that are bugfixes, since they should be included in the new version).</li> </ol>","tags":["Upgrade","Openbravo","Target Version","21Q3.2"]},{"location":"developer-guide/etendo-classic/getting-started/migration-from-openbravo/upgrading-to-openbravo-21q3-2/#upgrade-to-openbravo-21q32","title":"Upgrade to Openbravo 21Q3.2","text":"<ol> <li> <p>Clone core repository in the new version:</p> Terminal<pre><code>git clone --depth 1 --branch 3.0PR21Q3.2 git@gitlab.com:openbravo/product/openbravo.git\n</code></pre> </li> <li> <p>Configure Openbravo.properties and other files to match your current installation.</p> </li> <li>Copy all modules from your previous installation to the new environment.</li> <li>Apply patches extracted on previous steps (they may need to be adapted to the new version).</li> <li> <p>Do a full compilation:</p> Terminal<pre><code>ant update.database compile.complete.deploy\n</code></pre> </li> <li> <p>Fix problems with custom modules.</p> <p>Warning</p> <p>Check Openbravo\u2019s Release Notes for API changes and other considerations when upgrading.</p> </li> <li> <p>Start server.</p> </li> <li>Test for functional or runtime errors and fix them.</li> </ol> <p>Success</p> <p>Your environment is ready to be migrated to Etendo.</p> <p>Check the Migration Tool\u2019s guide.</p>","tags":["Upgrade","Openbravo","Target Version","21Q3.2"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/core-format-migration/","title":"Core format migration","text":"From Sources to JARFrom JAR to Sources <p>Warning</p> <p>In JAR format, patchs can not be applied because the Core is resolved dinamically as a dependency.</p> <ol> <li> <p>To migrate from an environment with sources, you need to add to the build.gradle, the Etendo core dependency  <code>implementation('com.etendoerp.platform:etendo-core:&lt;version&gt;')</code></p> </li> <li> <p>You need to remove all the folders and files leaving the ones belonging to attachments,gradle, modules and config directories:</p> <ul> <li>gradle/</li> <li>attachments/</li> <li>config/</li> <li>modules/ </li> <li>build.gradle</li> <li>gradle.properties</li> <li>gradlew</li> <li>gradlew.bat</li> <li>settings.gradle</li> </ul> </li> <li> <p>To update the environment you have to execute the task     Terminal<pre><code>./gradlew update.database --info\n</code></pre>     and run     Terminal<pre><code>./gradlew compile.complete smartbuild --info\n</code></pre></p> </li> </ol> <ol> <li> <p>To migrate from an environment with JARs to sources, you have to remove the Etendo core dependency from your build.gradle and run     Terminal<pre><code>./gradlew clean\n</code></pre></p> </li> <li> <p>To work with sources, you need to specify the version to use in the Etendo plugin extension block inside the build.gradle</p> build.gradle<pre><code>etendo {\n    coreVersion = \"22.1.0\"\n}\n</code></pre> <p>By default, Etendo tries to resolve the artifact <code>com.etendoerp.platform:etendo-core</code></p> <p>Info</p> <p>Notice the <code>supportJars</code> flag. This is used to indicate if the current core version support JARs or not. By default is set to <code>true</code>.</p> </li> <li> <p>Finally, to download the sources you need to run the expand core task.</p> Terminal<pre><code>./gradlew expandCore --info\n</code></pre> </li> <li> <p>Recompile     Terminal<pre><code>./gradlew compile.complete smartbuild --info\n</code></pre></p> </li> <li> <p>Update the database     Terminal<pre><code>./gradlew update.database\n</code></pre></p> </li> </ol>","tags":["Core Migration","JAR to Source","Etendo Core Dependency","Build Gradle Configuration"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/resolving-dependencies-on-github/","title":"Migrating and Resolving Dependencies of Bundles and Modules on GitHub","text":"","tags":["GitHub Migration","Dependencies Update","Etendo Modules","Transition Guide"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/resolving-dependencies-on-github/#migrating-and-resolving-dependencies-of-bundles-and-modules-on-github","title":"\ud83d\udd04 Migrating and Resolving Dependencies of Bundles and Modules on GitHub","text":"<p>Hello, Etendo Partner \ud83d\udc4b. We've moved the bundles and modules from Nexus to GitHub. This allows us to take advantage of the stability of GitHub, and have the packages associated with each bundle and the releases in the same repository. Here we provide a step-by-step guide to help you make the transition.</p>","tags":["GitHub Migration","Dependencies Update","Etendo Modules","Transition Guide"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/resolving-dependencies-on-github/#tutorial","title":"\ud83d\udcdd Tutorial","text":"","tags":["GitHub Migration","Dependencies Update","Etendo Modules","Transition Guide"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/resolving-dependencies-on-github/#migrated-bundles","title":"\ud83d\udce6 Migrated Bundles","text":"<p>The following bundles have been migrated to GitHub, along with all their versions, check the Etendo Core compatibility, in case that you have a old Etendo version you must update before: We recommend migrating to Etendo 23.2.0 or grather and the dependencies to the latest supported versions. </p> Bundle Javapakage Version From Core To core Sales Extensions com.etendoerp.sales.extensions 1.5.0 22.1.0 23.2.x Sales Extensions ES com.etendoerp.sales.extensions.es_es 1.4.0 22.1.0 23.2.x Financial Extensions com.etendoerp.financial.extensions 1.8.0 23.1.4 23.2.x Financial Extensions ES com.etendoerp.financial.extensions.es_es 1.2.0 23.1.4 23.2.x Production Extensions com.etendoerp.production.extensions. 1.3.0 22.1.0 23.2.x Production Extensions ES com.etendoerp.production.extensions.es_es 1.1.0 22.1.0 23.2.x Platform Extensions com.etendoerp.platform.extensions 1.6.0 23.2.0 23.2.x Platform Extensions ES com.etendoerp.platform.extensions.es_es 1.2.0 22.1.0 23.2.x Warehouse Extensions com.etendoerp.warehouse.extensions 1.3.0 23.1.4 23.2.x Warehouse Extensions ES com.etendoerp.warehouse.extensions.es_es 1.2.0 23.1.4 23.2.x Essential Extensions com.etendoerp.essentials.extensions 1.1.0 23.1.4 23.2.x Essential Extensions ES com.etendoerp.essentials.extensions.es_es 1.0.0 23.1.4 23.2.x Localizacion Espa\u00f1ola com.etendoerp.localization.spain.extensions 1.4.0 22.4.3 23.2.x","tags":["GitHub Migration","Dependencies Update","Etendo Modules","Transition Guide"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/resolving-dependencies-on-github/#migration-process","title":"\ud83d\ude80 Migration Process","text":"<ol> <li> <p>Update <code>settings.gradle</code> File: You'll need to update your <code>settings.gradle</code> file to add the new GitHub repository.</p> settings.gradle<pre><code>pluginManagement {\n    repositories {\n        mavenCentral()\n        gradlePluginPortal()\n        maven {\n            url 'https://maven.pkg.github.com/etendosoftware/com.etendoerp.gradleplugin'\n            credentials {\n                username \"${githubUser}\"\n                password \"${githubToken}\"\n            }\n        }\n        maven {\n            url 'https://repo.futit.cloud/repository/maven-public-snapshots'\n        }\n    }\n}\n\n// Add modules subprojects\nnew File(\"${this.rootDir}/modules\").listFiles().each {\n    if (it.directory &amp;&amp; new File(it, 'build.gradle').exists()) {\n        include(\":modules:${it.name}\")\n    }\n}\n\nrootProject.name = \"etendo\"\n</code></pre> </li> <li> <p>Update Etendo Gradle Plugin: You need to update <code>com.etendoerp.gradleplugin</code> to version 1.1.0 or later.</p> build.gradle<pre><code>plugins {\n    id 'java'\n    id 'war'\n    id 'groovy'\n    id 'maven-publish'\n    id 'com.etendoerp.gradleplugin' version '&lt;version&gt;' \n}\n</code></pre> </li> <li> <p>GitHub Setup: You need to set up your GitHub username and token to have read access to Etendo packages. You can create the token by following the Use of Repositories technical guide.</p> gradle.properties<pre><code>nexusUser=\nnexusPassword=\ngithubUser=&lt;User&gt;\ngithubToken=&lt;Token&gt;\n\ncontext.name=etendo\n\nbbdd.sid=etendo\nbbdd.port=5432\nbbdd.systemUser=postgres\nbbdd.systemPassword=syspass\nbbdd.user=tad\nbbdd.password=tad\n</code></pre> </li> <li> <p>Dependency Check: Review the dependencies in your Etendo <code>build.gradle</code> file to make sure there are bundles that can be upgraded to versions published on GitHub. If you are not ready to migrate yet, that's OK, Nexus will be available until March 2024.</p> </li> <li> <p>Resolve New Dependencies</p> </li> </ol>","tags":["GitHub Migration","Dependencies Update","Etendo Modules","Transition Guide"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/resolving-dependencies-on-github/#considerations","title":"Considerations","text":"<p>One restriction that GitHub has is that published packages must have a lowercase javapackage, so we had to refactor the translation modules, which previously ended with the suffix \"_ES\", now all packages including bundle translations have their artifact in lowercase.  </p> <p>Warning</p> <p>A special consideration are the modules <code>org.openbravo.module.invoiceTaxReportEnhanced30</code> and <code>org.openbravo.module.invoiceTaxReportEnhanced30.en_ES</code> which belong to the Spain Localisation bundle and were refactored as well.</p> <p>This affects the current environments, to fix this we have to: </p> Dependencies in SourcesDependencies in JAR <ol> <li> <p>If the environment has the dependencies as \"moduleDeps\", in sources, we will have to remove from the <code>/modules</code> folder all the ones ending in \"_ES\". </p> <p>We provide a script to delete all modules that could be resolved from Nexus and then re-download them from GitHub. </p> <pre><code>#!/bin/bash\n\n## Define the list of modules to be deleted\nmodules=(\"com.etendoerp.accounting.templates\"\n\"com.etendoerp.accounting.templates.es_ES\"\n\"com.etendoerp.advanced.financial.docs.processing\"\n\"com.etendoerp.advanced.financial.docs.processing.es_ES\"\n\"com.etendoerp.advanced.financial.docs.processing.template\"\n\"com.etendoerp.advanced.intercompany\"\n\"com.etendoerp.advanced.intercompany.es_ES\"\n\"com.etendoerp.advanced.work.effort\"\n\"com.etendoerp.advanced.work.effort.es_ES\"\n\"com.etendoerp.asyncprocess\"\n\"com.etendoerp.bankingpool\"\n\"com.etendoerp.bankingpool.es_ES\"\n\"com.etendoerp.bulk.posting\"\n\"com.etendoerp.bulk.posting.es_ES\"\n\"com.etendoerp.etendorx\"\n\"com.etendoerp.financial.extensions\"\n\"com.etendoerp.financial.extensions.es_ES\"\n\"com.etendoerp.financial.reports.advanced\"\n\"com.etendoerp.financial.reports.advanced.es_ES\"\n\"com.etendoerp.gljournal.advanced\"\n\"com.etendoerp.gljournal.advanced.es_ES\"\n\"com.etendoerp.localization.spain.extensions\"\n\"com.etendoerp.payment.removal\"\n\"com.etendoerp.payment.removal.es_ES\"\n\"com.etendoerp.payment.removal.template\"\n\"com.etendoerp.platform.extensions\"\n\"com.etendoerp.platform.extensions.es_ES\"\n\"com.etendoerp.printdocumentws\"\n\"com.etendoerp.production.extensions\"\n\"com.etendoerp.production.extensions.es_ES\"\n\"com.etendoerp.quotation\"\n\"com.etendoerp.quotation.es_ES\"\n\"com.etendoerp.quotation.template\"\n\"com.etendoerp.reactivate.warehouse.documents\"\n\"com.etendoerp.reactivate.warehouse.documents.es_ES\"\n\"com.etendoerp.reactivate.warehouse.documents.template\"\n\"com.etendoerp.reactor\"\n\"com.etendoerp.sales.extensions\"\n\"com.etendoerp.sales.extensions.es_ES\"\n\"com.etendoerp.stock.history\"\n\"com.etendoerp.stock.history.es_ES\"\n\"com.etendoerp.warehouse.extensions\"\n\"com.etendoerp.warehouse.extensions.es_ES\"\n\"com.etendoerp.webhookevents\"\n\"com.exos.erp.reportcachemanagement\"\n\"com.smf.asset.amortization.report\"\n\"com.smf.currency.apiconfig\"\n\"com.smf.currency.apiconfig.es_ES\"\n\"com.smf.currency.conversionrate\"\n\"com.smf.currency.conversionrate.es_ES\"\n\"com.smf.gljournal.reverse\"\n\"com.smf.gljournal.reverse.template\"\n\"com.smf.jobs.defaults.es_ES\"\n\"com.smf.ws.printdocument\"\n\"org.openbravo.advpaymentmngt.es_ES\"\n\"org.openbravo.alerts.accounting30\"\n\"org.openbravo.alerts.accounting30.es_ES\"\n\"org.openbravo.client.application.es_ES\"\n\"org.openbravo.client.htmlwidget.es_ES\"\n\"org.openbravo.client.kernel.es_ES\"\n\"org.openbravo.client.myob.es_ES\"\n\"org.openbravo.client.querylist.es_ES\"\n\"org.openbravo.client.widgets.es_ES\"\n\"org.openbravo.finance.checkprinting\"\n\"org.openbravo.finance.checkprinting.es_ES\"\n\"org.openbravo.financial.bpsettlement\"\n\"org.openbravo.financial.bpsettlement.es_ES\"\n\"org.openbravo.financial.paymentreport.es_ES\"\n\"org.openbravo.localization.spain30\"\n\"org.openbravo.localization.spain.referencedata.accounts\"\n\"org.openbravo.localization.spain.referencedata.accounts.pymes\"\n\"org.openbravo.localization.spain.referencedata.taxes\"\n\"org.openbravo.localization.spain.referencedata.translation.esES\"\n\"org.openbravo.module.aeat190.es\"\n\"org.openbravo.module.aeat303.es\"\n\"org.openbravo.module.aeat347apr.es\"\n\"org.openbravo.module.aeat347apr.es.es_ES\"\n\"org.openbravo.module.aeat349.es\"\n\"org.openbravo.module.aeat390.es\"\n\"org.openbravo.module.bptaxidkey\"\n\"org.openbravo.module.cifnifvalidator\"\n\"org.openbravo.module.cifnifvalidator.es_ES\"\n\"org.openbravo.module.countryisocode\"\n\"org.openbravo.module.cuaderno43.es\"\n\"org.openbravo.module.epigrafes.iae.es\"\n\"org.openbravo.module.eucountries\"\n\"org.openbravo.module.finactvalidator.es\"\n\"org.openbravo.module.incoterms\"\n\"org.openbravo.module.intrastat\"\n\"org.openbravo.module.intrastat.es_ES\"\n\"org.openbravo.module.intrastat.spain\"\n\"org.openbravo.module.invoicesregisterbook\"\n\"org.openbravo.module.invoicesregisterbook.es_ES\"\n\"org.openbravo.module.invoicesregisterbook.estaxes\"\n\"org.openbravo.module.invoiceTaxReportEnhanced30\"\n\"org.openbravo.module.invoiceTaxReportEnhanced30.es_ES\"\n\"org.openbravo.module.organization.representative.es\"\n\"org.openbravo.module.paymentmethod.type\"\n\"org.openbravo.module.remittance\"\n\"org.openbravo.module.remittance.es_ES\"\n\"org.openbravo.module.sii\"\n\"org.openbravo.module.sii.es_ES\"\n\"org.openbravo.module.sii.template\"\n\"org.openbravo.module.taximprovements.ES\"\n\"org.openbravo.module.taximprovements.es_ES\"\n\"org.openbravo.module.taxreportlauncher\"\n\"org.openbravo.module.taxreportlauncher.es\"\n\"org.openbravo.numbertoword\"\n\"org.openbravo.numbertoword_en\"\n\"org.openbravo.numbertoword_es\"\n\"org.openbravo.numbertoword.es_ES\"\n\"org.openbravo.proflocalization.spain.dataset\"\n\"org.openbravo.reports.ordersawaitingdelivery.es_ES\"\n\"org.openbravo.service.datasource.es_ES\"\n\"org.openbravo.service.integration.google.es_ES\"\n\"org.openbravo.service.integration.openid.es_ES\"\n\"org.openbravo.spain.regions\"\n\"org.openbravo.spanishdefaultdata.paymentmethods\"\n\"org.openbravo.spanishdefaultdata.paymentterms\"\n\"org.openbravo.userinterface.selector.es_ES\"\n\"org.openbravo.userinterface.smartclient.es_ES\"\n\"org.openbravo.utility.multiplebpselector\"\n\"org.openbravo.utility.multiplebpselector.es_ES\"\n\"org.openbravo.util.javax.xml.soap\"\n\"org.openbravo.util.saaj.impl\"\n\"org.openbravo.v3.translation.pack.es_ES\")\n\n## Define the modules directory\nmodule_directory=\"./modules\"\n\n## Iterate over each module and delete it\nfor module in \"${modules[@]}\"; do\nif [ -d \"${module_directory}/${module}\" ]; then\n    echo \"Deleting ${module_directory}/${module}...\"\n    rm -rf \"${module_directory}/${module}\"\nelse\n    echo \"Directory ${module_directory}/${module} does not exist\"\nfi\ndone\n\necho \"Modules deletion has been completed.\"\n</code></pre> <p>Warning</p> <pre><code>Make sure the modules have no customizations, otherwise local changes will be deleted.\n</code></pre> <p>Copy this code and create a file <code>deleteNexusDependencies.sh</code> in the Etendo root project, run <code>chmod +x deleteNexusDependencies.sh</code> to give execution permissions and then run <code>./deleteNexusDependencies.sh</code> to delete the dependencies. </p> </li> <li> <p>Modify the build.gradle of our project and change the dependencies to lowercase. For example:     build.gradle<pre><code>moduleDeps('com.etendoerp:financial.extensions.es_ES:&lt;version&gt;@zip') {transitive = true}\n// Replace by\nmoduleDeps('com.etendoerp:financial.extensions.es_es:&lt;version&gt;@zip') {transitive = true}\n</code></pre></p> </li> <li>Execute <code>./gradlew expandModules</code> task to download the new dependencies. </li> <li>Run <code>./gradlew update.database smartbuild</code> to recompile the environment. </li> </ol> <p>If the dependencies are declared as implementation, this means that they are in JAR format, just change the uppercase to lowercase.  For example:</p> <pre><code>implementation('com.etendoerp:financial.extensions.es_ES:&lt;version&gt;')\n// Replace by\nimplementation('com.etendoerp:financial.extensions.es_es:&lt;version&gt;')\n</code></pre> <p>Then run <code>./gradlew update.database smartbuild</code>, this will dynamically download the dependencies and compile the environment again.</p> <p>Info</p> <p>It is also possible that in the build.gradle there is a combination of both types of dependencies, you should follow both steps.</p> <p>Success</p> <p>We recommend using the dependencies in JAR format, having a cleaner workspace and a simpler update process. This is a good opportunity to migrate. </p> <p>Failure</p> <p>Remember, Nexus will still be available until March 2024, so you have time to make this transition \ud83d\udd51. We hope you find this guide useful.</p> <p>If you find any issues or need additional help, do not hesitate to reach out to our support service\ud83d\ude91.</p>","tags":["GitHub Migration","Dependencies Update","Etendo Modules","Transition Guide"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/upgrade-etendo-to-any-version/","title":"Upgrade Etendo to Any Version","text":"","tags":["Etendo Upgrade","Version Management","Gradle Plugin","Core Migration"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/upgrade-etendo-to-any-version/#overview","title":"Overview","text":"<p>This guide explains how to upgrade your Etendo environment to the latest version, or any version you want.</p>","tags":["Etendo Upgrade","Version Management","Gradle Plugin","Core Migration"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/upgrade-etendo-to-any-version/#upgrade-etendo","title":"Upgrade Etendo","text":"<p>Warning</p> <p>In case of upgrading the Core to 23.1.0 or newer, you must run <code>./gradlew wrapper --gradle-version 7.3.2</code> to upgrade the Gradle version.</p> <p>Warning</p> <p>In case of upgrading the Core from Etendo 21Q4.X, you must remove the modules <code>com.smf.securewebservices</code>, <code>com.smf.smartclient.boostedui</code>, <code>com.smf.smartclient.debugtools</code>, as they are distributed in the Core.</p> <p>Warning</p> <p>From Etendo 22Q1, the Nexus credentials should not be required interactively. You must set them in the <code>gradle.properties</code> file, since Gradle resolves and checks dependencies periodically. <code>githubUser=USER</code> &gt; <code>githubToken=TOKEN</code></p>","tags":["Etendo Upgrade","Version Management","Gradle Plugin","Core Migration"]},{"location":"developer-guide/etendo-classic/getting-started/upgrade/upgrade-etendo-to-any-version/#resolving-the-etendo-gradle-plugin","title":"Resolving the Etendo Gradle Plugin","text":"<p>From Etendo 22Q1, Etendo uses a standard gradle plugin to execute all the gradle tasks. To work with the plugin you need to specify in the root project from where the plugin will be resolved.</p> <ol> <li> <p>Update the <code>settings.gradle</code> file with the next content.</p> settings.gradle<pre><code>pluginManagement {\n    repositories {\n        mavenCentral()\n        gradlePluginPortal()\n        maven {\n            url 'https://maven.pkg.github.com/etendosoftware/com.etendoerp.gradleplugin'\n            credentials {\n                username \"${githubUser}\"\n                password \"${githubToken}\"\n            }\n        }\n        maven {\n            url 'https://repo.futit.cloud/repository/maven-public-snapshots'\n        }\n    }\n}\n\n// Add modules subprojects\nnew File(\"${this.rootDir}/modules\").listFiles().each {\n    if (it.directory &amp;&amp; new File(it, 'build.gradle').exists()) {\n        include(\":modules:${it.name}\")\n    }\n}\n\nrootProject.name = \"etendo\"\n</code></pre> </li> <li> <p>Add in the <code>build.gradle</code> file the Etendo Gradle Plugin Version compatible with your core version. For example, for version 1.5.0:</p> build.gradle<pre><code>plugins {\n    id 'com.etendoerp.gradleplugin' version '1.5.0'\n}\n</code></pre> </li> <li> <p>Delete if the old plugin exists removing the \"apply from\" line:</p> Terminal<pre><code>apply from: 'https://repo.futit.cloud/repository/static-public-releases/com/etendo/etendo/latest/etendo-latest.gradle'\n</code></pre> </li> </ol> JAR CoreSource Core <p>Warning</p> <p>If you upgrade from a source Etendo instance, read Core Format Migration, because some directories must be deleted.</p> <ol> <li>Create a backup of your environment, following the Etendo Backup and Restore Tool.</li> <li> <p>Verify the target version inside <code>build.gradle</code></p> build.gradle<pre><code>dependencies {\nimplementation('com.etendoerp.platform:etendo-core:&lt;version&gt;')\n}\n</code></pre> </li> <li> <p>Compile your environment:</p> Terminal<pre><code>./gradlew update.database compile.complete smartbuild\n</code></pre> </li> <li> <p>Verify any compilation errors that may arise due to incompatible customization or modifications.</p> <p>Success</p> <p>Your Etendo environment is now updated!</p> </li> </ol> <ol> <li> <p>Verify the target version inside <code>build.gradle</code>. For example, for versions 23.1.x;</p> build.gradle<pre><code>// latest.release will download the most recent stable version (Not recommended)\n// Any other Gradle/Maven version sintax works, for example : [22.1.0,)\netendo {\n    coreVersion = \"[22.1.0,23.2.0)\"\n}\n</code></pre> <p>Info</p> <p>You can declare a specific version (e.g. '1.0.0') or an interval of versions:         - [begin, end] - Both versions are included         - (begin, end) - Both versions are not included         - [begin, ) - From a base version to the latest one And the other possible combinations.</p> </li> <li> <p>Create a backup of your environment.</p> </li> <li> <p>Run the following command to update the core:</p> Terminal<pre><code>./gradlew expandCore\n</code></pre> </li> <li> <p>Compile your environment:</p> Terminal<pre><code>./gradlew update.database compile.complete smartbuild\n</code></pre> </li> <li> <p>Verify any compilation errors that may arise due to incompatible customization or modifications.</p> </li> </ol> <p>Success</p> <p>Your Etendo environment is now updated!</p>","tags":["Etendo Upgrade","Version Management","Gradle Plugin","Core Migration"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/","title":"How to Add a Button to the Toolbar","text":"","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#overview","title":"Overview","text":"<p>This section discusses how a button can be added the main toolbar shown in grids and forms. The toolbar contains two types of buttons, the application buttons on the left (visualized using an icon) and the custom buttons on the right (shown with a label). </p> <p>This section describes how to add a button to the left part: the application buttons.</p> <p>To follow this section, develop javascript as well as server-side java and understand Data Access Layer concepts.</p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#example-module","title":"Example Module","text":"<p>This section is supported by an example module which shows example of the code shown and discussed here.</p> <p></p> <p>Info</p> <p>The example module also contains implementations of other sections.  </p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#implementing-a-toolbar-button","title":"Implementing a toolbar button","text":"<p>Info</p> <p>When implementing your own components, it often makes sense to extend existing components. Make sure that your module then depends on the module that provides the base types. This ensures that the javascript is loaded in the correct order.  </p> <p>The button to be implemented, will compute and show the sum of a set of selected orders to the user. </p> <p>This section is divided in 2 parts:</p> <ul> <li> <p>the first part focuses on visualizing the button in the correct windows and tabs and making sure the button is enabled/disabled appropriately. </p> </li> <li> <p>The second part will discuss how to implement backend logic and how to call the server side logic when the button gets clicked and show its results.</p> </li> </ul> <p>The first part consists of the following steps:</p> <ul> <li>an icon for the visualization </li> <li>a <code>css</code> style and javascript linking the icon to the button </li> <li>javascript implementing the buttons click/action method and to register the button in the global registry </li> <li>add javascript to enable/disable the button when records are selected in the grid </li> <li>a <code>ComponentProvider</code> java class to register the javascript and <code>css</code> in Etendo.</li> </ul> <p>These steps will visualize the button but not actually do anything yet. The follow up steps will add logic:</p> <ul> <li>a server side actionhandler to implement the server side logic (summing the orders and returning the result to the client) </li> <li>client side javascript to call the server and process the result </li> </ul> <p>Each of these steps is described in more detail below.</p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#visualizing-the-button-implementation-steps","title":"Visualizing the button - Implementation steps","text":"","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#defining-the-icon-and-a-css","title":"Defining the icon and a css","text":"<p>The icon and its related style is defined through an icon file. </p> <p>Info</p> <p>For standard visualization using the Etendo style the icon should be 24x24 without a background colour.</p> <p>The icon should be placed in a specific directory in your module: <code>web/com.etendoerp.userinterface.smartclient/etendo/skins/Default/[modulename]</code>.</p> <p>Normally, it makes sense to store the icon in a subfolder. The example module has the icon file in:</p> <p><code>web/com.etendoerp.userinterface.smartclient/etendo/skins/Default/ com.etendoerp.client.application.examples/images</code>.</p> <pre><code>com.etendoerp.client.application.examples\n\u251c\u2500\u2500 reference data\n\u251c\u2500\u2500 src\n\u251c\u2500\u2500 src-db\n\u2514\u2500\u2500 web\n    \u251c\u2500\u2500 com.etendoerp.client.application.examples\n    \u2502   \u2514\u2500\u2500 js\n    \u2502       \u251c\u2500\u2500 example-toolbar-button.js\n    \u2502       \u2514\u2500\u2500 example-view-component.js\n    \u2514\u2500\u2500 com.etendoerp.userinterface.smartclient\n        \u2514\u2500\u2500 etendo\n            \u2514\u2500\u2500 skins\n                \u2514\u2500\u2500 Default\n                    \u2514\u2500\u2500 com.etendoerp.client.application.examples\n                        \u251c\u2500\u2500 images\n                        \u2502   \u2514\u2500\u2500 iconButton-sum.png\n                        \u2514\u2500\u2500 example-styles.css\n</code></pre> <p>Then add a <code>css file</code> which links this icon to a specific <code>css</code> style. The <code>css</code> file must also be located in this directory in your module: <code>web/com.etendoerp.userinterface.smartclient/etendo/skins/Default/[modulename]</code>.</p> <p>In the example module, the <code>css</code> file is located here:</p> <p><code>web/com.etendoerp.userinterface.smartclient/etendo/skins/Default/ com.etendoerp.client.application.examples/example-styles</code></p> <p>Within the <code>css</code> file add a style defined like this:</p> <pre><code>.ETToolbarIconButton_icon_etexapp_sum {\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-image: url(./images/iconButton-sum.png);\n}\n</code></pre> <p>Note</p> <p>The name of the <code>css</code> class is important, it should start with <code>ETToolbarIconButton_icon_</code>, the part after that (etexapp_sum) is used later in this tutorial. It makes sense to use the module's dbprefix in this last part to prevent name collisions with other modules.</p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#the-javascript-to-create-and-register-the-button","title":"The javascript to create and register the button","text":"<p>The next step is to implement the javascript which defines the button and registers it to be shown on tabs. Start by creating a javascript file in this location: <code>web/com.etendoerp.client.application.examples/js/example-toolbar-button.js</code>.</p> <p>This is the overall javascript for <code>toolbar-button</code>:</p> <p>example-toolbar-button.js<pre><code>    (function () {\n      var buttonProps = {\n          action: function(){\n            alert('You clicked me!');\n          },\n          buttonType: 'etexapp_sum',\n          prompt: OB.I18N.getLabel('ETEXAPP_SumData'),\n          updateState: function(){\n              var view = this.view, form = view.viewForm, grid = view.viewGrid, selectedRecords = grid.getSelectedRecords();\n              if (view.isShowingForm &amp;&amp; form.isNew) {\n                this.setDisabled(true);\n              } else if (view.isEditingGrid &amp;&amp; grid.getEditForm().isNew) {\n                this.setDisabled(true);\n              } else {\n                this.setDisabled(selectedRecords.length === 0);\n              }\n          }\n        };\n\n      // register the button for the sales order tab\n      // the first parameter is a unique identification so that one button can not be registered multiple times.\n      ET.ToolbarRegistry.registerButton(buttonProps.buttonType, isc.ETToolbarIconButton, buttonProps, 100, '186');\n    }());\n</code></pre> Let's walk through the different parts. The javascript starts and ends with this part:</p> <pre><code>    (function () {\n    ...\n    }());\n</code></pre> <p>This is done to prevent the local variables to be available globally. It creates a function and executes it immediately.</p> <p>Then the first part of the buttonprops\"</p> <pre><code>          action: function(){\n            alert('You clicked me!');\n          },\n          buttonType: 'etexapp_sum',\n          prompt: OB.I18N.getLabel('ETEXAPP_SumData'),\n</code></pre> <ul> <li>Sets the action method which gets called when the user clicks the button. </li> <li>The buttonType maps back to the name used in the css style, it controls the icon and styling and is used as an identification also </li> <li>The prompt is shown when the user hovers over the button with the mouse, the label is retrieved through the OB.I18N.getLabel method to support translation, add a label in the Messages table to correctly visualize it: </li> </ul> <p></p> <p>The updateState function is called to enable and disable the button when the user navigates through the system.</p> <p><pre><code>         updateState: function(){\n              var view = this.view, form = view.viewForm, grid = view.viewGrid, selectedRecords = grid.getSelectedRecords();\n              if (view.isShowingForm &amp;&amp; form.isNew) {\n                this.setDisabled(true);\n              } else if (view.isEditingGrid &amp;&amp; grid.getEditForm().isNew) {\n                this.setDisabled(true);\n              } else {\n                this.setDisabled(selectedRecords.length === 0);\n              }\n          }\n</code></pre> The function enables/disables the button if the form or grid is new and if there are no records selected.</p> <p>Then this code registers the button for the tab with id '186':</p> <pre><code>      OB.ToolbarRegistry.registerButton(buttonProps.buttonType, isc.OBToolbarIconButton, buttonProps, 100, '186');\n</code></pre> <p>Note:</p> <ul> <li>the first parameter is a unique identification so that one button can not be registered multiple times. </li> <li>as the second parameter the button javascript class is passed in, as a default always use <code>isc.ETToolbarIcon</code>Button </li> <li>the buttonProps define the button characteristics </li> <li>the third parameter defines the order in the toolbar, the standard buttons are placed with an interval of 10, so you can place your button in between other buttons. </li> <li>The last parameter is the tabId (a String), you can pass null to register a button for all tabs. It is also possible to pass in an array of tabIds (strings) to register a button for multiple tabs. </li> <li>To register a button for multiple tabs call the registerButton multiple times for different tabs </li> </ul>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#the-componentprovider","title":"The ComponentProvider","text":"<p>The previous steps added static resources (javascript and css) to the system.</p> <p>Now Etendo should know where to find these resources when initializing and generating the user interface. For this, the <code>css</code> and javascript and resources have to be registered. This is done through a ComponentProvider. </p> <p>Info</p> <p>For more detailed information, visit ComponentProvider.</p> <p><pre><code>    \u00a0\n    @ApplicationScoped\n    @ComponentProvider.Qualifier(ExampleComponentProvider.EXAMPLE_VIEW_COMPONENT_TYPE)\n    public class ExampleComponentProvider extends BaseComponentProvider {\n      public static final String EXAMPLE_VIEW_COMPONENT_TYPE = \"ETEXAPP_ExampleViewType\";\n    \u00a0\n      /*\n       * (non-Javadoc)\n       * \n       * @see com.etendoerp.client.kernel.ComponentProvider#getComponent(java.lang.String,\n       * java.util.Map)\n       */\n      @Override\n      public Component getComponent(String componentId, Map&lt;String, Object&gt; parameters) {\n        throw new IllegalArgumentException(\"Component id \" + componentId + \" not supported.\"); \n        /* in this howto we only need to return static resources so there is no need to return anything here */\n      }\n    \u00a0\n      @Override\n      public List&lt;ComponentResource&gt; getGlobalComponentResources() {\n        final List&lt;ComponentResource&gt; globalResources = new ArrayList&lt;ComponentResource&gt;();\n        globalResources.add(createStaticResource(\n            \"web/com.etendoerp.client.application.examples/js/example-toolbar-button.js\", false));\n        globalResources.add(createStyleSheetResource(\n            \"web/com.etendoerp.userinterface.smartclient/etendo/skins/\"\n                + KernelConstants.SKIN_VERSION_PARAMETER\n                + \"/com.etendoerp.client.application.examples/example-styles.css\", false));\n    \u00a0\n        return globalResources;\n      }\n    \u00a0\n      @Override\n      public List&lt;String&gt; getTestResources() {\n        return Collections.emptyList();\n      }\n    }\n</code></pre> A short explanation:</p> <ul> <li>The annotations in the top of the class are related to Weld.</li> </ul> <p>The annotations define that only one instance of this class is created (a singleton) and define an identifier for this instance. </p> <ul> <li>The getGlobalResources is important here, it shows how to register the global resources defined in the example module. </li> </ul> <p>Note</p> <p>For your own module just follow the same path structure and approach. </p> <p>Info</p> <p>To explain how Etendo can find the ComponentProvider: Etendo/Weld will analyze the classpath and find all the classes which have a @ComponentProvider annotation.</p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#the-result","title":"The result","text":"<p>To see the result, restart Tomcat, clear the cache of the browser (sometimes <code>css</code> styles are not picked up) and go back to the application and then specifically to the sales order window. </p> <p>You should see this:</p> <p>Note</p> <p>The button is not visualized in other windows/tabs because it is registered for only the sales order header tab.</p> <p></p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#adding-server-side-logic-implementation-steps","title":"Adding server side logic - Implementation steps","text":"<p>The next step in this how to is to add the server side logic and calling this logic from the client. The server side logic is implemented using the action handler concept.  The action handler concept allows you to create classes on the server which are callable from the client. </p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#implement-the-server-side-action-handler","title":"Implement the server side action handler","text":"<p>The server side action handler (<code>SumOrderActionHandler.java</code>) receives an array of order numbers of the selected orders. It will sum the order values and then return the total as a JSON string.</p> <p>This is the implementation of the server side:</p> <p>SumOrderActionHandler.java<pre><code>     */\npackage org.openbravo.client.application.examples;\n\nimport java.math.BigDecimal;\nimport java.util.Map;\n\nimport org.codehaus.jettison.json.JSONArray;\nimport org.codehaus.jettison.json.JSONObject;\nimport org.openbravo.base.exception.OBException;\nimport org.openbravo.client.kernel.BaseActionHandler;\nimport org.openbravo.dal.service.OBDal;\nimport org.openbravo.model.common.order.Order;\n\n/**\n * Sums the orders passed in through a json array and returns the result.\n */\n    public class SumOrderActionHandler extends BaseActionHandler {\n    \u00a0\n      protected JSONObject execute(Map&lt;String, Object&gt; parameters, String data) {\n        try {\n    \u00a0\n          // get the data as json\n          final JSONObject jsonData = new JSONObject(data);\n          final JSONArray orderIds = jsonData.getJSONArray(\"orders\");\n    \u00a0\n          // start with zero\n          BigDecimal total = new BigDecimal(\"0\");\n    \u00a0\n          // iterate over the orderids\n          for (int i = 0; i &lt; orderIds.length(); i++) {\n            final String orderId = orderIds.getString(i);\n    \u00a0\n            // get the order\n            final Order order = OBDal.getInstance().get(Order.class, orderId);\n    \u00a0\n            // and add its grand total\n            total = total.add(order.getGrandTotalAmount());\n          }\n    \u00a0\n          // create the result\n          JSONObject json = new JSONObject();\n          json.put(\"total\", total.doubleValue());\n    \u00a0\n          // and return it\n          return json;\n        } catch (Exception e) {\n          throw new OBException(e);\n        }\n      }\n    }\n</code></pre> Notes:</p> <ul> <li>The BaseActionHandler is extended, this is often the best approach when implementing an ActionHandler, in this case only the execute methods needs to be implemented. </li> <li>Data can be send in 2 ways to server: as parameters and as part of the request body. Therefore the execute method has 2 parameters. In this example the request body is used.</li> <li>Use a BigDecimal for numbers, as this far more precise than a double, unfortunately json only supports doubles. In the core Etendo system numbers are therefore send from client-server (and vice versa) as strings. </li> <li>the logic iterates over the order ids and retrieves the order using the Data Access Layer. </li> <li>the result is returned as json again.</li> </ul>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#calling-the-server-side-from-the-client-displaying-the-result","title":"Calling the server side from the client, displaying the result","text":"<p>Then, on the client, the action method of the button has to be implemented to call the server. Here is the implementation. </p> <pre><code>          action: function(){\n            var callback, orders = [], i, view = this.view, grid = view.viewGrid, selectedRecords = grid.getSelectedRecords();\n            // collect the order ids\n            for (i = 0; i &lt; selectedRecords.length; i++) {\n              orders.push(selectedRecords[i].id);\n            }\n\n            // define the callback function which shows the result to the user\n            callback = function(rpcResponse, data, rpcRequest) {\n              isc.say(OB.I18N.getLabel('ETEXAPP_SumResult', [data.total]));\n            }\n\n            // and call the server\n            OB.RemoteCallManager.call('com.etendoerp.client.application.examples.SumOrderActionHandler', {orders: orders}, {}, callback);\n</code></pre> <p>Note:</p> <ul> <li>the selectedRecords contain the full record information of the order (businessPartner etc.), in this case we only use the id </li> <li>the call to the server is asynchronously therefore a callback is used, which is called when the server returns the result. The callback gets 3 parameters, the data parameter contains the JSONObject returned by the server's execute method. </li> <li>the call to the RemoteCallManager has these parameters: <ul> <li>the class name of the action handler </li> <li>the data being sent as the request body </li> <li>request parameters (in this case nothing there) </li> <li>and the callback </li> </ul> </li> </ul> <p>Then when the server returns, the callback is called which will display a prompt. </p> <p>Note</p> <p>The label used in the callback, uses parameter substitution. Parameters are specified using a %0, %1 etc.:</p> <p></p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-button-to-the-toolbar/#the-result_1","title":"The result","text":"<p>The result shows the sum of the 2 selected order headers:</p> <p></p> <p>This work is a derivative of How to add a button to the toolbar by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Toolbar","Button","JavaScript","Data Access Layer"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/","title":"How to add a canvas field to a Form or Grid","text":"","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#overview","title":"Overview","text":"<p>This guide explains how to integrate canvas fields into forms and grids within Etendo, enabling the addition of customized visual components such as buttons, links, and calculated labels.  Canvas fields offer dynamic data presentation and interaction, leveraging JavaScript development expertise for implementation.</p>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#introduction","title":"Introduction","text":"<p>A canvas field allows the user to add any visual component to a form or a row in a grid.  This concept can be used to add a calculated field to a form and grid.  Visual components which can be added are for example buttons, links and (computed) labels.</p> <p>In this section, we will be adding a button and a calculated field to the form and to every row in the grid. We will illustrate how information from the record and form can be used to get dynamic information from the Form/Grid.</p> <p>The implementation of canvas fields requires javascript development experience.  See the following concept pages for background information on javascript development:</p> <ul> <li>Client Side Development and API</li> <li>JavaScript Coding Conventions </li> </ul> <p>It also makes sense to study the following page: Etendo Architecture.</p> <p></p>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#example-module","title":"Example Module","text":"<p>This section is supported by an example module which shows examples of the code shown and discussed.</p> <p>The code of the example module can be downloaded from this repository: com.etendoerp.client.application.examples</p>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#main-development-steps-for-creating-a-new-canvas-field","title":"Main development steps for creating a new canvas field","text":"<p>The development consists of 2 steps:</p> <ol> <li>Implement the canvas itself, normally this is done in javascript. </li> <li>Specify the canvas javascript class in the field definition of the tab/window </li> </ol>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#implementing-your-canvas-in-javascript","title":"Implementing your canvas in javascript","text":"<p>The first step is to implement your canvas class in javascript. This is done in 2 steps:</p> <ul> <li>Create a  javascript file with your javascript class and place it in the correct directory, the convention is to place js files in the following directory in your module: web/[module.java.package]/js </li> <li>Register the javascript file (and other static resources such as css files) in Etendo using a ComponentProvider </li> </ul> <p>The example module implements a button and a calculated field in the <code>example-canvas-field.js</code> file.</p> <p>The first example in the file implements a button which shows the identifier of the current record:</p> example-canvas-field.js<pre><code>isc.defineClass('OBEXAPP_SalesOrderActionButton', isc.OBGridFormButton);\n\u00a0\nisc.OBEXAPP_SalesOrderActionButton.addProperties({\n  noTitle: true,\n  title: OB.I18N.getLabel('OBUISC_Identifier'),\n  click: function() {\n    var info = '';\n    if (this.record) {\n      info = this.record._identifier;\n    } else if (this.canvasItem) {\n      info = this.canvasItem.form.getValue(OB.Constants.IDENTIFIER);\n    }\n    isc.say(info);\n  }\n});\n</code></pre> <p>The second example shows a calculated field which divides 2 values from the current record and displays the result in a formatted way.  It also illustrates several methods which are called when the context/environment changes (for example when a value on the form changes):</p> example-canvas-field.js<pre><code>isc.defineClass('OBEXAPP_SalesOrderCalculated', isc.Label);\n\u00a0\nisc.OBEXAPP_SalesOrderCalculated.addProperties({\n  height: 1,\n  width: 1,\n  overflow: 'visible',\n  contents: '',\n  initWidget: function() {\n    if (this.canvasItem) {\n      this.computeContents(this.canvasItem.form.getValue('grandTotalAmount'), this.canvasItem.form.getValue('summedLineAmount'));\n    }\n\u00a0\n    this.Super('initWidget', arguments);\n  },\n\n  // is called when the form gets redrawn\n  redrawingItem: function() {\n    this.computeContents(this.canvasItem.form.getValue('grandTotalAmount'), this.canvasItem.form.getValue('summedLineAmount'));\n  },\n\n  // is called when a field on the form changes its value\n  onItemChanged: function() {\n    this.computeContents(this.canvasItem.form.getValue('grandTotalAmount'), this.canvasItem.form.getValue('summedLineAmount'));\n  },\n\n  // is called in grid-display mode when the canvas is created/used\n  // for a record\n  setRecord: function(record) {\n    this.computeContents(record.grandTotalAmount, record.summedLineAmount);\n  },\n\n  computeContents: function(val1, val2) {\n    var num;\n    if (!val2) {\n      this.setContents('');\n    } else {\n      num = OB.Utilities.Number.JSToOBMasked(val1/val2, \n          OB.Format.defaultNumericMask,\n          OB.Format.defaultDecimalSymbol,\n          OB.Format.defaultGroupingSymbol,\n          OB.Format.defaultGroupingSize);\n\n      this.setContents(num);\n    }\n  }\n});\n</code></pre> <p>The javascript file is registered in the example modules' ComponentProvider like this:</p> ExampleComponentProvider.java<pre><code>@Override\npublic List&lt;ComponentResource&gt; getGlobalComponentResources() {\n  final List&lt;ComponentResource&gt; globalResources = new ArrayList&lt;ComponentResource&gt;();\n  globalResources.add(createStaticResource(\n      \"web/org.openbravo.client.application.examples/js/example-canvas-field.js\", false));\n.....\n</code></pre>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#defining-the-canvas-in-the-tab-field-adfield","title":"Defining the canvas in the Tab-Field (ADField)","text":"<p>The next step is to create a new field in the tab, and set its client class field:  </p> <p></p> <p>It is also possible to add in-line properties in the <code>\"Clientclass\"</code> field, for example, 'OBEXAPP_SalesOrderActionButton {\"title\": \"My Action Button\"}'</p>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#the-result","title":"The result","text":"<p>The result is shown in both the grid and the form:</p> <p></p> <p></p>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#javascript-events-passed-to-the-canvas","title":"Javascript events passed to the canvas","text":"<p>When implementing your canvas, you should take into account that the canvas is used in 3 different situations:</p> <ul> <li>When displaying a row in the grid </li> <li>When editing a row in the grid </li> <li>In form view, when editing a record </li> </ul> <p>The last 2 cases are similar.</p> <p>In grid-display mode the following applies:</p> <ul> <li>In grid mode the following properties are set on the canvas: <ul> <li><code>grid</code>: the grid object </li> <li><code>rowNum</code>: the row number/record index for which the canvas is used </li> <li><code>record</code>: the record for which the canvas is used </li> <li><code>colNum</code>: the column in which the canvas is shown </li> <li><code>field</code>: the field where the canvas is used </li> </ul> </li> <li>A canvas can be created and pooled, so over time it is created once and re-used when records are scrolled into view.    When a canvas is used for a record, then the setRecord method on it is called (if the canvas has this method). </li> </ul> <p>In form-edit or grid-edit mode, the following applies:</p> <ul> <li>The canvasItem property will be set pointing to the form item the canvasItem can be used to get to the form itself and to the grid (if editing in the grid): <ul> <li><code>this.canvasItem.form</code>: the form instance </li> <li><code>this.canvasItem.form.grid</code>: in case of grid editing </li> </ul> </li> <li>If the canvas has a property noTitle with the value <code>true</code> then in form mode no title/label is displayed </li> <li>Form changes: the canvas can capture form/value change events by implementing 2 methods (both without arguments): <ul> <li><code>onItemChanged</code>: is called when a value on the form changes </li> <li><code>redrawingItem</code>: is called just before the form is redrawn </li> </ul> </li> </ul>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-canvas-field-to-a-form-or-grid/#adding-server-side-actions","title":"Adding server side actions","text":"<p>The button implementation can easily be extended with a server side action. Etendo Classic supports the action handler concept  for this purpose.</p> <p>This work is a derivative of \"How to add a canvas field to a form or grid\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo. </p>","tags":["How to","Canvas Field","Form Customization","Grid Customization","JavaScript Development","UI Components","JavaScripts Events"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-field-to-a-window-tab/","title":"How to Add a Field to a Window Tab","text":"","tags":["How to","Etendo Classic","Customization","UI Design","Application Dictionary","Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-field-to-a-window-tab/#overview","title":"Overview","text":"<p>The objective of this section is to show how you can add a new field to a tab in Etendo Classic.</p> <p>It is closely related to the previous How to add Columns to a Table section.</p> <p>The task of adding columns to an existing window is now very simple since most of the work (like defining references, elements) has already been done when adding the columns to the table.</p> <p>On this page we will show an example of how to place the <code>example_column</code> field in the <code>Production Run</code> window using the <code>create fields</code> button.</p>","tags":["How to","Etendo Classic","Customization","UI Design","Application Dictionary","Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-field-to-a-window-tab/#add-the-fields-to-the-window-example","title":"Add the fields to the window example","text":"<p>The process to add new fields to an existing window is the same as the one to add fields to a new (empty) window. Going to <code>Application Dictionary</code> &gt; <code>Window, Tabs and Fields</code>, we need to search for the <code>Production Run</code> window. Then, for that window, mark its <code>Incidence</code> tab.</p> <p></p> <p>Now, we use the Create Fields process on this tab to let it add all columns of the underlying MA_WEIncidence table to this tab if they have not been previously added.</p> <p>This will then add one new field to the tab matching the new column and automatically place the field into the module.</p> <p></p> <p>As a last step, the Synchronize Terminology process should be run to synchronize our newly added fields to the elements created for the columns they are based on, so that the UI labels for the new fields get the names defined in those elements.</p> <p>If this window should also be used in classic UI mode then now <code>./gradlew smartbuild</code> should be execute to compile the changed window.</p> <p>To see the changes in the new user interface just change the <code>System Administrator</code> role used for this section (Select a role where you have access to the window) and go to the modified window to see that it has the new field as shown here:</p> <p></p> <p>This work is a derivative of How to add a field to a window tab by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo Classic","Customization","UI Design","Application Dictionary","Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-rich-text-field-and-column/","title":"How to Add a Rich Text Field and Column","text":"","tags":["How to","Rich Text Field","Column","Database","Reference"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-rich-text-field-and-column/#overview","title":"Overview","text":"<p>This How-to section explains how to add a rich text field and column to the Etendo Classic.</p> <p>The steps to get a rich text field in your window consists of two steps: </p> <ul> <li>Add a column to a table</li> <li>Add a field to a tab</li> </ul> <p>You can also create a new table and a new window/tab ofcourse. This how-to will only focus on the specific part of a rich text field.</p>","tags":["How to","Rich Text Field","Column","Database","Reference"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-rich-text-field-and-column/#example","title":"Example","text":"<p>For this how-to, we will use the redefine the description field in the sales order window. So, you may need to do a smartbuild after the changes to see the result.</p>","tags":["How to","Rich Text Field","Column","Database","Reference"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-rich-text-field-and-column/#adding-a-column","title":"Adding a column","text":"<p>First, you have to add a column to the existing table.</p> <p>Note</p> <p>As rich text is stored as HTML inside the database, the varchar column type should be used. What is more, the developer needs to keep in mind that 100 characters of rich text requires more that 100 chars of storage inside the database due to html markup. Usually, a factor of 2 will suffice, for example, if one wants to allow the user to enter 1000 characters of rich formatted text, the database column should have a type of varchar(2000).  </p> <p>When introducing the new column to the application dictionary, the correct reference must be selected, i.e. the new Rich Text reference:</p> <p></p>","tags":["How to","Rich Text Field","Column","Database","Reference"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-rich-text-field-and-column/#create-a-field-set-col-and-rowspan","title":"Create a field - set col and rowspan","text":"<p>Then create a field within the tab/window. For a rich text field you can also set the col and rowspan (these are only shown when the corresponding column is defined as rich text):</p> <p> </p>","tags":["How to","Rich Text Field","Column","Database","Reference"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-a-rich-text-field-and-column/#the-result","title":"The result","text":"<p>The result is visualized as a rich text editor in form view:</p> <p> </p> <p>Info</p> <p>Rich text fields can not be edited in grid mode (a hoover shows the content). They are always displayed as read-only fields.  </p> <p>This work is a derivative of How to add a rich text field and column by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo. </p>","tags":["How to","Rich Text Field","Column","Database","Reference"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-columns-to-a-table/","title":"How to Add Columns to a Table","text":"","tags":["How to","Add Columns","Table","Configuring Columns","Application Dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-columns-to-a-table/#overview","title":"Overview","text":"<p>In this section, the user can find information about how to extend the table created in the How to Create a Table section to include additional fields.</p> <p>Three different fields will be added to show how to configure some of the possible references:</p> <ol> <li>ValidTo , a simple date-field matching the ValidFrom date already present in this table </li> <li>Payment Schedule , shown as a combobox to the user to be able to choose from three values defined in a list-reference. <ol> <li>First day of the month </li> <li>Mid of the month </li> <li>Last day of the month </li> </ol> </li> <li>Payment Category , a link to another existing table which allows selecting among the values present in that table. </li> </ol> <p>These changes can be done in two different locations:</p> <ol> <li>Add columns to the original module (dbprefix <code>HT</code> ) </li> <li>Create a second module (dbprefix <code>HT2</code> ) which adds the columns to the first module </li> </ol> <p>The first option can be chosen if the original module author wants to add more columns to their module. The second option is possible for anyone as the columns are added by a new module to the existing one which is not changed directly.</p> <p>The main difference between these two methods is the names which need to be chosen for the columns to comply with the modularity naming rules.</p> <ol> <li>Adding column to same module: Any valid column name can be picked </li> <li>Via second module: New column name must comply to the pattern <code>EM_&lt;DBPREFIX&gt;</code> where <code>&lt;DBPREFIX&gt;</code> must be the dbprefix if the new module contaning the column to be added. In this example: <code>EM_HT2</code></li> </ol> <p>From now on, we follow this second approach and will place all new elements into a new module with dbprefix <code>HT2</code> .</p> <p>To show how different types of column are configured, we will be adding 3 new columns:</p> <ul> <li>Valid To a simple column of type date </li> <li>Payment Schedule a list-reference containing a list of values: Start of Month , Mid of Month , End of Month</li> <li>Salary Category a reference pointing to the existing Salary Category table. </li> </ul>","tags":["How to","Add Columns","Table","Configuring Columns","Application Dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-columns-to-a-table/#creating-the-new-module","title":"Creating the new module","text":"<p>This section only lists the main important elements needed for the new module. More details can be found in the How To Create a Module</p> <ul> <li>dbprefix: <code>HT2</code></li> <li>Dependencies: <ul> <li>Core as usual </li> </ul> </li> </ul>","tags":["How to","Add Columns","Table","Configuring Columns","Application Dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-columns-to-a-table/#creating-the-columns-in-the-database","title":"Creating the columns in the database","text":"Column name Type Length Note <code>em_ht2_validto</code> DATE Date that this salary is valid to. <code>em_ht2_payment_schedule</code> VARCHAR 60 When the salary is paid <code>em_ht2_c_salary_category_id</code> VARCHAR 32 Link to the Salary Category <p>To create the above table within the database, use one of the following <code>ALTER TABLE</code> statements depending on the DB you are using:</p> SQL script<pre><code>ALTER TABLE ht_salary ADD COLUMN em_ht2_validto timestamp without time zone;\nALTER TABLE ht_salary ADD COLUMN em_ht2_payment_schedule VARCHAR(60);\nALTER TABLE ht_salary ADD COLUMN em_ht2_c_salary_category_id VARCHAR(32);\nALTER TABLE ht_salary ADD CONSTRAINT \"em_ht2_c_salary_category\" FOREIGN KEY (em_ht2_c_salary_category_id) REFERENCES c_salary_category(c_salary_category_id);\n</code></pre> <p>As can be seen in the SQL, a foreign key is added along with the new field linking to the <code>c_salary_category</code> table. This ensures that only existing categories can be selected and also that no salary category can be deleted as long as it is used in the <code>ht_salary</code> table.</p>","tags":["How to","Add Columns","Table","Configuring Columns","Application Dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-columns-to-a-table/#adding-configuring-the-columns-in-the-application-dictionary","title":"Adding &amp; Configuring the columns in the Application Dictionary","text":"<p>In this part, we will add the newly added column to the list of columns already defined for the <code>ht_salary</code> table and then configure those column definitions to match the description giving in the objective section above.</p>","tags":["How to","Add Columns","Table","Configuring Columns","Application Dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-columns-to-a-table/#adding-the-new-column-to-the-application-dictionary","title":"Adding the new column to the Application Dictionary","text":"<p>The steps to follow are:</p> <ol> <li>In the <code>Tables and Columns</code> window search for the entry of the <code>ht_salary</code> table. </li> <li>With this record selected, run the Create columns from DB process. As the table already contains several columns only column which are not yet present in the Application Dictionary definition of that table will be added. In this section, this process will add our newly created 3 columns to the list. Notice that those new entries are automatically associated with the new module with prefix <code>HT2</code> as the process detected this via the naming of the database columns. </li> </ol> <p>Taking a look at the folder structure of the module after running <code>./gradlew export.database</code>, it shows that the new columns have been exported into a file in a 'modifiedTables' folder instead of the usual 'tables' to indicate that this module does not create the <code>ht_salary</code> table but instead is adding new elements to it.</p> <pre><code>org.openbravo.howtos2\n\u2514\u2500\u2500 src-db\n    \u2514\u2500\u2500 database\n        \u2514\u2500\u2500 model\n            \u251c\u2500\u2500 functions\n            \u2514\u2500\u2500 modifiedTables\n            \u2502       \u2514\u2500\u2500 HT_SALARY.xml\n            \u251c\u2500\u2500 sequences\n            \u251c\u2500\u2500 tables\n            \u251c\u2500\u2500 triggers\n            \u2514\u2500\u2500 views\n        \u2514\u2500\u2500 sourcedata\n            \u251c\u2500\u2500 AD_MODULE_DBPREFIX.xml\n            \u251c\u2500\u2500 AD_MODULE_DEPENDENCY.xml\n            \u251c\u2500\u2500 AD_MODULE.xml\n            \u2514\u2500\u2500 AD_PACKAGE.xml\n</code></pre>","tags":["How to","Add Columns","Table","Configuring Columns","Application Dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-columns-to-a-table/#configuring-the-new-columns","title":"Configuring the new columns","text":"<p>Before starting to configure the new columns, two preparatory steps need to be done.</p> <ol> <li>Create a List Reference for the column Payment Schedule to define the 3 values which should be allowed for this list. </li> <li>Create Table reference for the <code>em_ht2_c_salary_category_id</code> column as the standard TableDir reference cannot be used with <code>em</code> type columns.</li> </ol> <p>When adding these new elements remember to place them in the new module with prefix <code>HT2</code>.</p> <p>The first step is to create a new Reference to hold the list of values for the Payment Schedule column. Important values to configure here are:</p> <ul> <li>Parent Reference = List in the Reference definition itself, to define it as a List Reference. </li> <li>For each entry in the List Reference tab <ul> <li>Search Key The value stored in the database field when this entry is selected by a user in the ComboBox. </li> <li>Name The user visible (translatable) text shown in the UI. </li> <li>Sequence to define the order of the entries which should be used in the UI. </li> </ul> </li> </ul> <p>The following screenshot shows how the defined reference will look like.</p> <p></p> <p>The second step is to create a Table Reference to define how the new Salary Category field is linked with the <code>c_salary_category</code> table.</p> <p>For this, a new Reference needs to be created. In this case, the important values for it are the following:</p> <ul> <li>Parent Reference = Table to denote this is a Table Reference. </li> <li>In the Table Reference Tab: <ul> <li>Table = <code>c_salary_category</code> as this is the target table our new column will be pointing to.</li> <li>Key Column = <code>c_salary_category_id</code> as this is the primary key of the target table </li> <li>Display Column = <code>Name</code> to denote the field of this table which should be shown in the UI for this column. </li> </ul> </li> </ul> <p>The following screenshot shows how the defined reference will look like.  </p> <p></p> <p>After this two previous steps, we can finally configure the new columns to use the reference we just created.</p> <p>In the Tables and Columns window, we search for the entry to the <code>ht_salary</code> table. In the column tab we make the following changes for our new columns:</p> <ol> <li>Payment Schedule, change the Reference of this column from String to List and change the Reference Search Key to our newly created List Reference with name <code>EM_Ht2_Payment_Schedule</code>. </li> <li>Salary Category , change the Reference of this column from TableDir to Table and change the Reference Search Key to the new <code>ht_salary_c_salary_category</code> . </li> </ol> <p>The final step would be to run the Synchronize Terminology process and update the created elements to have useful names for the UI.</p> <p>However as long as issue  10886  is unfixed this process will not map existing elements correctly for columns following the <code>EM_</code> naming rules.</p> <p>To work around this and reuse the existing core elements for the two columns for which such exists ( validto , Salary Category ) assign the existing elements manually to those two columns.</p> <p>For this, the following changes are needed in the same open window Tables and Columns still open from the last step and in the Columns tab of the <code>ht_salary</code> table.</p> <ol> <li>ValidTo change the Application Element to ValidTo - Valid To Date</li> <li>Salary Category change the Application Element to C_Salary_Category_ID - Salary Category</li> </ol> <p>Now run the Synchronize Terminology process to set element for the last column which does not yet have a matching element.</p> <p>After this, the new columns should look like shown in the following screenshot:</p> <p></p> <p>As a final step, we now update the newly created <code>EM_Ht2_Payment_Schedule</code> element to have a useful label for the UI.</p> <p>Navigating to <code>Application Dictionary</code> &gt; <code>Element</code> we search for the new element and to the following updates:</p> <ol> <li>Name change from <code>EM_Ht2_Payment_Schedule</code> to Payment Schedule</li> <li>Print Name change from <code>EM_Ht2_Payment_Schedule</code> to Payment Schedule</li> </ol> <p>Those updates are needed to have useful labels in the UI for any windows defined on this table and to avoid those having internal names using the technical <code>EM</code>-terminology.</p>","tags":["How to","Add Columns","Table","Configuring Columns","Application Dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-add-columns-to-a-table/#rebuilding-the-system","title":"Rebuilding the system","text":"<p>Finally, to make the newly added columns available at runtime <code>./gradlew generate.entities</code> needs to be called and the changes deployed to tomcat. Those two steps can be done together by calling <code>./gradlew smartbuild</code>. After that, Tomcat must be restarted to refresh the DAL In-Memory Model so it knows about the newly added columns.</p> <p>Once the columns are added to the table, the user can export the module.</p> <p>To add the new columns to the window defined on top of this table, visit How to add a field to a Window Tab.</p> <p>This work is a derivative of How to Add Columns to a Table by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Add Columns","Table","Configuring Columns","Application Dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-change-an-existing-window/","title":"How to Change an Existing Window","text":"","tags":["How to","Application Dictionary","UI Customization","Physical Inventory","Module Development"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-change-an-existing-window/#overview","title":"Overview","text":"<p>Application elements (windows, tabs and fields) are liable to change repeatedly during the development or maintenance phases of a project. Etendo is able to cope with these changes because its architecture is suited to iterative development. The definitions of all generated Windows, tabs and fields are stored as metadata in the Application Dictionary (AD).</p> <p>Changing the window of an existing application is a simple process of changing the AD definition.</p> <p>When using the Etendo UI, the changes can be seem immediately when switching role and then by opening the changed window again.</p> <p>When using classic Window a compile step is needed.  </p> <p>This How-To explains how to modify existing elements of a window. If only new elements (like new fields) should be added to a window the use of a Template is not needed. Instead, those new elements can just be added using a normal module as explained in the other How-To on How to add a field to a window Tab. </p>","tags":["How to","Application Dictionary","UI Customization","Physical Inventory","Module Development"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-change-an-existing-window/#objective","title":"Objective","text":"<p>The objective of this how-to is to illustrate how to make changes to existing generated windows in terms of appearance and behavior. The window used in the example is the Physical Inventory window and the changes illustrated will be:</p> <ul> <li>Hide a field </li> <li>Re-sequence the layout </li> </ul> <p>Physical Inventory is a window that belongs to Etendo Classic. It comprises of:</p> <ul> <li>1 Window - Physical Inventory. </li> <li>2 Tabs - Header and Lines. </li> <li>A Header Tab has 19 Fields 10 of which are displayed (A few are displayed conditionally).</li> </ul> <p>Before any changes the header tab has the following appearance:</p> <p></p> <p>Info</p> <p>To customize these window in a Modularity Context a new module of Type Template is needed.</p>","tags":["How to","Application Dictionary","UI Customization","Physical Inventory","Module Development"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-change-an-existing-window/#changing-the-window","title":"Changing the window","text":"<p>Navigate to the <code>Application Dictionary</code> &gt; <code>Windows, Tabs and Fields</code> window and select the record for Physical Inventory .</p> <p>In the Fields tab we can now make the changes needed to adapt the layout as wanted:</p> <ul> <li>Description field, unmark the Displayed checkbox to hide the field from the tab. </li> <li>Organization field, change sequence number to 200 and mark the Start in new line checkbox. This moves the field below all other normally displayed. </li> </ul> <p>For testing the changed layout, switch away from the System Administrator role to e.g. the F &amp;B International Group Admin role and open the Physical Inventory window again. As the instance contains our module marked as InDevelopment the window layout is reloaded each time the window is opened, so we can see the changed layout immediate as seen below:</p> <p></p> <p>To apply the same layout changes to the window in classic UI mode, the windows need to be recompiled, the changes deployed to tomcat and tomcat restarted. The compile &amp; deploy step can be done by using <code>./gradlew smartbuild</code> which will recompile all changed windows and deploy the changes.</p>","tags":["How to","Application Dictionary","UI Customization","Physical Inventory","Module Development"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-change-an-existing-window/#exporting-the-changes","title":"Exporting the changes","text":"<p>The final step is to export the changes into the module so they are persisted.</p> <p>Note</p> <p>When exporting changes into a template, it is important that only the template is in development and the module which contains the changed object (i.e. window) is not.</p> <p>After ensuring that, the export of the changes consists of the following two steps:</p> Terminal<pre><code>  1. _./gradlew export.database_ , same steps as for any other module \n</code></pre> Terminal<pre><code>  2. _./gradlew export.config.script_ , analyses the changes done and creates a special file _configScript.xml_ in the module to contain them. \n</code></pre> <p>This work is a derivative of How to change an existing window by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.   </p>","tags":["How to","Application Dictionary","UI Customization","Physical Inventory","Module Development"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-change-the-size-of-a-column/","title":"How to Change the Size of a Column","text":"","tags":["How to","Column","Application Dictionary","Column Size"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-change-the-size-of-a-column/#overview","title":"Overview","text":"<p>This section explains how to change the size of a column inside the database. It enables the user to have a certain amount of flexibility within the database.</p>","tags":["How to","Column","Application Dictionary","Column Size"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-change-the-size-of-a-column/#execution-steps","title":"Execution Steps","text":"<p>In Etendo, it is possible to change the size of a column. To achieve this, these steps must be followed:</p> <ol> <li>Create a template and set its status as In Development.</li> <li> <p>Modify the column size within the database with the ALTER TABLE SQL command.</p> <p>Info</p> <p>The new value must be greater than the old one.</p> <ul> <li>Postgres: <pre><code>ALTER TABLE &lt;table_name&gt; ALTER COLUMN &lt;column_name&gt; type &lt;type&gt;(&lt;new_size&gt;)\n</code></pre></li> <li>Oracle: <pre><code>ALTER TABLE &lt;table_name&gt; MODIFY &lt;column_name&gt; &lt;type&gt;(&lt;new_size&gt;)\n</code></pre></li> </ul> </li> <li> <p>Update the new column size in the Application Dictionary. For this, go to the Tables and Columns window, find the column definition and specify the new size there.</p> </li> <li>Export the database: <code>./gradlew export.database</code> (with this action, the template definitions are being exported).</li> <li>Export the configuration script: <code>./gradlew export.config.script</code> (with this action, the core changes into the template are being exported).</li> <li>Check the generated configuration script and verify that the change regarding the new column size appears in the first lines.</li> </ol> <p>Note</p> <p>If the column that has been modified is being used by a database function by giving its value to another variable, this variable must have an equal or greater size (at least the size of the new modified column). Since if not, the process would fail. This means, if the variable's size was not enough to store the columns content, the function as well must be modified by adjusting the size of the variable in question and exporting this change into the template.</p> <p>As a last consideration, verify that the new column size does not affect functions or triggers working with the database.</p> <p>This work is a derivative of How To Change The Size of a Column by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Column","Application Dictionary","Column Size"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-configure-session-timeout/","title":"How to Configure Session Timeout","text":"","tags":["How to","Configuration","Session Timeout","Security"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-configure-session-timeout/#overview","title":"Overview","text":"<p>Etendo Classic includes a session timeout mechanism that logs out users after a defined period of inactivity. This feature helps ensure security and efficient resource management.</p> <p>This guide explains how to configure the session timeout setting in Etendo Classic, including steps to apply and export the configuration.</p>","tags":["How to","Configuration","Session Timeout","Security"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-configure-session-timeout/#what-is-session-timeout","title":"What is Session Timeout?","text":"<p>The session timeout defines the duration of user inactivity that triggers automatic session termination.  </p> <ul> <li>For example, with a timeout set to 60 minutes, a user who remains inactive for that time will be automatically logged out.  </li> <li>If a user closes the browser without selecting Close Session, the session will still expire after the configured timeout period.</li> </ul>","tags":["How to","Configuration","Session Timeout","Security"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-configure-session-timeout/#customizing-session-timeout","title":"Customizing Session Timeout","text":"<p> <code>Application</code> &gt; <code>Application Dictionary</code> &gt; <code>AD Implementation Mapping</code></p> <p>Follow these steps to configure a custom session timeout:</p> <ol> <li>Log in as a System Administrator.</li> <li>Go to <code>Application Dictionary &gt; AD Implementation Mapping</code>.</li> <li>Search for the object named <code>Timeout</code>.</li> <li>Switch to the <code>Parameters</code> tab and locate the Timeout parameter.</li> <li>Set the Search Key to the desired timeout value (in minutes).</li> </ol> <p>Tip</p> <p>Default session timeout: 60 minutes</p> <p>Info</p> <p>Before exporting this configuration, ensure that an active template is present, as this is a core system value that cannot be modified unless a template is active.</p> <p></p>","tags":["How to","Configuration","Session Timeout","Security"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-configure-session-timeout/#applying-the-changes","title":"Applying the Changes","text":"<p>After modifying the timeout parameter, apply the changes using the following Gradle task:</p> <p>Terminal<pre><code>./gradlew smartbuild\n</code></pre> This command regenerates the <code>web.xml</code> file and applies the necessary changes.</p>","tags":["How to","Configuration","Session Timeout","Security"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-configure-session-timeout/#exporting-the-configuration","title":"Exporting the Configuration","text":"<p>If a template is active and you wish to export the modified session timeout configuration, run:</p> Terminal<pre><code>./gradlew export.config.script\n</code></pre> <p>Note</p> <p>This step is required only when distributing the configuration as part of a template. If not exported, the change may be lost upon future builds or updates.</p> <ul> <li>This work is licensed under   CC BY-SA 2.5 ES by Futit Services S.L..</li> </ul>","tags":["How to","Configuration","Session Timeout","Security"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-copy-and-paste-images-in-etendo/","title":"How to Copy and Paste Images in Etendo","text":"","tags":["How to","Copy Images","Paste Images","Rich Text","Base64"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-copy-and-paste-images-in-etendo/#copy-and-paste-images-in-etendo","title":"Copy and Paste Images in Etendo","text":"","tags":["How to","Copy Images","Paste Images","Rich Text","Base64"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-copy-and-paste-images-in-etendo/#overview","title":"Overview","text":"<p>This section explains how to use rich text areas to save images in Etendo.</p>","tags":["How to","Copy Images","Paste Images","Rich Text","Base64"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-copy-and-paste-images-in-etendo/#how-to-include-images-with-rich-text-areas","title":"How to include images with rich text areas","text":"<p>First, the user must define a column in the database where the corresponding image is saved.</p> <p>Info</p> <p>To do this, it is important to remember that this column must have the enough size to store a codified image in base64 format. For example: a 2 MB image contains 3 million characters.</p> <p></p> <p>Once the column is defined, the user must log in with the System Administrator role, go to Application Dictionary | Windows, Tables and Columns, find the corresponding table, in our case \u201cproduct\u201d and create columns from the database with the \u201cCreate column from DB\u201d button.\u00a0</p> <p>In the recently created column, the reference \u201crich text area\u201d must be selected.\u00a0</p> <p>Also, a field for the corresponding image must be created.\u00a0</p> <p>Finally, it is necessary to compile executing:</p> Terminal<pre><code>./gradlew smartbuild\n</code></pre> <p></p> <p>As seen in the image above, the \u201cimage\u201d field was created, in which it is possible to paste content to store in base64 format in the database. In this way, this information is available for later.</p>","tags":["How to","Copy Images","Paste Images","Rich Text","Base64"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/","title":"How to Create a Background Process","text":"<p>title: How to Create a Background Process tags:     - How to     - Background Process     - Process Scheduling     - Run Later     - Unschedule</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/#how-to-create-a-background-process","title":"How to Create a Background Process","text":""},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/#overview","title":"Overview","text":"<p>Background Processes are Processes that are executed without the direct action of the user. There can be set different rules to schedule when the process is executed.</p> <p>This document discusses about the Etendo infrastructure for Background Processes. How to define, schedule and monitorize Background Processes.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/#defining-a-background-process","title":"Defining a Background Process","text":"<p>Background Processes are defined in the window <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt;<code>Process Request</code>. First in the field Process select the process to execute and, in the Timing field, when it will be executed.</p> <p> Depending on the Timing selected, it is needed to define more fields to define this timing:</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/#run-immediately","title":"Run Immediately","text":"<p>This timing option will execute the Background Process only once at the moment the button to schedule the process is pressed. After being scheduled, it can be rescheduled as many times as needed.</p> <p>This option is very similar to executing a process from a menu option. The difference is that when scheduling a Run Immediately Background Process, there will not be any pop-up that indicates when the execution finished and instead, its execution  will be registered in the Process Monitor.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/#run-later","title":"Run Later","text":"<p>This option is similar to the previous option. In this case, the Background Process will be executed only one time in one moment in the future.</p> <p>The moment when the Background Process will be executed is defined in the fields Start Date and End Date.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/#schedule","title":"Schedule","text":"<p>This is the most versatile option that allows to execute a Background Process periodically. These are the fields used to define the schedule plan of a Background Process:</p> <ul> <li>Start Date and Start Time: Defines the moment when the schedule plan for this Background Process will start. </li> <li>Frequency: Defines the frequency to execute the Background Process. It can be Every n seconds , Every n minutes , Hourly , Daily , Weekly , Monthly , or Cron expression. Depending on the option selected you can define the specific details for each frequency option. </li> <li>Finish Date and Finish Time: These fields can be defined only when the option Finished is selected. And it defines when to stop the schedule plan for this Background Process. </li> </ul>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/#schedule-and-unschedule-a-background-process","title":"Schedule and Unschedule a Background Process","text":"<p>After the Background Process has been completely defined it can be scheduled pressing the button Schedule Process. When a process is scheduled, it will be executed according the Timing options selected, and every execution will be registered in the Process Monitor.</p> <p>To stop future executions of an Background Process just press the button Unschedule Process. After a Background Process has been unscheduled it can be scheduled again in any moment pressing the button Reschedule Process .</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-background-process/#monitoring-executions-of-background-processes","title":"Monitoring executions of Background Processes","text":"<p>All the executions of Background Processes can be monitored in <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt;<code>Process Monitor</code>.</p> <p></p> <p>In this window, there is one entry for each Background Process execution and the information of each execution. The most important fields are:</p> <ul> <li>Process: The Process executed. </li> <li>Start Time , End Time and Duration: When the execution started, when finished and the time it took to complete. </li> <li>Status: The final result of the execution of the Process. </li> <li>Process Log: The information logged during the execution of the Process. For example if the Status of the execution is Error here in the Process Log the reason of the error can be detected. </li> </ul> <p>This work is a derivative of How to Create a Background Process by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout-that-extends-from-another-callout/","title":"How to Create a Callout that Extends from Another Callout","text":"","tags":["How to","Callout","Extend Callout","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout-that-extends-from-another-callout/#overview","title":"Overview","text":"<p>This section discusses how to implement a callout that extends from another callout. The main important elements needed for the new feature are explained. More details about callouts can be found in How to create a Callout.</p>","tags":["How to","Callout","Extend Callout","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout-that-extends-from-another-callout/#example-module","title":"Example Module","text":"<p>This section is supported by an example module which shows examples of the code shown and discussed.</p> <p>The code of the example module can be downloaded from this public GitHub repository: com.etendoerp.client.application.examples.</p>","tags":["How to","Callout","Extend Callout","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout-that-extends-from-another-callout/#defining-callouts","title":"Defining Callouts","text":"<p>Two callouts will be shown. One of them is the parent callout and the other one is the child callout. In this example, these two callouts are working in Assets window.</p>","tags":["How to","Callout","Extend Callout","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout-that-extends-from-another-callout/#defining-parent-callout","title":"Defining Parent Callout","text":"<p>The following example follows this guide to implement the callout. The example shows a callout that edits value of the Name field.</p> <pre><code>  package com.etendoerp.client.application.examples.callouts;\n\n  import javax.servlet.ServletException;\n  \u00a0\n  import org.openbravo.erpCommon.ad_callouts.SimpleCallout;\n  \u00a0\n  public class OBEXAPP_Assets_Name extends SimpleCallout {\n  \u00a0\n    protected static final String MODIFIED_FIELD = \"_UPDATED\";\n  \u00a0\n    @Override\n    protected void execute(CalloutInfo info) throws ServletException {\n  \u00a0\n      // get value of field name and update value\n      final String name = info.getStringParameter(\"inpname\");\n      info.addResult(\"inpname\", name + MODIFIED_FIELD);\n  \u00a0\n      // Combo example. Added three currencies to currency combo.\n      info.addSelect(\"inpcCurrencyId\");\n      // USD currency is selected.\n      info.addSelectResult(\"100\", \"USD\", true);\n      info.addSelectResult(\"102\", \"EUR\", false);\n      info.addSelectResult(\"103\", \"DEM\", false);\n      info.endSelect();\n    }\n  \u00a0\n  }\n</code></pre> <p>As you can see, the callout gets the value of Name field and concatenates the following string: <code>_UPDATED</code>. Besides you can see a code that defines a combo. This code will be explained in the following section.</p>","tags":["How to","Callout","Extend Callout","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout-that-extends-from-another-callout/#defining-child-callout","title":"Defining Child Callout","text":"<p>This example callout extends from the parent callout that is defined above. Combo example is explained in next section.</p> <pre><code>  package com.etendoerp.client.application.examples.callouts;\n\n  import javax.servlet.ServletException;\n  \u00a0\n  public class OBEXAPP_Assets_Desc extends OBEXAPP_Assets_Name {\n  \u00a0\n    @Override\n    protected void execute(CalloutInfo info) throws ServletException {\n  \u00a0\n      // OBEXAPP_Assets_Name callout is executed\n      super.execute(info);\n  \u00a0\n      // Combo example. Removed USD currency from combo and select DEM currency.\n      info.addSelect(\"inpcCurrencyId\");\n      info.removeSelectResult(\"100\");\n      info.addSelectResult(\"103\", \"DEM\", true);\n      info.endSelect();\n  \u00a0\n      // Checks if name field has been updated by parent callout.\n      String name = info.getStringParameter(\"inpname\");\n      String message = \"Feature 'Extends a Callout' works as expected.\";\n      if (name.endsWith(MODIFIED_FIELD)) {\n        info.addResult(\"inpdescription\", message);\n        info.addResult(\"MESSAGE\", message);\n      } else {\n        message = \"Feature 'Extends a Callout' not works as expected.\";\n        info.addResult(\"inpdescription\", message);\n        info.addResult(\"ERROR\", message);\n      }\n  \u00a0\n      // Now it is possible to update the 'name' field again and the value will be overwritten\n      info.addResult(\"inpname\", \"UPDATED...\");\n    }\n  }\n</code></pre> <p>First of all, <code>OBEXAPP_Assets_Desc</code> callout extends from <code>OBEXAPP_Assets_Name</code>. In this situation, you should take into account the following sections in this callout:</p> <ul> <li>Run parent callout. </li> </ul> <pre><code>    // OBEXAPP_Assets_Name callout is executed\n    super.execute(info);\n</code></pre> <ul> <li>Operations for combo field are executed. This code is explained in the next section. </li> </ul> <pre><code>    // Combo example. Removed USD currency from combo and select DEM currency.\n    info.addSelect(\"inpcCurrencyId\");\n    info.removeSelectResult(\"100\");\n    info.addSelectResult(\"103\", \"DEM\", true);\n    info.endSelect();\n</code></pre> <ul> <li>Operations after parent callout is executed. In this case, child callout checks if name is been modified by parent callout. Then, child callout takes two actions. Update the description field with a message and shows an information or failure message. Finally, the name field is updated again. </li> </ul> <pre><code>    // Checks if name field has been updated by parent callout.\n    String name = info.getStringParameter(\"inpname\");\n    String message = \"Feature 'Extends a Callout' works as expected.\";\n    if (name.endsWith(MODIFIED_FIELD)) {\n      info.addResult(\"inpdescription\", message);\n      info.addResult(\"MESSAGE\", message);\n    } else {\n      message = \"Feature 'Extends a Callout' not works as expected.\";\n      info.addResult(\"inpdescription\", message);\n      info.addResult(\"ERROR\", message);\n    } \n    \u00a0 \n    // Now it is possible to update the 'name' field again and the value will be overwritten\n    info.addResult(\"inpname\", \"UPDATED...\");\n</code></pre> <p>In the following screenshot, you can see how a failure message is displayed.</p> <p>Note</p> <p>For the purpose of this example, a new column named 'EM_Obexapp_Callout' was created to trigger the callout.  </p> <p></p>","tags":["How to","Callout","Extend Callout","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout-that-extends-from-another-callout/#working-with-combos","title":"Working with Combos","text":"<p>As you can see in above sections, the <code>OBEXAPP_Assets_Name</code> callout builds a currency combo. This combo is populated with 3 currencies and one of them is selected.   <pre><code>    // Combo example. Added three currencies to currency combo.\n    info.addSelect(\"inpcCurrencyId\");\n    // USD currency is selected.\n    info.addSelectResult(\"100\", \"USD\", true);\n    info.addSelectResult(\"102\", \"EUR\", false);\n    info.addSelectResult(\"103\", \"DEM\", false);\n    info.endSelect();\n</code></pre></p> <p>You can see the currency combo with 3 currencies and USD as selected currency.</p> <p></p> <p>Then, child callout <code>OBEXAPP_Assets_Desc</code> removes a currency and select another one. This child callout extends <code>OBEXAPP_Assets_Name</code> and change the currency combo.   <pre><code>    // Combo example. Removed USD currency from combo and select DEM currency.\n    info.addSelect(\"inpcCurrencyId\");\n    info.removeSelectResult(\"100\");\n    info.addSelectResult(\"103\", \"DEM\", true);\n    info.endSelect();\n</code></pre> In this screenshot, you can see how currency combo is displayed when child callout is executed.</p> <p>Note</p> <p>The DEM currency is selected and USD currency has been removed.    </p> <p></p>","tags":["How to","Callout","Extend Callout","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout-that-extends-from-another-callout/#using-getstringparameter-method","title":"Using getStringParameter method","text":"<p>This method is used in callouts to get values of any field of the window (e.g. value of name field in Assets window).</p> <p>Now, with the inclusion of this project this method takes into account if a parent callout modified a value. If a value was modified, <code>getStringParameter()</code> method returns value modified by parent callout. If not, <code>getStringParameter()</code> method returns the initial value of the parameter. </p> <p>This work is a derivative of How to Create a Callout that Extends from Another Callout by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Callout","Extend Callout","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/","title":"How to Create a Callout","text":"","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#overview","title":"Overview","text":"<p>The objective of this article is to show you how to create a new  callout . A callout is a piece of Javascript code associated with a particular field on a tab. This code is executed whenever the field changes. It is a type of Ajax substitute, changing parts of a tab/window without the need of refreshing it.</p> <p>It works by calling the FIC when a field with an associated callout is changed. The FIC (Form Initialization Component) refreshes the needed fields based on the callout logic.</p> <p>This section implements the following new functionality: When entering a new product, one has the option of entering the Search Key for the product, the Name and the Category it belongs to. But what if our client wants the search key to be constructed automatically by taking the product's name, removing all spaces, appending the underscore (_) and the category name it belongs to?</p> <p>For example, the Search Key of a product that has the Name Bon Fountain and belongs to the Water Product Category would become BonFountain_Water. Let's see how this could be done using a callout.</p> <p>The steps involved in creating a new callout are:</p> <ol> <li>Create the source file(s) of the callout (usually a java file). </li> <li>Define the new  callout  within the application dictionary (<code>Menu</code> &gt; <code>Application Dictionary</code> &gt; <code>Setup</code> &gt; <code>Callout</code>). </li> <li>Associate this callout with a table  column  ( <code>Application Dictionary</code> &gt; <code>Table and Column: Callout field within Column tab</code>). </li> <li>Compile the window/tab(s) where this Column is used. </li> </ol> <p>Important</p> <p>Developments related to points (1) and (2) must belong to a module that is not the core module. Please follow the How to create a module  section to create a new module. For the development related to point (3) about modifying a core located column, a new template is needed. You can read the How to Change an Existing Window article to obtain more information.</p> <p>Note</p> <p>This article assumes you have created both module and template according to the articles just mentioned.  </p>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#creating-the-callout","title":"Creating the Callout","text":"<p>Existing callouts are located in src/org/openbravo/erpCommon/ad_callouts.</p> <p>The right way to create a callout is by extending the SimpleCallout class. This class simplifies the callout code, hides some of the internals of the callout and keeps you focused on the operations required. To access database data, DAL is used.</p>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#theory","title":"Theory","text":"<p>To develop a new callout based on this class, you only have to create a new java class that extends SimpleCallout and overwrite the following method: <pre><code>  protected void execute(CalloutInfo info) throws ServletException;\n</code></pre> In this method you can develop the logic of the callout and use the info object of class CalloutInfo to access window fields, database and other methods. The most important are:</p> <ul> <li>public String <code>getStringParameter(String param, RequestFilter filter)</code> : Returns the value of a field named param as an String using the filter to accept values. </li> <li>public BigDecimal <code>getBigDecimalParameter(String param) throws ServletException</code> : This method returns the value of of a field named param as a BigDecimal. </li> <li>public void <code>addResult(String param, String value)</code> : This method sets the value of a field named param with the String value indicated. </li> <li>public void <code>addResult(String param, Object value)</code> : This method sets the value of a field named param with the value indicated. This method is useful to set numbers like BigDecimal objects. </li> <li>public void <code>addSelect(String param)</code> : Starts the inclusion of values of a field named param of type select. </li> <li>public void <code>addSelectResult(String name, String value)</code> : Adds an entry to the select field and marks it as unselected. </li> <li>public void <code>addSelectResult(String name, String value, boolean selected)</code> : Adds an entry to the select field. </li> <li>public void <code>endSelect()</code> : Finish the inclusion of values to the select field. </li> <li>protected void <code>showMessage(String value)</code> : Shows a message in the browser with the value indicated. </li> <li>protected void <code>showError(String value)</code> : Shows an error message in the browser with the value indicated. </li> <li>protected void <code>showWarning(String value)</code> : Shows a warning message in the browser with the value indicated. </li> <li>protected void <code>showInformation(String value)</code> : Shows an information message in the browser with the value indicated. </li> <li>protected void <code>showSuccess(String value)</code> : Shows a success message in the browser with the value indicated. </li> <li>protected void <code>executeCodeInBrowser(String value)</code> : Executes the javascript code indicated in the value in the browser. </li> <li>public String <code>getLastFieldChanged()</code> : Returns the name of field that triggered the callout. </li> <li>public String <code>getTabId()</code> : Returns the Tab Id that triggered the callout. </li> <li>public String <code>getWindowId()</code> : Returns the Window Id that triggered the callout. </li> <li>public <code>VariablesSecureApp vars</code> : This instance field contains the VariablesSecureApp associated to the callout servlet. </li> </ul> <p>It is important to keep coherence with each expected data type (String, BigDecimal, ...)</p> <p>See the following class as an example of a class that currently uses SimpleCallout: SL_Project_Service. This callout simply takes the numeric value of two fields, calculates the sum and writes it into another field. This is the interesting part of the code that performs the logic: <pre><code>  @Override\n  protected void execute(CalloutInfo info) throws ServletException { \n    BigDecimal serviceSerCost = info.getBigDecimalParameter(\"inpservsercost\");\n    BigDecimal serviceOutCost = info.getBigDecimalParameter(\"inpservoutcost\"); \n    BigDecimal serviceTotalCost = serviceSerCost.add(serviceOutCost);\n    info.addResult(\"inpservcost\", serviceTotalCost);\n  }\n</code></pre></p>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#extend-a-callout","title":"Extend a Callout","text":"<p>It is possible to implement a callout that extends from another callout. For more information visit this How to create a callout that extends from another callout tutorial.</p>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#product-search-key-calculation-using-simplecallout","title":"Product Search Key Calculation using SimpleCallout","text":"<p>Let's define the tasks that need to be performed by the callout:</p> <ol> <li>Retrieve the name of the product as entered by the user </li> <li>Retrieve the ID of the category selected from a dropdown by the user </li> <li>Get the name of the product category inside the database using the product category ID retrieved </li> <li>Strip spaces out of the product and category names </li> <li>Construct the Search Key  <pre><code>    // the package name corresponds to the module's manual code folder \n    // created above\n    package com.etendoerp.customer.example.ad_callouts;\n    \u00a0\n    import javax.servlet.ServletException;\n    \u00a0\n    import org.openbravo.utils.FormatUtilities;\n    import org.openbravo.erpCommon.ad_callouts.SimpleCallout;\n    import org.openbravo.base.secureApp.VariablesSecureApp;\n    // classes required to retrieve product category data from the \n    // database using the DAL\n    import org.openbravo.dal.service.OBDal;\n    import org.openbravo.model.common.plm.ProductCategory;\n    \u00a0\n    // the name of the class corresponds to the filename that holds it \n    // hence, modules/modules/org.openbravo.howtos/src/org/openbravo/howtos/ad_callouts/ProductConstructSearchKey.java.\n    // The class must extend SimpleCallout\n    public class ProductConstructSearchKey extends SimpleCallout {\n    \u00a0\n      private static final long serialVersionUID = 1L;\n    \u00a0\n      @Override\n      protected void execute(CalloutInfo info) throws ServletException {\n    \u00a0\n        // parse input parameters here; the names derive from the column\n        // names of the table prepended by inp and stripped of all\n        // underscore characters; letters following the underscore character\n        // are capitalized; this way a database column named\n        // M_PRODUCT_CATEGORY_ID that is shown on a tab will become\n        // inpmProductCategoryId html field\n        String strProductName = info.getStringParameter(\"inpname\", null);\n        String strProductCategoryId = info\n                        .getStringParameter(\"inpmProductCategoryId\", null);\n    \u00a0\n        // inject the result into the response\n        info.addResult(\"inpvalue\", getConstructedKey(info.vars, strProductName, strProductCategoryId));\n      }\n    \u00a0\n      protected String getConstructedKey(VariablesSecureApp vars,\n            String strProductName, String strProductCategoryId) {\n    \u00a0\n        // Retrieve the product category name\n        final ProductCategory productCategory = OBDal.getInstance().get(ProductCategory.class,\n                strProductCategoryId);\n        String strProductCategoryName = productCategory.getName();\n    \u00a0\n        // construct full key\n        String generatedSearchKey = FormatUtilities.replaceJS(strProductName\n                    .replaceAll(\" \", \"\"))\n                    + \"_\" + strProductCategoryName.replaceAll(\" \", \"\");\n    \u00a0\n        // return generated key\n        return generatedSearchKey;\n      }\n    }\n</code></pre></li> </ol>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#defining-the-callout-within-the-application-dictionary","title":"Defining the Callout within the Application Dictionary","text":"<p>Note</p> <p>You need to have only your module as \"In Development\" at this stage.</p> <p>Using the role System Administrator, navigate to <code>Application Dictionary</code> &gt; <code>Setup</code> &gt; <code>Callout</code>. Create a new  record as indicated by the screenshot below:</p> <p>Warning</p> <p>The name of the callout should not have spaces or illegal javascript characters.  </p> <p></p> <p>Save and navigate to the Callout Class tab of the same window. You will notice that the Java Class Name was automatically generated for you, however, not correctly since the name could not match the Callout name you have provided. Correct it in line with your callout package/class name. See screenshot below:</p> <p></p> <p>Now Etendo Classic knows that a callout exists and is implemented by the class you have just specified.</p> <p>Warning</p> <p>Remember to perform <code>./gradlew export.database</code> in order to persist your changes in your module.  </p>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#associating-the-callout-with-a-column","title":"Associating the Callout with a Column","text":"<p>Note</p> <p>You need to have ONLY your template as \"In Development\" at this stage.</p> <p>Using the role System Administrator navigate to <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> &gt; and find the M_Product DB Table. This is the underlying table of the main tab of the Product window.</p> <p>Go to Column tab, find the Name record and edit it. Find the  Callout dropdown  that should at this point be empty. Select our Product_Construct_SearchKey callout and save the record:</p> <p></p> <p>Do the same for the Product Category record since a change in any of them should also regenerate the Search Key.</p> <p>Warning</p> <p>Remember to perform <code>./gradlew export.database</code></p> <p>and</p> <p><code>./gradlew export.config.script</code></p> <p>in order to persist your changes in your template.  </p>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#compiling-the-window","title":"Compiling the Window","text":"<p>Finally, for the callout to take effect, the window that uses it needs to be recompiled and deployed to Tomcat. Do:   <pre><code>  ./gradlew smartbuild \n</code></pre></p> <p>Info</p> <p>Once the compilation has finished, restart Apache Tomcat server.  </p>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-callout/#the-result","title":"The Result","text":"<p>Using the role Group Admin (or your defined 'administrator' role), navigate to the <code>Master Data Management</code> &gt; <code>Product</code> window. Enter a new product with Name = Bon Fountain and leave the Name field. Notice how the Search Key changes. Then, change the Product Category to something else and see how the change is reflected inside the Search Key field.</p> <p></p> <p>Last, save changes.</p> <p>This work is a derivative of How to Create a Callout by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Callout Creation","Simple Callout","DAL"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-chart-of-accounts-module/","title":"How to Create a Chart of Accounts Module","text":"","tags":["How to","Etendo Classic","Localization","Chart of Accounts","Modules","Module Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-chart-of-accounts-module/#overview","title":"Overview","text":"<p>The chart of accounts (also called account tree) is a list of the accounts available to post entries which can be structured in a way to get meaningful financial reports such as Balance Sheet and P&amp;L.</p> <p>In some countries, it is required to have a specific chart of accounts to be used in the statutory books; in some other countries this legal requirement does not exist and a \u201csample\u201d chart of accounts should be enough. Finally it should also be possible for a country to have more than one official chart of accounts, depending for example on the organization's size or main activity.</p> <p>Important</p> <p>A Chart of Accounts Module for Etendo can only contain one chart of accounts. So, if you are working in a localization project for a country where several chart of accounts can be used, you must create independent modules including each chart of accounts CSV file. It will be up to the user to install and apply the chart of accounts module that fits particular needs.</p>","tags":["How to","Etendo Classic","Localization","Chart of Accounts","Modules","Module Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-chart-of-accounts-module/#creating-the-csv-file","title":"Creating the CSV file","text":"<p>The first step for creating a chart of accounts module is to write the CSV file with the list of accounts we want to include. All the information can be found in How to Create Accounts Files.</p>","tags":["How to","Etendo Classic","Localization","Chart of Accounts","Modules","Module Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-chart-of-accounts-module/#testing-the-csv-file","title":"Testing the CSV file","text":"<p>Before creating the Chart of Accounts module, we should first check that the CSV file has no structural or logical errors. This can be easily done in two steps:</p> <ol> <li> <p>The first one is using a testing spreadsheet provided by Etendo that will detect any structural error, like missing search keys, wrong values in Element Level, Parent_Value or Show Value Condition columns, etc.</p> </li> <li> <p>The second check can be directly executed through the ERP. It just consists on importing our CSV file when running the Initial Client Setup process. Finally, there is also recommended to create some accounting entries for every transactional document and ensure the accounting report information is OK.</p> </li> </ol>","tags":["How to","Etendo Classic","Localization","Chart of Accounts","Modules","Module Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-chart-of-accounts-module/#creating-the-chart-of-accounts-module","title":"Creating the Chart of Accounts module","text":"<p>The remaining step is clearly the easiest one, which is just including the CSV file into our Chart of Accounts module.</p> <p>A Chart of Accounts module is like any other module, but it has just the following considerations:</p> <ul> <li> <p>The CSV file must be included into the <code>referencedata/accounts/</code> directory of our module.</p> </li> <li> <p>The file must be renamed to <code>COA.csv</code>. So the directory structure for our module should look like:</p> </li> </ul> <pre><code> &lt;module java package name&gt;\n   \u251c\u2500\u2500 referencedata \n   \u2502   \u2514\u2500\u2500 accounts \n   \u2502       \u2514\u2500\u2500 COA.csv \n   \u2514\u2500\u2500 src-db \n       \u2514\u2500\u2500  database \n           \u2514\u2500\u2500 sourcedata \n             \u251c\u2500\u2500 AD_DATASET.xml \n             \u251c\u2500\u2500 AD_MENU.xml \n             \u251c\u2500\u2500 AD_MODULE_DBPREFIX.xml \n             \u251c\u2500\u2500 AD_MODULE_DEPENDENCY.xml \n             \u251c\u2500\u2500 AD_MODULE.xml \n             \u251c\u2500\u2500 AD_PACKAGE.xml \n             \u251c\u2500\u2500 AD_PROCESS_PARA.xml \n             \u251c\u2500\u2500 AD_PROCESS.xml \n             \u2514\u2500\u2500 AD_TREENODE.xml            \n</code></pre> <ul> <li> <p>When defining the module inside the Application Dictionary, the only important considerations we must have are:</p> <ul> <li> <p>Set the module type to Module</p> </li> <li> <p>Set the Has Chart of Account checkbox</p> </li> <li> <p>Remember to add the dependency to Core</p> </li> </ul> </li> </ul>","tags":["How to","Etendo Classic","Localization","Chart of Accounts","Modules","Module Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-chart-of-accounts-module/#publishing-the-chart-of-accounts-module","title":"Publishing the Chart of Accounts Module","text":"<p>The way to package a chart of accounts module is similar to the how to publish modules to github repository process.</p> <p>The summarized process is:</p> <ul> <li> <p>Create the module's definition in the Application Dictionary. You should follow the Naming guidelines for modules. Remember to register the module in case you want to publish it in the Forge.</p> </li> <li> <p>Set the Has Chart of Account checkbox and add a dependency to Core.</p> </li> <li> <p>Export the database to create the file structure</p> </li> </ul> Terminal<pre><code>  ./gradlew export.database\n</code></pre> <ul> <li> <p>Save the <code>COA.csv</code> file inside the module's <code>referencedata/accounts/</code> directory. You should manually create this directory structure if necessary.</p> </li> <li> <p>Publish the chart of accounts module</p> </li> </ul> Terminal<pre><code>  ./gradlew publishVersion -Ppkg=&lt;module javapackage&gt;\n</code></pre>","tags":["How to","Etendo Classic","Localization","Chart of Accounts","Modules","Module Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-chart-of-accounts-module/#translating-a-chart-of-accounts","title":"Translating a Chart of Accounts","text":"<p>In some countries it can be useful to have the same chart of accounts translated into several languages. Unfortunatelly Etendo does not support yet the translation of chart of accounts.</p> <p>If you are in this situation, you have two possible workarounds:</p> <ul> <li> <p>Create several chart of accounts modules for different languages. The structure of the chart of accounts file will be exactly the same, just changing the account names and descriptions for each language. This solution is perfect for companies that want to work in just one language, although there are several official languages in the country. In this case the administrator must decide at the beginning of the ERP implementation, the language to use for the chart of accounts and he will not be able to change it in the future.</p> </li> <li> <p>The other possibility is to create just one chart of accounts module and, once applied in an instance, manually translate the elements value inside the Account Tree window. The drawback of this method is that the translation can't be distributed to other instances and the process of translating must be repeated manually, or by the implementation of a script that automatically translates the elements based on the Element Value search key.</p> </li> </ul> <p>This work is a derivative of How to create a chart of accounts module by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo Classic","Localization","Chart of Accounts","Modules","Module Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/","title":"How to Create a Clone Hook","text":"","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#introduction","title":"Introduction","text":"<p>Etendo allows for any window or tab to have a Clone button. By default, it will use the Dal.copy() method, but this can be overridden using hooks, to implement custom Cloning logic for specific entities.</p> <p></p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#how-to-create-a-clone-hook","title":"How to create a Clone Hook?","text":"<p>To create a Clone Hook, you only have to follow a few steps:</p> <ol> <li>Create a Java Class of type CloneRecordHook</li> <li>Use the @Qualifier annotation to define which entity this class will clone</li> <li>Override the required methods and implement their logic according to your needs</li> <li>Enable the clone button inside the tab associated with the Entity used in the hook ExampleCloningHook.java</li> </ol> <pre><code>@ApplicationScoped\n\n@Qualifier(Invoice.ENTITY_NAME)\n\npublic class ExampleCloningHook extends CloneRecordHook {\n\n  @Override\n  public boolean shouldCopyChildren(boolean uiCopyChildren) {\n    //Implementation\n  }\n\n  @Override\n  public BaseOBObject preCopy(BaseOBObject originalRecord) {\n    //Implementation\n  }\n\n  @Override\n  public BaseOBObject postCopy(BaseOBObject originalRecord, BaseOBObject newRecord) {\n    //Implementation\n  }\n}\n</code></pre>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#clone-hook-api","title":"Clone Hook API","text":"<p>To create a Clone Hook, you only have to follow a few steps:</p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#boolean-shouldcopychildrenboolean-uicopychildren","title":"<code>boolean shouldCopyChildren(boolean uiCopyChildren)</code>","text":"<p>This method will return a boolean indicating if the Hook will use the DalUtil.copy() to copy the children entities. For example, cloning an Invoice and its children will mean that Lines, Taxes, etc. are also cloned into the new document.</p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#baseobobject-precopybaseobobject-originalrecord","title":"<code>BaseOBObject preCopy(BaseOBObject originalRecord)</code>","text":"<p>This method must return the original object, which is the parameter received. Here you can make special validations or extra logic involving the original record, before it is cloned.</p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#baseobobject-postcopybaseobobject-originalrecord-baseobobject-newrecord","title":"<code>BaseOBObject postCopy(BaseOBObject originalRecord, BaseOBObject newRecord)</code>","text":"<p>Here you have access to the newly created record, a result of the DalUtil.copy(). This method is where you should implement special logic after the record is cloned. For example, if the method shouldCopyChildren returns false, then here you would copy the children with all special considerations needed.</p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#baseobobject-copybaseobobject-bob-boolean-copychildren","title":"<code>BaseOBObject copy(BaseOBObject bob, boolean copyChildren)</code>","text":"<p>Optional: Only override this method when the existing functionality is not enough, here you must implement the cloning functionality manually and call postCopy()on your own.</p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#boolean-shouldresetid","title":"<code>boolean shouldResetId()</code>","text":"<p>Override this method when you don\u2019t want the DalUtil.copy()to reset the copied objects IDs. Refer to the DalUtil.copy() documentation for more information. This method returns true by default.</p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#int-getpriority","title":"<code>int getPriority()</code>","text":"<p>Override this method when there is an existing hook for your selected Entity (for example, there is a cloning process already implemented for Invoices and Orders), and you want your own hook to be used instead. The hook with the lowest priority per Entity will be selected and executed. It returns 100 by default.</p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-clone-hook/#how-to-extend-an-already-existing-clone-hook","title":"How to extend an already existing Clone Hook?","text":"<p>The Clonning action its a particular action that can be extended by creating a new Hook, for implementing a custom logic for a specific entity. This has the disadvantage that only one Hook per entity can be used, but there are mechanisms to extend this functionality. These are the preActionHooks and postActionHooks. More information can be found in the following page: How to Create Jobs and Actions</p>","tags":["How to","Hook","Clone Hook"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/","title":"How to Create a Computed Column","text":"","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/#overview","title":"Overview","text":"<p>A computed column is a column of a table which is computed using an SQL expression and which does not exist explicitly in the database schema.</p> <p>Computed columns have these characteristics:</p> <ul> <li>Computed when a record is read from the database.</li> <li>Not persisted, there is no real column in the database schema for a computed column.</li> <li>Is computed using an SQL expression which can use columns from the application dictionary table definition in which the column is defined.</li> <li>Can be used in the definition of a field (in the same way as a 'normal' column), it is sortable and filterable but not editable.</li> </ul>","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/#example-module","title":"Example Module","text":"<p>This section is supported by an example module which shows examples of the code shown and discussed.</p> <p>The code of the example module can be downloaded from this repository: com.etendoerp.client.application.examples</p> <p>Note</p> <p>The example module also contains implementations of other guides.</p>","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/#defining-a-computed-column","title":"Defining a Computed Column","text":"<p>Defining a computed column is simple.</p> <ol> <li>Go to the Tables and Columns window.</li> <li>Go to the table in which you want to add the computed column.</li> <li>Then, in the column child tab, create a new column and set the sqllogic field.</li> </ol> <p></p> <p>The sqlLogic field must be an SQL expression:</p> <ul> <li>If it is a select sql expression, then all the tables in the from clause need to use an alias.</li> <li>You can refer to other columns of the table using their non-aliased name.</li> </ul> <p>This is an example of the total line quantity column shown above:</p> <pre><code>(SELECT sum(ol.qtyOrdered) FROM c_orderline ol WHERE ol.c_order_id=c_order_id)\n</code></pre> <p>What you can see is that the from clause uses an aliased table, the <code>c_order_id</code> at the end is the non-aliased column of the main table.</p> <p>Note</p> <ul> <li>A computed column can be used in the definition of a field for an Etendo column, just like every other column.</li> <li>A computed column that uses a String reference should have a length greater than zero. Because this is the number of characters which are going to be displayed in form view.</li> <li>The field is always read-only, it is recomputed/set automatically when updating or inserting a record.</li> <li>Filtering and sorting on computed columns/fields is possible.</li> </ul>","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/#use-case-show-totals-on-a-header","title":"Use case: show totals on a header","text":"<p>In the 'Defining a computed column' section an example sql expression was shown. The above example computes the sum of the quantities of a line. You can add a computed column as a field to a tab/window:</p> <p></p> <p>and display it in the grid:</p> <p></p> <p>or the form:</p> <p></p>","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/#performance-implications","title":"Performance Implications","text":"","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/#filtering-and-sorting","title":"Filtering and Sorting","text":"<p>When computed columns are used to filter or sort the grid, their value needs to be computed for all existing rows before any pagination limit can be applied, this can have a very important impact in terms of performance.</p> <p>In general, when defining computed columns, they should be made not filterable nor sortable. The only exception to this rule is when it is guaranteed the number of records in the table they are created for is going to be always reduced or it will always be displayed as a subtab, where the number of rows per parent record cannot be big.</p>","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/#lazy-evaluation","title":"Lazy Evaluation","text":"<p>Computed columns are lazily evaluated. This means their query is not executed when the entity they are defined in is retrieved but when one of them is accessed.</p> <p>For example, Delivery Status is a computed column of Order entity:</p> <pre><code>// load one order\nOBCriteria&lt;Order&gt; qOrder = OBDal.getInstance().createCriteria(Order.class);\nqOrder.setMaxResults(1);\nOrder order = qOrder.list().get(0);\n</code></pre> <p>The code above loads an order, at this stage Delivery Status is not already computed meaning the SQL has not been executed in database.</p> <p>If afterwards we have this code:</p> <pre><code>// load computed columns\nSystem.out.println(order.getDeliveryStatus());\n</code></pre> <p>is at this point when the computed column query is executed in database and Delivery Status property takes value.</p> <p>Note</p> <p>In case there are many computed columns in the same entity, they are evaluated all together when the first one is calculated.</p>","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-computed-column/#limitations","title":"Limitations","text":"<p>In order to make computed columns lazy, they are mapped in their entity as a <code>many-to-one</code> property (named <code>computedColumns</code>) linked to a virtual entity, is this virtual entity where the actual computed columns are located as hibernate formula properties.</p> <p></p> <p>This extra complexity is transparent when working with generated DAL Java classes, as seen before, <code>order.getDeliveryStatus()</code> populates the value of the computed column, though behind the scenes it is retrieving it from the virtual entity.</p> <p>But this model imposes also some limitations to be taken into account when manipulating computed columns in filters or sorting.</p> <p>Note</p> <p>When using computed columns in HQL to do filtering or sorting, they are evaluated. This needs to be done carefully (or even avoided if possible) because it might have performance implications.</p> <p>When working with HQL (i.e. <code>OBQuery</code>), computed columns cannot be directly accessed as they are not properties of the entity.</p> <p>This work is a derivative of How to Create a Computed Column by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Computed column","SQL logic","Etendo classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/","title":"How to Create a Dataset","text":"","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#overview","title":"Overview","text":"<p>This how-to will focus on creating a dataset in Etendo Classic and also will give some examples in detail under Examples section. Dataset will export both reference data as well as default data.</p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#introduction-to-dataset-concept","title":"Introduction to Dataset Concept","text":"<p>First of all we need to understand the dataset concept, which allows to export the sets of data from different tables in one step. This is especially useful to manage and distribute the module along with reference data , for instance tax rates, regions or default data in a new table(s) added by a module.</p> <p>A dataset is defined by its Dataset Tables and Dataset Columns. This detailed configuration leads to which tables to be exported, and which columns of each table are executed and exported.</p> <p>There are some important things to note:</p> <ul> <li>A Dataset belongs to a module, so modules can add Datasets and define their own Datasets. </li> <li>Data Access Level: filters the tables which can be selected for this dataset, only tables with the set data access level can be included in the data set.   </li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#reference-data","title":"Reference Data","text":"<p>The reference data is published, distributed and installed together with the program code implementation of the module.</p> <p>In Etendo, the concept of reference data is generalized and any data in the instance can be exported in a module and imported when installing / applying the module.</p> <p>Note</p> <p>You can find the Has reference data field / option at the time of module creation.</p> <p>Info</p> <p>For detailed theoretical concepts on datasets please have a look at Datasets. </p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#data-structure-to-define-dataset","title":"Data structure to define Dataset","text":"<p>There are mainly three tables referred to as data structure to define datasets. They are:</p> <ol> <li> <ul> <li>DataSet with the following columns: Value, Name, Description, Module and DataAccessLevel</li> <li>Data sets have a name and a description to describe the content of the data set. </li> <li>The value is used to get a dataSet object from the factory provided by DAL (eg. DBSourceManager gets the AD dataSet). </li> <li>A data set is owned by a module in the same way that all Application Dictionary components. </li> </ul> <p></p> <p>Note</p> <p>If the export allowed column is flagged, then an Export Reference Data button is displayed. </p> </li> <li> <ul> <li>DataSet_Table* with the following columns: DataSet, Table, fullBusinessObject, includeAllColumns, excludeAuditInfo and whereClause (HQLexpression)</li> <li>A data set can have one or many tables from the ones registered in the <code>AD_Table</code>. For each of them developers can decide to include only records in that table or export the full business object using the check <code>fullBusinessObject</code>. </li> <li>Developers can also define for each table the columns that are included in the dataset. They can include all columns using the <code>includeAllColumns</code> check and then remove some of them in the column definition or only include the ones that are explicitly defined in the column definition. </li> <li>The whereClause is a HQL expression to filter the rows that are included in the DataSet. Details on this expression will be provided in the DAL project. </li> <li>Developers can exclude the audit information column like created, createdby, updated, etc. by checking the <code>excludeAuditInfo</code> column. </li> </ul> <p> </p> <p>Note</p> <p>If IsBusinessObject field is flagged then the <code>child-records</code> of the table are exported. For example if the Dataset Table is defined for the <code>C_Order</code> table and this field is flagged then also the related <code>C_OrderLines</code> are exported. </p> <p>Info</p> <p>A full business object is a record including all its one-to-many relationships as defined in the AD through the isParent attribute of a column. An example of a full business object is a product with its vendors, prices, etc. A complete description of business objects is provided in the DAL project.</p> </li> <li> <ul> <li>Dataset_column with the following columns: DataSet_Table, Column, isExcluded and conditionClause(Java expression).</li> <li>For each table in a data set, developers can decide what columns to include from the ones registered in the AD for that table. </li> <li>They can exclude columns using the <code>isExcluded</code> check if they have marked the table as Include all columns . Typically audit info will be removed from the dataset. </li> </ul> <p> </p> </li> </ol>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#data-access-level","title":"Data Access Level","text":"<p>The Data Access Level is used to define how to import / install the module at various levels, like System level, Client level, Organization level, etc. This access level value is available at <code>Dataset</code> table. </p> <p>This is a detailed explanation at each access level.</p> <ul> <li>System Only: data will be imported at module installation time at System level without any user interaction. </li> <li>Client: data will be imported at <code>Initial Client Setup</code> if the user chooses the module where the DataSet is included. </li> <li>Organization: data will be imported at <code>Initial Organization Setup</code> if the user chooses the module where the DataSet is included. </li> <li>Client/Organization: data will be imported at <code>Initial Client Setup</code> or <code>Initial Organization Setup</code> if the user chooses the module where the DataSet is included. The module can not be applied at both levels at the same time because it would lead to data redundancy. So if the module is applied to a Client it will not be available to apply in its Organizations and if the module is applied in an Organization it will not be available to apply in its Client. </li> </ul> <p>Info</p> <ul> <li>The relationship between each entry data imported, the DataSet where it came  from, and the original ID it has in the DataSet's XML can be found in  the <code>AD_Ref_Data_Loaded</code> table.</li> <li>Data from a DataSet being imported for the first time will be created  with the ID set in its XML file. A new ID will be created  for each entry from then on.</li> <li>The <code>AD_Orginfo</code> table has information on which DataSet has ben imported  for which client and/or organization</li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#exporting-module","title":"Exporting Module","text":"<p>Before publishing, we need to export the module which creates a directory in the module under Etendo Classic root directory and the appropriate XML files for inclusion in the finished module. </p> <p>Note</p> <p>Modules that are not flagged as being in development are not exported, so remember that you must select the InDevelopment checkbox when you define a new module.</p> <p>When the development of the module is finished, open a command window/shell and navigate to the Etendo development project, execute the <code>export.database</code> command.</p> Terminal<pre><code>./gradlew export.database\n</code></pre>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#publishing-a-module","title":"Publishing a Module","text":"<p>The last step in the process is to publish the module and distribute across to the end user.</p> <p>Info</p> <p>For a detailed guide on how to do so, visit How to Publish Modules to a GitHub Repository</p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#examples","title":"Examples","text":"<p>Please find below the examples to know how to create a dataset and to export it along with the reference data.</p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#dataset-of-roles-and-accesses","title":"Dataset of roles and accesses","text":"<p>In this section you can find the example of a dataset of roles and access. It basically covers the definition of the role in the organization and the privileges they require.</p> <p>Create a Role and Assign Privileges</p> <ul> <li>Change to the admin role of your client. </li> <li>Click on <code>General Setup</code> and Navigate to <code>Security</code> &gt; <code>Role</code>. </li> <li>Create a new record. Fill up the mandatory fields that required for this record. They are: <ul> <li><code>Name</code>: the name of the role in the customer organization e.i., Sales Clerk, Production Manager, Forecaster, etc. </li> <li><code>Active</code>: Select Option to ensure this role appears in the generated application. During development you may require the role only to appear when it is complete. </li> <li><code>User Level</code>: This controls which organizations the role has access to. There are four options, the most common are: <ul> <li><code>Organization</code>: the role only has access to organization specific data. </li> <li><code>Client and Organization</code>: the role has access to organization specific data and client shared data. </li> </ul> </li> <li><code>Manual</code>: The controls if all existing privileges are automatically given to the role or if they are manually associated on a peer need basis. Selecting this option for manual control is recommended. </li> </ul> </li> <li>Save the record. </li> <li>Now you need to assign some privileges by clicking on <code>Grant Access</code> button. </li> <li>select the module and access type to assign the privileges to the newly created role. </li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#create-a-user-and-assign-the-user-to-the-role","title":"Create a User and assign the user to the Role","text":"<ul> <li>Click on <code>General Setup</code> and navigate to <code>Security</code> &gt; <code>User</code>. </li> <li>Create a new record. The <code>Client</code> field will show the name of your client by default. </li> <li>Select the Organization (This can be for access to one or all organizations in a client). <ul> <li>First Name. </li> <li>Last Name. </li> <li>Name (Default). </li> <li>Select Active (Default). </li> <li>Username (The default is a concatenation of first and last name). </li> <li>Enter the user Password (Remember this). </li> </ul> </li> <li> <p>Save the record. </p> </li> <li> <p>Focus in the <code>User</code> window again</p> </li> <li>Select the <code>User Roles</code> tab. </li> <li>Create a new record and select a role. </li> <li>Save the record. </li> <li>Add all roles this new user will be able to have/use (one line for each role). </li> <li>Logout from the current role. </li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#create-a-new-module","title":"Create a new module","text":"<ul> <li>Log into Etendo ERP as a System Administrator. </li> <li>Click on <code>Module</code> menu from the Application Dictionary. </li> <li>From the <code>Module Type</code> list, select Module. </li> <li>In the <code>Name</code> field, type the java package name of the module(proper naming convention). </li> <li>Complete the <code>Description</code> and <code>Help</code> fields. Supply the information about chart of accounts. </li> <li>Select the <code>Has reference data</code> option. </li> <li>Clear the <code>Has chart of accounts</code>, <code>Translation required</code> and <code>Is translation module</code> options. </li> <li>Select the In development option. Remember that you cannot work on a module unless the <code>In development</code> option is selected. </li> <li>On the <code>Dependencies</code> tab, select Core. </li> <li>Save the module </li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#create-a-dataset-of-roles-and-access","title":"Create a Dataset of roles and access","text":"<ol> <li>From the Application menu, select <code>Application Dictionary</code> &gt; <code>Dataset</code> </li> <li>Click New. </li> <li>From the <code>Module</code> list, select the module above created. </li> <li>Specify a search key, name and description. </li> <li>From the <code>Data Access Level</code> list, select the Data access level as Organization. </li> <li>Select the <code>Export allowed</code> option. </li> <li>Select the <code>Table</code> Tab.</li> <li>From the <code>Table</code> list, select the table whose content you want to include in the module. For example, ad_role_org_access, ad_role, ad_user_roles. </li> <li>In the SQL where clause field, specify the SQL \"WHERE\" statement that will identify the set of rows to be exported, in DAL notation. For example, adrole.id='2EA831D59184490E9BA858E9745EF89F' </li> <li>Select the <code>Include All Columns</code> option. </li> <li>Select <code>isBusinessObject</code> option.</li> <li>Click Save. </li> <li>Click the <code>Export Reference Data</code> button to export the reference data to an .xml file that you can include in the module. </li> </ol>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#exporting-and-publishing-module","title":"Exporting and Publishing Module","text":"<p>After completing all the steps successfully. Run the below gradle task to export the module:</p> <pre><code>./gradlew export.database\n</code></pre> <p>And publish the module.</p> <p>Info</p> <p>For more information, see How to Publish Modules to a GitHub Repository.</p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#how-to-install-organization-access-level-reference-data","title":"How to Install - Organization Access Level Reference Data","text":"<ul> <li>Install the module following the Install Modules in Etendo guide.</li> <li>At this point the reference data will not be installed. </li> <li>Log into the ERP as admin.</li> <li>Click on <code>General Setup</code> and navigate to <code>Enterprise</code> &gt; <code>Enterprise module Management</code>. </li> <li>Select the <code>Organization type</code> then select the appropriate module and click Ok to install the reference data. </li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#dataset-of-taxes-or-alerts","title":"Dataset of taxes or alerts","text":"<p>In this section you can find the example on dataset of taxes or alerts. The process for creating a standard reference data module for taxes and alerts, you have set up Etendo ERP in a particular way to meet local requirements, you can export this data and convert it to a module, so that you can share it with other users.</p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#registering-a-data-module-for-taxes-and-alerts","title":"Registering a data module for taxes and alerts:","text":"<ul> <li>Log into Etendo ERP as a System Administrator. </li> <li>Click on <code>Module</code> menu from the Application Dictionary. </li> <li>From the <code>Module Type</code> list, select Module. </li> <li>In the <code>Name</code> field, type the java package name of the module(proper naming convention). </li> <li>Complete the <code>Description</code> and <code>Help</code> fields. Supply the information about chart of accounts. </li> <li>Select the <code>Has reference data</code> option. </li> <li>Clear the <code>Has chart of accounts</code>, <code>Translation required</code> and <code>Is translation module</code> options. </li> <li>Select the <code>In development</code> option. Remember that you cannot work on a module unless the <code>In development</code> option is selected. </li> <li>On the <code>Dependencies</code> tab, select Core. </li> <li>Save the module.</li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#defining-and-exporting-the-dataset","title":"Defining and exporting the dataset","text":"<ol> <li>From the Application menu, select <code>Application Dictionary</code> &gt; <code>Dataset</code> </li> <li>Click New. </li> <li>From the <code>Module</code> list, select the module above created. </li> <li>Specify a <code>search key</code>, <code>name</code> and <code>description</code>. </li> <li>From the <code>Data Access Level</code> list, select the Data access level as System only. </li> <li>Select the <code>Export allowed</code> option. </li> <li>Select the <code>Table</code> Tab.</li> <li>From the <code>Table</code> list, select the table whose content you want to include in the module. </li> <li>In the <code>SQL where clause</code> field, specify the SQL WHERE statement that will identify the set of rows to be exported, in DAL notation. For example, client.id='1000001' </li> <li>To export all columns, select the <code>Include All Columns</code> option. To include only the columns you specify, select the <code>Columns</code> tab and create a new record for each column you want to export. </li> <li>To include the security audit columns (created, createdby, updated and updatedby) in the export, clear the <code>Exclude Audit Info</code> checkbox. </li> <li>Clear the <code>Is Business Object</code> option. </li> <li>Click Save.</li> <li>Click the <code>Export Reference Data</code> button to export the reference data to an .xml file that you can include in the module.</li> </ol>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#exporting-and-publishing-module_1","title":"Exporting and Publishing Module","text":"<p>After completing all the steps successfully. Run the below gradle task to export the module:</p> <pre><code>./gradlew export.database\n</code></pre> <p>And publish the module. </p> <p>Info</p> <p>For more information, see How to Publish Modules to a GitHub Repository.</p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#how-to-install-systemclient-access-level-reference-data","title":"How to Install - System/Client Access Level Reference Data","text":"<ul> <li>Install the module following the Install Modules in Etendo guide.</li> <li>At this point the reference data will not be installed. </li> <li>Log into the ERP as admin.</li> <li>Click on <code>General Setup</code> and navigate to <code>Client</code> &gt; <code>Initial Client Setup</code>.</li> <li>Fill up all the mandatory fields and then select the appropriate module. </li> <li>Finally click Ok to install the reference data. </li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#dataset-of-regions","title":"Dataset of regions","text":"<p>In this section you can export the reference data with the examples on regions. Find below the steps to create the Dataset for this module:</p> <ul> <li>Log into Etendo ERP as a System Administrator. </li> <li>Create a new module called Indian States for this example. </li> <li>Make sure that you have selected or flagged for the field <code>Has Reference Data</code>. </li> <li>Now expand the <code>Application Dictionary</code> menu. </li> <li>Click on <code>Dataset</code> menu and create a new record for the for this module. </li> <li>For example, here the Name <code>Indian States</code> has been given. You can give a name as you wish to select the region. </li> <li> <p>Fill up the Dataset form using the below mentioned values. </p> Field value for the field Active make it flagged/put a tick mark Module select the value from the drop down Indian States - 1.0.0 Search Key Indian States Name Indian States Data Access Level System Only </li> <li> <p>Before assigning the tables to Dataset. Please execute the below query in sqldeveloper or postgres IDE to find the <code>C_country_Id</code> for INDIA. After executing the below query the result of <code>c_country_id</code> would be 208 for the below query. </p> <pre><code>select * from c_country where countrycode like 'IN%';\n</code></pre> </li> <li> <p>Navigate to <code>Table</code> Tab and create 2 new records for the dataset. </p> </li> <li> <p>Fill up the form by using the values below for the following Table: <code>C_Country</code></p> Field value for the field Table <code>C_Country</code> Active Default it is flagged. Leave as it is Module Indian States - 1.0.0 SQL Where Clause id='208' Include All Columns Remove the flag or tick mark (Individual columns will be added in later steps) Exclude Audit Info Mark it as flagged or put tick mark for this check box </li> <li> <p>Fill up the form by using the values below for the following Table: <code>C_Region</code></p> Field value for the field Table <code>C_Region</code> Active Default it is flagged. Leave as it is Module Indian States - 1.0.0 SQL Where Clause country.id='208' Include All Columns Mark it as flagged or put tick mark for this check box Exclude Audit Info Mark it as flagged or put tick mark for this check box </li> <li> <p>Select the <code>C_Country</code> table from the table grid view and navigate to <code>Column</code> Tab. </p> </li> <li>Click on create a new record button for the above table. You need to select three columns for this table. </li> <li>Those columns are:<ul> <li>Name</li> <li>CountryCode</li> <li>HasRegion </li> </ul> </li> <li> <p>Fill up the following values in the form. </p> Field value for the field Column 1: Column Name Active It has benn flagged. Leave as it is Module Indian States - 1.0.0 Column 2: Column CountryCode Active It has benn flagged. Leave as it is Module Indian States - 1.0.0 Column 3: Column HasRegion Active It has benn flagged. Leave as it is Module Indian States - 1.0.0 </li> <li> <p>Finally navigate to <code>Dataset Tab</code> of Indian States and Click on <code>Export Reference Data</code> button to export the data. </p> </li> </ul>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#exporting-and-publishing-module_2","title":"Exporting and Publishing Module","text":"<p>After completing all the steps successfully, run the below gradle task to export the module:</p> <pre><code>./gradlew export.database\n</code></pre> <p>And publish the module.</p> <p>Info</p> <p>For more information, see How to Publish Modules to a GitHub Repository. </p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-dataset/#how-to-install-system-only-access-level-reference-data","title":"How to Install - System Only Access Level Reference Data","text":"<ul> <li>Install the module following the Install Modules in Etendo guide.</li> <li>It will install along with the reference data. </li> </ul> <p>This work is a derivative of How to Create a Dataset by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Dataset","Data Access Level","Module Dataset","Reference Data"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/","title":"How to create a HQL Based Table","text":"","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#introduction","title":"Introduction","text":"<p>There are three available data origin in the definition of a table in the application dictionary:</p> <ul> <li>Table: A table actually defined in a DBMS.</li> <li>Datasource: A manual datasource will be used for the data origin of this table.</li> <li>HQL Table.</li> </ul> <p>The HQL Table data origin allows to define a table without the need of a physical table in the database and without having to define a manual datasource.</p> <p>HQL Based Tables must define a HQL select query, that will be used to obtain the proper records when a request to its datasource is done.</p>","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#defining-a-hql-based-table-in-the-application-dictionary","title":"Defining a HQL Based Table in the Application Dictionary","text":"","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#table-definition","title":"Table Definition","text":"<p>When a HQL based table is defined in the application dictionary, there is no need to fill in the DB Table Name and Java Class Name fields. There are two new fields that must be set for these tables:</p> <ul> <li>HQL Query: The HQL query that will be used to fetch the records for this table.</li> <li>Entity Alias: The alias of one of the tables used in the HQL Query. It will be used to add automatically the mandatory client and organization filters.</li> </ul> <p>Design considerations for HQL queries:</p> <ul> <li>Use alias for all the columns and tables used in the query. It will simplify the column definition in the application dictionary.</li> <li>Include the string @additional_filters@ inside a where clause in the HQL Query. That string will be replaced with the mandatory client and organization filters, and with the filters generated from the criteria included in the datasource request.</li> <li>All HQL queries should include a column that acts as its primery key. The alias of this column should be id.</li> <li>If a HQL query contains several from clauses because it uses subqueries in the select clause or in the where clause, then the MAINFROM text must be used instead of FROM in the main from clause.</li> </ul> <p></p>","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#column-definition","title":"Column Definition","text":"<p>The Create Columns from DB process does not apply to HQL based tables, so they have to be created manually.</p> <p>Considerations in the definition of columns of HQL tables in the application dictionary:</p> <ul> <li>The DB Column Name and the Name of the column must be the alias used for the column in the HQL Query.</li> <li>The Clause Left Part field must be filled with the left part definition of the column in the HQL query. For instance, if a column is defined in the HQL query is <code>e.name as countryName</code> , then the Name and DB Column Name of the column must be <code>countryName</code> and its Clause Left Part must be <code>e.name</code>.</li> </ul> <p>To include a foreign key in a column of a HQL table, the column must point to the referenced entity itself, not to its id. Then, when that column is defined in the application dictionary, the Table reference must be used, and the proper table instance must be selected in the Reference Search Key field.</p> <p>For instance, if <code>e</code> is the alias of the Country table and we want to include its currency, we must enter <code>e.currency as countryCurrency</code> in the HQL query. Then we must select the Table reference in the definition of that column in the application dictionary and <code>c_currency</code> in the Reference Search Key field.</p>","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#tab-and-fields-definition","title":"Tab and Fields Definition","text":"<p>The tab and the fields of a HQL based table are defined in the application dictionary in the same way as with standard tables. The only restriction is that all tabs associated with HQL based tables will be read only.</p>","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#advanced-topics","title":"Advanced Topics","text":"","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#hql-inserters","title":"HQL Inserters","text":"<p>HQL Inserters allow to add code to a HQL query at a point specified in the HQL Query defined in the application dictionary.</p>","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#hql-insertion-points-in-the-hql-query","title":"HQL Insertion points in the HQL Query","text":"<p>To define a HQL Insertion point in your HQL query you need to use the <code>@insertion_point#@</code> string, <code>#</code> being the index of the insertion point. The index of the first injection point must be 0, the index for the second must be 1, etc. There cannot be gaps in the indexes of insertion points.</p> <p>Insertion points can only be defined in <code>where clauses</code>. If the HQL Query defines an insertion point but then there are no <code>HQLInserter</code> defined for it, then the insertion point will be replaced by <code>1 = 1</code> in the HQL query.</p> <p>For instance, this HQL Query defines a place to enter the additional filters and an HQL insertion point:</p> <pre><code>SELECT \n  e.id, \n  e.name, \n  e.eDICode, \n  e.costingPrecision, \n  e.client, \n  e.client.organization, \n  e.active\nFROM \n  UOM AS e\nWHERE \n  @additional_filters@\nAND \n  @insertion_point_0@\n</code></pre>","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#defining-a-hql-inserter","title":"Defining a HQL Inserter","text":"<p>Custom HQL inserters must extend the <code>HQLInserter</code> class. Subclasses of the <code>HQLInserter</code> class must implement this method:</p> <pre><code>/**\n  * Returns some code to be inserted in a HQL query, and adds query named parameters when needed\n  * \n  * @param requestParameters\n  *          the parameters of the request. The inserted code may vary depending on these\n  *          parameters\n  * @param queryNamedParameters\n  *          the named parameters of the hql query that will be used to fetch the table data. If\n  *          the inserted code uses named parameters, the named parameters must be added to this\n  *          map\n  * @return the hql code to be inserted\n  */\npublic abstract String insertHql(Map&lt;String, String&gt; requestParameters,\n    Map&lt;String, Object&gt; queryNamedParameters);\n</code></pre> <p>The string returned by this method will be used to replace the @insertion_point_#@.</p> <p><code>HQLInserter</code> are instantiated using dependency injection. A particular <code>HQLInserter</code> is used to replace a specific injection point of a particular table. For instance, the following <code>HQLInserter</code> is used to replace the <code>@insertion_point_0@</code> defined in the HQL query of the table with ID <code>59ED9B23854A4B048CBBAE38436B99C2</code>:</p> <pre><code>  @HQLInserterQualifier.Qualifier(tableId = \"59ED9B23854A4B048CBBAE38436B99C2\", injectionId = \"0\")\npublic class AddPaymentCreditToUseInjector extends HqlInserter {\n\u00a0\n  @Override\n  public String insertHql(Map&lt;String, String&gt; requestParameters,\n      Map&lt;String, Object&gt; queryNamedParameters) {\n    final String strBusinessPartnerId = requestParameters.get(\"received_from\");\n    final BusinessPartner businessPartner = OBDal.getInstance().get(BusinessPartner.class,\n        strBusinessPartnerId);\n    boolean isSalesTransaction = \"true\".equals(requestParameters.get(\"issotrx\"))\u00a0? true\u00a0: false;\n    queryNamedParameters.put(\"bp\", businessPartner.getId());\n    queryNamedParameters.put(\"issotrx\", isSalesTransaction);\n    return \"f.businessPartner.id =\u00a0:bp and f.receipt =\u00a0:issotrx\";\n  }\n}\n</code></pre>","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-hql-based-table/#hql-transformers","title":"HQL Transformers","text":"<p>While HQL Inserters only allow to add some criterion on a point predefined by the user that created the HQL Query, HQL Transformers allow to modify the whole structure of the query.</p> <p>To implement a HQL transformer, you have to subclass the HqlQueryTransformer class. This class has an abstract method that must be implemented in the custom HQL transformer:</p> <pre><code>/**\n  * Returns the transformed hql query\n  * \n  * @param hqlQuery\n  *          original hql query\n  * @param requestParameters\n  *          the parameters of the request\n  * @param queryNamedParameters\n  *          the named parameters of the hql query that will be used to fetch the table data. If\n  *          the transformed hql query uses named parameters that did not exist in the original hql\n  *          query, the named parameters must be added to this map\n  * @return the transformed hql query\n  */\npublic abstract String transformHqlQuery(String hqlQuery, Map&lt;String, String&gt; requestParameters,\n    Map&lt;String, Object&gt; queryNamedParameters);\n</code></pre> <p>This function receives a HQL query, a map with the parameters sent in the request and a map with all the named parameters that are used in the HQL query. It returns the transformed HQL query, and if in the transformation some named parameters have been added to the query, they must be included in the queryNamedParameters map.</p> <p>HQL transformers are instantiated using dependency injection. To apply a HQL transformer to a HQL table you must include the table id in the qualifier, for instance:</p> <pre><code>@ComponentProvider.Qualifier(\"58AF4D3E594B421A9A7307480736F03E\")\npublic class AddPaymentOrderInvoicesTransformer extends HqlQueryTransformer {\n</code></pre> <p>This work is a derivative of How to create a HQL Based Table by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","HQL","Table","Column","Field"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module-that-adds-an-accounting-process/","title":"How to Create a Module that Adds an Accounting Process","text":"","tags":["How to","Accounting Process","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module-that-adds-an-accounting-process/#introduction","title":"Introduction","text":"<p>This module is not to change the accounting entries generated by Etendo, but to run any additional process to be executed at posting time.</p> <p>From the functional side, there is no special requirement for the development of this module. It is just recommended to understand the role of  Accounting Schemas in the general accounting configuration for Etendo.</p> <p>Etendo allows running processes just after the posting logic for any document which has been successfully completed. These kinds of processes are called Accounting Post-Processes because they are executed after the normal accounting process.</p> <p>From a development point of view, this feature gives us the possibility to fulfill any possible requirement specific for our country, like for example to keep an up-to-date log of the documents that have been posted, create some kind of official reports each time a document is posted, send data to a webservice, etc.</p> <p>Note</p> <p>Depending on the country's requirements, these Accounting Post-Processes may not be necessary. These kinds of modules are not part of the core for a localization, like translations, chart of accounts or taxes, and must be included into a localization extension just in case they are really needed.</p>","tags":["How to","Accounting Process","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module-that-adds-an-accounting-process/#creating-the-module-definition","title":"Creating the module definition","text":"<p>Each time a new module is developed, the first step must always be to create the module's definition and to register it in the Central Repository.</p> <p>These are the special considerations for the module:</p> <ul> <li>Try to follow the Naming guidelines for modules</li> <li>The flag Has reference data must be set because the module will contain a dataset with the Accounting Post-Process configuration. Remember to write any useful information inside the Reference Data Description field.</li> <li>Define the mandatory dependency to Core.</li> <li>Include a DB Prefix for the module in case it is necessary. For example, the module will probably define new messages that will require a DB Prefix.</li> <li>If the module has UI elements that can be translated (like messages), set the Translation Required checkbox and specify the necessary Module Language.</li> </ul> <p></p> <p>Info</p> <p>Now export the database to generate the file structure inside the module folder     ant export.database</p> <p>Finally, inside the modules accounting post-process java package directory, create the src folder, where the Java class that implements the accounting post-process code is stored.</p> <p></p>","tags":["How to","Accounting Process","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module-that-adds-an-accounting-process/#creating-the-accounting-post-process-configuration","title":"Creating the Accounting Post-Process Configuration","text":"<p>The Java class that implements the Accounting Post-Process logic is defined at the Accounting Process window. The definition is quite simple and only requires a name and the Java class name, which must be inside the java package of the module.</p> <p></p> <p>This Accounting Post-Process will be later on associated with an Accounting Schema. So in this step it is important to define as many Java classes as Accounting Post-Processes we want to include in our module, although it is usually recommended to include just one process per module to keep the general rule of isolating features in separate modules.</p>","tags":["How to","Accounting Process","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module-that-adds-an-accounting-process/#dataset-definition","title":"Dataset definition","text":"<p>Dataset definition is a key step in this process. A wrong dataset definition can waste all our previous work, so it is important to follow all these considerations:</p> <ul> <li>The dataset must belong to your accounting post-process module.</li> <li>Try to avoid strange characters in the dataset name. This string is used for generating the XML file name that stores the dataset.</li> <li>The Data Access Level must be set to System/Client, which means we allow users to apply the configuration only at Client level (Organization *).</li> <li>The Export allowed flag must be set.</li> <li>Inside the Table tab we must include the AD_AcctProcess table, which is the one that stores the Accounting Process configuration.</li> <li>The HQL/SQL Where clause is an important field, because it allows filtering the records necessary  to include into the dataset. In the example all the records that are inside our module java package name are filtered.</li> </ul> <p></p> <p>The dataset definition is ready, so the user just needs to export it to a file pressing the Export Reference Data button. This process queries the previous tables and gets all the records that fulfill the HQL/SQL Where clause, generating a XML file inside the module's referencedata/standard directory. As a fast check, this file can be opened using any plain text editor and the user can verify that it contains several lines.</p> <p>Info</p> <p>In case the file is empty, the user should double check the dataset definition, specially the HQL/SQL Where clause used for each table. </p>","tags":["How to","Accounting Process","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/","title":"How to Create a Module","text":"","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/#overview","title":"Overview","text":"<p>Etendo uses the concept of Modularity. Modularity provides developers with the means to be able to develop, publish and distribute their work in a structured and controlled manner. For users of Etendo Classic, Modularity makes it possible to download, install and update custom developments.</p> <p>This section describes how to create a new module. It is of particular interest as it describes the first steps which should be followed in all of the other sections in this developer's guide and in Etendo Classic custom development in general.</p>","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/#introduction-to-modularity","title":"Introduction to Modularity","text":"<p>The objectives of modularity are:</p> <ul> <li>To make it easier to contribute to Etendo Classic by allowing distributed and decoupled development and maintenance of optional features. </li> <li>To provide the community with a rich set of extensions to meet their unique business requirements without bloating the core product. </li> <li>To shorten the implementation cycles by enabling system integrators to develop very specific functionality to meet the unique needs of a particular market. </li> </ul> <p>A module is a piece of additional functionality that can be deployed optionally and independently on top of Etendo Classic. Examples of modules are: additional reports, additional windows, connectors, content packs (translations, chart of accounts, list of tax codes, product categories, etc).</p> <p>Info</p> <p>For a detailed description on the Etendo Classic modularity concept, see the Modularity Guide.</p> <p>This section explains only the standard module type, because that is most relevant for the other sections.</p> <p>All new development should be done as a part of a module. Only modules which are marked as In Development can be used in the development process. A module can consist of the following software artifacts:</p> <ul> <li>Application dictionary components: all new application dictionary artifacts must be associated with a module. Application dictionary windows have a field that enables you to link an application dictionary component to a module. </li> <li>Software resources: these are artifacts not defined in Etendo Classic itself but, for example, Java classes, libraries, web resources (images, etc.), configuration files, etc. To maintain the relationship with the module, software resources need to be located in the module's directory inside the Etendo Classic development project. Each module has its own unique directory. </li> <li>Reference data: modules can be distributed with their own set of reference business data, for example, product categories, tax code, etc. The reference data is defined in datasets which can be related to a module. </li> </ul> <p>The process of developing a module has three main steps:</p> <ol> <li>Register your module in the Application Dictionary and in your github repository.</li> <li>Develop the artifacts included in your module. Depending on the functional specification and technical design of your module, it might include only one type of artifacts or a combination of them. In following sections, each type of artifact is described in detail. </li> <li>Publish the module in your github repository.</li> </ol> <p>Important</p> <p>Every piece of Etendo Classic code belongs to a module, including Etendo Classic core itself. You should do all your developments through modules, including customizations. You can make changes directly in other modules -including Etendo Classic core- but it is highly recommended not to do that. It makes it much easier to maintain Etendo Classic if you restrict code changes to modules.</p> <p>A module can be distributed and downloaded by other Etendo Classic users via the central repository. For more information about the central repository and distribution of modules, visit the Modularity Guide.</p> <p>The following sections discuss the main topic of this section: create and setup a module, and publish it for distribution.</p>","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/#creating-a-module","title":"Creating a Module","text":"<p>The first step in the development process is to create a new module. From the Application menu, select <code>Application Dictionary</code> &gt; <code>Module</code>.</p> <p></p> <p>Note the following important fields: (for more details see the <code>AD_Module</code> table description):</p> <ul> <li>The format of the Version field is three numbers separated by two dots. </li> <li>The Java Package is a unique identifier of your module and has to match the Java package naming rules as described in the  Java Naming Conventions  (names and package names). Be careful when setting this value as you are not allowed to change it once your module is registered in the central repository. If your module includes Java files, they have to be packaged within your module's Java package or in its sub-packages. Examples of Java packages for a module are org.etendo.howtos , com.etendoerp.examples.helloworld , com.yourcompany.yourPackage , org.yourfoundation.yourPackage.yourSubpackage , etc. </li> <li>The In Development option informs the system that you are developing the module. Only modules in development are exported by development tools and the system will raise an error if you try to modify a component of a module that is not in development. </li> <li>The Default field option for a module marks that module as the one which is selected by default when developing and when editing components in the Application Dictionary. You may be developing more than one module at any one time, and specifying a default enables the module you want to be selected by default. </li> <li>Select the Translation Required option if your module contains UI artifacts (window, field) with translatable elements. </li> </ul> <p>The tabs at the bottom of the window enable you to define the module further:</p> <ul> <li>Dependency: defines the module's dependency on other modules. </li> <li>Include: is used by industry templates/packs. </li> <li>DB Prefix: relates database schema artifacts to modules. </li> <li>Data Package: allows you to groups tables together. Data packages are used to determine the Java package generated Java code (business objects). </li> <li>Naming Exceptions: is used during upgrades of previous versions of Etendo Classic. It should not be used for any other purpose. </li> <li>Merges: If this module A does now include the content of another module B previously published independently (So module B was merged into module A). </li> <li>Translation: is used for supporting translations. </li> </ul> <p>In this section, we create an example module, called Etendo Howtos . We will define the module using the following three tabs of the <code>Application Dictionary</code> &gt; <code>Module</code> window:</p> <ul> <li>Dependency</li> <li>DB Prefix</li> <li>Data Package</li> </ul> <p>Dependency: Etendo Classic core functionality is in itself a module, called Core. All modules have a dependency on User Interface Application and in turn, it has a dependency on Etendo core. In the Dependency window, specify that the module is dependent on User Interface Application. (see also the  <code>AD_Module_Dependency</code> description):</p> <p></p> <p>DB Prefix: at least one db prefix is required when a module also contains database artifacts (table, column, constraints, etc.). Etendo Classic determines the module of a database artifact by checking to see if its name starts with one of the defined db_prefixes. If database artifacts will be added to the module, at least one DB prefix must be specified.</p> <p>Important</p> <p>DB Prefix can only contain uppercase [A-Z0-9] and the first letter is required to be from [A-Z] only.  </p> <p></p> <p>Info</p> <p>For more information, see the <code>AD_Module_Dbprefix</code> table description.</p> <p>Data Package: Tables are linked to a module through the Data Package. The generated business object for the new table will use the Java Package defined in the  Data Package. If new tables are to be added to the module, a data package must be specified as illustrated in the image below.</p> <p></p>","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/#develop-your-software-artifacts","title":"Develop your software artifacts","text":"<p>Now, let's see how to develop the software artifacts required for the functionality of the module. While developing, the relation to the module is maintained in different ways:</p> <ul> <li>Direct: for example, a Window is directly related to a specific module. </li> <li>Indirect: a table belongs to a data package which again belongs to a module. </li> <li>By name: a new stored procedure is linked through a module by prefixing it with the DB_Prefix of the module. </li> </ul> <p>When the custom development is ready, the next step is to export the module.</p>","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/#exporting-a-module","title":"Exporting a Module","text":"<p>Exporting a module creates a directory for your module under Etendo Classic root directory and the appropriate XML files for inclusion in the finished module. Modules that are not flagged as being in development are not exported.</p> <p>Note</p> <p>Remember that you must select the In Development checkbox when you define a new module, otherwise it will not be exported.</p> <p>When the development of the module is finished (or to deliver intermediate results), open a command window/shell and navigate to the Etendo Classic development project execute the <code>./gradlew export.database</code> command.</p> <p>Important</p> <p>Export database task will export all and only the modules set as in Development <code>./gradlew export.database</code></p> <p>Since we do not have any additional developments yet, only the corresponding folder structure and the module descriptor XML files have been created at this point.</p> <pre><code>modules\n    \u2514\u2500\u2500 org.etendo.howtos\n        \u2514\u2500\u2500 src-db \n            database\n               \u2514\u2500\u2500 sourcedata\n                   \u251c\u2500\u2500 AD_MODULE_DBPREFIX.xml\n                   \u251c\u2500\u2500 AD_MODULE_DEPENDENCY.xml\n                   \u251c\u2500\u2500 AD_MODULE.xml\n                   \u2514\u2500\u2500 AD_PACKAGE.xml\n</code></pre> <p>Etendo Classic validates the database and module artifacts of a module when the module is exported and its build file is created. See more information on the database validation step.</p> <p>Info</p> <p>For a detailed description of this <code>export.database</code> task and other relevant Module related gradle tasks, see the database gradle tasks</p>","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/#creating-a-source-directory","title":"Creating a Source Directory","text":"<p>To develop manual Java code you need a src directory inside of your specific module:</p> <pre><code>modules\n    \u2514\u2500\u2500 org.etendo.howtos\n        \u251c\u2500\u2500 src \n        \u2502   \u2514\u2500\u2500 org\n        \u2502       \u2514\u2500\u2500 etendo\n        \u2502           \u2514\u2500\u2500 howtos\n        \u2502                \u2514\u2500\u2500 \n        \u2514\u2500\u2500 src-db\n            \u2514\u2500\u2500[...]\n</code></pre> <p>The Java package in the source directory should start with the Java package of the module.</p>","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/#publishing-a-module","title":"Publishing a Module","text":"<p>Once the module is created and documented, the next step is to publish it for it to be available.</p> <p>For detailed information about this process, visit the How to Publish Modules to Github Repository guide</p>","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-module/#the-result","title":"The Result","text":"<p>The result of this section is a correctly set up module, which can be installed in an Etendo Classic instance that meets the module's requirements.</p> <p>This work is a derivative of How to Create and Package a Module by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Modularity","Create a module","Module"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigable-link/","title":"How to Create a Navigable Link","text":"","tags":["How to","Create","Navigable","Link"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigable-link/#overview","title":"Overview","text":"<p>This section explains how to create a navigable link in Etendo Classic, implementing a ClientClass. A ClientClass allows you to add visual components to a form or a row of a grid. This is useful for adding calculated fields to forms and grids, integrating elements such as buttons, links or dynamic labels.</p> <p>In this case, we will implement a navigable ClientClass so that the documentNo in the Create Invoice from Orders window allows to directly open the corresponding sales order in the Sales Order window.</p> <p>This section shows how to use the record and form information to get dynamic data in the grid or form. </p> <p>Info</p> <p>The implementation of these fields requires JavaScript knowledge.</p>","tags":["How to","Create","Navigable","Link"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigable-link/#main-steps-to-create-a-new-clientclass","title":"Main Steps to Create a new ClientClass","text":"<ol> <li> <p>Implement the ClientClass in JavaScript:</p> <ul> <li> <p>Create the JavaScript file with the corresponding class and place it in the appropriate directory. The convention is to place the <code>.js</code> files in:</p> <p><code>web/[module.java.package]/js</code></p> </li> <li> <p>Register the JavaScript file (along with other static resources such as CSS files) in a ComponentProvider.</p> </li> </ul> </li> <li> <p>Specify the JavaScript class in the field definition:</p> <ul> <li>Configure the field in the tab/window where the functionality will be applied.</li> </ul> </li> </ol>","tags":["How to","Create","Navigable","Link"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigable-link/#implementing-the-clientclass-in-javascript","title":"Implementing the ClientClass in JavaScript","text":"<p>The first step is to define the class in JavaScript in two stages:</p> <ol> <li> <p>Create the JavaScript class and calculate <code>tabId</code> and <code>recordId</code>.     In this case, the logic is implemented in the <code>DirectTabLink</code> class, which handles the opening of the window, passing the values of <code>tabId</code> and <code>recordId</code>.</p> direct-tab-link.js<pre><code>isc.ClassFactory.defineClass('DirectTabLink', isc.OBGridFormLabel);\n\n\nisc.DirectTabLink.addProperties({\nheight: 1,\nwidth: 1,\noverflow: 'visible',\n\n\n// Method that subclasses must override\ngetTabAndRecordId: function(record, callback) {\ncallback({ tabId: null, recordId: null });\n},\n\n\nsetRecord: function(record) {\nvar value = record[this.field.name];\n\n\n// Call the asynchronous function from the subclass\nthis.getTabAndRecordId(record, function(result) {\n    var tabId = result.tabId;\n    var recordId = result.recordId;\n\n\n    if (!value || !tabId || !recordId) {\n    this.setContents(\"\");\n    return;\n    }\n\n\n    // Create the inline function for onclick\n    var linkHTML =\n    \"&lt;a href='#' style='color:blue; text-decoration:underline;' \" +\n    \"onclick='OB.Utilities.openDirectTab(\\\"\" + tabId + \"\\\", \\\"\" + recordId + \"\\\"); return false;'&gt;\" +\n    value + \"&lt;/a&gt;\";\n\n\n    this.setContents(linkHTML);\n\n\n    // Force grid redraw\n    if (this.grid &amp;&amp; this.grid.body) {\n    this.grid.body.markForRedraw();\n    }\n}.bind(this));\n}\n});\n</code></pre> </li> <li> <p>Specific Implementation of the ClientClass</p> <p>In our example, the target window is Sales Order. Since the <code>tabId</code> is fixed and does not change, it can be left as a static value.</p> <p>The <code>recordId</code>, on the other hand, contains the unique identifier of each order, which facilitates navigation without the need for additional calculations.</p> sales-order-tab-link.js<pre><code>isc.ClassFactory.defineClass('SalesOrderTabLink', DirectTabLink);\nisc.SalesOrderTabLink.addProperties({\ngetTabAndRecordId: function(record, callback) {\nvar tabId = \"186\"; // Fixed tab ID for \"Sales Order\"\nvar recordId = record.id;\n\n\nif (!recordId) {\n    console.error(\"Error: Record ID not found in the record.\");\n    callback({ tabId: null, recordId: null });\n    return;\n}\n\n\ncallback({ tabId: tabId, recordId: recordId });\n}\n});\n</code></pre> </li> </ol>","tags":["How to","Create","Navigable","Link"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigable-link/#special-cases-calculating-recordid-with-java","title":"Special cases: Calculating <code>recordId</code> with Java","text":"<p>In some cases, the <code>recordId</code> information is not available directly in the record, so it must be calculated. This can be achieved through a Java class that determines the corresponding <code>recordId</code>.</p> <p>Example: If the record does not have the <code>recordId</code> of the commands directly, we can calculate it by calling a specific Java class:</p> sales-order-tab-link-with-java.js<pre><code>isc.ClassFactory.defineClass('SalesOrderTabLink', DirectTabLink);\nisc.SalesOrderTabLink.addProperties({\n getTabAndRecordId: function(record, callback) {\n   var tabId = \"186\"; // Predefined Tab ID for \"Sales Order\"\n   var documentNo = record.documentNo; // Retrieve documentNo from the record\n\n\n   if (!documentNo) {\n     console.error(\"Error: documentNo not found in the record.\");\n     callback({ tabId: null, recordId: null });\n     return;\n   }\n   // Call the Openbravo Action Handler to retrieve the recordId\n   OB.RemoteCallManager.call(\n     'org.openbravo.client.application.GetSalesOrderIdActionHandler', // Java Action Handler class name\n     { documentNo: documentNo }, // Parameter sent to the backend\n     {},\n     function(response, data, request) {\n       if (data.success &amp;&amp; data.recordId) {\n         callback({ tabId: tabId, recordId: data.recordId }); // Use predefined tabId\n       } else {\n         console.error(\"Error retrieving recordId: \" + (data.errorMessage || \"Invalid response\"));\n         callback({ tabId: null, recordId: null });\n       }\n     }\n   );\n }\n});\n</code></pre> <p>In Java:</p> GetSalesOrderIdActionHandler.java<pre><code>import org.openbravo.dal.service.OBCriteria;\nimport org.openbravo.dal.service.OBDal;\nimport org.openbravo.model.common.order.Order;\n\n\n/**\n* Action handler to retrieve the sales order ID based on a given document number.\n*/\npublic class GetSalesOrderIdActionHandler extends BaseActionHandler {\n\n\n private static final String DOCUMENT_NO = \"documentNo\";\n private static final String SUCCESS = \"success\";\n private static final String RECORD_ID = \"recordId\";\n private static final String ERROR_MESSAGE = \"errorMessage\";\n\n\n /**\n  * Executes the action to retrieve the sales order ID based on the provided document number.\n  *\n  * @param parameters A map containing execution parameters.\n  * @param content A JSON string containing the document number.\n  * @return A JSON object containing the sales order ID and status of the operation.\n  */\n @Override\n protected JSONObject execute(Map&lt;String, Object&gt; parameters, String content) {\n   JSONObject result = new JSONObject();\n   try {\n     final JSONObject jsonData = new JSONObject(content);\n\n\n     if (!jsonData.has(DOCUMENT_NO) || jsonData.isNull(DOCUMENT_NO)) {\n       result.put(SUCCESS, false);\n       result.put(ERROR_MESSAGE, \"The 'documentNo' parameter is required.\");\n       return result;\n     }\n\n\n     String documentNo = jsonData.getString(DOCUMENT_NO);\n\n\n     OBCriteria&lt;Order&gt; orderOBCriteria = OBDal.getInstance().createCriteria(Order.class);\n     orderOBCriteria.add(Restrictions.eq(Order.PROPERTY_DOCUMENTNO, documentNo));\n     orderOBCriteria.setMaxResults(1);\n\n\n     Order order = (Order) orderOBCriteria.uniqueResult();\n     result.put(RECORD_ID, order.getId());\n     result.put(SUCCESS, true);\n\n\n   } catch (Exception e) {\n     try {\n       result.put(SUCCESS, false);\n       result.put(ERROR_MESSAGE, e.getMessage());\n     } catch (Exception ex) {\n       throw new OBException(e);\n     }\n   }\n   return result;\n</code></pre>","tags":["How to","Create","Navigable","Link"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigable-link/#registering-the-javascript-file-in-the-componentprovider","title":"Registering the JavaScript file in the ComponentProvider","text":"<p>Once the JavaScript class is created, it is necessary to register it in the ComponentProvider of the corresponding module.</p> UIComponentProvider.java<pre><code>/** JavaScript files required for UI navigation. */\nprotected static final String[] JS_FILES = new String[]{\n   \"direct-tab-link.js\",\n   \"sales-order-tab-link.js\"\n};\n</code></pre>","tags":["How to","Create","Navigable","Link"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigable-link/#definition-of-the-clientclass-in-the-tab-field-adfield","title":"Definition of the ClientClass in the tab field (ADField)","text":"<p>The last step is to add the implementation in the field where the functionality will be applied and configure its ClientClass.</p> <p></p>","tags":["How to","Create","Navigable","Link"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigable-link/#final-result","title":"Final Result","text":"<p>As seen below, using the created link, you can directly open the linked sales order in the Sales Order window.</p> <p></p>","tags":["How to","Create","Navigable","Link"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/","title":"How to create a Navigation Bar Component","text":"","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#overview","title":"Overview","text":"<p>This section explains how a component can be added to the Etendo main navigation bar. Navigation bar components are shown in the top of the Etendo Classic layout. They are positioned from left to right.</p> <p>Some main features of the Etendo Classic navigation bar components:</p> <ul> <li>A navigation bar component can be any Smartclient canvas. </li> <li>Modules can provide new navigation bar components. </li> <li>The position of a navigation bar component can be controlled. </li> <li>Navigation bar components can be enabled by role. </li> </ul> <p></p>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#example-module","title":"Example Module","text":"<p>This is supported by an example module which shows examples of the code shown and discussed.</p> <p>The code of this module can be downloaded from this repository.</p>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#main-flow-of-the-navigation-bar-generation","title":"Main Flow of the Navigation Bar Generation","text":"<p>The navigation bar generation goes through a number of steps:</p> <ol> <li>The user logs in, and navigates to the start page.</li> <li>The start page builds the main layout consisting of the navigation bar and the main content area (with tabs).</li> <li>The navigation bar is generated on the server as JavaScript (which is send to the browser). </li> <li>this is done by the main layout component. This component creates the overall JavaScript structure and then reads the navigation bar components from the navigation bar component table (using role information). </li> <li>Each navigation bar component is instantiated, its template is set and the generate method is called which generates the JavaScript of that component (using the template). </li> <li>The JavaScript of each component is assumed to create a single canvas or an array of Smartclient canvasses. The JavaScript (i.e. navigation bar component) is placed as a member of the horizontal layout, which builds the navigation bar. </li> </ol> <p>This main flow illustrates that each navigation bar component can implement its own visualization by providing/using a custom template and component.</p>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#implementing-a-navigation-bar-component","title":"Implementing a Navigation Bar Component","text":"<p>To create a component which is shown in the navigation bar, the following parts need to be implemented:</p> <ul> <li>Create a Java class (the component) which represents the navigation bar component on the server </li> <li>Create a template which generates the JavaScript which creates the component on the client </li> <li>Register the navigation bar component in the navigation bar component table</li> </ul> <p>Each of these steps is described in more detail below.</p> <p>The example module contains a Hello World component with a template. This example adds a button to the navigation bar which (when clicked) will say hello to the current user.</p> <pre><code>modules\n\u2514\u2500\u2500 com.etendoerp.client.application.examples\n    \u251c\u2500\u2500 referencedata\n    \u2514\u2500\u2500 src\n        \u2514\u2500\u2500 com\n            \u2514\u2500\u2500 etendoerp\n                \u2514\u2500\u2500 client\n                    \u2514\u2500\u2500 application\n                        \u2514\u2500\u2500 examples\n                            \u2514\u2500\u2500 templates\n                            \u2502   \u2514\u2500\u2500 hello_world.js.ftl\n                            \u2514\u2500\u2500 HelloWordlComponent.java\n</code></pre>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#creating-a-component","title":"Creating a Component","text":"<p>A component is useful when you want to add runtime information to the navigation bar component JavaScript when it gets generated. For example, the user name or other role or user information.</p> <p>Info</p> <p>If you do not have the requirement to use dynamic information in the generated JavaScript of your component, then you do not need to implement a component (only a template). You can make use of the standard Etendo template component: org.openbravo.client.kernel.BaseTemplateComponent, in the navigation bar component definition table.</p> <p>The example module has a hello world component which provides the current logged in user to the template. The component can be found in the module's src directory. Here is the code:</p> HelloWorldComponent.java<pre><code>package com.etendoerp.client.application.examples;\n\u00a0\nimport org.openbravo.client.kernel.BaseTemplateComponent;\nimport org.openbravo.dal.core.OBContext;\n\n/**\n * Provides a widget which shows a hello world message when clicked.\n * \n * @author mtaal\n */\npublic class HelloWorldComponent extends BaseTemplateComponent {\n\u00a0\n  public String getUserName() {\n    return OBContext.getOBContext().getUser().getName();\n  }\n}\n</code></pre>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#creating-a-template","title":"Creating a Template","text":"<p>The template contains the actual JavaScript. A template consists of two parts:</p> <ol> <li>A template file (the template source) ending on <code>.FTL</code> (a freemarker extension) which is located in the source tree (in the classpath). </li> <li>A record in the template table.</li> </ol> <p>The template is a powerful mechanism of Etendo as it makes it possible to combine dynamic generated information and allows overriding of templates by other modules.</p>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#the-template-source","title":"The Template Source","text":"<p>To create the template for your navigation bar component, create a <code>.FTL</code> file in the source tree of your module. The <code>.FTL</code> file should contain plain JavaScript with possible freemarker constructs to read information from the component. The JavaScript should create one Smartclient canvas or a JavaScript array with Smartclient canvas instances.</p> <p>As an example, the Hello World template can be found in the <code>com.etendoerp.client.application.examples</code> package, it creates a button which can be clicked to say hello. The content of the template is this:</p> hello_world.js.ftl<pre><code>/* jslint */\nisc.Button.create({\n  baseStyle: 'navBarButton',\n  title: OB.I18N.getLabel('OBEXAPP_HelloWorld'),\n  overflow: \"visible\",\n  width: 100,\n  layoutAlign: \"center\",\n  showRollOver: false,\n  showFocused: false,\n  showDown: false,\n  click: function() {\n    isc.say(OB.I18N.getLabel('OBEXAPP_SayHello', ['${data.userName?js_string}']));\n  }\n})\n</code></pre> <p>Some aspects to note in this JavaScript source:</p> <ul> <li>The /jslint/ tells Etendo to do a check on the generated JavaScript. Errors are printed in the console or output log. </li> <li>As you can see, the templates create a canvas (the Button). It is also allowed to create an array of canvasses. </li> <li>The title of the button is retrieved through the <code>OB.I18N.getLabel</code> method. This is to support translation, see a section below in this article for more information. </li> <li>See the <code>${data.userName?js_string}'</code> part, this is a freemarker template construct whereby information is retrieved from a Java object. In the Etendo templating system, the component instance is available as the data object. The <code>${data.userName?js_string}'</code> will call the accessor <code>getName</code> on the HelloWorldComponent. </li> </ul>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#template-record","title":"Template Record","text":"<p>The next step is to let Etendo know that the template exists. This is done by registering the template in Etendo in the Template table. The template maintenance function can be found here: <code>Application Dictionary</code> &gt; <code>User Interface</code> &gt; <code>Template</code>.</p> <p></p>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#registering-the-component-as-a-navigation-bar-component","title":"Registering the Component as a Navigation Bar Component","text":"<p>The last step is to add the component to the navigation bar. This is done through the navigation bar components table/window. You can find it through quick launch or in the menu here: <code>Application Dictionary</code> &gt; <code>User Interface</code> &gt; <code>Navigation Bar Components</code>.</p> <p></p>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#the-result","title":"The Result","text":"<p>After executing the above steps, you should see a Hello World button in the navigation bar. Clicking it will popup a small hello message.</p> <p></p>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-navigation-bar-component/#static-navigation-bar-components","title":"Static Navigation Bar Components","text":"<p>By checking the Static Component flag of a a navigation bar component in <code>Application Dictionary</code> &gt; <code>User Interface</code> &gt; <code>Navigation Bar Components</code> it is declared as static . This kind of components differ from their counterparts in the way they are created. Static Navigation Bar Components are loaded at the beginning of the JavaScript content used within the application and they do not require an extra request to be loaded.</p> <p>Besides, the content of the template of a Static Navigation Bar Components is defined in a slightly different way:</p> <pre><code>/* jslint */\n{\n  className: 'OBApplicationMenuButton',\n  properties: {\n    title: 'UINAVBA_APPLICATION_MENU',\n    initWidget: function () {\n      this.Super('initWidget', arguments);\n      this.baseData = isc.clone(OB.Application.menu);\n    }\n  }\n}\n</code></pre> <p>Note</p> <p>The template defines a JSON object with two properties:</p> <ul> <li>className : the class name of the navigation bar component. </li> <li>properties : contains the set of attributes and functions that will be used to configure the component. </li> </ul> <p>This work is a derivative of How to Create a Navigation Bar Component by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Navigation Bar","Component","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/","title":"How to Create a Page in Etendo Documentation","text":"","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#overview","title":"Overview","text":"<p>This guide contains basic rules, tips, and suggestions for people intending to develop documentation for Etendo. When different documents use the same guidelines, they are more user friendly, consistent and more simple to combine and reuse. We therefore strongly encourage all contributors to follow these guidelines for the benefit of the readers.</p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#requirements","title":"Requirements","text":"<ul> <li>Python version ^3.10. To install it, follow the Python installation guide.</li> </ul>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#steps","title":"Steps","text":"<ol> <li> <p>Clone the docs repository </p> Terminal<pre><code>git clone git@github.com:etendosoftware/docs.git\n</code></pre> </li> <li> <p>Install dependencies</p> Terminal<pre><code>python3 -m venv venv\nsource venv/bin/activate\npip install mkdocs-material\npip install pillow cairosvg\npip install mkdocs-glightbox\npip install mike\npip install mkdocs-rss-plugin\npip install beautifulsoup4\npip install algoliasearch\n</code></pre> </li> <li> <p>Create a new branch with GitFlow, where the related pages, assets and configurations are stored.</p> Terminal<pre><code># This command should be executed only the first time after cloning the repository.\ngit flow init \n</code></pre> Terminal<pre><code>git flow feature start &lt;task key&gt;\n</code></pre> </li> <li> <p>To run the Etendo documentation locally, execute:</p> Terminal<pre><code>source venv/bin/activate\nmkdocs serve\n</code></pre> </li> <li> <p>Etendo documentation is structured in sections, in general the sections where most of the documentation is found are user guide and developer guide, within these there are subsections according to products and categories, you must decide the location within the structure and create a file with the <code>.md</code> format, the name must be in lowercase separated by hyphens. </p> Documentation Structure<pre><code>\u2514\u2500\u2500 docs\n\u251c\u2500\u2500 developer-guide \n\u2502   \u2514\u2500\u2500 etendo-classic\n\u2502       \u2514\u2500\u2500 how-to-guides\n\u2502           \u251c\u2500\u2500 new-page.md\n\u2502           \u251c\u2500\u2500 ..\n\u2502           \u251c\u2500\u2500 ..\n\u2502           \u2514\u2500\u2500 ..\n\u251c\u2500\u2500 user-guide\n\u2502   \u2514\u2500\u2500 basic-feature\n</code></pre> <p>In order to display the page in the menu, add this page in the <code>mkdocs.yml</code> file in the nav section.</p> <p>Important</p> <ul> <li>When adding pages to the navigation structure, remember to organize them in alphabetical order.</li> <li>The directory and navigation structure must be the same.</li> </ul> <p>Example</p> mkdocs.yml<pre><code>nav: \n- Home : index.md\n- User Guide:\n    ...\n    - How-To:\n        ...\n        - New Page: developer-guide/etendo-classic/how-to-guides/new-page.md\n        ...\n- Developer Guide\n...\n</code></pre> <p>The documentation should be worked on following the page format described in the next section.</p> <p>Once the documentation is finished:</p> </li> <li> <p>Create a PR to <code>develop</code> with all the related changes.</p> </li> <li>Once all the comments are resolved, and you have two approved, merge the PR.</li> <li>A new version of the documentation will be automatically deployed in https://docs.etendo.software.</li> </ol>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#page-format","title":"Page format","text":"","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#page-structure","title":"Page structure","text":"<pre><code>---\ntags: \n  - Tag example 1\n  - Tag example 2\n---\n\n# Title\n\n## Overview\n\n\n(General description of the section)\n\n\n## Title 1\n\n\n### Subtitle\n</code></pre> <p>Note</p> <p>If the page was extracted from OB wiki, for copyright reasons, add the following footer editing the title and the link of the original page: <pre><code>---\n\nThis work is a derivative of [Datasets](http://wiki.openbravo.com/wiki/Datasets){target=\"\\_blank\"} by [Openbravo Wiki](http://wiki.openbravo.com/wiki/Welcome_to_Openbravo){target=\"\\_blank\"}, used under [CC BY-SA 2.5 ES](https://creativecommons.org/licenses/by-sa/2.5/es/){target=\"\\_blank\"}. This work is licensed under [CC BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/){target=\"\\_blank\"} by [Etendo](https://etendo.software){target=\"\\_blank\"}.\n</code></pre></p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#useful-references","title":"Useful References","text":"","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#bold","title":"Bold","text":"<p>Use sparingly for emphasis, or to highlight option names, for example: From the Sales order window, select New</p> <pre><code>**Bold**\n</code></pre> <p>This is shown as: Bold</p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#italics","title":"Italics","text":"<p>Use it when quoting a piece of a text from another source, a piece of text in another language or to give an example, such as sample text to be typed in a text field.</p> <pre><code>*Italic*\n</code></pre> <p>This is shown as: Italic</p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#backticks","title":"Backticks","text":"<p>Use them to refer to paths, inline code and for menu navigation. For example:</p> <ul> <li>Path:     <pre><code>`/directory/filename.txt`\n</code></pre>     This is shown as: <code>/directory/filename.txt</code></li> <li> <p>Inline Code:     <pre><code>`./gradlew update.database --info`\n</code></pre>     This is shown as: <code>./gradlew update.database --info</code></p> </li> <li> <p>Menu navigation:     <pre><code>`Document`&gt;`New`&gt;`Template`\n</code></pre>     This is shown as: <code>Document</code>&gt;<code>New</code>&gt;<code>Template</code></p> </li> </ul>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#admonitions","title":"Admonitions","text":"<p>Admonitions are used to include extra content without interrupting the flow of the page. As shown below, there are different types: </p> <p><pre><code>!!!note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n!!!success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n!!!warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n!!!error\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> This is shown as:</p> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Success</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Warning</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Failure</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>It is also possible to edit the title of the blockquote by adding:</p> <p><pre><code>!!!failure \"Edited title example\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> This is shown as:</p> <p>Edited title example</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>For more information, visit Admonitions.</p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#content-tabs","title":"Content Tabs","text":"<p>When documenting a feature with different options (JAR or Source, Windows or Linux, C or C++ for example), use the following tabs to include information relevant for each option. Readers can then choose the corresponding tab with the necessary information and skip reading non-relevant information.</p> <p>Content Tabs<pre><code>=== \"C\"\n\n    ``` c\n    #include &lt;stdio.h&gt;\n\n    int main(void) {\n      printf(\"Hello world!\\n\");\n      return 0;\n    }\n    ```\n\n=== \"C++\"\n\n    ``` c++\n    #include &lt;iostream&gt;\n\n    int main(void) {\n      std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n      return 0;\n    }\n    ```\n</code></pre> This is shown as:</p> CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#directory-structure","title":"Directory Structure","text":"<p>In order to the directory structure, it is necessary to apply the following format:</p> <pre><code>modules\n\u2514\u2500\u2500 org.openbravo.localization.spain.referencedata.taxes\n    \u2514\u2500\u2500 referencedata \n        \u2514\u2500\u2500 standard\n            \u251c\u2500\u2500 Impuestos_ES.xml\n            \u2514\u2500\u2500 Spanish_Tax_Alerts.xml\n</code></pre>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#external-links","title":"External Links","text":"<p>To include external links in the documentation, use the following path format: </p> <pre><code>[Google Example](https://google.com){target=\"_blank\"}\n</code></pre> <p>This is shown as: Google Example </p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#internal-links-redirection","title":"Internal links (Redirection)","text":"<p>To include internal links, use the relative paths from the current page such as the following example:</p> <pre><code>[Internal Link](../../how-to-guides/example-page.md)\n</code></pre> <p>This is shown as: Internal Link</p> <p>It is also possible to refer to a specific section inside a page using</p> <pre><code>[Specific section](../../how-to-guides/example-page.md#specific-section)\n</code></pre> <p>This is shown as: Specific section</p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#lists","title":"Lists","text":"<p>To include lists in the documentation, use the following formats:</p> <p>Bullet points:</p> <pre><code>List:\n\n- Bullet point a\n- Bullet point b\n</code></pre> <p>This is shown as:</p> <p>List:</p> <ul> <li>Bullet point a</li> <li>Bullet point b</li> </ul> <p>Numbered list:</p> <p><pre><code>List:\n\n1. Numbered option 1\n    - item 1\n    - item 2\n2. Numbered option 2\n</code></pre> This is shown as:</p> <p>List:</p> <ol> <li>Numbered option 1<ul> <li>item 1</li> <li>item 2</li> </ul> </li> <li>Numbered option 2</li> </ol> <p>Info</p> <p>Remember respecting the tabs is essential for the continuity of lists, this means that the content of different items must be tabulated.  </p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#images","title":"Images","text":"<p>To include images in the documentation, use the relative paths from the current page with the following format: </p> <pre><code>![](../../assets/developer-guide/how-to-guides/new-page/new-image.png)\n</code></pre> <p>Info</p> <p>Remember to upload the image to the assets folder with the corresponding specific location.</p> <p>For example, if the image location is <code>developer-guide</code>&gt; <code>how-to-guides</code> &gt;<code>new-page</code>, the location of the image should be:</p> <pre><code> assets \n    \u2514\u2500\u2500 developer-guide\n         \u2514\u2500\u2500 how-to-guides\n                \u2514\u2500\u2500 new-page\n                    \u2514\u2500\u2500 new-image.png\n</code></pre>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#more-references","title":"More references","text":"<p>For more information about mkdocs, visit Mkdocs reference.</p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#writing-rules","title":"Writing Rules","text":"","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#keep-it-simple","title":"Keep it simple","text":"<p>Use short sentences and punctuation to keep ideas clear and simple. Introduce a single idea, concept or action per sentence.</p> <ul> <li> <p>Wrong The manufacturing module allows users to define the process plans, work requirements and work efforts; this is how the processes that produce intermediate and final goods work.</p> </li> <li> <p>Correct The manufacturing module allows users to define the process plans, work requirements and work efforts. This section describes how processes that produce intermediate and final goods function.</p> </li> </ul>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#tenses","title":"Tenses","text":"<p>Always use the present tense. Avoid past or future tenses if possible. In addition, try to refrain from using must, have to, need to, will, should and similar forms. Keep in mind that a manual describes mandatory procedures to follow to accomplish a certain task.</p> <ul> <li>Wrong You will have to press return to reboot the system.</li> <li>Correct Press return to reboot the system.</li> </ul>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#use-third-person","title":"Use third person","text":"<p>Where possible, use the third person imperative. </p> <ul> <li>Wrong You should run the installation script</li> <li>Correct Run the installation script</li> </ul> <p>However, as long as you do not overdo it, it is accepted to address the user directly using you if it makes the documentation easier to follow or use the user when necessary.</p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#avoid-gender-discrimination","title":"Avoid gender discrimination","text":"<p>Readers of software documentation are men and women. Avoid using expressions that refer to specific gender forms. You can avoid gender forms or use they/their as a generic third-person singular pronoun to refer to a person whose gender is unknown or irrelevant to the context of the usage.</p> <ul> <li> <p>Wrong Every user has his home directory.</p> </li> <li> <p>Correct Every user has a home directory. Every user has their home directory.</p> </li> </ul>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#only-describe-current-functionality","title":"Only describe current functionality","text":"<p>Avoid talking about future features or plans for a product or an application.</p> <ul> <li> <p>Wrong Graphics can be saved as a GIF image. Support for new formats will be added in future versions.</p> </li> <li> <p>Correct Graphics can be saved as a GIF image.</p> </li> </ul>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#writing-for-a-global-audience","title":"Writing for a global audience","text":"<p>Keep in mind that people from all over the globe can use Etendo and its related documentation. Some important recommendations:</p> <ul> <li>Avoid using names of people, addresses, and other sample information that are not common in the English language.</li> <li>Remember that currencies and formats to represent dates and numbers are not the same in every part of the world.</li> </ul>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-page-in-etendo-documentation/#other-conventions","title":"Other conventions","text":"<ul> <li>If you have a list of items (for example a list of files to be downloaded) order them alphabetically unless there is a more obvious logical order.</li> <li>Do not use contractions (don't, you're, etc).</li> </ul> <p>This work is a derivative of Documentation Style Guide by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Create Page","Documentation Page","Style","Format"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/","title":"How to Create a Pick and Execute Process","text":"","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#overview","title":"Overview","text":"<p>Pick and Execute (P&amp;E) is a case of Process Definition with Standard UI pattern.</p> <p>This section will add a new Pick and Execute process and associate it with the Sales Order window.</p> <p>The implementation requires development experience.</p> <p>The following concept pages provide background information on action handlers and javascript development:</p> <ul> <li>Action Handler</li> <li>Client Side Development and API</li> <li>JavaScript Coding Conventions</li> </ul>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#steps-to-implement-the-process","title":"Steps to implement the Process","text":"","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#overview_1","title":"Overview","text":"<p>The P&amp;E processes take advantage of the same foundation concepts in the Application Dictionary. The Window, Tabs and Fields will be used for defining the editable grid that will be shown, a new Reference for the parameter of the process; and then implementing an action handler that will get executed when the user hits the Done button.</p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#implementation","title":"Implementation","text":"","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#defining-the-window","title":"Defining the Window","text":"<ol> <li>Create a new window</li> <li>Fill the required fields</li> <li> <p>Select Pick and Execute as window type</p> <p></p> </li> <li> <p>Following the same concepts, a Table is required as data-source.</p> <ul> <li> <p>In case it is needed to mix information from several tables, there are different options:</p> </li> <li> <p>A database view used to create a table in Application Dictionary.</p> </li> <li>A table based on an HQL query.</li> <li>A table based on a manual datasource.</li> </ul> <p></p> </li> <li> <p>Create the necessary fields that will turn into the columns of the grid. Pick a Column and pay attention to some important properties:</p> <ul> <li>Displayed: This must be checked in order to generate a field. If Displayed is unchecked no field will be generated.</li> <li>Read Only: Most of the times all the fields will be read-only. If you want a user to be able to modify some data, e.g. quantity, leave it unchecked.</li> <li>Show in Grid View: Defines if the field will be shown in the grid. A Field as displayed can be defined but not shown in grid, so a field will get generated but not shown. This is useful for retrieving data to the grid and send it to the process.</li> <li>Grid Position: Defines the sequence of the fields in the grid.</li> </ul> <p></p> </li> </ol>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#defining-the-reference","title":"Defining the Reference","text":"<p>After defining the window, a new Reference needs to be defined.</p> <ol> <li>Create a new Reference</li> <li>Select in the Base Reference drop down: Window Reference</li> <li> <p>Save</p> <p></p> </li> <li> <p>Move to Window tab</p> </li> <li>Create a new record</li> <li>Select your newly created window</li> <li>Save</li> </ol> <p></p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#defining-the-process","title":"Defining the Process","text":"<p>There is a new window for processes: Process Definition</p> <ol> <li>Open the Process Definition window</li> <li>Create a new record</li> <li>Define the UI pattern: Standard (Parameters defined in Dictionary)</li> <li>Set the Handler (Java class implementing the process)</li> <li>Save</li> </ol> <p></p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#parameters","title":"Parameters","text":"<p>Window Reference is an implementation of a rich parameter.</p> <ol> <li>Move to Parameters tab</li> <li>Create a new record</li> <li>Fill the required fields. The name of the parameter will be the name shown in the title of the running process.</li> <li>Select Window Reference</li> <li>Pick the Window you defined previously</li> <li>Save</li> </ol> <p></p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#adding-a-button-to-sales-order","title":"Adding a button to Sales Order","text":"","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#create-a-column","title":"Create a Column","text":"<p>A new column is required to be associated to a button.</p> <p>Info</p> <p>For more information, visit How to add a field to a Window Tab.</p> <ol> <li> <p>Create a new column in the <code>C_Order</code> table. <code>PostgreSQL</code> syntax:</p> <pre><code>ALTER TABLE c_order ADD COLUMN em_obexapp_pick1 character(1);\nALTER TABLE c_order ALTER COLUMN em_obexapp_pick1 SET DEFAULT 'N'::bpchar;\n</code></pre> </li> <li> <p>Go to: Tables and Columns</p> </li> <li>Open the <code>C_Order</code> record</li> <li>Execute: Create Columns from DB process</li> <li>Move to the Columns Tab</li> <li>Pick the newly created column</li> <li>Change the reference from: Yes/No to Button</li> <li>Pick your defined process</li> </ol> <p></p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#create-a-field","title":"Create a Field","text":"<ol> <li>Go to Windows, Tabs and Fields</li> <li>Search for Sales Order</li> <li>Create a new Field associated with the column</li> </ol>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#java-implementation","title":"Java Implementation","text":"<p>In the case of a Pick and Execute action handler, extend from BaseProcessActionHandler and implement the doExecute method.</p> PickExampleActionHandler.java<pre><code>/*\n  *************************************************************************\n  * The contents of this file are subject to the Openbravo  Public  License\n  * Version  1.1  (the  \"License\"),  being   the  Mozilla   Public  License\n  * Version 1.1  with a permitted attribution clause; you may not  use this\n  * file except in compliance with the License. You  may  obtain  a copy of\n  * the License at http://www.openbravo.com/legal/license.html\n  * Software distributed under the License  is  distributed  on  an \"AS IS\"\n  * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n  * License for the specific  language  governing  rights  and  limitations\n  * under the License.\n  * The Original Code is Openbravo ERP.\n  * The Initial Developer of the Original Code is Openbravo SLU\n  * All portions are Copyright (C) 2011 Openbravo SLU\n  * All Rights Reserved.\n  * Contributor(s):  ______________________________________.\n  ************************************************************************\n  */\npackage org.openbravo.client.application.examples;\n\u00a0\nimport java.util.Map;\n\u00a0\nimport org.apache.log4j.Logger;\nimport org.codehaus.jettison.json.JSONArray;\nimport org.codehaus.jettison.json.JSONObject;\nimport org.openbravo.client.application.ApplicationConstants;\nimport org.openbravo.client.application.process.BaseProcessActionHandler;\n\u00a0\n/**\n  * @author iperdomo\n  *\n  */\npublic class PickExampleActionHandler extends BaseProcessActionHandler {\n\u00a0\n  private static final Logger log = Logger.getLogger(PickExampleActionHandler.class);\n\u00a0\n  @Override\n  protected JSONObject doExecute(Map&lt;String, Object&gt; parameters, String content) {\n    try {\n      JSONObject request = new JSONObject(content);\n\u00a0\n      log.info(\"&gt;&gt; parameters: \" + parameters);\n      // log.info(\"&gt;&gt; content:\" + content);\n\u00a0\n      // _selection contains the rows that the user selected.\n      JSONArray selection = new JSONArray(\n          request.getString(ApplicationConstants.SELECTION_PROPERTY));\n\u00a0\n      log.info(\"&gt;&gt; selected: \" + selection);\n\u00a0\n      // _allRows contains all the rows available in the grid\n      JSONArray allRows = new JSONArray(request.getString(ApplicationConstants.ALL_ROWS_PARAM));\n\u00a0\n      log.info(\"&gt;&gt; allRows: \" + allRows);\n\u00a0\n      // A Pick and Execute process can have several buttons (buttonList)\n      // You can know which button was clicked getting the value of _buttonValue\n      log.info(\"&gt;&gt; clicked button: \" + request.getString(ApplicationConstants.BUTTON_VALUE));\n\u00a0\n      return request;\n    } catch (Exception e) {\n      log.error(\"Error processing request: \" + e.getMessage(), e);\n    }\n    return new JSONObject();\n  }\n}\n</code></pre>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#testing-the-process","title":"Testing the Process","text":"<p>Since the structure of some Entity has been changed by adding a new column, it is needed to restart the tomcat server.</p> <ul> <li>After restarting, it should be able to go to the Sales Order window and see a new button.</li> </ul> <p></p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#advanced-topics","title":"Advanced Topics","text":"","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#selecting-by-default","title":"Selecting by default","text":"<p>The data-source (table or view) defined in the Tab, can set which rows will be selected by default when the user launches the process. It is just needed to create a column <code>c_ob_selected</code>, this will turn into a <code>obSelected</code> property in the generated entity. When the value of this column is Y , the row will be selected by default. Here you have an working example: <code>M_RM_RECEIPT_PICK_EDIT.xml</code>.</p> <p>Note</p> <p>When registering the column in the Application Dictionary the Yes/No reference must be used.</p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#validation-function","title":"Validation Function","text":"<p>Define at Field level, a JavaScript validation function. In an editable field when the user enters a value, this function will get executed.</p> <ol> <li>Go to Window, Tabs and Fields</li> <li>Pick your window and the tab</li> <li>Go to the Quantity field</li> </ol> <p></p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#javascript-definition","title":"JavaScript Definition","text":"<ul> <li>The Component Provider needs to register a new global resource.</li> <li>If the function returns false, the cell will be marked with an error.</li> <li>In the JavaScript, define a validation function e.g.</li> </ul> <pre><code>OB.OBHT = {};\nOB.OBHT.validate = function (item, validator, value, record) {\n  // item has access to grid: item.grid\n  // from the grid you can get all selected records and edited values, e.g.\n  //   * item.grid.getSelection()\n  //   * item.grid.getEditedRecord()\n  // grid has access to view: grid.view\n  // view has access to parentWindow: view.parentWindow (the window running the process)\n  // parentWindow has access to currentView\n  // currentView has getContextInfo\n  // debugger;\n  if (window.console) {\n    console.log(\"validation function!\", value);\n  }\n  return true;\n};\n</code></pre>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#selection-function","title":"Selection Function","text":"<p>A selection function can be defined at Tab level. This function will get called when the user select/unselect a row.</p> <p></p> <p>And define a JavaScript function in your loaded static <code>.js</code> file:</p> <pre><code>OB.OBHT.selectionChanged = function (grid, record, recordList) {\n  if (window.console) {\n    console.log(\"selection function!\");\n    console.log(grid, record, recordList);\n  }\n};\n</code></pre> <p>If you want to change any value of the selected record, use the following instruction:</p> <pre><code>grid.setEditValue(grid.getRecordIndex(record), columnName, newColumnValue)\n</code></pre>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-pick-and-execute-process/#performing-several-actions-after-execution","title":"Performing Several Actions after Execution","text":"<p>After the process is executed, a series of actions can be taken.</p> <p>Info</p> <p>For more information about several actions after execution, see How to create a Standard Process Definition.</p> <p>This work is a derivative of How to create a Pick and Execute Process by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","PickandExecute","Process definition","Action handler","Actions","Standard UI pattern"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/","title":"How to Create a Report using Process Definition","text":"","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#overview","title":"Overview","text":"<p>This section explains how to add a new Report using a Process Definition and create a menu entry to invoke it.</p> <p>Info</p> <p>For background information, visit How to Create a Standard Process Definition and How to Create a Report.</p>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#example-module","title":"Example Module","text":"<p>This section is supported by an example module which includes the simple report described in the examples of this document. The report is named Product Simple Report and prints in <code>PDF</code> a list of Products that can be filtered by Product Category.</p> <p>The code of the example module can be downloaded from this mercurial repository: https://code.openbravo.com/erp/mods/org.openbravo.platform.features</p>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#report-definition-in-application-dictionary","title":"Report Definition in Application Dictionary","text":"","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#process-definition","title":"Process Definition","text":"<p>Create a new record in Process Definition window. Fields to consider:</p> <ul> <li> <p>UI Pattern: Set <code>Report (Using JR Templates)</code> . This value will display the Report Definition tab.</p> </li> <li> <p>Action Handler: If none is set when the UI Pattern is selected, the <code>org.openbravo.client.application.report.BaseReportActionHandler</code> is set.</p> </li> </ul> <p></p> <p></p> <p>The <code>BaseReportActionHandler</code> is the default action handler to use in reports. In case you desire to make some Java validations or include some extra parameters that are not defined in the Process Definition parameters tab it is possible to use a custom Action Handler that extends the <code>BaseReportActionHandler</code>.</p>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#parameter-definition","title":"Parameter Definition","text":"<p>In the Parameter tab are added all the parameters that are needed to filter the results of the report. Their values are handled by the <code>BaseReportActionHandler</code> and sent to Jasper Reports as parameters. These parameters need to be defined in the JR template with the same name as the column name.</p> <p></p> <p></p> <p></p> <p></p> <p>When the filter parameter is a Selector reference the value is sent as a JSONOBject that includes 2 keys:</p> <ul> <li>value with the id of the selected BaseOBObject to be used in the SQL query</li> <li>identifier with the readable identifier that can be used to print in the report the filter values.</li> </ul> <p>In case of Multiple Selectors the JSONObject includes 4 keys:</p> <ul> <li>values with a JSONArray including all the selected ids.</li> <li>identifiers with a JSONArray including all the identifiers.</li> <li>strValues with a comma separated String with all the selected ids that can be used in a SQL IN clause.</li> <li>strIdentifiers with a comma separated String with all the selected identifiers.</li> </ul> <p>In the Jasper Template, the parameter has to be defined using the class org.codehaus.jettison.json.JSONObject . In the example, it is set a Product Category multiple selector. As this parameter is optional, the filter is included in the query using an auxiliary parameter ( AUX_Product_category ). The auxiliary parameter has a default expression that returns \" 1 = 1 \" when there is no category selected and the corresponding where clause when some categories are selected:</p> <pre><code>(\"\".equals($P{M_Product_Category_ID}.getString(\"strValues\")))\u00a0? \" 1 = 1 \"\u00a0: \" pc.m_product_category_id IN (\"+$P{M_Product_Category_ID}.getString(\"strValues\")+\")\"\n</code></pre> <p>This parameter is then included in the query using the \"$P!{}\" notation to replace it with the parameter value instead of using SQL Parameters.</p> <pre><code>FROM m_product p\n  JOIN m_product_category pc ON p.m_product_category_id = pc.m_product_category_id\nWHERE $P!{AUX_Product_category}\n  AND p.ad_client_id = $P{Current_Client_ID}\n</code></pre> <p>The identifiers can be shown in a Text field with the following Expression:</p> <pre><code>$P{M_Product_Category_ID}.getString(\"strIdentifiers\")\n</code></pre> <p></p> <p></p> <p></p> <p></p> <p>The <code>BaseReportActionHandler</code> and the <code>ReportingUtils</code> class used to generate the report includes some additional parameters that can be used in the template:</p> <p>SUBREPORT_DIR</p> <pre><code>The path where the main template is located. Useful to set the paths of the subreports.\n</code></pre> <p>jasper_process</p> <pre><code>A _org.openbravo.client.application.Process_ object with the Process Definition of the report.\n</code></pre> <p>jasper_hbSession</p> <pre><code>A _org.hibernate.Session_ object with the current hibernate session.\n</code></pre> <p>jasper_obContext</p> <pre><code>A _org.openbravo.dal.core.OBContext_ with the OBContext that has launched the report.\n</code></pre> <p>AMOUNTFORMAT</p> <pre><code>A _java.text.DecimalFormat_ object with the format to be used on Amounts.\n</code></pre> <p>QUANTITYFORMAT</p> <pre><code>A _java.text.DecimalFormat_ object with the format to be used on Quantities.\n</code></pre> <p>REPORT_FORMAT_FACTORY</p> <pre><code>JR Base parameter with the date format.\n</code></pre> <p>Current_Client_ID</p> <pre><code>String with the current _AD_Client_ID_. Useful to filter the SQL of the report.\n</code></pre> <p>Readable_Organizations</p> <pre><code>Comma separated String with the readable organizations of the User/Role executing the report. Useful to filter the `SQL` of the report.\n</code></pre> <p>Depending on the report output some additional parameters are set:</p> <p>PDF output:</p> <p>IS_IGNORE_PAGINATION</p> <pre><code>with **false** value to ensure that the report breaks in different pages.\n</code></pre> <p>XLS output:</p> <p>IS_IGNORE_PAGINATION</p> <pre><code>with **true** value to ensure that the report does not break in different pages and all the results are shown in the same sheet.\n</code></pre> <p>In case it is desired to add more parameters that cannot be defined as Parameters of the Process Definition, it is possible to use a custom Handler that extends the <code>BaseReportActionHandler</code> and overwrites the <code>addAdditionalParameters</code> method.</p> <p>It is possible to check all the parameters and values sent to the Jasper Report engine by enabling the DEBUG log level on the <code>org.openbravo.client.application.report.ReportingUtils</code> class by modifying the <code>log4j2-web.xml</code> and for older versions, <code>log4j.lcf</code> file:</p> <pre><code>DEBUG org.openbravo.client.application.report.ReportingUtils - list of parameters available in the jasper report\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: SUBREPORT_DIR value: /home/gorkaion/src/openbravo/pi-reporting-merge/WebContent/web/org.openbravo.platform.features/jasper/\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: Current_Client_ID value: 23C59575B9CF467C9620760EB255B389\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: REPORT_FORMAT_FACTORY value: org.openbravo.erpCommon.utility.JRFormatFactory@14ffa3fc\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: REPORT_VIRTUALIZER value: net.sf.jasperreports.engine.fill.JRSwapFileVirtualizer@1b670029\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: jasper_process value: OBUIAPP_Process(70889433974B409BAC4F9D7BFB211248) (name: Product Simple Report)\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: M_Product_Category_ID value: {\"values\":[\"291B401A38354A2C8247DFF0DFBDF4AE\",\"5525FCABFE9545018EE221E8802AA283\"],\"identifiers\":[\"Bio\",\"Fruit juice\"],\"strValues\":\"'291B401A38354A2C8247DFF0DFBDF4AE', '5525FCABFE9545018EE221E8802AA283'\",\"strIdentifiers\":\"Bio, Fruit juice\"}\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: AMOUNTFORMAT value: java.text.DecimalFormat@674dc\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: QUANTITYFORMAT value: java.text.DecimalFormat@674dc\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: Readable_Organizations value: 'E443A31992CB4635AFCAEABE7183CE85','0','DC206C91AA6A4897B44DA897936E0EC3','7BABA5FF80494CAFA54DEBD22EC46F01','BAE22373FEBE4CCCA24517E23F0C8A48','19404EAD144C49A0AF37D54377CF452D','B843C30461EA4501935CB1D125C9C25A','2E60544D37534C0B89E765FE29BC0B43'\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: jasper_obContext value: org.openbravo.dal.core.OBContext@73b91cd\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: jasper_hbSession value: SessionImpl(PersistenceContext[entityKeys=...\nDEBUG org.openbravo.client.application.report.ReportingUtils - parameter name: IS_IGNORE_PAGINATION value: false\n</code></pre>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#button-list-parameters","title":"Button List Parameters","text":"<p>When a button list parameter is added, the buttons are added together with the predefined buttons of this type of process (View, Export To PDF, Export To Excel). This behavior allows adding additional logic to the standard behavior of these processes, since it is possible to extend the base behavior from the java implementation of the process.</p> <p>Below is an example of a button list that adds two buttons (Button 1, Button 2) to this type of process:</p> <p></p> <p></p> <p>In order to add execution logic to these buttons, the <code>handleCustomAction</code> method must be redefined within the java class of the process:</p> <pre><code>  @Override\n  protected void handleCustomAction(JSONObject result, Map&lt;String, Object&gt; parameters,\n      JSONObject jsonContent, String action) throws JSONException {\n    switch (action) {\n      case \"B1\":\n        result.put(\"message\", new JSONObject()\n            .put(\"severity\", \"success\")\n            .put(\"text\", \"Button B1 has been pressed.\"));\n        break;\n      case \"B2\":\n        result.put(\"message\", new JSONObject()\n            .put(\"severity\", \"success\")\n            .put(\"text\", \"Button B2 has been pressed.\"));\n        break;\n      default:\n        super.handleCustomAction(result, parameters, jsonContent, action);\n    }\n  }\n</code></pre> <p>Note</p> <p>The action parameter will have the information corresponding to the search key of the button pressed, the identifiers are mandatory and are defined together with the button in the reference tab of the list within the reference.</p> <p>Once the configuration is done, it is necessary to compile.</p> Terminal<pre><code>./gradlew smartbuild\n</code></pre> <p>Then, when you enter the process, you will see your custom buttons next to the predefined report buttons.</p> <p></p> <p>Then, when you press the buttons, your custom logic is executed.</p> <p></p>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#report-datasource-definition","title":"Report Datasource Definition","text":"<p>There are two ways of defining the data to be displayed by the report:</p> <ol> <li>Defining a query in the <code>jrxml</code> template.</li> <li>Providing a datasource to the <code>jrxml</code> template.</li> </ol> <p>In case of the second approach, we need to use a custom Handler that extends the <code>BaseReportActionHandler</code> and overwrites the <code>getReportData</code> method. This method receives a parameter map as an argument that contains:</p> <ul> <li>The parameters of the HTTP request.</li> <li>The parameters available inside the Jasper Report. They are available through another map that can be accessed by using the JASPER_REPORT_PARAMETERS key.</li> </ul> <pre><code>protected JRDataSource getReportData(Map&lt;String, Object&gt; parameters) {\n// Retrieve the report id (HTTP request parameter)\nString reportId = (String) parameters.get(\"reportId\");\n// retrieve the map of JR Parameters\nMap&lt;String, Object&gt; jrParameters = (Map&lt;String, Object&gt;) parameters\n.get(JASPER_REPORT_PARAMETERS);\n// Here goes the logic to generate the JRDataSource\n...\n}\n</code></pre> <p>This allows generating the report data dynamically, i.e, based on some kind of logic built with the value of any of these parameters.</p>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#sub-report-runtime-compilation","title":"Sub-Report Runtime Compilation","text":"<p>In case our process definition report contains sub-reports, the infrastructure supports compiling the sub-reports at runtime. To do that the following conditions should be met:</p> <ol> <li>The parameter name for the sub-report in the main report follows this pattern: <code>SUBREP_name_of_the_sub_report_file</code> .</li> <li>The sub-reports (jrxml files) are placed in the same folder as the main report.</li> </ol>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#report-definition","title":"Report Definition","text":"<p>In the Report Definition tab the JR Templates of the report are defined. Each Process Definition can only have a Report definition. It is also needed to define at least one template: <code>HTML</code>, <code>PDF</code> or <code>Excel</code>.</p> <ul> <li>If <code>PDF</code> and <code>Excel</code> outputs share the same template, it is possible to set the <code>PDF</code> template and check the Use PDF as Excel Template flag.</li> <li>If <code>PDF</code> and <code>HTML</code> outputs share the same template, it is possible to set the <code>PDF</code> template and check the Use PDF as HTML Template flag.</li> <li>If <code>HTML</code>, <code>PDF</code> and <code>Excel</code> outputs share the same template, then the <code>PDF</code> template must be set and both flags must be checked.</li> </ul> <p>The templates need to be stored in the web folder.</p> <p></p> <p></p>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report-using-process-definition/#result","title":"Result","text":"<p>The result is shown in a new form with all the parameters and the corresponding Export button(s).</p> <p></p> <p></p> <p>Once the report is generated, a file download is requested in the browser. The form is kept enabled so it is possible to rerun the report with different parameters.</p> <p>This work is a derivative of How to create a Report using Process Definition by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Reports","Process Definition","Menu Entry"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/","title":"How to Create a Report","text":"","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#overview","title":"Overview","text":"<p>In this section, the user can find information about the steps required to create a new report in Etendo Classic. The example explained is a simple report with a list of products.</p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#setting-up-jaspersoft-studio","title":"Setting up Jaspersoft Studio","text":"<p>Note</p> <p>It is recommended to use the latest version of Jaspersoft Studio.  </p> <p>First, you need to download Jaspersoft Studio, a graphical tool that allows you to create and modify JasperReports templates (.jrxml files).</p> <ul> <li>Download  Jaspersoft Studio. </li> <li>On Linux: just download the .tgz file and uncompress it, execute the binary Jaspersoft Studio located inside the main folder.</li> <li>On Windows: Download and execute the .exe file.</li> </ul>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#configuring-jaspersoft-studio-library-version","title":"Configuring Jaspersoft Studio Library Version","text":"<p>Warning</p> <p>Etendo supports Jasper Reports compatible with JasperReports 6.0.0. So, if you are using a newer version of Jaspersoft Studio, you need to make sure that the version of the JasperReports library is 6.0.0. It is very important to use the correct version of JasperReports library,so the jrxml file has the syntax compatible with Etendo.</p> <ul> <li>Go to <code>Settings</code> &gt; <code>Jaspersoft Studio</code> &gt; <code>Compatibility</code> &gt; <code>Source .jrxml Version</code> and set it to 6.0.0.</li> </ul> <p></p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#configuring-jaspersoft-studio-properties","title":"Configuring Jaspersoft Studio Properties","text":"<p>Some properties of Jaspersoft Studio need to be modified in order to work properly. In short, you need to make sure:</p> <ul> <li>You modified the JasperReport property net.sf.jasperreports.awt.ignore.missing.font and set it to true. It can be changed in <code>Properties</code> &gt; <code>Jaspersoft Studio</code> &gt; <code>Properties</code> </li> <li>Do not use any Scriplet class </li> <li>Use Java as default expression language </li> </ul>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#setting-up-classpath","title":"Setting up Classpath","text":"<p>In Jaspersoft Studio, each report is supposed to be part of a project. So, you first need to create a new project (<code>File</code> &gt; <code>New</code> &gt; <code>Project</code>).</p> <p>The project has a classpath, and here is where you can add the jars you need.</p> <ul> <li>Right-click on the project name: <code>Properties</code> &gt; <code>Java Build Path</code></li> <li>Move to Libraries tab </li> <li>Click Add External Jars button </li> <li>Add the desired library. </li> <li>Click OK</li> </ul>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#creating-the-template","title":"Creating the Template","text":"<ul> <li>Go to <code>File</code> &gt; <code>New</code></li> <li>Pick Jasper Report</li> <li>The New Report Wizard will be opened </li> </ul> <ul> <li>Select a Report Template, (Blank following our example) </li> <li>Define a Report Name </li> <li>Define the file Location in the project. </li> </ul> <p>Later on, we will copy this .jrxml file inside our Etendo module that is going to keep our Report and also the required configuration in the Application Dictionary.</p> <ul> <li>Define the Report Data Source: by clicking on \"New\", a new database connection can be configured using the Data Adapter Wizard</li> <li>Click New</li> <li>Pick Database JDBC Connection and click Next</li> <li>Fill all the fields <ul> <li>Name: Etendo (or any name you like, e.g. pi) </li> <li>JDBC Driver: PostgreSQL (<code>org.postgresql.Driver</code>). In this case, we'll use PostgreSQL </li> <li>JDBC URL: <code>jdbc:postgresql://localhost:5432/etendo</code> where 5432 is the port where PostgresSQL is running and etendo is the SSID of our database </li> <li>Username: tad (you can check your username/password in gradle.properties configuration file. For more information about gradle.properties, visit Install Etendo) </li> <li>Password: tad </li> </ul> </li> <li>Click the Finish button to generate the JDBC Connection </li> <li>Test your connection </li> <li>Save </li> </ul> <p></p> <p>Now we have to configure the query: we are going to list the products present in the database.</p> <ul> <li>Right-click on the Report Outline menu, and select Dataset and Query. Here is where we have to set the query of the report and it is also possible to switch between the available database connections in case we want to test the query. </li> </ul> <p></p> <ul> <li> <p>The products are stored in the <code>M_Product</code> table </p> <pre><code>SELECT m_product_id, value, name FROM m_product\n</code></pre> </li> <li> <p>We have to add the fields based on your query which we want to use in the report, so we are going to add: </p> <ul> <li><code>m_product_id</code> </li> <li><code>value</code> </li> <li><code>name</code> </li> </ul> </li> </ul> <p></p> <ul> <li>Click OK </li> <li>Remember to clear the Scriptlet class and modify the Language for expressions </li> <li>Right-click on the Report Outline menu, and select Show Properties. </li> <li>In the report properties in the right, look for the following: <ul> <li>Clear the Scriptlet class </li> <li>Choose Java as Language </li> </ul> </li> <li>Save your changes </li> </ul> <p></p> <p>Let's now design the Report Layout</p> <ul> <li>Put a static text as report title: Product List</li> <li>Place the fields in the Detail band and a title in the Column Header band </li> <li>Save your changes </li> </ul> <p></p> <ul> <li>Switch to the Preview subtab to get a report preview </li> </ul> <p></p> <p>Note</p> <p>It is recommended to use Dejavu fonts in jasper reports because these fonts support most of the characters in almost all languages\u200b\u200b. Besides, Dejavu typography is the family of fonts that Etendo included in jasperreports-fonts library.   </p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#etendo-runtime-environment","title":"Etendo Runtime Environment","text":"<p>The standard reports in Etendo (<code>src/org/openbravo/erpReports</code>) make use of several methods that reside inside the Etendo Runtime Environment, which cannot be executed at design time. For this reason, we provide a .jar file that encapsulates the following adapted methods of the <code>org.openbravo.erpCommon.utility.Utility</code> Class:</p> <ul> <li><code>public static BufferedImage showImageLogo</code>: returns a logo image that is already included in the JAR archive </li> <li><code>public static String applyCountryDateFormat</code>: always returns the date formatted in this pattern dd-MM-yyyy </li> <li><code>public static DecimalFormat getCountryNumberFormat</code>: just returns the same DecimalFormat received as parameter </li> </ul> <p>For this, to be able to preview the standard Etendo reports from JasperStudio, it suffices just to import the .jar file into the classpath of the project within JasperStudio.</p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#adding-images-and-logos-to-a-report-using-the-showimage-api","title":"Adding images and logos to a report using the ShowImage API","text":"<p>You can use the Image BLOB reference to display an image for a specific report, or one of the Company logos in the application. </p> <p>To do so:</p> <ol> <li> <p>Add an image object to your report</p> </li> <li> <p>set the expression class to \"java.awt.Image\" and the expression image to a call to the ShowImage function of the Utility class (if you want it to display a standard ImageBLOB image reference, that corresponds to a field added to a tab), or to the ShowImageLogo function if you want to display the logo of an Organization or Client.</p> </li> </ol> <p>Images loaded with this method must not have alpha channel. A transparency layer is not supported by the function that loads images in Jasper Reports.</p> <ul> <li>If you want to use the ShowImage function, you need to make the expression image look like: <ul> <li><code>org.openbravo.erpCommon.utility.Utility.showImage(\"IMAGEID\")</code> </li> </ul> </li> </ul> <p>IMAGEID needs to be the UUID of the image you want to show. You could set this value using a Jasper parameter.</p> <ul> <li>If you want to use the ShowImageLogo function to show one of the logos, you have several options. <ul> <li>This one will show the Company logo at System level: <ul> <li><code>org.openbravo.erpCommon.utility.Utility.showImageLogo(\"yourcompanylogin\")</code> </li> </ul> </li> <li>This one will show the Company log at Client level (the client used will be the one the user logged at): <ul> <li><code>org.openbravo.erpCommon.utility.Utility.showImageLogo(\"yourcompanymenu\")</code> </li> </ul> </li> <li>This one will show the Company logo at Organization level: <ul> <li><code>org.openbravo.erpCommon.utility.Utility.showImageLogo(\"yourcompanydoc\", \"ORGANIZATIONID\")</code></li> </ul> </li> </ul> </li> </ul> <p>ORGANIZATIONID needs to be the UUID of the Organization whose log you want to show. You could set this value using a Jasper argument. An example could be <code>org.openbravo.erpCommon.utility.Utility.showImageLogo(\"yourcompanydoc\",\"4387D62C6486481AB3D148442A6AD34E\")\u0323</code> being <code>4387D62C6486481AB3D148442A6AD34E</code> the organization ID.</p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#registering-the-report-in-application-dictionary","title":"Registering the Report in Application Dictionary","text":"","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#creating-the-report","title":"Creating the Report","text":"<p>It is possible to create a report using a process definition. For more information, visit this section.</p> <ul> <li>Using the System Administrator role </li> <li> <p>Using the quick-launch, open: Process Definition window </p> <ul> <li>You can find it in the menu: <code>Application Dictionary</code> &gt; <code>Process Definition</code> </li> </ul> </li> <li> <p>Create a new record </p> </li> <li>Fill all required fields <ul> <li>Module: Pick your module </li> <li>Search Key: ETPF_ProductList (It is a best practice to start with your module's DB_Prefix) </li> <li>Name: Product List </li> <li>UI Pattern: Report (Using JR templates) </li> <li>Data Access Level: Client/Organization </li> <li>Handler: use the default <code>org.openbravo.client.application.report.BaseReportActionHandler</code></li> </ul> </li> </ul> <p></p> <p>We must copy the .jrxml template file generated with Jaspersoft Studio into our module. When using Process Definition to generate a Report, templates need to be stored in the web folder of the module. In our example, we place it in the following location: <code>/web/com.etendoerp.platform.features/jasper</code></p> <ul> <li>Navigate to the Report Definition tab </li> <li>Fill the PDF template field with the location of the .jrxml file </li> </ul> <p></p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#creating-the-menu-record","title":"Creating the Menu record","text":"<ul> <li>Using the System Administrator role </li> <li>Open the Menu window </li> <li>Create a new record </li> <li>Fill all required fields: <ul> <li>Module: Your module </li> <li>Name: Name of the menu entry (Product List) </li> <li>Description: Description of the action related to the menu entry </li> <li>Action: Pick <code>Process Definition</code> </li> <li>Process Definition: Pick your Process Definition (Product List) </li> </ul> </li> </ul>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#compiling","title":"Compiling","text":"<p>After you have registered the report and menu entry in the Application Dictionary, you need to compile to generate the necessary code.</p> Terminal<pre><code>./gradlew smartbuild\n</code></pre> <p>Once the compilation has been completed, restart your Tomcat server.</p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#testing-the-report","title":"Testing the Report","text":"<p>If you have completed all the steps, you should be able to open your Product List report form the quick-lauch, or menu entry.</p> <p></p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#further-details","title":"Further Details","text":"","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#layout","title":"Layout","text":"<p>For information on how JasperReports handles the layout, check Making HTML,XLS or CSV friendly reports.</p> <p>Also, a tutorial with the basics of how to design a report can be found here.</p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#configuring-cell-type-in-xls-reports","title":"Configuring Cell Type in XLS Reports","text":"<p>By default, Etendo Classic reporting engine exports the XLS data as strings. This is done in order to ensure that the exported data can be read after opening the report with the vast majority of spreadsheet applications.</p> <p>If we want to have a particular format in a cell of our XLS report, and for example, display numbers inside a numeric cell, this default configuration can be overridden at template level.</p> <p>To override this configuration, the following must be done inside the .jrxml report template:</p> <ol> <li>Add the net.sf.jasperreports.export.xls.detect.cell.type property with true as its value. </li> <li>Add a pattern for the text field that will be displayed in the XLS cell. With the <code>&lt;pattern&gt;</code> tag, a fixed pattern can be set and with the <code>&lt;patternExpression&gt;</code> tag, it is possible to define a dynamic pattern. </li> </ol> <p>Note</p> <p>The decimal and thousands separators used for the numeric cells exported in this way, will be those defined inside the spreadsheet program itself (LibreOffice Calc, Excel,etc).</p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#creating-a-report-using-report-and-process","title":"Creating a Report Using Report and Process","text":"<p>In this section, you can find an example about how to create a Report in this way.</p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#report-compilation","title":"Report Compilation","text":"<p>When printing a report in the application, it is previously compiled at runtime. The result of this report compilation is cached if there are no modules in in development status.</p> <p>Besides, it is possible to handle the state of this cache through a JMX extension. Thus, this extension allows to:</p> <ul> <li>See if the cache is enabled. </li> <li>Enable/Disable the cache. </li> <li>See the list of reports whose compilation is stored in cache. </li> <li>Clear the cache contents. </li> </ul>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-report/#barcodes","title":"Barcodes","text":"<p>It is possible to generate barcodes from JasperReports, using barcode4j or barbecue libraries. These libraries are included in Barcode generation in reports module.</p> <p>In Platform Features module, there is an example of a report making use of different barcode styles, see the jrxml template.</p> <p>This work is a derivative of How to create a Report by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Reports","Jaspersoft Studio","Classpath"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/","title":"How to Create a Standard Process Definition","text":"","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#overview","title":"Overview","text":"<p>Standard UI pattern of Process Definition allows to create Parameter Windows defined in Application Dictionary, the UI for this windows is generated on demand so once defined those parameters, developer only needs to take care about process implementation.</p> <p>This section will add a new Standard Process Definition and create a menu entry to invoke it.</p> <p>The implementation requires development experience. See the following concept pages for background information on action handlers and javascript development:</p> <ul> <li>Action Handler</li> <li>Client Side Development and API</li> <li>JavaScript Coding Conventions</li> </ul>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#steps-to-implement-the-process","title":"Steps to implement the Process","text":"","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#overview_1","title":"Overview","text":"<p>Standard Process Definition processes take advantage of the same foundation concepts in the Application Dictionary, allowing to define parameters for the process as meta data that generates the UI when it is required without the need of generating code, compile or restart tomcat to apply the changes when developing.</p> <p>This example process will have the following parameters:</p> <ul> <li>Min and Max Qty: two mandatory integer fields. </li> <li>Orders: a search that allows to select several orders at the same time. </li> <li>Business Partner: a regular business partner selector. </li> </ul> <p>When Done button is clicked the process is executed:</p> <ul> <li>It verifies in backend <code>max qty</code> field is greater than <code>min qty</code>. In case they are not, a validation error is sent back to the client asking the user to fix the values before continuing. </li> <li>If previous validation is satisfied: <ul> <li>Total amount of all selected orders is summed and displayed in a message in the parameter window. </li> <li>If a business partner is selected, Business Partner window is opened within the selected one and a message is shown in this window. </li> </ul> </li> </ul>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#implementation","title":"Implementation","text":"","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#defining-the-process","title":"Defining the Process","text":"<ul> <li>Open Process Definition window </li> <li>Create a new record </li> <li>Define the UI pattern: Standard (Parameters defined in Dictionary)</li> <li>Set the Handler: <code>org.openbravo.client.application.examples.StandardProcessActionHandler</code>. This is the Java class implementing the process that will be invoked when user clicks on the action button. </li> <li>Save </li> </ul>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#adding-parameters","title":"Adding Parameters","text":"<ul> <li><code>Min Qty</code> parameter <ul> <li>Move to Parameters tab </li> <li>Create a new record </li> <li>Name: <code>Min Qty</code>. This is the name that will be shown in UI for this parameter. </li> <li>Internal Name: min. It is the internal name that will be used to retrieve the value in the java class. </li> <li>Sequence Number: 10. Defines the position of this field in the Parameter window in relation with the rest of fields. </li> <li>Reference: Integer. Defines both the data type the parameter will hold and how this parameter is visualized and behaves in the UI. </li> <li>Mandatory: true. Will force the parameter to have a value before allowing to submit the info to the process. </li> <li>Default value: 0. It is the value that will take the parameter by default. It is a javascript expression evaluated in the server side, like  Default Filter Expressions  used in selectors. </li> </ul> </li> <li>Follow similar steps to create Max Qty field </li> <li>Orders multi selector <ul> <li>Create a  Multi Order  selector </li> <li>Create a new parameter </li> <li>Reference: <code>OBUISEL_Multi Selector Reference</code> </li> <li>Reference Search Key: Multi Order Selector </li> </ul> </li> <li>Business Partner parameter has <code>OBUISEL_Selector Reference</code> as Reference and Business Partner not filtered by default by customer/vendor as Reference Search Key </li> </ul>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#adding-it-to-the-menu","title":"Adding it to the Menu","text":"<p>Adding a process to the menu allows to open it from menu as a new tab.</p> <ul> <li>In Menu window create a new entry </li> <li>Action: Process Definition </li> <li>Process Definition: Example Parameter Process </li> </ul>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#java-implementation","title":"Java Implementation","text":"<p>In the case of a Process Definition action handler, extend from <code>BaseProcessActionHandler</code> and implement the <code>doExecute</code> method.</p> <pre><code>/*\n  *************************************************************************\n  * The contents of this file are subject to the Openbravo  Public  License\n  * Version  1.1  (the  \"License\"),  being   the  Mozilla   Public  License\n  * Version 1.1  with a permitted attribution clause; you may not  use this\n  * file except in compliance with the License. You  may  obtain  a copy of\n  * the License at http://www.openbravo.com/legal/license.html\n  * Software distributed under the License  is  distributed  on  an \"AS IS\"\n  * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n  * License for the specific  language  governing  rights  and  limitations\n  * under the License.\n  * The Original Code is Openbravo ERP.\n  * The Initial Developer of the Original Code is Openbravo SLU\n  * All portions are Copyright (C) 2013 Openbravo SLU\n  * All Rights Reserved.\n  * Contributor(s):  ______________________________________.\n  ************************************************************************\n  */\npackage org.openbravo.client.application.examples;\n\u00a0\nimport java.math.BigDecimal;\nimport java.util.Map;\n\u00a0\nimport org.apache.log4j.Logger;\nimport org.codehaus.jettison.json.JSONArray;\nimport org.codehaus.jettison.json.JSONException;\nimport org.codehaus.jettison.json.JSONObject;\nimport org.openbravo.client.application.process.BaseProcessActionHandler;\nimport org.openbravo.dal.service.OBDal;\nimport org.openbravo.erpCommon.utility.OBMessageUtils;\nimport org.openbravo.model.common.order.Order;\n\u00a0\npublic class StandardProcessActionHandler extends BaseProcessActionHandler {\n  private static final Logger log = Logger.getLogger(StandardProcessActionHandler.class);\n\u00a0\n  @Override\n  protected JSONObject doExecute(Map&lt;String, Object&gt; parameters, String content) {\n    try {\n      JSONObject result = new JSONObject();\n\u00a0\n      JSONObject request = new JSONObject(content);\n      JSONObject params = request.getJSONObject(\"_params\");\n\u00a0\n      // Do validations on param values\n      double min = params.getDouble(\"min\");\n      double max = params.getDouble(\"max\");\n\u00a0\n      if (max &lt; min) {\n        // In case validations are not satisfied, show an error message and allow user to fix\n        // parameters\n        result.put(\"retryExecution\", true);\n\u00a0\n        JSONObject msg = new JSONObject();\n        msg.put(\"severity\", \"error\");\n        msg.put(\n            \"text\",\n            OBMessageUtils.getI18NMessage(\"OBEXAPP_MinGtMax\", new String[] { Double.toString(min),\n                Double.toString(max) }));\n        result.put(\"message\", msg);\n        return result;\n      }\n\u00a0\n      // Execute process and prepare an array with actions to be executed after execution\n      JSONArray actions = new JSONArray();\n\u00a0\n      // 1. Sum amounts of all orders and show a message in process view\n      JSONArray orders = params.getJSONArray(\"orders\");\n      BigDecimal totalAmnt = BigDecimal.ZERO;\n      for (int i = 0; i &lt; orders.length(); i++) {\n        String orderId = orders.getString(i);\n        Order order = OBDal.getInstance().get(Order.class, orderId);\n        totalAmnt = totalAmnt.add(order.getGrandTotalAmount());\n      }\n      JSONObject msgTotal = new JSONObject();\n      msgTotal.put(\"msgType\", \"info\");\n      // XXX: these two messages should be translatable, like OBEXAPP_MinGtMax above\n      msgTotal.put(\"msgTitle\", \"Selected Orders\");\n      msgTotal.put(\"msgText\", \"Total amount: \" + totalAmnt.toString());\n\u00a0\n      JSONObject msgTotalAction = new JSONObject();\n      msgTotalAction.put(\"showMsgInProcessView\", msgTotal);\n\u00a0\n      actions.put(msgTotalAction);\n\u00a0\n      // 2. If business partner is not null, open it in BP window and show a message in new tab\n      if (!params.isNull(\"bp\")) {\n        String bpId = params.getString(\"bp\");\n        JSONObject recordInfo = new JSONObject();\n        recordInfo.put(\"tabId\", \"220\");\n        recordInfo.put(\"recordId\", bpId);\n        recordInfo.put(\"wait\", true);\n\u00a0\n        JSONObject openTabAction = new JSONObject();\n        openTabAction.put(\"openDirectTab\", recordInfo);\n\u00a0\n        actions.put(openTabAction);\n\u00a0\n        JSONObject msgInBPTab = new JSONObject();\n        msgInBPTab.put(\"msgType\", \"success\");\n        msgInBPTab.put(\"msgTitle\", \"Process execution\");\n        msgInBPTab.put(\"msgText\", \"This record was opened from process execution\");\n\u00a0\n        JSONObject msgInBPTabAction = new JSONObject();\n        msgInBPTabAction.put(\"showMsgInView\", msgInBPTab);\n\u00a0\n        actions.put(msgInBPTabAction);\n      }\n\u00a0\n      result.put(\"responseActions\", actions);\n\u00a0\n      return result;\n    } catch (JSONException e) {\n      log.error(\"Error in process\", e);\n      return new JSONObject();\n    }\n  }\n}\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#response","title":"Response","text":"<p><code>ActionHandler</code> return a <code>JSONObject</code> with the actions to be performed after execution.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#validations","title":"Validations","text":"<p>It is possible to do validations in the backend before executing the actual process, when these validations are not satisfied, a message can be shown in the UI to allow the user to fix the problematic values.</p> <p>When validations are not satisfied <code>retryExecution: true</code> property is included in the response. This allows the user to fix data and resubmit again. Additionally, a message can be added to show more information about the issue.</p> <p>The response would look similar to this:</p> <pre><code>{\n  \"retryExecution\": true,\n  \"message\": {\n    \"severity\": \"error\",\n    \"text\": \"Min value (80.0) cannot be greater than Max value (10.0)\"\n  }\n}\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#returning-several-actions","title":"Returning Several Actions","text":"<p>After executing the process, it is possible to perform a series of actions.</p> <p>Info</p> <p>For more information, see Pick &amp; Execute process extension. </p> <p>The response should look like:</p> <pre><code>{\n  \"responseActions\": [{\n    \"showMsgInProcessView\": {\n      \"msgType\": \"info\",\n      \"msgTitle\": \"Selected Orders\",\n      \"msgText\": \"Total amount: 3020482.63\"\n    }\n  }, {\n    \"openDirectTab\": {\n      \"tabId\": \"220\",\n      \"recordId\": \"A6750F0D15334FB890C254369AC750A8\",\n      \"wait\": true\n    }\n  }, {\n    \"showMsgInView\": {\n      \"msgType\": \"success\",\n      \"msgTitle\": \"Process execution\",\n      \"msgText\": \"This record was opened from process execution\"\n    }\n  }, {\n    \"refreshGrid\": {\n    }\n  }, {\n    \"refreshGridParameter\": {\n      \"gridName\": \"gridParameterName\"\n    }\n  }]\n}\n</code></pre> <ul> <li><code>responseActions</code>. It is the name of the <code>JSONArray</code> that indicates a series of actions will be performed after execution. Each of the items in the array is one action, different kinds of actions can be executed. It is also possible to  extend through modules  the possible actions to be performed: </li> <li><code>showMsgInProcessView</code>. Shows a message in the same tab the process was invoked from. In case the process is opened from menu, this message will be seen in the window where the values for the parameters are provided; if the process is invoked from a button in a tab, the message will be shown in that tab. </li> <li><code>openDirectTab</code>. Opens a new tab. <code>tabId</code>, it is possible to indicate the record to open in that tab (<code>recordId</code>). The <code>wait: true</code> property indicates next action will not be started till this one finishes. Optionally, you can also include a criteria object to automatically add a removable filter to the open tab. A criteria is an object which describes a filter in a grid. </li> </ul> <p>Info</p> <p>For more information, visit Smartclient.</p> <ul> <li><code>showMsgInView</code>. Shows a message in the recently opened tab. </li> <li><code>refreshGrid</code>. Refreshes the grid where the process button is defined. Grids are not automatically refreshed after invoking a standard process, only the selected record is refreshed. If the process adds or removes records from that grid, then it must add the <code>refreshGrid</code> to the list of response actions to see the updated data in the grid. </li> <li><code>refreshGridParameter</code>. Refreshes the grid parameter with name <code>gridName</code> present in the standard process parameter window. This kind of response is specially useful for those parameter windows which are not closed after the execution of the action handler (the parameters are visible after the process execution), for example those process definitions which are directly opened from the menu. </li> </ul> <p>The <code>getResponseBuilder()</code> method is available for classes extending <code>BaseProcessActionHandler</code>. This method returns a helper that can be used to build the result of the process with the desired standard response actions in an easy way. For example:</p> <pre><code>@Override\nprotected JSONObject doExecute(Map&lt;String, Object&gt; parameters, String content) {\n  ...\n  ...\n  return getResponseBuilder()\n      .showMsgInProcessView(MessageType.INFO, \"Message Title\", \"This is a sample message\")\n      .openDirectTab(\"220\", false).build();\n}\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#testing-the-process","title":"Testing the Process","text":"<p>Now, it's needed to compile and deploy (because a new java class is added, note this is not needed in case of just editing/adding paramters).</p> <p>After compile and deploy, there will be a new entry in the menu: Example Param Process, this entry opens the parameter window where all defined parameters are shown and a Done button is presented to submit values set for them. When the process is executed:</p> <ul> <li>If <code>Max Qty</code> is greater the <code>Min Qty</code>, a message is shown and the process can be submited again. </li> <li>A message in the parameter window is shown summing the amounts of all selected orders. </li> <li>If a business partner is selected, it is opened in a new tab displaying a message on it. </li> </ul> <p></p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#advanced-topics","title":"Advanced Topics","text":"","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#invoke-the-process-from-a-tab","title":"Invoke the Process from a Tab","text":"<p>Standard Process Definition processes can be opened as a tab from the menu or as a modal popup from a button in a tab. This second option can be achieved by adding an extra column to the table used in the tab. </p> <p>Info</p> <p>More details about this process visit How to create a Pick and Execute Process. </p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#read-only-and-display-logic","title":"Read Only and Display Logic","text":"<p>Parameters in Process Definition support display and read only logic. This allows to show or hide and to make editable or read only parameters based on values entered for other parameters.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#subordinated-combos","title":"Subordinated Combos","text":"<p>The data that can be selected within a combo (selector) can be restricted based on values other parameters take using Validation Rules. Logic of these validations is a HQL that is appended to its datasource. This is written in javascript being posible to use <code>OBBindings</code>, in the same way default value is written.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#parameter-grouping","title":"Parameter Grouping","text":"<p>It is possible to do groups of parameters in the UI, by using the Field Group property when defining the paramter.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#showing-results-in-the-process-window-itself","title":"Showing results in the process window itself","text":"<p>It is possible to show the result of a process directly in the process window itself. This makes sense if the parameter section is small and you want to display directly.</p> <p></p> <p>To accomplish this, the data/json object returned from the server handler should set this parameter <code>showResultsInProcessView</code> to true. It also makes sense to <code>retryExecution</code> parameter to true:</p> <pre><code>{\n  \"retryExecution\": true,\n  \"showResultsInProcessView\": true\n}\n</code></pre> <p>The called <code>javascript</code> method gets an object with a <code>processView</code> property which refers back to the overall process view. From the process view you can get to the resultLayout to show the result. The resultLayout is a <code>SmartclientHLayout</code>.</p> <p>For example, a return action:</p> <pre><code>OB.Utilities.Action.set('openSaikuReport', function(paramObj) {\n  var i, queries = paramObj.queries,\n      processView = paramObj._processView,\n      mainLayout = processView.resultLayout, reportView;\n\u00a0\n  reportView = isc.OBANALY_ShowSaikuReport.create({\n    parameters: paramObj,\n    queries: queries\n  });\n  mainLayout.addMember(reportView);\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#placing-a-parameter-in-a-particular-column","title":"Placing a parameter in a particular column","text":"<p>The Column Number field of the Parameter tab allows specifying the column where the parameter should be placed. Grid parameters use always the four columns of the form, so this field does not apply to them.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#invoking-a-client-side-validation-before-calling-the-action-handler","title":"Invoking a client side validation before calling the action handler","text":"<p>The Client Side Validation field of the Process Definition tab allows defining a function that will be executed before the request to the action handler is done. This function can be used to do client side validations.</p> <p>This function must accept 3 parameters:</p> <ul> <li>the parameter window object. i.e., if you name this parameter view, then the form of the parameter window will be accessible via <code>view.theForm</code>. The value of a particular parameter can be retreived using <code>view.theForm.getItem(parameter_name).getValue()</code></li> <li>a validation success callback. If the current values of the form passes the validation, this callback must be invoked</li> <li>a validation failure callback. If form values do not satisfy the validation, invoke this callback. </li> </ul> <p>For instance:</p> <pre><code>OB.Utilities.TestClientSideValidation = function (view, actionHandlerCall, failureCallback) {\n  var minNumber, maxNumber;\n  minNumber = view.theForm.getItem('min_number').getValue();\n  maxNumber = view.theForm.getItem('max_number').getValue();\n  if (maxNumber &gt;= minNumber) {\n    // only execute the callback if the form values pass the validation\n    actionHandlerCall();\n  } else {\n    failureCallback();\n  }\n</code></pre> <p>In addition, client side validation functions support a fourth parameter that contains additional information, like the pressed button:  </p> <pre><code>OB.Utilities.TestClientSideValidation = function (view, actionHandlerCall, failureCallback, additionalInfo) {\n  if (additionalInfo.buttonValue === 'OK') {\n    // execute validations related to the 'OK' button\n  } else {\n    // do another validations\n  }\n</code></pre> <p>Info</p> <p>To learn how to define new buttons in a standard process definition window, see Adding new buttons.</p> <p>Additional information can be added to the payload the process will receive. For example, this code would add a new parameter named <code>myParam</code>:</p> <pre><code>view.externalParams = { myParam:'value' };\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#invoking-a-function-when-a-non-grid-parameter-is-changed","title":"Invoking a function when a non-grid parameter is changed","text":"<p>The On Change Function field of the Parameter tab allows defining a function that will be executed when a non-grid parameter is updated, after the parameter loses its focus. This function can be used to do validations or to implement client side callouts, among other things.</p> <p>The function must accept four parameters:</p> <ul> <li>item: the item that has been modified </li> <li>view: the parameter window object </li> <li>form: the form that contains the item </li> </ul>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#how-to-set-the-value-of-non-grid-parameters-programmatically","title":"How to set the value of non-grid parameters programmatically","text":"<p>It is possible to execute an On Change Function , besides when the parameter loses its focus, when setting the parameter value programmatically.</p> <p>When setting the value of a parameter from code, it is recommended to use the setValueProgrammatically() function. This way, if the parameter has an OnChange Function, it will be executed after setting the parameter value.</p> <pre><code>var issotrx = form.getItem('issotrx');\n// Set the value for the item\n// If the 'issotrx' parameter has an 'On Change Function' it will be executed also\nissotrx.setValueProgrammatically('Y');\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#invoking-a-function-when-all-the-non-grid-parameters-have-been-initialized","title":"Invoking a function when all the non-grid parameters have been initialized","text":"<p>The On Load Function field of the Process Definition tab allows defining a function that will be executed once the parameters have been initialized.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#invoking-a-function-when-the-process-needs-to-be-refreshed","title":"Invoking a function when the process needs to be refreshed","text":"<p>The On Refresh Function field of the Process Definition tab allows defining a function that will be executed when the parameter window refresh action be invoked.</p> <p>For example, if the process has a child-process, once the child-process finishes, it will invoke a refresh of the parent process.</p> <p>Note</p> <p>Since each process has its particularities, a custom refresh function should be defined in case the process is susceptible of being refreshed/reloaded.</p> <p>The function must accept, at least, one parameter:</p> <ul> <li>view: the parameter window object </li> </ul>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#invoking-when-a-grid-parameter-is-loaded-for-the-first-time","title":"Invoking when a grid parameter is loaded for the first time","text":"<p>The initialization of the grid parameters is done asynchronously, so when the general onLoadFunction is invoked, it is not certain whether all the grid parameters have been loaded with their initial data. If you need to execute some code right after a grid is loaded for the first time, use the On Grid Load Function field. The function used here must accept one parameter, the grid itself.</p> <p>For example:</p> <pre><code>OB.Utilities.TestOnGridLoad = function (grid) {\n  var nRecordsReceived = grid.getData().getLength(),\n      messageBar = grid.view.messageBar;\n  messageBar.setMessage('info', 'The grid has been loaded with ' + nRecordsReceived + ' records');\n    }\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#specifying-the-number-of-rows-displayed-in-a-grid-parameter","title":"Specifying the number of rows displayed in a grid parameter","text":"<p>You can set the number of rows that should be shown at the first time in a grid parameter using the Number of Displayed Rows field. This field is used just for setting the height of the grid, if the grid has actually more rows than the Number of Displayed Rows, a scrollbar will be shown. The default value for this field is 5.</p> <p>Note</p> <p>It is not possible to define the colspan of the grid parameters, because they always use the four available columns of the form.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#defining-a-display-logic-for-the-fields-of-a-grid-parameter","title":"Defining a display logic for the fields of a grid parameter","text":"<p>The Display Logic for Grid Column field in the Field tab allows to define a display logic for the fields of grid parameters.</p> <p>For instance, suppose that you have defined a parameter window with two parameters:</p> <ul> <li>a boolean called Show Advanced Columns, column name <code>showAdvancedColumns</code> </li> <li>a grid. </li> </ul> <p>Let's suppose the grid has some fields that should be displayed only if the Show Advanced Column flag is checked. The Display Logic for Grid Column field of these fields should be set to:</p> <pre><code>@showAdvancedColumns@='Y'\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#specifying-a-default-value-for-the-filter-of-a-parameter-grid-field","title":"Specifying a default value for the filter of a parameter grid field","text":"<p>The Default Filter Expression field of the Field tab allows to define a default value for the filter of a field. This default value can be a constant, dependent from another parameter or use <code>OBBindings</code>.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#hiding-the-parameter-name-of-a-grid-parameter","title":"Hiding the parameter name of a grid parameter","text":"<p>Although it is possible to define several grid parameters in a parameter window, it is likely that most of the times there will be at most one (for instance in pick and execute windows). In those cases, consider not showing the name of the grid parameter. Do this by unckecking the flag Show Title in the Parameter tab.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#adding-new-buttons","title":"Adding new buttons","text":"<p>By default, process definitions have a single Done button (and a Cancel one in case they are shown in a popup from a standard window). It is possible to change that button or to add new ones.</p> <p>To do it:</p> <ol> <li>Create a new Reference with Button List as Parent Reference. In the List Reference add as many records as buttons to be displayed in the process. The name of these elements will be seen in the button's label whereas the Search Key is the value that will be sent to the Handler in the backend within the <code>buttonValue</code> field. </li> <li>Add a new parameter to the process with Button List as reference and the new reference just created as Reference Search Key. </li> </ol> <p>Note</p> <p>There should be, at most, only one parameter of Button List type. </p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#multi-record-process","title":"Multi Record Process","text":"<p>A standard process can be defined as multi record process to be able to execute it for more than one record.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#uploading-files","title":"Uploading files","text":"<p> Javapackage: <code>com.etendoerp.upload.file</code></p> <p>This section describes the Etendo Upload File module included in the Platform Extensions bundle.</p> <p>Info</p> <p>To be able to include this functionality, the Platform Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Platform Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Platform Extensions - Release notes.</p> <p>The File reference enhances the Etendo Classic capabilities by enabling file uploads directly within process definitions. </p> <p>This functionality, which can be used in processes as well as in windows, introduces an intuitive file upload element in the process form. Users can upload a single file for processing which is then used by the system as specified in the process definition.</p> <p>Info</p> <p>The maximum file size users are allowed to upload are limited by default to 10MB. This is set in the preference <code>Maximum file upload size (MB)</code>. This file size check is performed both on the client's and on the server's side.  For more information about preferences visit the Preference section in the User Guide.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#example-in-process-definition","title":"Example in Process Definition","text":"<p>The proposed solution involves incorporating a File Upload Reference as a process parameter in process definitions.</p> <p>This reference has a User Interface Definition which calls the process, this can be seen in the Process Definition tab:</p> <p><code>com.etendoerp.upload.file.definition.ProcessFileUploadUIDefinition</code></p> <p></p> <p>This definition calls a process <code>OBProcessFileUpload</code> that executes a JavaScript that has all the definitions, rules and configurations to make the reference work, and allows to select a file for later upload.</p> <p>Info</p> <p>Any file can be selected since this module was thought as a base so that programmers can use it for their needs. </p> <p>This is an example of a <code>Process Definition</code> created, it is defined as follows:</p> <p></p> <p>After creating the <code>Process Definition</code>, a Menu is created to visualize the process which, in its corresponding window, allows choosing a file to upload. </p> <p></p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#downloading-files","title":"Downloading files","text":"<p>Process definition has the ability to generate and download a file.</p> <p>In this case of Process Definition, extend from <code>FileExportActionHandler</code> and implement the generateFileToDownload and getDownloadFileName methods.</p> <pre><code>/**\n * Action handler example to export a file from a process definition\n */\npublic class ExportFileExample extends FileExportActionHandler {\n  private static final String FILE_PREFIX = \"Test\";\n  private static final String FILE_EXTENSION = \".txt\";\n\u00a0\n  @Override\n  protected Path generateFileToDownload(Map&lt;String, Object&gt; parameters, JSONObject data)\n      throws IOException, JSONException {\n    String tmpFileName = UUID.randomUUID().toString() + FILE_EXTENSION;\n    File file = new File(ReportingUtils.getTempFolder(), tmpFileName);\n    try (FileWriter outputfile = new FileWriter(file)) {\n      outputfile.write(\"Hello World!\");\n    }\n    return file.toPath();\n  }\n\u00a0\n  @Override\n  protected String getDownloadFileName(Map&lt;String, Object&gt; parameters, JSONObject data) {\n    return FILE_PREFIX + FILE_EXTENSION;\n  }\n}\n</code></pre> <p>Info</p> <p>If the process definition is launched from a button in a standard window with a header and lines and it is not configured as multi-record, the generated file will be attached to the header by default.</p> <p>This behavior can be modified overriding the method uploadAttachment.</p> <pre><code>@Override\nprotected void uploadAttachment(Path originalFile, Map&lt;String, Object&gt; parameters,\n    JSONObject data) throws IOException, JSONException {\n}\n</code></pre> <p>Info</p> <p>As an example:</p> <pre><code>protected Path generateFileToDownload(Map&lt;String, Object&gt; parameters, JSONObject data)\n    throws IOException, JSONException {\n  String tmpFileName = UUID.randomUUID().toString() + \".txt\";\n  File file = new File(ReportingUtils.getTempFolder(), tmpFileName);\n  try (FileWriter outputfile = new FileWriter(file)) {\n    outputfile.write(\"Hello World!\");\n  }\n  return file.toPath();\n}\n</code></pre>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#limitations","title":"Limitations","text":"","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#references","title":"References","text":"<p>Currently, not all references available in Standard windows are available in Process Definition. The following ones cannot be used as parameters:</p> <ul> <li>Button: the mechanism to add new buttons is described in Adding new buttons. </li> <li>Image </li> <li>Masked String </li> <li>Table </li> <li>TableDir </li> <li>Tree</li> <li>PAttribute</li> </ul>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#ui-logic","title":"UI Logic","text":"<p>Callouts are not implemented for parameters.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-standard-process-definition/#migrating-old-processes","title":"Migrating old Processes","text":"<p>Process Definitions support several parameters. In order to implement this support, the way grid parameter value is sent to backend was changed and a new Compatibility with Legacy Grids flag was added.  </p> <p>To migrate grid legacy compatible processes to new format, set Compatibility with Legacy Grids to false and depending on the case:</p> <ul> <li>If the process UI Pattern is Manual , no other change is needed. </li> <li>If the process has no parameter, no other change is needed. </li> <li>If the process has a (grid) parameter, the <code>JSON</code> that <code>doExecute</code> method receives changes these are the required modifications: </li> </ul> Old Code<pre><code>JSONObject gridInfo = new JSONObject(content);\nJSONArray gridSelection = gridInfo.getJSONArray(\"_selection\");\nJSONArray gridAllRows = gridInfo.getJSONArray(\"_allRows\");\n</code></pre> New code<pre><code>JSONObject params = new JSONObject(content).getJSONObject(\"_params\");\n// Replace here gridColumnName with the actual DB Column Name for your grid parameter\nJSONObject gridInfo = params.getJSONObject(\"gridColumnName\");\nJSONArray gridSelection = gridInfo.getJSONArray(\"_selection\");\nJSONArray gridAllRows = gridInfo.getJSONArray(\"_allRows\");  \n</code></pre> <p>This work is a derivative of How to Create a Standard Process Definition by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Java Implementation","Validation","Backend","Client-Side Validation","Migration","JSON"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/","title":"How to create a Stored Procedure","text":"","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/#how-to-create-a-stored-procedure_1","title":"How to create a Stored Procedure","text":"<p>Stored procedures are one of the mechanisms Openbravo ERP provides in order to implement business logic. Stored procedures are executed by the database engine and are implemented in the standard PL/pgSQL (for PostgreSQL) or PL/SQL (for Oracle) language. One must understand the particularities about how these PL/SQL procedures are integrated with the rest of the application. It is also necessary to follow some coding rules in order to make it possible to export/import to XML files using DBSourceManager.</p> <p>This document discusses the Openbravo infrastructure for stored PL/SQL procedures. These act as Processes in the Application Dictionary.</p>","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/#ad_pinstance-and-ad_pinstance_para-tables","title":"AD_PInstance and AD_PInstance_Para tables","text":"<p>Before implementing a PL/SQL procedure it is important to understand how it will be called from the application.</p> <p>When a PL/SQL procedure is called a new record is created inside the AD_PInstance table. This record contains the information about the ID of the record that the PL/SQL procedure was called from (in case the process is invoked from a button inside a window/tab). This record in the AD_PInstance table is also used by the user interface to retrieve and display the resulting message the procedure generates when it completes (error or success).</p> <p>In case the process has additional parameters entered by the user a new record is created for each of them inside the AD_PInstance_Para table. Each record contains the information related to one of the parameters such as its name (DB Column name) and the value the user assigned to it.</p> <p>Finally, note that the ID of the newly created record in AD_PInstance table is the ONLY parameter passed to the PL/SQL procedure. It is the stored procedure's responsibility to read the AD_PInstance and AD_PInstance_Para record(s) to obtain any parameters it requires and writes the resulting message back into the AD_PInstance table.</p>","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/#procedure-definition","title":"Procedure definition","text":"<p>The header for a PL/SQL procedure implementing a process looks like:</p> <p>PostgreSQL</p> <pre><code>CREATE OR REPLACE FUNCTION HR_TEST(p_PInstance_ID character varying) RETURNS void\n</code></pre> <p>Oracle</p> <pre><code>CREATE OR REPLACE PROCEDURE HR_TEST(p_PInstance_ID IN VARCHAR2)\n</code></pre> <p>First of all take a look to the PL/SQL procedure name, it follows the modularity naming rules, this is, it starts with the module's DBPrefix.</p> <p>Note that the only parameter the PL/SQL procedure receives is a string one, it will contain the UUID for the key of the AD_PInstance record generated for its invocation.</p>","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/#retrieving-parameters","title":"Retrieving parameters","text":"<p>PostgreSQL and Oracle</p> <pre><code>SELECT \n  Record_ID, \n  CreatedBy\nINTO \n  v_Record_ID, \n  v_User_ID\nFROM \n  AD_PInstance\nWHERE \n  AD_PInstance_ID = p_PInstance_ID;\n\nFOR Cur_Parameter IN \n(\n  SELECT \n    p.ParameterName,\n    p.P_String,\n    p.P_Number,\n    p.P_Date\n  FROM \n    AD_PInstance_Para p\n  WHERE \n    AD_PInstance_ID=p_PInstance_ID\n  ORDER BY \n    p.SeqNo\n)\nLOOP\n  IF(Cur_Parameter.ParameterName='DateFrom') THEN\n    v_DateFrom:=Cur_Parameter.P_Date;\n  ELSIF(Cur_Parameter.ParameterName='Activate') THEN\n    v_Activate:=Cur_Parameter.P_String;\n  END IF;\nEND LOOP; -- Get Parameter\n</code></pre> <p>The snippet of code above is an example of how the parameters can be retrieved.</p> <p>The first select obtains from AD_PInstance the IDs (UUIDs) for the user that invoked the process and the record ID it was called from. The record ID only makes sense in case the process is called using a button in a tab. In this case this ID identifies the record in the table that the tab with the button is based on. This is used for processes that affect the current record.</p> <p>Afterwards, a loop obtains all the parameters and iterates only in case the process has parameters defined. Notice that the parameter is identified by ParameterName which matches DB Column name defined in the parameter. Depending on its type the actual value is stored in one of the following columns: <code>P_String</code> , <code>P_Number</code> or <code>P_Date</code> . The stored procedure needs to know what to expect and retrieve it accordingly.</p>","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/#updating-ad_pinstance","title":"Updating AD_PInstance","text":"<p>AD_PInstance table has a <code>IsProcessing</code> column, which indicates whether an instance is currently being processed or not. At the beginning of the process the instance should be set as processing with:</p> <pre><code>AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL);\n</code></pre> <p>Once the process is finished, the instance should be set again to not processing. Not only that, this instance will be used to display the result of the process which will be shown in the user interface. This is done with:</p> <pre><code>AD_UPDATE_PINSTANCE(p_PInstance_ID, v_User_ID, 'N', v_Result, v_Message);\n</code></pre> <p>Here the <code>v_Result</code> parameter is a numeric value, it can be 0 for error or 1 for success. The <code>v_Message</code> is the message that will be shown, for further information about how to manage messages read the section below.</p>","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/#managing-exceptions","title":"Managing exceptions","text":"<p>The exceptions in a PL/SQL procedure should be captured in order to insert the proper message in the PInstance table to be correctly displayed to the user. Thus is a good practice to have an EXCEPTION section to catch all the exceptions in the body of the procedure.</p> <p>This would be a complete procedure with the EXCEPTION section.</p> <p>PostgreSQL</p> <pre><code>CREATE OR REPLACE FUNCTION HR_TEST(p_PInstance_ID character varying)\nRETURNS void\n$BODY$\n  BEGIN\n  -- Your code here\n\n  EXCEPTION\n  WHEN OTHERS THEN\n    v_ResultStr:= '@ERROR=' || SQLERRM;\n  RAISE NOTICE '%',v_ResultStr;\n  IF(p_PInstance_ID IS NOT NULL) THEN\n    PERFORM AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);\n  END IF;\n  RETURN;\n  END; \n$BODY$\nLANGUAGE 'plpgsql' VOLATILE\n</code></pre> <p>Oracle</p> <pre><code>CREATE OR REPLACE PROCEDURE HR_TEST(p_PInstance_ID IN VARCHAR2)\n\nBEGIN\n\n  -- Your code here\n\n  EXCEPTION\n  WHEN OTHERS THEN\n    v_ResultStr:= '@ERROR=' || SQLERRM;\n  DBMS_OUTPUT.PUT_LINE(v_ResultStr);\n  IF(p_PInstance_ID IS NOT NULL) THEN\n    ROLLBACK;\n    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);\n  ELSE\n    RAISE;\n  END IF;\nEND HR_TEST;\n</code></pre> <p>As all exceptions in the body are caught to correctly take the message from it and add it to the PInstance setting it to result 0 (error), it is possible to raise custom exceptions when some logical error happens during the execution, because they will also be caught. For example the following piece of code does some checks and in case they fail an exception is thrown.</p> <p>PostgreSQL</p> <pre><code>IF checkFails THEN\n  RAISE EXCEPTION '%', '@HR_SomeNiceMessage@';\nEND IF;\n</code></pre> <p>Oracle</p> <pre><code>IF checkFails THEN\n  RAISE_APPLICATION_ERROR(-20000, '@HR_SomeNiceMessage@');\nEND IF;\n</code></pre> <p>For further explanations on messages read the Messages documentation.</p>","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/#functions","title":"Functions","text":"<p>Database functions are also supported.</p>","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-stored-procedure/#volatility","title":"Volatility","text":"<p>Functions can define different volatility levels. Note Oracle does not implement any equivalent for stable functions, in case a function is marked in PostgreSQL as stable, it will be implemented as a standard function in Oracle adding a comment so that the exported xml keeps this information.</p> <p>PostgreSQL - Oracle equivalences:</p> PostgreSQL Oracle Volatile (default) Default Stable N/A Immutable Deterministic <p>This work is a derivative of How to Create a Stored Procedure by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo classic","Create a stored procedure"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-table/","title":"How to Create a Table","text":"","tags":["How to","Etendo classic","create a table","table","application dictionary","rebuilding the system"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-table/#how-to-create-a-new-table","title":"How to create a new table","text":"<p>More generic documentation about tables and their characteristics in Etendo can be found in the Tables page. That page explains common columns needed for all tables in Etendo, naming rules and more important info.</p> <p>First of all, the underlying database structures that will hold the data need to be created. In other words, using a database administration tool (e.g., pgAdmin 4 or phpPgAdmin for PostgreSQL and Oracle SQL Developer) one needs to first <code>CREATE TABLE</code> that will be used to hold data of the new window/tabs.</p>","tags":["How to","Etendo classic","create a table","table","application dictionary","rebuilding the system"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-table/#objective","title":"Objective","text":"<p>Imagine we are developing an HR module and we need a window that will enable the user to input salaries of employees. We also need to track the employee's salary so history records need to be preserved. Each salary record needs to have a Valid From Date field that indicates when a particular salary came into being. The record belonging to a particular employee with the latest Valid From Date is the salary that is valid today. Note that employees are already inside the system contained in the <code>C_BPARTNER</code> database table and indicated by the <code>C_BPARTNER ISEMPLOYEE</code> column. Therefore, we only need to create a database table that will hold the actual salaries.</p>","tags":["How to","Etendo classic","create a table","table","application dictionary","rebuilding the system"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-table/#modularity","title":"Modularity","text":"<p>All new developments must belong to a module that is not the core module. Please follow the How to create a module section of the Modularity Developer's Manual to create a new module.</p> <p>Once you have registered the module, you need to decide on the database prefix that will indicate DB items that belong to this module. This is done by adding DB prefix(es) to the module That way, any database artefact(table, trigger, stored procedure) that belongs to that module will need to have the name prefixed with it. In our case, add the <code>HT</code> DB prefix.</p> <p>Finally, the data package needs to be entered in the Data Package tab of the Module window. Enter a new record there with HR Data as the Name and {modulePackage}.data (note that this package must be a subpackage of the one you entered on the level of module), for example com.etendoerp.howtos.data in case com.etendoerp.howtos is the package of the module.</p>","tags":["How to","Etendo classic","create a table","table","application dictionary","rebuilding the system"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-table/#create-new-tables-in-the-database","title":"Create new tables in the database","text":"<p>Let's introduce a new database table called <code>ht_salary</code> that will hold the required data. Notice the <code>HT</code> prefix of the table name indicating the module this table belongs to.</p> <p>The new <code>ht_salary</code> table must include the <code>AD_Client_ID</code>, <code>AD_Org_ID</code>, <code>IsActive</code>, <code>Created</code>, <code>CreatedBy</code>, <code>Updated</code> and <code>UpdatedBy</code> fields that are <code>mandatory</code> and required for security and auditory purposes of the application.</p> Column name Type Length Note <code>HT_SALARY_ID</code> CHAR 32 The primary key of the table that must follow the table name followed by the _ID. <code>AD_CLIENT_ID</code> CHAR 32 Indicates which client (company) the record belongs to (multitenancy). <code>AD_ORG_ID</code> CHAR 32 Indicates which organization (city/department/location) within a client a record belongs to. <code>ISACTIVE</code> CHAR 1 This is intended for deactivating records that are not valid anymore but are referenced within the system and hence cannot be deleted. <code>CREATED</code> DATE Date/time of creation of a record. <code>CREATEDBY</code> CHAR 32 Foreign key to <code>AD_USER</code> indicating the user that created this record. <code>UPDATED</code> DATE Date/time of last update of a record. <code>UPDATEDBY</code> CHAR 32 Foreign key to <code>AD_USER</code> indicating the user that last updated this record. <code>C_BPARTNER_ID</code> CHAR 32 Employee this salary belongs to. <code>AMOUNT</code> NUMBER 10 The actual amount of the salary. <code>C_CURRENCY_ID</code> CHAR 32 Foreign key to <code>C_CURRENCY</code> indicating the currency the amount is in. <code>VALIDFROM</code> DATE Date that this salary is valid from. <p>To create the above table within the database, use one of the following <code>CREATE TABLE</code> statements depending on the DB you are using:</p> <p>Note</p> <p>All identifiers in the SQL must be written in lowercase. So they can be used later without quoting them.</p> SQL table creation script<pre><code>CREATE TABLE ht_salary\n(\n  ht_salary_id  CHARACTER VARYING(32)       NOT NULL,\n  ad_client_id  CHARACTER VARYING(32)       NOT NULL,\n  ad_org_id     CHARACTER VARYING(32)       NOT NULL,\n  isactive      CHARACTER(1)                   NOT NULL        DEFAULT 'Y',\n  created       TIMESTAMP WITHOUT TIME ZONE     NOT NULL    DEFAULT now(),\n  createdby     CHARACTER VARYING(32)       NOT NULL,\n  updated       TIMESTAMP WITHOUT TIME ZONE     NOT NULL    DEFAULT now(),\n  updatedby     CHARACTER VARYING(32)           NOT NULL,\n  c_bpartner_id CHARACTER VARYING(32)           NOT NULL,\n  amount     NUMERIC                    NOT NULL,\n  c_currency_id VARCHAR(32)                     NOT NULL,\n  validfrom     TIMESTAMP WITHOUT TIME ZONE    NOT NULL,\n    CONSTRAINT ht_salary_isactive_check CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),\n    CONSTRAINT ht_salary_key PRIMARY KEY (ht_salary_id),\n    CONSTRAINT ht_salary_ad_org FOREIGN KEY (AD_ORG_ID) REFERENCES AD_ORG (ad_org_id),\n    CONSTRAINT ht_salary_ad_client FOREIGN KEY (AD_CLIENT_ID) REFERENCES AD_CLIENT (ad_client_id),\n    CONSTRAINT ht_salary_c_bpartner FOREIGN KEY (C_BPARTNER_ID) REFERENCES C_BPARTNER (c_bpartner_id),\n    CONSTRAINT ht_salary_c_currency FOREIGN KEY (C_CURRENCY_ID) REFERENCES C_CURRENCY (c_currency_id)\n);\n</code></pre>","tags":["How to","Etendo classic","create a table","table","application dictionary","rebuilding the system"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-table/#registering-the-table-within-the-application-dictionary","title":"Registering the table within the Application Dictionary","text":"<p>The following steps register the newly created table within the Etendo Classic Application Dictionary.</p> <p>For this purpose, first log into Etendo Classic using a username with access to <code>System Administrator</code> &gt; <code>Role</code>. Navigate to <code>Application Dictionary</code>&gt; <code>Tables and Columns</code> and create a new record as shown in the screenshot below:</p> <p></p> <p>Main fields of this window are (for more information, see the <code>AD_Table</code> table description):</p> <ul> <li>Data Package specifies to which java data package within the module the table will belong when used within DAL (Data Access Layer).</li> <li>Name Defines the name that Etendo Classic uses to recognize the defined database table. This name is used in REST webservices and in the Data Access Layer.</li> <li>Description Gives a small description of the table.</li> <li>Help/Comments Defines the text that is displayed in Help window.</li> <li>DB Table name Defines database table name as it was defined by the <code>CREATE TABLE</code> during its creation.</li> <li>Java Class Name This will be the actual Java class within the Data Package of the module through which you will be able to access this table when using DAL.</li> <li>Data Access Level determines what kind of data will the table contain due to the multitenancy functionality</li> <li>System only: Only system records can be inserted into this table (<code>AD_CLIENT_ID=0</code>, <code>AD_ORG_ID=0</code>), for example <code>AD_TABLE</code>.</li> <li>System/Client: System or client specific records can be inserted here (<code>AD_CLIENT_ID=anything</code>, <code>AD_ORG_ID=0</code>), for example <code>AD_ROLE</code></li> <li>Organization: Only client and organization specific data can be inserted into this table (<code>AD_CLIENT_ID&lt;&gt;0</code>, <code>AD_ORG_ID&lt;&gt;0</code>), for example <code>C_INVOICE</code></li> <li>Client/Organization: Only client specific data can be inserted here, however, it can belong to a specific organizations within that client or be shared among all (<code>AD_CLIENT_ID&lt;&gt;0</code>,<code>AD_ORG_ID=anything</code>), for example <code>C_BPARTNER</code></li> <li>All: Any combination of <code>AD_CLIENT_ID</code> and <code>AD_ORG_ID</code> can be inserted into this table.</li> </ul> <p>Save this record then press the Create columns from DB button to create columns within the Column tab automatically.</p> <p></p> <p>Once the creation process has finished, you will be informed of the number of columns that have been added to this table.</p> <p></p> <p>Switch to Column tab to see all the columns (for more information, see the ADColumn table description) that were created according to their definition within the database. You can now additionally alter the properties of each column. Each column is assigned a reference (which defines the data type) depending on its name and its data type. Run _Synchronize Terminology process (<code>Application Dictionary</code> &gt; <code>Synchronize Terminology</code>). Two tricky details before you run it:</p> <ul> <li>Check you have defined dependencies from your module to core and any other needed module. Synchronize Terminology will link your columns to Elements in your module or in modules it depends on. If you don't declare the dependency to core, the system will create new elements for standard columns like IsActive, CreatedBy, etc.</li> <li>Do not set the Elements linked to your columns, let the Synchronize terminology to do the job. This way, the process will find the appropiate elements and will set the proper column names for the standard columns (IsActive, CreatedBy, etc.).</li> </ul> <p></p> <p>This process tries to find an existing application element (within the currently developed module) and thus its label, help and description and if one is not found, a new one is created. This enables a centralized translation of the application/module.</p> <p></p> <p>Each table must have at least one column marked as an identifier. The actual values of identifier columns later get concatenated to be shown to the user as a representation of a particular record (see the link to the Sales Order within the Sales Invoice window). These identifiers will also be used to construct dropdown lists of records of that particular table. By default all columns with column name Name are set as an identifier. In case there is no column with this Name , no identifier is set and needs to be done so manually or compilation will fail.</p> <p>The name is used by the Data Access Layer and in REST webservices. For specific columns (audit info, client/organization, active) it is important to be precise in the naming.</p> <p>Note</p> <p>The columns that are named <code>line</code> or <code>seqNo</code> are used to contain the sequence number of a record (i.e. the number of a line in an invoice They take a default value like:</p> <pre><code>@SQL=SELECT COALESCE(MAX(ColumnName),0)+10 AS DefaultValue FROM TableName\nWHERE xxParentColumn=@xxParentColumn@\n</code></pre> <p>The <code>WHERE</code> part of this clause needs to be replaced with the required values. The code that should appear here is the name of the column which links with the id of the parent one For example, each record of the <code>C_InvoiceLine</code> belongs to a particular <code>C_Invoice</code> record and they are all sequenced. <code>C_Invoice</code> is the parent table for the lines saved in <code>C_InvoiceLine</code> . This table has a column named line and the default value that it takes is:</p> <pre><code>@SQL=SELECT COALESCE(MAX(LINE),0)+10 AS DefaultValue FROM C_INVOICELINE\nWHERE C_INVOICE_ID=@C_INVOICE_ID@\n</code></pre> <p>Most of the columns in our specific <code>HT_SALARY</code> case will be automatically detected correctly, however, some need revising:</p> <ul> <li>Amount : Reference = Amount , Length = 10</li> <li>C_BPartner_ID : Reference = Search , Reference Search Key = Business Partner , Length = 32 , Link To Parent Column = Y</li> <li>Valid From : Identifier = Y</li> <li>Amount : Identifier = Y</li> </ul> <p>Etendo Classic now knows about the new HT_SALARY database table and how to treat it in terms of its definition and the representation to the user.</p>","tags":["How to","Etendo classic","create a table","table","application dictionary","rebuilding the system"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-table/#rebuilding-the-system","title":"Rebuilding the system","text":"<p>Finally to make the newly added table available at runtime <code>./gradlew generate.entities</code> needs to called and the changes deployed to Tomcat. Those two steps can be done together by calling <code>./gradlew smartbuild</code> . After that, Tomcat must be restarted to refresh the DAL In-Memory Model, so it knows about the newly added columns.</p> <p>This work is a derivative of How to Create a Table by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo classic","create a table","table","application dictionary","rebuilding the system"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-window/","title":"How to Create a Window","text":"","tags":["How to","Window Creation","Development","Database Table Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-window/#overview","title":"Overview","text":"<p>The objective of this section is to show how you can create a new window from scratch. </p> <p>Info</p> <p>This section builds on top of two previous sections which explain How to Create a Module  and How to Create a Table.</p>","tags":["How to","Window Creation","Development","Database Table Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-window/#module-table","title":"Module &amp; Table","text":"<p>As mentioned above, this tutorial is based on two previous tutorials and assumes that the following objectives have been already completed:</p> <ul> <li>Creation of a new module</li> <li>Creation + Registration in the AD of a new table</li> </ul>","tags":["How to","Window Creation","Development","Database Table Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-window/#creating-the-new-window","title":"Creating the New Window","text":"<p>Using the System Administrator role navigate to <code>Application Dictionary</code> &gt; <code>Windows, Tabs and Fields</code>.  Create a new record as indicated by the screenshot below:</p> <p> </p> <p>The main fields of this window are:</p> <ul> <li>Module: defines the module for which this element will belong to.</li> <li>Name: defines the name that Etendo uses to recognize this window. </li> <li>Description: gives a small description of the table. </li> <li>Help/Comments: defines the text that is displayed in Help window. </li> <li>Window Type: defines some user interface specifics for a window: <ul> <li>Maintain : is used for windows with few entries. </li> <li>Transaction : for transactional windows. It's the type of window that's used for showing the information of tables with a large volume of data. By default this window filters out old (n days \u2013 <code>General Setup</code> &gt; <code>Application</code> &gt;<code>Session Preferences</code> window setting) and processed documents. The header tab's underlying table must contain the PROCESSED and UPDATED columns (for the data filters to work).</li> <li>Query Only : for read-only windows that only enable viewing of data. </li> </ul> </li> </ul> <p>Save this record and move to Tab tab. Create a new record as shown below, creating the first tab:</p> <p> </p> <p>Main fields of this window are:</p> <ul> <li>Module: defines the module for which this element will belong to.</li> <li>Name: defines the name that Etendo uses to recognize this tab. </li> <li>Description: gives a small description of the table. </li> <li>Help/Comments: defines the text that is displayed in Help window. </li> <li>Table: specifies the table that the tab will show the data from. </li> <li>Table Level: defines the hierarchy of tabs, 0 being the highest level. </li> <li>UI Pattern This dropdown offers the following options: <ul> <li>Standard - standard interface where multiple records can be added, viewed and edited </li> <li>Read Only - this option disables any editing/creating capabilities for any user within this tab </li> <li>Single Record - this option enforces a one-to-one relationship between a parent and a child tab, allowing the user to enter maximum one record in the tab </li> </ul> </li> <li>HQL Where Clause: by using this HQL filter, the user will never be able to see data that does not fit the criteria. When referring to properties of the entity shown in the tab then use the prefix e . In our case, we use this field to display only business partners that are our employees (using the employee property). </li> <li>SQL Where Clause Same like HQL Where Clause but using SQL syntax and used for filtering in classic windows . </li> </ul> <p>The Copy Tab Fields button can be used to copy fields from an existing tab into our new one.</p> <p> </p> <p>The Create Fields button can be used to create fields for the new tab based on its associated table</p> <p>Move to Field tab to see the created fields.</p> <p> </p> <p>If required, changes to these fields could be made or new ones could be added manually. </p> <p>Note</p> <p>For not header tabs, it is very important to not remove the field that points to the ID field of its parent tab, as it would made not possible to create records in this tab using the grid view. </p> <p>Now, go back to Tab tab and create a new record that will represent the child tab of the Employee tab where salaries will be managed:</p> <p> </p> <p>Most importantly, make sure you select:</p> <ul> <li>Table = <code>HT_Salary</code></li> <li>Tab Level = 1</li> </ul> <p>By clicking and confirming the Create Fields dialog, the application will automatically insert the columns of the selected table into the fields tab of the Salary one.</p> <p>To arrange the columns according to common look and feel of other windows, we now change a view field properties as can be seen in following screenshot.</p> <ul> <li>Hide field c_bpartner_id</li> <li>Reorder fields (using sequence), to have isactive after all other fields </li> <li>Mark amount and isactive as Start in new line</li> </ul> <p> </p> <p>For Etendo, to create links (labels that appear blue) to table elements, the system needs to know which window represents the table where a certain element resides.</p> <p>To indicate that, go to the <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> window, find the corresponding table and set the Window as indicated below:</p> <p></p>","tags":["How to","Window Creation","Development","Database Table Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-window/#creating-the-menu-item","title":"Creating the Menu Item","text":"<p>A menu item is required for the user to be able to call up the new window. Using the System Administrator role navigate to <code>General Setup</code> &gt; <code>Application</code> &gt;<code>Menu</code> and create a new record:</p> <p></p> <p>Main fields of this window are:</p> <ul> <li>Module: defines the module for which this element will belong to.</li> <li>Name: defines the name that Etendo uses to recognize this menu item. </li> <li>Description: gives a small description of the table. </li> <li>Summary level: defines a folder containing menu items (windows, processes, reports and so on). </li> <li>Action: defines the type of menu item. </li> <li>URL If Action is External link or Internal link , defines the URL to be linked. </li> <li>Special Form: If Action is Form , defines the form to be linked. </li> <li>Process: If Action is Process , defines the process to be launched. </li> <li>Report: If Action is Report , defines the report to be linked. </li> <li>Window: If Action is Window , defines the window to be linked. </li> </ul> <p>Save this record then click on Tree icon </p> <p>Here you can drag and drop the new menu item to any of the other menu groups.</p> <p></p>","tags":["How to","Window Creation","Development","Database Table Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-window/#compiling-the-application-with-the-new-window","title":"Compiling the Application with the New Window","text":"<p>Finally, the application needs to be recompiled in order to generate the new window's code and deploy it to Tomcat. </p> <pre><code>./gradlew smartbuild\n</code></pre>","tags":["How to","Window Creation","Development","Database Table Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-a-window/#the-result","title":"The Result","text":"<p>Using the F&amp;B International Group Admin role, select the link to the new window from the menu. </p> <p></p> <p>Success</p> <p>You have now successfully created your own new window and seen how it came to life within Etendo. </p> <p>This work is a derivative of How to create a window by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Window Creation","Development","Database Table Creation"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-accounts-files/","title":"How to Create Accounts Files","text":"","tags":["How to","Etendo classic","Create Accounts File","Account Tree","Chart of Accounts","CSV"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-accounts-files/#overview","title":"Overview","text":"<p>Etendo supports importing the Chart of Accounts through a CSV (comma-separated values) file with a concrete structure. This CSV file is afterward included into a module that can be distributed and installed from Etendo marketplace.</p> <p>To create the CSV file, it is recommended to use any spreadsheet sofware that supports exporting to CSV, like LibreOffice Calc.</p> <p></p>","tags":["How to","Etendo classic","Create Accounts File","Account Tree","Chart of Accounts","CSV"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-accounts-files/#file-structure","title":"File Structure","text":"<p>The file is a plain text file, with commas (,) as field separator, that defines all the accounts. To ensure that your chart of accounts is imported correctly, the file must be encoded using UTF-8 charset.</p> <p>For creating your own CSV file, you can either download the Spanish Chart of Accounts CSV file and use it as a template to adapt it to your needs, or you can create the entire file from scratch.</p> <p>Each field of the file comprises one line.</p> Field Name Description Mandatory Length and type Search key This is the unique identifier that defines the account. Yes Up to 20 alphanumeric characters Name The name of the account Yes Up to 60 characters Description Brief description for the account No Up to 255 characters Account Type Defines the type of the account. Defines the type of the account. It can contain any text, but only the first character is used. This first character must be one of the following:  <ul><li>A:Asset</li><li>L:Liability</li><li>O:Owner's equity</li><li>E:Expense </li><li>R:Revenue</li><li>M:Memo</li></ul> Yes Any length but only the first character is used. Account Sign Defines the sign of the account in the reports. An account has got two columns: debit and credit. Amounts are added to one of the columns in each entry. At the end of the day, one account will have got two amounts: debit and credit amounts. The sign of the whole account (due to debit and credit movements) can be established following one of the next rules: <ul><li>N: Natural (Sign is always positive) </li><li>D: Debit (Sign is positive if debit amount is higher than credit one; negative in other case)</li><li>C: Credit (Sign is positive if credit amount is higher than debit one; negative in other case)</li><li>E: Empty</li></ul> Yes Any length but only the first character is used. Document Controlled If this is a default account used in the general ledger configuration type \"Yes\". Otherwise, type \"No\". The fields with this field set to Yes are processed during the Initial Client Setup process Yes Must be Yes, No or Empty Account Summary This field is defines the account as a summary account. Yes Must be Yes, No or Empty Default Account See below for details. Yes See below the set of valid values Parent_Value Defines the account's parent account. The parent is ignored during the Initial Client Setup process. No Must be the search key of a valid summary account Element Level Defines the level of the account.  The last level that correspond with Account Summary = N, must be S (Subaccount). Any other level can be added to the existing ones. As they are defined in the dictionary as a reference list, you can edit this list and modify the values shown for this field, setting all the new values you need. The only thing that must be noted is that the lowest level must be 'S' Subaccount, as accounting reports uses this value.Following levels are defined by default in the Etendo Classic:<ul><li>C: Account</li><li>D: Breakdown</li><li>E: Heading</li><li>S: Subaccount</li></ul> No Unlimited but only the first letter is used. Operands If the account is the product of a calculation between other accounts, you can define the operands here. For example, if the value of account A is the result of adding the value of accounts B and C, the value of the operand column in the chart of accounts would be B+C. This feature works only if referred operands are already inserted before, otherwise system can not find them when trying to insert them. No Unlimited Show Value Condition User can, optionally, set here the value for \"Show Value Condition\" field of the Element Value tab. No Positive, Negative, Algebraic (default value if empty cell) Title Node User can, optionally, activate here the flag \"Title Node\" of the element value tab. No Yes, No (default value if empty cell)","tags":["How to","Etendo classic","Create Accounts File","Account Tree","Chart of Accounts","CSV"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-accounts-files/#which-accounts-must-be-defined","title":"Which accounts must be defined?","text":"<p>How you define your accounts file depends primarily on whether there are official rules in your country. For example, in countries like France or Spain there are standard charts of accounts and general accounting reports. In this case you must define a chart of accounts with the structure of the general accounting reports that include all the accounts. Other countries such as the USA have no defined plan, so you must define a general plan that suits your enterprise. The structure of the file must include the Balance Sheet (with Assets, Liabilities and Owner\u2019s Equity) and a Profit and Loss report (with Expenses and Revenues).</p>","tags":["How to","Etendo classic","Create Accounts File","Account Tree","Chart of Accounts","CSV"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-accounts-files/#accounts-hierarchy","title":"Accounts hierarchy","text":"<p>The general accounting report has a hierarchical structure. The Balance Sheet has two sides, following the equation Assets = Liabilities + Owner\u2019s equity. The Asset side of the balance sheet is composed of different types of assets: Current Assets and Long Term Assets, and each one can have different sub-accounts.</p> <p>The levels of this hierarchy can differ from one account tree to another; the only requirement is that the last level, where the accounting is done, must start with the letter S (from Sub-account).</p> <p>The Parent_Value column of the accounts file creates the hierarchical relationship between accounts. This column specifies which account is the parent of the account.</p>","tags":["How to","Etendo classic","Create Accounts File","Account Tree","Chart of Accounts","CSV"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-accounts-files/#default-accounts","title":"Default accounts","text":"<p>Etendo Classic makes most account entries automatically. To enable automatic account entries, it is necessary to define the default accounts. With this information, Etendo Classic builds the accounting entry with the account number defined in the chart of accounts.</p> <p>The mandatory default accounts are defined in the chart of accounts file with a constant that must be written literally in the Default Account column. The following table has an explanation of these accounts.</p> Default Type Description Example of name of the account A_ACCUMDEPRECIATION_ACCT Asset Account used by the amortization process to show the depreciation of an asset Accumulated Depreciation A_DEPRECIATION_ACCT Expense Account used by the amortization process to define the lost of value caused by the depreciation of an asset Depreciation Expense B_ASSET_ACCT Asset The account used for the movements of a bank account Bank Account B_EXPENSE_ACCT Expense Charges made by the bank Bank charge B_INTRANSIT_ACCT Asset Account used for the period between the settlement and the bank statement registration Bank in transit B_REVALUATIONGAIN_ACCT Revenue Account for the revenues due to gain for revaluations of foreign money Bank revaluation gain B_REVALUATIONLOSS_ACCT Expense Account for the expenses due to loss for revaluations of foreign money Bank revaluation loss C_RECEIVABLE_ACCT Asset Account for the payments to be received from an invoice. They are created in the invoice process and canceled when the payment is made or canceled. Accounts receivable C_PREPAYMENT_ACCT Asset The Customer Prepayment account indicates the account to be used for recording prepayments from a customer. Any payment against an order or any payment generating credit is considered as a prepayment. Customer Prepayment CB_ASSET_ACCT Asset Account for the petty cash used by the company Petty Cash CB_CASHTRANSFER_ACCT Asset Account used for the money transferred from or to petty cash Petty Cash In-Transfer CB_DIFFERENCES_ACCT Expense Accounts for differences in petty cash Petty Cash differences CURRENCYBALANCING_ACCT Expense Account used for currency balancing (rounding) Currency balancing DEFAULT_ACCT Expense Account used when there is not a defined account for other default Default account INCOMESUMMARY_ACCT Owner's Equity Account used to calculate the income for the period. Also it is used to show the income in the balance sheet before the closing process Income summary NOTINVOICEDRECEIPTS_ACCT Liability Account used for the receipts that haven't been invoiced yet. It is used only if the company is configured to account shipments Not invoiced receipts P_ASSET_ACCT Asset Account used for fixed assets Product asset P_COGS_ACCT Expense Account for the cost of the good sold. It is used in the shipment of the product Cost of goods sold P_COGS_RETURN_ACCT Expense Account for the cost of the good return. It is used in the shipment of a return of a product Cost of goods returned P_EXPENSE_ACCT Expense Account used for the expenses from purchase invoices Service costs P_INVOICEPRICEVARIANCE_ACCT Expense Invoice price variance Invoice price variance P_REVENUE_ACCT Revenue Account used for the revenues from sale invoices Sales P_REVENUE_RETURN_ACCT Revenue Account used for the returns from sale invoices Returns RETAINEDEARNING_ACCT Owner's Equity Account used for profits and losses of previous periods. It receives the value of income summary if it is defined Retained earnings SUSPENSEBALANCING_ACCT Memo Account used in the accounting process if the accounting entry is not balanced and it is defined to produce an accounting entry Suspense Balancing SUSPENSEERROR_ACCT Memo Account used when the accounting process produces an error and it is defined to produce an accounting entry Suspense Error T_CREDIT_ACCT Asset Tax that is due to the company Tax Receivables T_CREDIT_TRANS_ACCT Asset Transitory Account for the Cash VAT that is not yet paid to the company Tax Transitory Receivables T_DUE_ACCT Liability Tax owed by the company Tax Due T_DUE_TRANS_ACCT Liability Transitory Account for the Cash VAT that is not yet collected by the company Tax Transitory Due V_LIABILITY_ACCT Liability Account for the payments due for an invoice. They are created in the invoice process and cancelled when the payment is made or cancelled Accounts payable V_PREPAYMENT_ACCT Liability The Vendor Prepayment Account indicates the account used to record prepayments from a vendor. Any payment against an order or any payment generating credit is considered as a prepayment. Vendor Prepayment W_DIFFERENCES_ACCT Expense Gains or losses due to differences in the inventory Inventory loss W_INVENTORY_ACCT Asset Account used for recording the value of your inventory Inventory Asset Account WRITEOFF_ACCT Expense Account used for irrecoverable amounts Bad debts","tags":["How to","Etendo classic","Create Accounts File","Account Tree","Chart of Accounts","CSV"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-accounts-files/#exporting-the-chart-of-accounts-to-the-csv-file","title":"Exporting the Chart of Accounts to the CSV file","text":"<p>Once we have entered all the accounts into our spreadsheet, it is time to export it to a CSV file. When exporting, the software will allow you to configure the concrete CSV format to use. It is important to ensure the following values are entered:</p> <ul> <li>Character set: UTF-8</li> <li>Field delimiter: , (comma)</li> <li>Text delimiter: \" (double quote)</li> </ul> <p></p> <p>Note</p> <p>If you afterward want to edit this CSV file in your spreadsheet software, remember to use this configuration when opening it.</p>","tags":["How to","Etendo classic","Create Accounts File","Account Tree","Chart of Accounts","CSV"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-accounts-files/#chart-of-accounts-in-etendo-classic","title":"Chart of accounts in Etendo Classic","text":"<p>After the Initial client setup process, the user can find the corresponding Chart of accounts in the Account Tree window of Etendo Classic.</p> <p></p> <p>This work is a derivative of Creating Account Files by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo classic","Create Accounts File","Account Tree","Chart of Accounts","CSV"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-an-alert/","title":"How to Create an Alert","text":"","tags":["How to","Alert Creation","alert Recipients","System Notification"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-an-alert/#overview","title":"Overview","text":"<p>The objective of this how-to is to illustrate how you can add new  alerts  to Etendo. Alerts are non-intrusive informational messages to individual users or groups (roles) about everything within the system. One can define unlimited number of alerts for various statuses, errors, informative purposes, reminder etc. </p> <p>Some examples are:</p> <ul> <li>Errors in the application dictionary that the System Administrator needs to be alerted about (e.g. a table without a an identifier)\u200f </li> <li>Errors in master data (e.g. a Business partner without an address)\u200f </li> <li>Notifications about critical situations (e.g. overdue payments)\u200f </li> </ul> <p>and many more.</p>","tags":["How to","Alert Creation","alert Recipients","System Notification"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-an-alert/#defining-the-alert","title":"Defining the alert","text":"<p>First of all, the condition under which the alert appears needs to be defined. This is done using a SQL statement that needs to follow certain conventions.</p> <p>To create a new  alert  rule, use the role System Administrator to navigate to <code>General Setup</code> &gt; <code>Application</code> &gt;<code>Alert</code> window. Depending on how you installed Etendo, you might already have some alerts here. If you do, try to find the Customers with exceeded credit one and double click it. If not, create a new record as indicated below:</p> <p></p> <p>where this is the exact code for the SQL field:</p> <pre><code>\u00a0\n SELECT c_bpartner_id AS referencekey_id,\n     ad_column_identifier('C_BPartner', c_bpartner_id, 'en_US') AS record_id,\n     0 AS ad_role_id,\n     NULL AS ad_user_id,\n     ad_column_identifier('C_BPartner', c_bpartner_id, 'en_US') ||' has '||SO_CreditLimit||' as limit and has reached '||SO_CreditUsed AS description,\n     'Y' AS isActive,\n      ad_org_id, \n      ad_client_id, \n      now() AS created,  \n      0 AS createdBy,  \n      now() AS updated,\n      0 AS updatedBy\n FROM c_bpartner \n WHERE SO_CreditLimit &lt; SO_CreditUsed\n AND iscustomer='Y'\n AND SO_CreditLimit!=0\n</code></pre> <p>The fields in question here are:</p> <ul> <li>Name is a user friendly name for an alert </li> <li>SQL is the actual SQL statements whose results (individual records) will be items alerted about </li> <li>Tab is a tab of a specific window where the user should be taken to be shown the item in question generated by the SQL statement </li> </ul>","tags":["How to","Alert Creation","alert Recipients","System Notification"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-an-alert/#defining-recipients","title":"Defining recipients","text":"<p>Switch to the role System Administrator (or your defined 'administrator' role), navigate to <code>General Setup</code> &gt; <code>Application</code> &gt;<code>Alert</code> , select Customers with exceeded credit alert and switch to the  Alert Recipients tab. Add a new record as indicated below:</p> <p></p> <p>Note</p> <p>Notice that a role can be added (that includes several users) or a specific user.</p>","tags":["How to","Alert Creation","alert Recipients","System Notification"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-an-alert/#scheduling-the-alerting-background-process","title":"Scheduling the alerting background process","text":"<p>For the alerts to be evaluated and triggered, the background process needs to be scheduled. Using the role System Administrator (or your defined 'administrator' role) navigate to <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt;<code>Process Request</code> and enter a new record:</p> <p></p>","tags":["How to","Alert Creation","alert Recipients","System Notification"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-an-alert/#the-result","title":"The Result","text":"<p>Finally, log out and back in and select the role System Administrator (or your defined administrator role). You should be able to see an alert in the navigation bar. By clicking on it, you will automatically be taken to the Alert Management window that should look something like:</p> <p></p>","tags":["How to","Alert Creation","alert Recipients","System Notification"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-an-alert/#sql-code-explained","title":"SQL code explained","text":"<p>In order to write any kind of alert, the approach is very similar. Let's take another look at the SQL code that describes the condition:</p> <pre><code>\u00a0\n SELECT c_bpartner_id AS referencekey_id,\n     ad_column_identifier('C_BPartner', c_bpartner_id, 'en_US') AS record_id,\n     '0' AS ad_role_id,\n     NULL AS ad_user_id,\n     ad_column_identifier('C_BPartner', c_bpartner_id, 'en_US') ||' has '||SO_CreditLimit||' as limit and has reached '||SO_CreditUsed AS description,\n     'Y' AS isActive,\n      ad_org_id, \n      ad_client_id, \n      now() AS created,  \n      '0' AS createdBy,  \n      now() AS updated,\n      '0' AS updatedBy\n FROM c_bpartner \n WHERE SO_CreditLimit &lt; SO_CreditUsed\n AND iscustomer='Y'\n AND SO_CreditLimit!=0\n</code></pre> <p>Each SQL statement basically simulates an Etendo table which is why it needs to have all the columns defined above:</p> <ul> <li>referencekey_id - this is ID (primary key) of the record that needs attention and is the cause of the alert. In our case, this would be the C_BPartner_ID of Neil Reiley. </li> <li>record_id - this is a user friendly label for the item that is in questions with the referencekey_id. Use the ad_column_identifier function as shown to retrieve all column values required to uniquely identify the problematic record within the specific table. </li> <li>ad_role_id - should always be set to 0 </li> <li>ad_user_id - should always be set to null </li> <li>description - this is the message shown to the user describing what the problem is. You need construct this message according to what the alert is all about, indicating to the user what caused the alert and what the problem is. Again, use the ad_column_identifier function as shown to retrieve all column values required to uniquely identify the problematic record within the specific table. </li> <li>isActive - should always be set to 'Y' </li> <li>ad_org_id - should be inherited from the actual record that triggers the alert, in this case, the record from the C_BPartner table </li> <li>ad_client_id - should be inherited from the actual record that triggers the alert, in this case, the record from the C_BPartner table </li> <li>created - should always be set to now() </li> <li>createdBy - should always be set to 0 </li> <li>updated - should always be set to now() </li> <li>updatedBy - should always be set to 0 </li> </ul> <p>Finally, the WHERE clause describes the condition that triggers the alert. In our case the SELECT statement will return all Business Partners (FROM c_bpartner) that are customers (iscustomer='Y') and have exceeded their credit limit (<code>SO_CreditLimit &lt; SO_CreditUsed</code>) which needs to be different from zero (<code>SO_CreditLimit!=0</code>).</p> <p>In other words, anything you can describe in a SQL statement can be defined as an alert. </p> <p>This work is a derivative of How to create an alert by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Alert Creation","alert Recipients","System Notification"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-business-entities-using-web-services/","title":"How to Create and Update Business Entities Using Web Services","text":"","tags":["How to","Business Entities","Update","Etendo Classic","JSON REST","Secured Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-business-entities-using-web-services/#overview","title":"Overview","text":"<p>The aim of this section is to show how to use some of Etendo's available web services to create business entities and/or to update them.</p> <p>Therefore, these web services features will be explained in detail:</p> <ul> <li>JSON REST</li> <li>Secure Web Services</li> </ul>","tags":["How to","Business Entities","Update","Etendo Classic","JSON REST","Secured Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-business-entities-using-web-services/#execution-steps","title":"Execution Steps","text":"<p>To add or update entities, use <code>HTTP</code> commands. To execute any <code>HTTP commands</code>, a Java class could be created and use the available classes related to the HTTP protocol.</p> <p>Note</p> <p>We could do the same for any other protocol or scripting language like PHP.</p> <p>Alternatively, use any plugin or application like Postman which allows executing any HTTP command on an URL of your choice. In the following examples we will make use of this plugin and we will assume that our Etendo environment is running on a local machine via <code>http://localhost:8080/etendo</code>.</p>","tags":["How to","Business Entities","Update","Etendo Classic","JSON REST","Secured Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-business-entities-using-web-services/#json-rest","title":"JSON REST","text":"<p>We are about to create a new invoice header, so that the URL for this case will be:</p> <pre><code>http://localhost:8080/etendo/org.openbravo.service.json.jsonrest/Invoice\n</code></pre> <p>In <code>Authorization</code> we have to select the Basic Auth type and add the credentials which we use to get access to the Web Service (which are by the way the same that we use to get into the application). Take into account that the visibility of the data within the web service will be the same as if you logged into the application with the default role of this user. The <code>Content-Type</code> of the Request will be <code>application/json</code> and the body content of the request will be as follows, where the <code>ID</code>s will be replaced by those needed to be present in the invoice. </p> <p>We have set the attribute <code>salesTransaction</code> to <code>true</code>, indicating that this is a sales invoice:</p> <pre><code>    {\n      \"data\":\n      {\n        \"entityName\":          \"Invoice\",\n        \"active\":              true,\n        \"organization\":        { \"id\": \"E443A31992CB4635AFCAEABE7183CE85\" },\n        \"salesTransaction\":    true,\n        \"documentType\":        { \"id\": \"7FCD49652E104E6BB06C3A0D787412E3\" },\n        \"transactionDocument\": { \"id\": \"7FCD49652E104E6BB06C3A0D787412E3\" },\n        \"documentNo\":          \"1000050\",\n        \"accountingDate\":      \"2012-05-29\",\n        \"invoiceDate\":         \"2012-05-29\",\n        \"currency\":            { \"id\": \"102\" },\n        \"priceList\":           { \"id\": \"AEE66281A08F42B6BC509B8A80A33C29\" },\n        \"businessPartner\":     { \"id\": \"9E6850C866BD4921AD0EB7F7796CE2C7\" },\n        \"partnerAddress\":      { \"id\": \"BFE1FB707BA84A6D8AF61A785F3CE1C1\" },\n        \"paymentTerms\":        { \"id\": \"66BA1164A7394344BB9CD1A6ECEED05D\" },\n        \"paymentMethod\":       { \"id\": \"A97CFD2AFC234B59BB0A72189BD8FC2A\" }\n      }\n    }\n</code></pre> <p></p> <p></p> <p>We use the HTTP <code>POST</code> command with this data. We will get a <code>200 OK</code> response back, indicating that everything went well with the invoice data that was just created.</p> <p></p> <p>To make an update, we will use the <code>PUT</code> command. For instance, to update a Business Partner's name, we will execute that command on this URL:</p> <p><code>http://localhost:8080/etendo/org.openbravo.service.json.jsonrest/BusinessPartner</code></p> <p>with the following content:</p> <pre><code>    {\n      \"data\":\n      {\n        \"entityName\": \"BusinessPartner\",\n        \"id\":         \"A6750F0D15334FB890C254369AC750A8\",\n        \"name\":       \"New Name\"\n      }\n    }\n</code></pre>","tags":["How to","Business Entities","Update","Etendo Classic","JSON REST","Secured Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-business-entities-using-web-services/#secure-web-services","title":"Secure Web Services","text":"<p>Note</p> <p>To know more about how Etendo introduces its own Secure Web Services with unique features, visit How to Use Secure Webservices.</p> <p>This work is a derivative of How to Create and Update Business Entities using Web Services by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Business Entities","Update","Etendo Classic","JSON REST","Secured Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/","title":"How to Create and Update Translation Modules","text":""},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#overview","title":"Overview","text":"<p>This section describes the process of creating and updating translation modules in Etendo, including the Core's module.\u00a0</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#creating-a-new-translation-module-from-scratch","title":"Creating a new translation module from scratch","text":""},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#create-module-definition","title":"Create module definition","text":"<p>The first thing to do is to create the translation module definition into the Application Dictionary.</p> <p>Logged as System Administrator role, the user selects the <code>Application Dictionary</code> &gt; <code>Module</code> window from the Application menu and creates a new record.</p> <p>Translation modules are a special kind of modules. They have to be marked as Is translation module in the Module window, and they must define the translation language in the Module Language field.</p> <p>No other contents than translations are allowed in translation modules. A translation module can only contain the translation for one module. For example, in the screenshot below, we are creating a Spanish (Spain) translation module for the User Interface Application module whose declared language is English (USA).</p> <p></p> <p>Apart from checking the Is translation module and setting the Module Language, we need to add a dependency to the module and version we are translating. In the example, our User Interface Application Translation Spanish (Spain) module in version 1.0.0 depends on the User Interface Application module version 2.1.0.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#prepare-strings-to-be-translated","title":"Prepare strings to be translated","text":"<p>Logged with the System Administrator role, select the <code>General Setup</code>&gt; <code>Application</code> &gt; <code>Language</code> window from the Application menu. Find the language in which the user wants to create the translation module and check the System Language checkbox field. This checkbox allows this language to be selected in the user interface (Change role popup) in the next login.</p> <p></p> <p></p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#verify-languages","title":"Verify Languages","text":"<p>Each time it is necessary to create a translation for a new language, it is necessary to prepare the strings to be translated. There is an automatic process, called Verify Languages (available as well in the Language window), in which the ERP creates the necessary copies of the original strings of all the modules available in the system from their base languages to the corresponding translation language.</p> <p>For example, in the case of creating a Spanish (Spain) translation for the core's module, whose base language is English (USA), the system will copy all the original English strings to the Spanish translation. The same is extended to the rest of the modules installed in the system with their respective base languages.</p> <p>Using the Verify Languages button, the application will display the number of records created. If this number is equal to 0, it means that something was wrong, and the probable cause is that we have forgotten to check the System Language field.</p> <p></p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#export-the-translation","title":"Export the translation","text":"<p>Exporting the translation is an automatic process available in the <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Import/Export Translations</code> window.</p> <p>With the System Administrator role, select the language in which the user wants to export translation files. Export Reduced Version flag can be set to Yes to have a reduced translation version. This would exclude all translation candidates that are linked directly or indirectly to the Menu having translation strategy as \"Exclude From Reduced Translation\". The user could set this flag as No to have a full translation version by pressing the Export button. The process takes several seconds to export all the XML files.</p> <p></p> <p>Inside the attachments folder of Etendo, a new directory called lang is found, and inside it, a new one with the lowercase two-letter language code and the uppercase two-letter country code separated by an underscore character ('_'). Example: <code>/home/EtendoERP/attachments/lang/es_ES</code></p> <p></p> <p>Inside this directory, the user can find the translation files for all the available modules into the instance. The core's translation files are stored directly into the root directory, the rest of the modules have their own folder named as their java packages. So, the user only needs to find the folder of the original module to be translated (not the translation module) and get its XML files.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#translate-the-module","title":"Translate the module","text":"<p>Module translation can be done by manually modifying the exported XML files, which is a convenient method for modules with few strings to translate, or by using the Etendo Copilot wizard, Module Translation Creator.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#translate-directly-into-the-xml-files","title":"Translate directly into the XML files","text":"<p>If this method is chosen, it is only necessary to open each XML file that is inside the module's directory to be translated and edit it. It is very important to open these files with a text editor.</p> <p>The text to be changed for making a translation is the content of each value tag. It is not necessary to edit any attribute because they will be automatically updated when importing and exporting the files into the ERP in a next step.</p> <p></p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#import-and-export-the-translations","title":"Import and Export the translations","text":"<p>After the translation is completed, or even in the middle of a translation process, it is a good practice to import the XML files into the ERP to review the translation in context.</p> <p>Finally, once the translation is OK, it is necessary export it again. Doing so, it is ensured the XML files have the final structure, with all the attributes properly set.</p> <p>Info</p> <p>All the XML files to be imported must be inside their correspondent module's folder of your attachments directory, overwriting the original XML files exported at the beginning of this process.</p> <p>Now, at the <code>Import/Export Translations</code> window, we can select the language used for the translations and press the Import button. Then, the process is completed and the Export button is pressed, that will export the XML files again.</p> <p></p> <p>Info</p> <p>During this process, it is highly recommended to keep a backup of your translated XML files.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#specific-information-if-you-are-translating-core","title":"Specific information if you are translating Core","text":""},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#buildstructurexml-file","title":"buildstructure.xml file","text":"<p>Etendo's Core provides an additional file called <code>buildStructure.xml</code>. This file contains the information related to the names of the different stages through which the Etendo build process passes, and the error and warning messages that can be shown during a rebuild. It is also necessary to translate this file.</p> <p>The structure of this file is a bit different compared to the standard Etendo XML translation files, but it is also very easy to understand. You just need to translate the content of all the attributes that start with \u201ctranslated\u201d, like translatedName, translatedErrorMessage, etc. This is an example of the <code>buildstructure.xml</code> file translated into Spanish.</p> buildstructure.xml<pre><code>&lt;?xml version='1.0' ?&gt;\n&lt;BuildTranslation&gt;\n  &lt;language&gt;es_ES&lt;/language&gt;\n  &lt;mainStepTranslations&gt;\n    &lt;mainStepTranslation code=\"RB11\" originalName=\"Initial Build Validation\" translatedName=\"Validaci\u00f3n de la construcci\u00f3n del sistema\" translatedErrorMessage=\"La validaci\u00f3n ha fallado. El sistema no se ha modificado y continua estable, pero los problemas descritos en la parte inferior de la ventana deber\u00edan resolverse (ya sea desinstalando los m\u00f3dulos afectados, o resolviendo los problemas de la forma descrita), y una nueva construcci\u00f3n del sistema deber\u00eda iniciarse.\"&gt;\n      &lt;stepTranslations/&gt;\n    &lt;/mainStepTranslation&gt;\n    &lt;mainStepTranslation code=\"RB20\" originalName=\"Build\" translatedName=\"Construcci\u00f3n del sistema\" translatedSuccessMessage=\"La construcci\u00f3n del sistema se ha completado con \u00e9xito.\" translatedWarningMessage=\"Se produjeron alertas durante la compilaci\u00f3n. La aplicaci\u00f3n se ejecutar\u00e1, pero deber\u00eda comprobarlas para ver si son importantes. Ir a &amp;lt;a href=&amp;quot;http://wiki.openbravo.com/wiki/ERP/2.50/Update_Tips&amp;quot; target=&amp;quot;_blank&amp;quot; class=&amp;quot;MessageBox_TextLink&amp;quot;&amp;gt; este enlace &amp;lt;/a&amp;gt; para m\u00e1s informaci\u00f3n. &amp;lt;b&amp;gt;Ahora debe reiniciar el contenedor de servlets&amp;lt;/b&amp;gt; para que los cambios tengan efecto.\" translatedErrorMessage=\"Ha ocurrido un error durante la construcci\u00f3n del sistema. Para saber qu\u00e9 pasos realizar a continuaci\u00f3n, vaya a &amp;lt;a href=&amp;quot;http://wiki.openbravo.com/wiki/ERP/2.50/Update_Tips&amp;quot; target=&amp;quot;_blank&amp;quot; class=&amp;quot;MessageBox_TextLink&amp;quot;&amp;gt;este enlace&amp;lt;/a&amp;gt;\"&gt;\n      &lt;stepTranslations&gt;\n        &lt;stepTranslation code=\"RB12\" originalName=\"Database update\" translatedName=\"Actualizaci\u00f3n de la base de datos\"/&gt;\n        &lt;stepTranslation code=\"RB31\" originalName=\"Reference data\" translatedName=\"Datos de referencia\"/&gt;\n        &lt;stepTranslation code=\"RB43\" originalName=\"Compilation\" translatedName=\"Compilaci\u00f3n\"/&gt;\n      &lt;/stepTranslations&gt;\n    &lt;/mainStepTranslation&gt;\n  &lt;/mainStepTranslations&gt;\n&lt;/BuildTranslation&gt;\n</code></pre>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#masterdata-dataset","title":"Masterdata dataset","text":"<p>All the XML files exported through the Import/Export Translation window and the buildstructure.xml represents all the available user interface strings in the ERP. If we translate all these files, we will have a fully translated application. However, the ERP includes some other strings not related to the UI that can be also translated. Inside this group, called Masterdata, we include: country names, currencies, units of measure and month names. All this data is not exported into the XML files, however this does not mean we cannot translate it.</p> <p>The way for translating masterdata is creating a system level dataset that only contains the translated strings for countries, currencies, units of measure and months.</p> <p>As System Administrator, we create a new record inside the Dataset window for our core's translation module. It is important to define this dataset at System only level to ensure it will be automatically applied when we install the module.</p> <p>As you can see in the screenshot, the tables to be included are: <code>AD_Month_Trl C_Country_Trl</code>, <code>C_Currency_Trl</code> and <code>C_UOM_Trl</code>. All of them have a filter clause that uses the language column, in the example <code>es_ES</code>.</p> <p></p> <p>Now, our Core's translation module has a dataset, so we must remember to check the Has reference data flag into the module's definition.</p> <p></p> <p>The dataset definition is ready, but it is pending the translation itself. To translate this dataset, we have two possibilities:</p> <ul> <li>In the ERP, as System Administrator, we can go to the Country Region and City, Currency, Unit of Measure and Month windows and translate the corresponding record inside the Translation tab (recommended method).     When finished, export the dataset using the Export Reference Data button at the Dataset window.  </li> </ul> <p></p> <ul> <li>Export the dataset with the untranslated strings and edit the XML file using a text editor. The dataset XML file will be stored inside the referencedata/standard directory of your translation module.</li> </ul>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#translation-bundle","title":"Translation bundle","text":"<p>As you probably know, Etendo is a distribution of modules, including Core. That means that to have a fully translated application, you must translate all the modules that are part of the distribution.\u00a0</p> <p>It is a good idea to create a translation bundle that covers all the modules.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#publishing-the-translation-module","title":"Publishing the translation module","text":"<p>The process of publishing a translation module is similar to the standard publishing process with just one important consideration: we need to copy the translated XML files to the corresponding module's <code>referencedata/translation</code> folder within your module folder.</p> <p>The summarized process is:</p> <ol> <li>Core only: If we have translated the masterdata dataset directly in the ERP, we need to export it through the Export Reference Data button at the Dataset window.</li> <li> <p>Export the database running     Terminal<pre><code>./gradlew export.database \n</code></pre></p> </li> <li> <p>Copy the translated XML files to the translation module's referencedata/translation folder.  The structure of the translation module's directory should be:</p> <pre><code>&lt;translation module java package name&gt;\n\u251c\u2500\u2500 referencedata\n\u2502 \u251c\u2500\u2500 standard\n\u2502 \u2502 \u2514\u2500\u2500 Masterdata.xml (only for core)\n\u2502 \u2514\u2500\u2500 translation\n\u2502     \u2514\u2500\u2500 es_ES\n\u2502         \u251c\u2500\u2500 AD_ELEMENT_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_FIELDGROUP_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_FIELD_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_FORM_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_MENU_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_MESSAGE_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_MODULE_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_PROCESS_PARA_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_PROCESS_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_REFERENCE_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_REF_LIST_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_TAB_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_TEXTINTERFACES_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_WF_NODE_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_WINDOW_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 AD_WORKFLOW_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 buildStructureTrl.xml\n\u2502         \u251c\u2500\u2500 C_DOCTYPE_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 CONTRIBUTORS_es_ES.xml\n\u2502         \u251c\u2500\u2500 OBKMO_WIDGET_CLASS_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 OBUIAPP_PARAMETER_TRL_es_ES.xml\n\u2502         \u251c\u2500\u2500 OBUISEL_SELECTOR_FIELD_TRL_es_ES.xml\n\u2502         \u2514\u2500\u2500 OBUISEL_SELECTOR_TRL_es_ES.xml\n\u2514\u2500\u2500 src-db\n\u00a0\u00a0\u00a0\u2514\u2500\u2500 database\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500 model\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502 \u251c\u2500\u2500 functions\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502 \u251c\u2500\u2500 sequences\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502 \u251c\u2500\u2500 tables\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502 \u251c\u2500\u2500 triggers\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2502 \u2514\u2500\u2500 views\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500 sourcedata\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500 AD_DATASET_TABLE.xml (only for core)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500 AD_DATASET.xml (only for core)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u251c\u2500\u2500 AD_MODULE_DEPENDENCY.xml\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500 AD_MODULE.xml\n</code></pre> </li> <li> <p>Finally, remember to publish the module. For more information, see Publish Modules to a GitHub Repository.</p> </li> </ol>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#updating-translation-modules","title":"Updating Translation Modules","text":"<p>These are the first considerations for updating a translation module:</p> <ul> <li>We need to install/update in our instance the last version of the original module and its translation modules. To do so, find more information in Install Modules in Etendo.\u00a0</li> <li>The already translated strings for this module are kept. Only the new or modified ones will be untranslated, so all the previous work done is not lost.</li> <li>Before publishing the translation module, remember to update the First Version dependency to the new version of the translated module, as we saw in the \u201cCreate module definition\u201d chapter. Also, it is necessary to update the original module version in the build.gradle file. Apart from that, it is also a good practice to include a description of the changes of this new version inside the Update Information field of the Module window.</li> <li>To apply the updates, it is necessary to execute the command\u00a0</li> </ul> Terminal<pre><code>./gradlew install.translation -Dmodule=javapackage\n./gradlew smartbuild -Dlocal=no\n</code></pre> <p>The main steps for updating a translation module are almost the same as when creating a new translation module from scratch. The only difference is that it is not necessary to declare the System Language and to run the Verify Languages process. The rest of the process is exactly the same, starting by the \u201cExport the translation\u201d section.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#tips-and-tricks","title":"Tips and Tricks","text":"<p>This section tries to provide a set of useful translation tips and tricks. Take into account that some of these tricks may require development knowledge.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-and-update-translation-modules/#finding-the-context","title":"Finding the context","text":"<p>Making a good translation requires knowing the exact context where the string we are translating appears. Unfortunately, the context in the XML file is not clear at all, and sometimes it is necessary to dive into the application to get the exact context. Here you have a list of tips for finding it:</p> <ul> <li>The first obvious thing you must take into account is the file you are translating. <code>AD_MENU_TRL</code> represents the Application menu entries, <code>AD_MESSAGE_TRL</code> has all the messages, <code>AD_PROCESS_TRL</code> is in charge of the process and reports, <code>AD_PROCESS_PARA_TRL</code> is the process parameters, etc.</li> <li>The Etendo Linked Items feature can give you all the places where a record is used. In the screenshot below, you can get the places where the element with the name \u201cGeneral Ledger Currency Credit\u201d is used. In this case, linked items show that the element is only used in one column, so the user can navigate to this column and later on navigate to the related field, that will show the window where it is used. </li> </ul> <p>This work is a derivative of How to Create and Update Translation Modules by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/","title":"How to Create Build Validations and Module Scripts","text":"","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#overview","title":"Overview","text":"<p>This section provides information about how to create both a Build Validation and a Module Script. They are both very similar concepts, and are also implemented in a very similar way.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#build-validations","title":"Build Validations","text":"<p>A build validation in Etendo is a Java class which is executed at the beginning of the <code>update.database</code> task.</p> <p>The build validations main use is to stop the build because the instance is in such a state that rebuilding the system cannot be safely done. In modules, validations can be used to stop the build in case the module cannot be installed safely in the system for some reason.</p> <p>So, for example, a validation could be used to check if the user has done a necessary manual setup step that cannot be automated. Or a validation could also be used to check if the user has filled some data which is needed for the module to be installed correctly.</p> <p>Build validations are a different piece of code in Etendo, in that they are distributed as binaries (compiled classes), which are executed directly without them being compiled on the run. </p> <p>Note</p> <p>Build validations should not be a common case. Normally, they should only be needed when there was a mistake in a previous version of the module, or Core. The ultimate result for a validation is that, if it detects what it was meant to detect, the user will need to do manual actions to fix the problem, and this should be avoided if possible by all developers. </p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#introduction-to-the-implementation-of-build-validations","title":"Introduction to the implementation of build validations","text":"<p>The main steps to create a build validation are:</p> <ol> <li>Write it (Create a Java class for each validation you want to do). </li> <li>Compile it (Build Validations are compiled separately from the rest of the Etendo code, using a specific gradle compile task). </li> <li>Test it (Carefully test the validation before including it in your module, or in Core). </li> </ol> <p>To create a build validation, first create a class which extends the <code>org.openbravo.buildvalidationBuildValidation class</code>. This is an abstract class which has one abstract method: <code>List&lt;String&gt; execute()</code></p> <p>This method needs to be implemented. The class will be loaded at the beginning of the <code>update.database</code> task, and this method will be called. A List of Strings must be returned. If the list is empty, the build will continue. If the list contains at least one string, every string will be shown to the user, and the build will stop. Every string is supposed to be a meaningful error message, which shows the user what it needs to fix in his system for the validation to pass.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#writing-the-build-validation","title":"Writing the build validation","text":"<p>As was just explained, a build validation is nothing more than a class which extends the <code>org.openbravo.buildvalidation.BuildValidation</code> class, and implements the abstract execute method. Let's see an example:</p> ValidationExample.java<pre><code>public class ValidationExample extends BuildValidation {\n\u00a0\n  public List&lt;String&gt; execute() {\n    try {\n      ConnectionProvider cp = getConnectionProvider();\n      PreparedStatement ps = cp\n          .getPreparedStatement(\"SELECT COUNT(*) FROM C_Bpartner WHERE name IS NULL\");\n      ps.execute();\n      ResultSet rs = ps.getResultSet();\n      rs.next();\n      ArrayList&lt;String&gt; errors = new ArrayList&lt;String&gt;();\n      if (rs.getInt(1) &gt; 0) {\n        errors\n            .add(\"There are business partners which don't have a defined name. Please fill the name of every business partner before installing the module MyModule.\");\n      }\n      return errors;\n    } catch (Exception e) {\n      return handleError(e);\n    }\n  }\n}\n</code></pre> <p>In this example, the main points of any build validation can be seen:</p> <ul> <li>The class implements the BuildValidation class, and its corresponding execute method. </li> <li>In the method, the validation can be done (i.e. check if the Etendo instance complies with some specific rule). There is a convenient <code>getConnectionProvider()</code> method, provided by the abstract superclass, which allows doing direct queries to the database. It is important to remark that validations should only do queries to the database, they should never change the contents of the database. Module Scripts can be used to change the database if needed. </li> <li>Finally, the method returns a List of error Strings, which can be empty if the validation went well, or can contain one or more errors if the system did not comply with the validation. </li> </ul> <p>You can also use <code>SqlClass</code> if it is necessary to do the database operations.</p> ValidationExample2.java<pre><code>public class ValidationExample2 extends BuildValidation {\n\u00a0\n  public List&lt;String&gt; execute() {\n    try {\n      ConnectionProvider cp = getConnectionProvider();\n      ArrayList&lt;String&gt; errors = new ArrayList&lt;String&gt;();\n      int numBpartners=Integer.parseInt(ValidationExample2Data.queryBPartners(cp));\n      if (numBpartners &gt; 0) {\n        errors.add(\"There are business partners which don't have a defined name. Please fill the name of every business partner before installing the module MyModule.\");\n      }\n      return errors;\n    } catch (Exception e) {\n      return handleError(e);\n    }\n  }\n}\n</code></pre> <p>This needs the following <code>xsql</code> file:</p> ValidationExample2Data.xsql<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"\u00a0?&gt;\n\u00a0\n&lt;SqlClass name=\"ValidationExample2Data\" package=\"org.openbravo.buildvalidation\"&gt;\n  &lt;SqlMethod name=\"queryBPartners\" type=\"preparedStatement\" return=\"string\"&gt;\n      &lt;SqlMethodComment&gt;&lt;/SqlMethodComment&gt;\n      &lt;Sql&gt;&lt;![CDATA[\n          SELECT COUNT(*) FROM C_Bpartner WHERE name IS NULL\n          ]]&gt;\n      &lt;/Sql&gt;\n  &lt;/SqlMethod&gt;\n&lt;/SqlClass&gt;\n</code></pre> <p>Info</p> <p>The class source files should be inside the module folder, in: <code>src-util/buildvalidation/src</code>. And they should follow the standard Java package rules. The folder will not exist if it is the first validation, so it will be needed to create it.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#compiling-the-build-validation","title":"Compiling the build validation","text":"<p>Build Validations should be compiled using, at most, the latest supported JDK version.</p> <p>To compile the build validation, use the following command:</p> <pre><code>./gradlew compile.buildvalidation -Dmodule=javapackageofmodule\n</code></pre> <p>Info</p> <p>In case of compiling the validations of Etendo Core, the module property needs to be set to <code>org.openbravo</code>. </p> <p>This task will compile the Java classes, and copy them to the correct build folder in the module, or in the <code>src-util/buildvalidation</code> of Core.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#executing-the-build-validation","title":"Executing the build validation","text":"<p>The build validations will be automatically executed in the <code>update.database</code> task, or in <code>update.database.mod</code> if the module is being applied. </p> <p>Warning</p> <p>Validations will not be compiled in this task, they need to have been compiled previously to be executed.</p> <p>Another important point to remark is that the build validations will be executed in every version of the module, or Core, in which they are present. The developer needs to take this into account (it is advisable not to design validations which are version-dependant, they should always be designed to be generic).</p> <p>Note</p> <p>When adding a validation to Etendo Core, remember to include the binary classes contained in    <code>src-util/buildvalidation/build/classes/</code> to the repository as any source files are added. If not, they will not be executed (because the classes are not compiled by default in the build process, they are executed only if the binary files are there).</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#defining-the-build-validation-execution-limits","title":"Defining the build validation execution limits","text":"<p>The build validations provide by default a couple of mechanisms that allow to control when they should be executed:</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#build-validation-version-limits","title":"Build Validation version limits","text":"<p>It is possible to define a dependency with two versions of a particular module to identify when the build validation should be executed:</p> <ul> <li> <p>First Execution Version: defines the first version since the build validation should be executed. Before an upgrade, if the dependent module has a version lower or equal than this version, the build validation will NOT be executed. By setting this limit, it is being ensured that this version and previous ones do not require the build validation execution. </p> </li> <li> <p>Last Execution Version: defines the last version of the dependent module for which the build validation should be executed. Before an upgrade, if the dependent module has a version higher or equal than this version, the build validation will NOT be executed. </p> </li> </ul> <p>This way, the build validation can be executed only when it is really needed, avoiding extra time calculations when updating database.</p> <p>The dependent module and its limit versions can be set by overriding the <code>getBuildValidationLimits()</code> method in our <code>BuildValidation</code> subclass:</p> <pre><code>@Override\nprotected ExecutionLimits getBuildValidationLimits() {\n  return new ExecutionLimits(\"0\", new OpenbravoVersion(3, 0, 28207), new OpenbravoVersion(3, 0, 29495));\n}\n</code></pre> <p>Following this code example, we are setting that our build validation should only be executed when upgrading core module (id = \"0\") from a version between 3.0.28207 (first execution version) and 3.0.29495 (last execution version). This way, we are avoiding the execution of the build validation in those cases which it does not apply.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#executing-just-once","title":"Executing just once","text":"<p>In case it is necessary to execute the build validation just once, this can be covered by setting just the Last Execution Version .</p> <p>For example, if adding a check in version 1.7.0 of a module, we want to execute the build validation when upgrading from versions previous this version. So we can define its limits as follows:</p> <pre><code>@Override\nprotected ExecutionLimits getBuildValidationLimits() {\n  return new ExecutionLimits(ad_module_id, null, new OpenbravoVersion(1, 7, 0));\n}\n</code></pre> <p>Where <code>ad_module_id</code> is the UUID of the module.</p> <p>This way the build validation will be executed when upgrading the module from any version prior to 1.7.0 and it will not be executed anymore.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#execute-on-install","title":"Execute on install","text":"<p>It is also possible to configure whether the build validation should be executed when installing the dependent module defined with the <code>getBuildValidationLimits()</code> method. By default, the build validation will be executed when installing the dependent module.</p> <p>But in case we do not want to execute it, the <code>executeOnInstall()</code> method should be overridden as follows:</p> <pre><code>@Override\nprotected boolean executeOnInstall() {\n  return false;\n}\n</code></pre>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#module-scripts","title":"Module Scripts","text":"<p>A module script is a task that is executed when a module is being applied in the database. This task is supposed to do operations that need to be done in the database, and cannot be done in a different way.</p> <p>Conceptually, they are extremely similar to Build Validations, and the main steps involved to create a Module Script are virtually the same, so it is advisable to read the previous section before this one. </p> <p>The main points of module scripts are the following ones:</p> <ul> <li>Whereas build validations are executed at the beginning of update.database, module scripts are executed in the middle of the process, when the foreign keys and triggers of the database have been disabled. </li> <li>As with build validations, module scripts will be executed every time an update.database or update.database.mod for that particular module is called. This means that the script must be built in such a way that can be repeatedly executed without problems , and this is a very important consideration that the developer needs to take into account. </li> <li>The module script should never fail. If it fails, the build will be stopped, but as it has already been started, the system will be in an inconsistent state (for example, all the foreign keys and triggers will be down). The developer must avoid this at all costs if possible. </li> </ul>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#introduction-to-the-implementation-of-module-scripts","title":"Introduction to the implementation of module scripts","text":"<p>As with build validations, a module script is a Java class which extends the abstract class <code>org.openbravo.modulescript.ModuleScript</code>, and implements the <code>execute()</code> method. This execute method will be called by the <code>update.database</code> task. This method will include the logic of the module script, here all the operations will be done.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#writing-the-module-script","title":"Writing the module script","text":"<p>Here goes a very simple Module script, which just sets the value of some column to a default in case the column value is null:</p> ModuleScriptExample.java<pre><code>public class ModuleScriptExample extends ModuleScript {\n\u00a0\n  public void execute() {\n    try {\n      ConnectionProvider cp = getConnectionProvider();\n      PreparedStatement ps = cp\n          .getPreparedStatement(\"UPDATE mytable SET mycolumn=0 WHERE mycolumn IS NULL\");\n      ps.executeUpdate();\n    } catch (Exception e) {\n      handleError(e);\n    }\n  }\n}\n</code></pre> <p>The main two important points to take into account when building the script are:</p> <ul> <li>The script should never fail. Failure will leave the user in a very unfriendly situation (with the build stopped in the middle), and should be avoided at all costs. In this case, this script will not fail unless the table does not exist. </li> <li>The script needs to be designed so that it can be executed an indefinite number of times. This example script, for example, can be executed several times without problems (the first time will set all rows which have a null value, and after that, only the new rows which have been inserted before will be modified, but the previously modified rows will not be modified again unless they have the supposedly wrong null value again). </li> </ul> <p>Info</p> <p>The class source files themselves should be inside the module folder, in the folder: <code>src-util/modulescript/src</code>. And they should follow the standard Java package rules. The folder will not exist if it is the first script, so it will be needed to create it.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#compiling-the-module-script","title":"Compiling the module script","text":"<p>Module scripts should be compiled using, at most, the latest supported JDK version.</p> <p>To compile the module script, use the following command:</p> <pre><code>./gradlew compile.modulescript -Dmodule=&lt;javapackage&gt;\n</code></pre> <p>Info</p> <p>In case of compiling the scripts of Etendo Core, the module property needs to be set to <code>org.openbravo</code>.</p> <p>This task will compile the Java classes, and copy them to the correct build folder in the module, or in the <code>src-util/modulescript</code> of Core.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#executing-the-module-script","title":"Executing the module script","text":"<p>The module scripts will be automatically executed in the <code>update.database</code> task, or in <code>update.database.mod</code> if the module is being applied. </p> <p>Warning</p> <p>Module scripts will not be compiled in this task, they need to have been compiled previously to be executed.</p> <p>Another important point to remark is that the module scripts work as build validations in regards to execution criteria; that is, they will be executed in every version of the module, or Core, in which they are present. The developer needs to take this into account (it is advisable not to design scripts which are version-dependant, they should always be designed to be generic).</p> <p>And, as it was explained above, scripts should also be designed to produce the same result if executed multiple times, because they will be executed every time the system is rebuilt, or the module is updated.</p> <p>Info</p> <p>If you are adding a module script to Etendo Core, remember that you need to include the binary classes contained in <code>src-util/modulescript/build/classes/</code> to the repository as any source files are added. If not, they will not be executed (because the classes are not compiled by default in the build process, they are executed only if the binary files are there).</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#defining-the-module-script-execution-limits","title":"Defining the module script execution limits","text":"<p>The module scripts provide by default a couple of mechanisms that allow to control when they should be executed:</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#module-version-limits","title":"Module version limits","text":"<p>It is possible to define a dependency with two versions of a particular module to identify when the module script should be executed:</p> <ul> <li> <p>First Execution Version: defines the first version since the module script should be executed. Before an upgrade, if the dependent module has a version lower or equal than this version, the module script will NOT be executed. By setting this limit we are ensuring that this version and previous ones do not require the module script execution. </p> </li> <li> <p>Last Execution Version: defines the last version of the dependent module for which the module script should be executed. Before an upgrade, if the dependent module has a version higher or equal than this version, the module script will NOT be executed. </p> </li> </ul> <p>This way, the module script can be executed only when it is really needed, avoiding extra time calculations when updating database.</p> <p></p> <p>The dependent module and its limit versions can be set by overriding the<code>getModuleScriptExecutionLimits()</code> method in our <code>ModuleScript</code> subclass:</p> <pre><code>@Override\nprotected ModuleScriptExecutionLimits getModuleScriptExecutionLimits() {\n  return new ModuleScriptExecutionLimits(\"0\", new OpenbravoVersion(3,0,27029), \n      new OpenbravoVersion(3,0,27050));\n}\n</code></pre> <p>Following this code example, we are setting that our <code>modulescript</code> should only be executed when upgrading core module (id = \"0\") from a version between 3.0.27029 (first execution version) and 3.0.27050 (last execution version). This way, we are avoiding the execution of our <code>modulescript</code> in those cases which it does not apply.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#executing-just-once_1","title":"Executing just once","text":"<p>One typical case of <code>modulescripts</code> usage, is to populate the values of a newly added column. So, it is necessary to execute the <code>modulescript</code> once. This can be covered by setting just the Last Execution Version.</p> <p>For example, if we add a new column in version 1.5.0 of a module, we want to execute the <code>modulescript</code> when upgrading from versions previous this version. So, we can define its limits as follows:</p> <pre><code>@Override\nprotected ModuleScriptExecutionLimits getModuleScriptExecutionLimits() {\n  return new ModuleScriptExecutionLimits(ad_module_id, null, \n      new OpenbravoVersion(1,5,0));\n}\n\u00a0```\n\nWhere `ad_module_id` is the **UUID** of the module.\n\nThis way the `modulescript` will be executed when upgrading the module from any version prior to _1.5.0_ and it will not be executed anymore.\n\n####  Execute on install\n\nIt is also possible to configure whether the module script should be executed when installing the dependent module defined with the `getModuleScriptExecutionLimits()` method or during the `install` gradle task. By default, the module script will be executed in the following cases:\n\n  * When installing the dependent module \n  * On `install` task \n\nBut in case we do not want to execute it in these cases, the `executeOnInstall()` method should be overridden as follows:\n\n```java\n@Override\nprotected boolean executeOnInstall() {\n  return false;\n}\n</code></pre>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-build-validations-and-module-scripts/#executing-just-on-install","title":"Executing just on <code>install</code>","text":"<p>In case we want to configure a <code>modulescript</code> to be executed just on every <code>install</code>, we do not override the <code>executeOnInstall()</code> method and we define the execution limits as follows:</p> <pre><code>@Override\nprotected ModuleScriptExecutionLimits getModuleScriptExecutionLimits() {\n  return new ModuleScriptExecutionLimits(ad_module_id, null, \n      new OpenbravoVersion(0,0,0));\n}\n</code></pre> <p>This work is a derivative of How to Create Build Validations and Module Scripts by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Build validations","Module scripts"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/","title":"How to Create Client Event Handler Actions","text":"","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#overview","title":"Overview","text":"<p>This section discusses how to implement client-side functions that are executed before or after an event is fired in a standard window of the User Interface.</p>","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#example-module","title":"Example Module","text":"<p>This is supported by an example module which shows examples of the code shown and discussed.</p> <p>The code of this module can be downloaded from this repository.</p>","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#defining-client-event-handler-actions","title":"Defining Client Event Handler Actions","text":"<p>A Client Event Handler is a component that allows developers to respond to specific events in Etendo, such as the creation, update or deletion of entities. These handlers are essential for implementing custom business logic that executes when certain changes occur in the database.</p>","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#defining-the-event-handler-class","title":"Defining the Event Handler Class","text":"<p>In this step, the key methods needed to handle event actions will be implemented:</p> <ul> <li> <p><code>Method getObservedEntities()</code> : This method defines the entities that will be observed by the Event Handler. This information is essential for the event handler to know what kind of entities it should react to.</p> </li> <li> <p><code>Method onUpdate()</code> : It is executed when a watched entity is updated.</p> </li> <li> <p><code>Method onSave()</code> : It is executed when a new entity is created.</p> </li> <li> <p><code>Method onDelete()</code> : It is executed when an observed entity is eliminated.</p> </li> </ul>","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#examples","title":"Examples","text":"","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#getobservedentities","title":"<code>getObservedEntities()</code>","text":"<p>This section defines the entities that will be observed by the Event Handler. In this case, the Greeting entity is observed. <pre><code>class GreetingEventHandler extends EntityPersistenceEventObserver {\n  private static Entity[] entities = {\n      ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME) };\n  private static final Logger logger = LogManager.getLogger();\n\n  @Override\n  protected Entity[] getObservedEntities() {\n    return entities;\n  }\n}\n</code></pre></p>","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#onupdate","title":"<code>onUpdate()</code>","text":"<p>This method intercepts record updates in the Greeting entity. It validates that thetitle of the entity ends with a dot (\u201c.\u201d) and adds it if necessary. <pre><code>public void onUpdate(@Observes EntityUpdateEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  final Greeting greeting = (Greeting) event.getTargetInstance();\n  final String title = greeting.getTitle();\n  if (title != null &amp;&amp; !title.endsWith(\".\")) {\n    final Entity greetingEntity = ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME);\n    final Property greetingTitleProperty = greetingEntity.getProperty(Greeting.PROPERTY_TITLE);\n    event.setCurrentState(greetingTitleProperty, title + \".\");\n  }\n  logger.info(\"Greeting {} is being updated\", event.getTargetInstance().getId());\n}\n</code></pre></p>","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#onsave","title":"<code>onSave()</code>","text":"<p>In this method, the creation of a new record in the Greeting entity is intercepted. A validation similar to that of the update event is performed, adding a dot to the title if it does not have one. In addition, a translation record (GreetingTrl) is created for the greeting in a specific language (in this example, the language with ID 171, which is Dutch, is used). <pre><code>public void onSave(@Observes EntityNewEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  final Entity greetingEntity = ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME);\n  final Greeting greeting = (Greeting) event.getTargetInstance();\n  final String title = greeting.getTitle();\n  if (title != null &amp;&amp; !title.endsWith(\".\")) {\n    final Property greetingTitleProperty = greetingEntity.getProperty(Greeting.PROPERTY_TITLE);\n    event.setCurrentState(greetingTitleProperty, title + \".\");\n  }\n\n  final GreetingTrl greetingTrl = OBProvider.getInstance().get(GreetingTrl.class);\n  greetingTrl.setGreeting(greeting);\n  greetingTrl.setLanguage(OBDal.getInstance().get(Language.class, \"171\"));\n  greetingTrl.setName(greeting.getName());\n  greetingTrl.setTitle(greeting.getTitle());\n  greetingTrl.setTranslation(false);\n\n  final Property greetingTrlProperty = greetingEntity.getProperty(Greeting.PROPERTY_GREETINGTRLLIST);\n  @SuppressWarnings(\"unchecked\")\n  final List&lt;Object&gt; greetingTrls = (List&lt;Object&gt;) event.getCurrentState(greetingTrlProperty);\n  greetingTrls.add(greetingTrl);\n\n  logger.info(\"Greeting {} is being created\", event.getTargetInstance().getId());\n}\n</code></pre></p>","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-event-handler-actions/#ondelete","title":"<code>onDelete()</code>","text":"<p>The following method is executed when a greeting is deleted and records the deletion in the log. <pre><code>public void onDelete(@Observes EntityDeleteEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  logger.info(\"Greeting {} is being deleted\", event.getTargetInstance().getId());\n}\n</code></pre></p> <p>Note</p> <p>This Event Handler shows how to intercept creation, update and deletion events in an entity. It allows you to perform automatic validations and actions, such as adding a dot at the end of a title or creating an associated translation automatically when creating a new greeting.</p> <p>Info</p> <p>This example can be adjusted for other entities or events according to the requirements of your implementation.</p> <p>This work is a derivative of How to Create Client Event Handler Actions by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Client Event Handler","Actions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/","title":"How to Create Client Side Callout OnChange Function","text":"","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#overview","title":"Overview","text":"<p>This section discusses how to implement client side (javascript) functions which are executed when a field value in the user interface changes. The onChange concept corresponds to the traditional callout, the main difference is that the onChange functionality is implemented on the client. This gives the following advantages:</p> <ul> <li>better performance as for many actions no server side call is needed</li> <li>direct access to user interface components such as field, the form and the grid</li> </ul> <p>In addition the onChange function has all the benefits of the classic callout, you can still call the server to execute more performance intensive actions or do queries.</p>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#example-module","title":"Example Module","text":"<p>This section is supported by an example module which shows examples of the code shown and discussed.</p> <p>The code of the example module can be downloaded from this repository: com.etendoerp.client.application.examples</p> <p>The example module is available through the Central Repository (See 'Client Application Examples'), for more information see the Examples Client Application project page.</p>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#defining-onchange-functions","title":"Defining OnChange Functions","text":"<p>An <code>OnChange</code> function is a function in javascript available through a global ID.</p> <p>Note</p> <p>The global ID should be unique, it is strongly adviced to use the module's db prefix.</p> <p>The <code>OnChange</code> function has to be defined in a javascript file located in the module.</p> <p>Info</p> <p>For more information read how to add javascript code to Etendo.</p> <p>Here is an example of an <code>OnChange</code> function defined in the example module:</p> <pre><code>OB.OBEXAPP = {};\nOB.OBEXAPP.OnChangeFunctions = {};\n\u00a0\nOB.OBEXAPP.OnChangeFunctions.Note_Name = function(item, view, form, grid) {\n  // set a message\n  view.messageBar.setMessage(\n    isc.OBMessageBar.TYPE_INFO,\n    'Changed!',\n    'You changed the name to ' + item.getValue()\n  );\n\n  // set the value for the description and make sure that the\n  // onchange handlers are called\n  form.setItemValue('description', 'Description ' + item.getValue());\n};\n</code></pre> <p>As you can see the <code>OnChange</code> function is placed in a global object, in this case the module's dbprefix is used for that.</p> <p>Note</p> <p>It is important to note that you should not use var before the global object definition, otherwise your var is not global.</p> <p>This is because the global javascript code included in Etendo is in fact executed within a function.</p> <p>An onchange function receives four arguments:</p> <ul> <li>item: the FormItem that changes.</li> <li>view: the standard view ( OBStandardView ) which provides access to the complete window and tab structure in a loaded window.</li> <li>form: the OBViewForm which contains the fields, the form can also be the form used in inline grid editing.</li> <li>grid: the OBViewGrid which contains the list of records loaded for the tab.</li> </ul> <p>This example onchange sets a message in the message bar and sets the value of another field.</p> <p>Note</p> <p>Note that the form's setItemValue method is used to trigger other onchange functions. The form also has a setValue method but that one will not trigger an onchange event.</p> <p>Info</p> <p>If your onchange function does not work or is not called or if your window does not load anymore after defining an onchange then check the console.</p>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#registering-setting-an-onchange-for-a-specific-field","title":"Registering, setting an OnChange for a specific field","text":"<p>There are two ways to link an <code>OnChange</code> function to a specific field:</p> <ul> <li>Through the application dictionary</li> <li>Programmatically using javascript code</li> </ul> <p>The first approach allows you to define the <code>OnChange</code> directly in the Field definition. For the second approach you need to use javascript, but it offers additional flexibility.</p>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#setting-an-onchange-function-through-the-ad","title":"Setting an OnChange function through the AD","text":"<p>The Application Dictionary allows you to set the <code>OnChange</code> for a specific field, see the <code>OnChange</code> function field in the <code>Window, Tabs and Fields</code> window.</p> <p></p> <p>The value should be the unique global ID mentioned above.</p>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#programmatic-registration-of-onchange-functions","title":"Programmatic registration of OnChange functions","text":"<p>It is also possible register an OnChange function through javascript. This offers more flexibility than defining through the Application Dictionary:</p> <ul> <li>you can add <code>OnChange</code> functions to existing Fields without changing the information in the table</li> <li>you can add more than one <code>OnChange</code> function to a field</li> <li>you can override/overwrite the <code>OnChange</code> function defined in the Application Dictionary</li> </ul> <p>An <code>OnChange</code> function is registered through the <code>OB.OnChangeRegistry.register</code> method. It expects 4 parameters:</p> <ul> <li>tab id</li> <li>field: the name of the field for which the onchange is registered</li> <li>callback function: the onchange function itself</li> <li>id: can be used to overwrite an existing <code>OnChange</code> function registered using the same id</li> </ul> <p>An example of a registration:</p> <pre><code>OB.OnChangeRegistry.register('FF8081813290114F0132901EB0A2001A', 'value', OB.OBEXAPP.OnChangeFunctions.Note_Value, 'OBEXAPP_Value');\n</code></pre>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#multiple-onchange-functions-per-field-call-order","title":"Multiple OnChange Functions per Field, call order","text":"<p>The <code>OnChange</code> function can have a sort property to control the call-order if there are multiple <code>OnChange</code> functions for one field.</p> <p>It is for example set like this:</p> <pre><code>OB.OBEXAPP.OnChangeFunctions.Note_Value.sort = 20;\n</code></pre> <p>Some notes on sorting:</p> <ul> <li>the <code>OnChange</code> defined in the Application Dictionary has sort 50 and id: default</li> <li>if an <code>OnChange</code> does not have a sort defined it gets the sort 100</li> </ul>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#overridingreplacing-an-onchange","title":"Overriding/replacing an OnChange","text":"<p>An <code>OnChange</code> can be registered using an id. If there is already an <code>OnChange</code> with the same id then it is replaced by the new registration.</p> <p>The <code>OnChange</code> defined through the Application Dictionary has the id default. So by registering a new <code>OnChange</code> using that id you will overwrite the <code>OnChange</code> defined through the Application Dictionary.</p>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#example-onchange-calling-a-server-side-action","title":"Example: OnChange calling a server side action","text":"<p>This section shows an example of an <code>OnChange</code> which calls a server side action:</p> <pre><code>OB.OBEXAPP.OnChangeFunctions.Note_Value = function(item, view, form, grid) {\n  // the callback called after the server side call returns\n  var callback = function(response, data, request) {\n    form.setItemValue(item, data.upperCased);\n    view.messageBar.setMessage(\n      isc.OBMessageBar.TYPE_WARNING,\n      'Uppercased!',\n      'The value has been uppercased'\n    );\n  };\n\n  // do a server side call and on return call the callback\n  OB.RemoteCallManager.call(\n    'com.etendoerp.client.application.examples.OnchangeExampleActionHandler',\n    {\n      value: item.getValue()\n    },\n    {},\n    callback\n  );\n};\nOB.OBEXAPP.OnChangeFunctions.Note_Value.sort = 20;\n</code></pre> <p>The above example calls an ActionHandler class: OnchangeExampleActionHandler. The result is returned and set in a field and a message is shown in the message bar.</p> <p>Info</p> <p>It is possible to disable the form during the server side action, call the setDisabled method on the form with the value true as a parameter.</p>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#onchange-and-the-classic-callout","title":"OnChange and the Classic Callout","text":"<p>If a field has both an <code>OnChange</code> and a classic callout defined, then the following applies:</p> <ul> <li>in the Openbravo 3 UI the <code>OnChange</code> function will be used and the callout will be disabled</li> <li>in the classic UI the callout is used and the <code>OnChange</code> functions are ignored</li> </ul>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-client-side-callout-onchange-function/#example-module-example-window","title":"Example Module: example window","text":"<p>The Example Module has an example window with several examples of a callout/onchange function. You can find the example window in <code>Application Examples</code> &gt;<code>Callout/OnChange Function</code>.</p> <p></p> <p>To test out the onchange, create a new record and set some values in the fields. You should see automatic behavior.</p> <p></p> <p>You can enable/disable different onchange functions by going into the web/com.etendoerp.client.application.examples/js/example-onchange.js file and uncomment some of the commented lines.</p> <p>This work is a derivative of How to create client side callout onchange function by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Development","JavaScript Functions","OnChange Event Handling","User Interface Interactions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-jobs-and-actions/","title":"How to Create Jobs and Actions","text":"","tags":["How to","Jobs","Actions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-jobs-and-actions/#overview","title":"Overview","text":"<p>Etendo introduces the concept of Jobs which is about one or more Actions executed in sequence. These Actions are standard processes which enable the user to create and store Jobs for later usage. Jira Automations and iOS Shortcuts are similar concepts.</p> <p>Note</p> <p>The GUI to create and execute jobs is coming soon to a newer version of Etendo. At present, it is only possible to define Actions which act as standard processes available in the existing UI nevertheless, they will also support the newer UI when released.</p>","tags":["How to","Jobs","Actions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-jobs-and-actions/#create-an-action","title":"Create an Action","text":"<p>Info</p> <p>Actions are based on the existing Standard Process architecture.</p> <ol> <li> <p>Create a new record in the Process Definition window:</p> <p></p> </li> <li> <p>Define UI Pattern as Action. The process has to be marked as multi record. All actions must support multi record input. The rest of the definitions are analogous to any Standard Process. Parameters, onLoad functions, etc. are supported.</p> </li> <li>Create a column and a field to run the Action from a button in the current UI, or a menu entry to run the process from the menu.</li> <li>The Java class associated with the new Action must extend the Action type (<code>com.smf.jobs.Action</code>).</li> </ol> <p>Your IDE of choice should prompt you to fill the required methods:</p> <ul> <li><code>ActionResult action(JSONObject parameters, MutableBoolean isStopped)</code></li> <li><code>Class&lt;T&gt; getInputClass()</code></li> </ul> <p>The first <code>action()</code> method is where the main process logic happens. You will receive the process parameters in a json object, and a boolean to check if the process was requested to stop. Once the logic is done, your code should return an <code>ActionResult</code> type detailing if the execution was successfully finished or not. There will also be a message for the user.</p> <p>The <code>getInputClass()</code> method must return the class type this Actions supports as an input. For example <code>Invoice.class:</code></p> <pre><code>import org.openbravo.model.common.invoice.Invoice;\n/* ... */\n@Override\nprotected Class&lt;Invoice&gt; getInputClass() {\n    return Invoice.class;\n}\n</code></pre> <p>The input data (the user selected record(s), or the result of another Action) can be obtained with the method <code>getInputContents()</code>. By default, this method will return a list of <code>BaseOBObject</code>, but it can be parametrized using the previous <code>getInputClass()</code> method (or the class directly). For example:</p> <pre><code>// Assuming getInputClass() returns Invoice.class\nList&lt;Invoice&gt; invoices = getInputContents(getInputClass());\n</code></pre> <p>The <code>ActionResult</code> type can be used to show a message to the user:</p> <pre><code>result.setType(Result.Type.ERROR);\nresult.setMessage(OBMessageUtils.getI18NMessage(\"Success\"));\n/* ... */\nreturn result;\n</code></pre> <p>The result object can also set an output to be used as input for the next job, when the new Job UI is implemented:</p> <pre><code>List&lt;Invoices&gt; invoices = processInvoices();\nresult.setOutput(invoices);\n</code></pre> <p>For more complex operations present in standard processes, the <code>setResponseActionsBuilder()</code> method can be used to set a response builder. This follows the same existing logic when using a <code>BaseProcessActionHandler</code> class.</p> <p>The main logic of the process can be constructed as any process which previously extended the <code>BaseProcessActionHandler</code> class. It should be trivial to port existing processes to Actions.</p> <p>Examples of other Actions implemented in Etendo are usually present in the <code>com.smf.jobs.defaults</code> package.</p> <p>A full example of an Action java class is shown below:</p> <pre><code>package com.smf.jobs.defaults;\n\nimport com.smf.jobs.ActionResult;\nimport com.smf.jobs.Result;\nimport com.smf.jobs.Action;\nimport org.apache.commons.lang.mutable.MutableBoolean;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\nimport org.codehaus.jettison.json.JSONException;\nimport org.codehaus.jettison.json.JSONObject;\nimport org.openbravo.advpaymentmngt.ProcessInvoiceUtil;\nimport org.openbravo.base.weld.WeldUtils;\nimport org.openbravo.client.kernel.RequestContext;\nimport org.openbravo.erpCommon.utility.OBDateUtils;\nimport org.openbravo.erpCommon.utility.OBError;\nimport org.openbravo.model.common.invoice.Invoice;\nimport org.openbravo.service.db.DalConnectionProvider;\nimport org.openbravo.service.json.JsonUtils;\n\nimport javax.inject.Inject;\nimport java.text.ParseException;\n\n/**\n * Action for processing invoices.\n * Allows for the same actions available in the UI as part of a Job.\n */\npublic class ProcessInvoices extends Action {\n    Logger log = LogManager.getLogger();\n\n    @Inject\n    private WeldUtils weldUtils;\n\n    @Override\n    protected ActionResult action(JSONObject parameters, MutableBoolean isStopped) {\n        var result = new ActionResult();\n\n        try {\n            var input = getInputContents(getInputClass());\n            var documentAction = parameters.getString(\"DocAction\");\n            var voidDate = parameters.isNull(\"VoidDate\") ? null : parameters.getString(\"VoidDate\");\n            var voidAcctDate = parameters.isNull(\"VoidAccountingDate\") ? null : parameters.getString(\"VoidAccountingDate\");\n            var processMessages = new StringBuilder();\n            int errors = 0;\n\n            result.setType(Result.Type.SUCCESS);\n\n            for (Invoice invoice : input) {\n                var message = processInvoice(invoice, documentAction, voidDate, voidAcctDate);\n                if (message.getType().equals(\"Error\")) {\n                    errors++;\n                }\n                if (message.getMessage().isBlank()) {\n                    processMessages.append(invoice.getDocumentNo()).append(\": \").append(message.getTitle()).append(\"\\n\");\n                } else {\n                    processMessages.append(invoice.getDocumentNo()).append(\": \").append(message.getMessage()).append(\"\\n\");\n                }\n            }\n\n            if (errors == input.size()) {\n                result.setType(Result.Type.ERROR);\n            } else if (errors &gt; 0) {\n                result.setType(Result.Type.WARNING);\n            }\n\n            if (input.size() &gt; 1) {\n                // Show the message in a pop up when more than one invoice was selected, for better readability.\n                var jsonMessage = new JSONObject();\n                jsonMessage.put(\"message\", processMessages.toString().replaceAll(\"\\n\",\"\"));\n                result.setResponseActionsBuilder(getResponseBuilder().addCustomResponseAction(\"smartclientSay\", jsonMessage));\n            }\n\n            result.setMessage(processMessages.toString());\n            result.setOutput(getInput());\n\n\n        } catch (JSONException | ParseException e) {\n            log.error(e.getMessage(), e);\n            result.setType(Result.Type.ERROR);\n            result.setMessage(e.getMessage());\n        }\n\n        return result;\n    }\n\n    private OBError processInvoice(Invoice invoice, String docAction, String _strVoidDate, String _strVoidAcctDate) throws ParseException {\n\n        var processor = weldUtils.getInstance(ProcessInvoiceUtil.class);\n        var strVoidDate = \"\";\n        var strVoidAcctDate = \"\";\n\n        if (_strVoidDate != null &amp;&amp; _strVoidAcctDate != null) {\n            // Convert from the JSON date format to the OBProperties date format\n            var voidDate = JsonUtils.createDateFormat().parse(_strVoidDate);\n            var voidAcctDate = JsonUtils.createDateFormat().parse(_strVoidAcctDate);\n\n            strVoidDate = OBDateUtils.formatDate(voidDate);\n            strVoidAcctDate = OBDateUtils.formatDate(voidAcctDate);\n        }\n\n        return processor.process(\n                invoice.getId(),\n                docAction,\n                strVoidDate,\n                strVoidAcctDate,\n                RequestContext.get().getVariablesSecureApp(),\n                new DalConnectionProvider(false)\n        );\n    }\n\n    @Override\n    protected Class&lt;Invoice&gt; getInputClass() {\n        return Invoice.class;\n    }\n}\n</code></pre>","tags":["How to","Jobs","Actions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-jobs-and-actions/#extend-and-execute-actions","title":"Extend and Execute Actions","text":"<p>It is also possible to extend actions by adding new functionality. The following is an example of extending the <code>com.smf.jobs.defaults.ProcessOrders</code> class found inside the standard actions distributed with Etendo.</p> <pre><code>public class ExtendProcessOrder extends com.smf.jobs.defaults.ProcessOrders {\n\n  public ExtendProcessOrder() {\n    super();\n  }\n\n  public ActionResult run(Data input, JSONObject param, MutableBoolean stopped) {\n    setParameters(param);\n    return super.run(input, stopped);\n  }\n\n}\n\npublic static void executeProcessOrderAction(Order order) {\n    try {\n      ExtendProcessOrder process = WeldUtils.getInstanceFromStaticBeanManager(ExtendProcessOrder.class);\n      JSONObject jsonData = new JSONObject();\n      jsonData.put(\"DocAction\", \"CO\");\n      Data data = new Data(jsonData, Order.class);\n      List&lt;BaseOBObject&gt; orderList = new LinkedList&lt;&gt;();\n      OBDal.getInstance().refresh(order);\n      orderList.add(order);\n      data.setContents(orderList);\n\n      final MutableBoolean mutableBoolean = new MutableBoolean(false);\n      var result = process.run(data, jsonData, mutableBoolean);\n      if (result.getType().equals(Result.Type.ERROR)) {\n        throw new OBException(result.getMessage());\n      }\n    } catch (Exception e) {\n      throw new OBException(e.getMessage());\n    }\n  }\n</code></pre> <p>It is necessary to implement a method that gets and executes the current action, in our example we implement <code>executeProcessOrderAction(Order order)</code> which dynamically gets an instance of the <code>ExtendProcessOrder</code> class and executes it. It is also possible to add validations and override the original methods.</p>","tags":["How to","Jobs","Actions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-jobs-and-actions/#how-to-extend-an-action-using-preaction-and-postaction-hooks","title":"How to extend an Action using preAction and postAction hooks","text":"<p>There is a way to extend an Action without modifying it. This is done by implementing the pre and post hooks that are available in the <code>com.smf.jobs.Action</code> class.</p> <p>When an Action is executed, all the implementation of the PreActionHook are executed before the run method of the Action, and all the implementation of the PostActionHook, are executed. This allows for the extension of the Action without modifying the original code, to add validations, or to execute additional logic.</p>","tags":["How to","Jobs","Actions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-jobs-and-actions/#example-of-an-action","title":"Example of an Action","text":"<p>The following is an example of an Action that puts information in a Singleton class.</p> <pre><code>package com.smf.jobs;\n\nimport java.util.HashMap;\n\nimport org.apache.commons.lang.mutable.MutableBoolean;\nimport org.codehaus.jettison.json.JSONObject;\nimport org.openbravo.base.structure.BaseOBObject;\n\npublic class TestAction extends Action {\n  private HashMap&lt;String, Boolean&gt; metadata = new HashMap&lt;&gt;();\n\n  @Override\n  protected ActionResult action(JSONObject parameters, MutableBoolean isStopped) {\n    SingletonToTestHooks.getInstance().setMetadata(\"actionExecuted\", true);\n    var res = new ActionResult();\n    res.setType(Result.Type.SUCCESS);\n    res.setMessage(\"Test action executed\");\n\n    return res;\n  }\n\n\n  @Override\n  protected Class&lt;?&gt; getInputClass() {\n    return BaseOBObject.class;\n  }\n}\n</code></pre>","tags":["How to","Jobs","Actions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-jobs-and-actions/#implementing-the-preactionhook","title":"Implementing the PreActionHook","text":"<p>The following is an example of a PreActionHook that introduce a logic before the Action is executed.</p> <pre><code>package com.smf.jobs;\n\nimport javax.enterprise.context.ApplicationScoped;\n\nimport org.codehaus.jettison.json.JSONObject;\nimport org.openbravo.client.kernel.ComponentProvider;\n\nimport com.smf.jobs.interfaces.PreActionHook;\n\n/**\n * PreActionHook that sets a property in a singleton instance, before the action: TestAction is\n * executed.\n */\n@ApplicationScoped\n@ComponentProvider.Qualifier(\"com.smf.jobs.TestAction\")\npublic class TestActionPreHook implements PreActionHook {\n\n  /**\n   * Returns the priority of this pre-action hook.\n   * &lt;p&gt;\n   * This method returns the priority value which determines the order in which the hook is executed.\n   *\n   * @return The priority value of this pre-action hook.\n   */\n  @Override\n  public int getPriority() {\n    return 121;\n  }\n\n  /**\n   * Checks if this pre-action hook applies to the given parameters.\n   * &lt;p&gt;\n   * This method determines if the pre-action hook should be applied based on the provided parameters.\n   *\n   * @param parameters\n   *     The JSON object containing the parameters.\n   * @return true if the pre-action hook applies, false otherwise.\n   */\n  @Override\n  public boolean applies(JSONObject parameters) {\n    return true;\n  }\n\n  /**\n   * Executes the pre-action hook with the given action.\n   * &lt;p&gt;\n   * This method runs the pre-action hook logic using the provided action JSON object.\n   *\n   * @param action\n   *     The JSON object containing the action data.\n   */\n  @Override\n  public void run(JSONObject action) {\n    SingletonToTestHooks.getInstance().setMetadata(\"propAddedByPreHook\", true);\n  }\n}\n</code></pre>","tags":["How to","Jobs","Actions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-jobs-and-actions/#implementing-the-postactionhook","title":"Implementing the PostActionHook","text":"<p>The following is an example of a PostActionHook that introduce a logic after the Action is executed. Its pretty similar to the PreActionHook.</p> <p><pre><code>package com.smf.jobs;\n\nimport javax.enterprise.context.ApplicationScoped;\n\nimport org.codehaus.jettison.json.JSONObject;\nimport org.openbravo.client.kernel.ComponentProvider;\n\nimport com.smf.jobs.interfaces.PostActionHook;\n\n/*\n * PostActionHook that sets a property in a singleton instance, after the action: TestAction is\n * executed.\n */\n@ApplicationScoped\n@ComponentProvider.Qualifier(\"com.smf.jobs.TestAction\")\npublic class TestActionPostHook implements PostActionHook {\n\n  /**\n   * Returns the priority of this post-action hook.\n   * &lt;p&gt;\n   * This method returns the priority value which determines the order in which the hook is executed.\n   *\n   * @return The priority value of this post-action hook.\n   */\n  @Override\n  public int getPriority() {\n    return 10;\n  }\n\n  /**\n   * Checks if this post-action hook applies to the given parameters.\n   * &lt;p&gt;\n   * This method determines if the post-action hook should be applied based on the provided action and result.\n   *\n   * @param action\n   *     The JSON object containing the action data.\n   * @param result\n   *     The ActionResult object containing the result data.\n   * @return true if the post-action hook applies, false otherwise.\n   */\n  @Override\n  public boolean applies(JSONObject action, ActionResult result) {\n    return true;\n  }\n\n  /**\n   * Executes the post-action hook with the given action and result.\n   * &lt;p&gt;\n   * This method runs the post-action hook logic using the provided action and result JSON objects.\n   *\n   * @param actionParam\n   *     The JSON object containing the action data.\n   * @param result\n   *     The ActionResult object containing the result data.\n   */\n  @Override\n  public void run(JSONObject actionParam, ActionResult result) {\n    SingletonToTestHooks.getInstance().setMetadata(\"propAddedByPostHook\", true);\n  }\n}\n</code></pre> After the Action is executed, the SingletonToTestHooks instance will have the properties <code>propAddedByPreHook</code>, <code>propAddedByPostHook</code> and <code>actionExecuted</code> set to <code>true</code>.</p>","tags":["How to","Jobs","Actions"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-scan-process/","title":"How to Create Scan Process","text":"","tags":["How to","Scan Process","Process Definition"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-scan-process/#overview","title":"Overview","text":"<p>This document explains how to define a scanning process that can be executed from the mobile application to scan codes using the mobile camera.</p> <p>It is important to note that any scanning process must have these specific steps:</p> <ul> <li>Grouper: The items that are going to be scanned must be grouped under a container.</li> <li>Items: Here you can scan different types of barcodes (in all encodings) or QR representing different items such as products, invoices, assets, etc...</li> </ul> <p>Optional:</p> <ul> <li>Quantity: It is possible to specify the quantity of the scanned items.</li> </ul>","tags":["How to","Scan Process","Process Definition"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-scan-process/#scanning-process-definition-in-etendo","title":"Scanning process definition in Etendo","text":"<p>Warning</p> <p>The environment must have at least one module under development, and the process identifier must include the prefix of that module.</p> <ol> <li> <p>First of all, you have to create a process. Log in as \"System administrator. Open the <code>Application</code> &gt; <code>Application Dictionary</code> &gt; <code>Process Definition</code> window and create a new record.</p> <p></p> <ul> <li>Module: It refers to the module where the process will be added.</li> <li>Identifier: It is the identifier used to save the process in the database.</li> <li>Name: It is the name assigned to the process, which will be shown in the application.</li> <li>UI pattern: you must select standard.</li> <li>Handler: here you enter the Java class that is executed when the process is invoked.</li> <li>Data access: you must select Entity/Organization.</li> <li>Help/Comment: This section is displayed when the process is started. It briefly describes to the user what the process will be about.</li> <li>Parameter:</li> <li>Module: Module to which the parameter belongs, by default it is the same as the one assigned to the parent process.</li> <li>Name: It is the name that will be shown inside the entries in the mobile application.</li> <li>DB Column Name: It is the name with which the parameter is stored in the database.</li> <li>Sequence: It is an identifier of the order in which the fields are displayed.</li> <li>Reference: It is an identifier of the type of reference stored.</li> <li>Key Reference: It is the specific type of the referenced data.</li> <li>System element: This field refers to the type of data associated to the parameter.</li> <li>Help/Comment: Must be completed in case you want to show help on how the process continues when the parameter is displayed.</li> </ul> <p>Info</p> <p>It is important to define all the parameters specified in the screenshot, and with the same types of references for the mobile process to behave properly. The name of each parameter must be customized for each process. Optional: It is posible to add a selector (in case the element to scan has selectors defined) and quantity parameter (to define the amount of items scanned).</p> </li> <li> <p>Define a db column in the table in which you want to add a scan process, to add a button to execute the process. E.g.: </p> <pre><code>ALTER TABLE a_asset ADD COLUMN smfms_scan_process CHARACTER(1);\n</code></pre> </li> <li> <p>To associate the process with the button,open <code>Aplication</code> &gt; <code>Aplication Dictionary</code> &gt; <code>Tables and Colums</code>, search the table and press CREATE COLUMNS FROM DB. This process will create the column.</p> </li> <li> <p>Change the reference to Button and in Process Definition select the process created recently.</p> <p></p> </li> <li> <p>In <code>Application</code> &gt; <code>Application Dictionary</code> &gt; <code>Windows,Tabs and Fields</code>, search for the windows where you want the process.    E.g. Search asset windows and then assets scan field in the main tab search. Uncheck \"Displayed\" (because the scan should only be shown in the mobile app).</p> <p></p> </li> </ol> <p>Success</p> <p>When the process is executed from the mobile application, a Json will be sent to the backend with all the scanned information. This data must be processed from the Java class defined in the handler and the expected functionality must be performed. An Example of this Java class is <code>InventoryScan</code>, which can be found in the <code>com.smf.mobile.scan</code> module.</p>","tags":["How to","Scan Process","Process Definition"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/","title":"How to Define a Table as a Tree","text":"","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#overview","title":"Overview","text":"<p>If a table contains data that is bound to be represented hierarchically using a tree, the developer can define tree categories for it.</p> <p>Defining tree categories for a table has two advantages:</p> <ul> <li>It enables using the tree grid view for tabs associated with that table.</li> <li>It enables using that table in Tree Selectors.</li> </ul>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#table-tree-category-subtab","title":"Table Tree Category subtab","text":"<p>The Table Tree Category tab allows to define tree categories for tables. It is possible to define several tree categories for a table, if it can be expresses in different ways hierarchically.</p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#enabling-the-table-tree-category-subtab","title":"Enabling the Table Tree Category subtab","text":"<p>The Table Tree Category is a subtab of the header tab of the Tables and Columns windows. It is hidden by default, in order to enable it the user has to check the table Is Tree flag.</p> <p></p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#tree-structures","title":"Tree Structures","text":"<p>There are three tree structures available:</p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#ad-tree-structure","title":"AD Tree Structure","text":"<p>If this structure is used, the information needed to handle the hierarchy of the tree data will be stored internally by Etendo in the <code>AD_Tree</code> and <code>AD_TreeNode</code> tables.</p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#link-to-parent-tree-structure","title":"Link to Parent Tree Structure","text":"<p>This structure should be used if the table contains a column that represents the parent node of the record. For instance, consider a table called <code>Employee</code>, that has a column called <code>reportsTo</code>. This column points to the employee who the current employee must report to.</p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#custom-tree-structure","title":"Custom Tree Structure","text":"<p>There may be other cases where the information needed to handle the hierarchy is stored within the table but by means other than a column pointing directly to the parent node. For instance, this is the case of the <code>AD_Tab</code> table, where the hierarchy of the tabs is defined using the <code>seqNo</code> and <code>tabLevel</code> columns. In this case, the user has to provide a manual datasource to handle the tree hierarchy.</p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#common-fields-for-all-tree-structures","title":"Common Fields for all Tree Structures","text":"<p>The following fields apply to all trees, regardless of its tree structure:</p> <ul> <li>Name: Name of the tree. This is the display field shown in the references to this table from the Tabs and the Tree Reference.</li> <li>Tree Structure: Tree structure that this tree will use</li> <li>Is Ordered: This flag specifies if the tree is ordered, that is, if it matters the order of the nodes within its parent node.</li> <li>Is Parent Selection Allowed: If false, then in the tree references that point to this tree will only allow to pick leaf nodes. Otherwise it will be possible to select both folder and leaf nodes.</li> <li>Is Main Tree: Several trees can be defined for a table, but only one of them can be the main tree. Each tree can define a different behavior for the creation and deletion of nodes, but only the behavior defined by the main tree will be taken into account.</li> <li>Apply HQL Where Clause to Child Nodes: If this property is set, then if there is a HQL Where Clause defined for the table, it will be applied to all nodes. If it is unchecked, then it will be applied only to the root nodes. This field should only be unchecked in the tree grid view should show records that are not shown in the standard grid view. For instance, consider a sub tab called Children, that shows the children of a person. The HQL Where Clause of the table is in charge of showing only the children of the person selected in the parent tab. The user might decide that he wants to see all the person descendants in the tree grid view, so the HQL Where Clause should only be applied to the root nodes.</li> <li>Node Deletion Policy: The are two options:<ul> <li>Reparent Child Nodes: If a node is deleted, all its child nodes are transfered to its parent node.</li> <li>Do Not Allow If Has Children: A node with children cannot be deleted.</li> </ul> </li> </ul>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#adtree-structure-fields","title":"ADTree Structure Fields","text":"<ul> <li>Handle Nodes Manually: Each time a new record is created or deleted in a table that contains an <code>ADTree</code>, an <code>ADTree</code> node must be created or deleted respectively. The developer can define using this flag if Etendo should automatically create and delete the <code>ADTree</code> nodes, or if the new nodes are going to be handled manually (i.e. using triggers or event handlers).</li> </ul>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#linktoparent-structure-fields","title":"LinkToParent Structure Fields","text":"<ul> <li>Link to Parent Column: Column that points to the parent node of the record.</li> <li>Node Id Column Column: Column pointed by the Link to Parent Column. In most cases the key column of the table should be used.</li> <li>Has Multiparent nodes: In some cases the table contains hierarchical data that is not strictly a tree because each record may have several parent nodes. Consider for instance a table that represents product bundles. Each bundle can contain several bundles (has several children), and be contained in several other bundlers (has several parents). Only if this is the case should this flagged be checked.</li> </ul>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#custom-tree-structure-fields","title":"Custom Tree Structure Fields","text":"<ul> <li>Datasource: A datasource that will handle all the tree operations. </li> </ul> <p>Info</p> <p>For more information, visit How to Create a Custom Tree.</p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#enabling-the-tree-grid-view-in-a-tab","title":"Enabling the Tree Grid View in a Tab","text":"<p>In order to enable the Tree Grid View in a Tab, the system admin has to pick a tree category in the Table Tree Category field.</p> <p>By default, the root nodes will be those whose parent is null or '0'. The user can overwrite this by defining a HQL Where Clause for Root Nodes that will be used to pick the root nodes for this tab.</p> <p></p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-a-table-as-a-tree/#defining-a-tree-selector","title":"Defining a Tree Selector","text":"<p>Tables that have trees defined are bound to be used in Tree Selectors. Tree Selector are a variant of the Etendo selectors, that take advantage of the hierarchical data of the tables, allowing to use trees for filtering and picking records.</p> <p>Info</p> <p>For more information, visit How to Create a Tree Selector. </p> <p>This work is a derivative of How to define a table as a tree by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo classic","Table","Tree","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-display-logic-evaluated-at-server-level/","title":"How to define Display Logic Evaluated at Server Level","text":"","tags":["How to","Etendo classic","Display logic","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-display-logic-evaluated-at-server-level/#overview","title":"Overview","text":"<p>With the introduction of this functionality, it is possible to define in Openbravo Display Logic that are going to be evaluated at Server Level.</p> <p>This means that the expression for this particular Display Logic is going to be evaluated while generating the code for the final Window instead of being evaluated when the Window is loaded.</p> <p>By doing so, it is possible to avoid blank fields when the field should not be shown. Instead, the fields are rearranged and the Window looks more clean.</p>","tags":["How to","Etendo classic","Display logic","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-display-logic-evaluated-at-server-level/#usage","title":"Usage","text":"<p>In the Windows, Tabs &amp; Fields Window, there is a new field named Display Logic Evaluated in the Server .</p> <p>In this field, it is possible to define an expression that will be evaluated to decide whether that particular field must be shown or not.</p> <p>This expression must follow the same syntactic rules that are used in the normal Display Logic. The expression can evaluate Preferences, but only those defined at System Level.</p> <p>An example of an expression would be: <code>@uomManagement@ = 'Y' &amp; @enableNegativeStockCorrections@ = 'Y'</code></p> <p></p>","tags":["How to","Etendo classic","Display logic","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-define-display-logic-evaluated-at-server-level/#limitations","title":"Limitations","text":"<p>Since this functionality is going to be evaluated at a System Level (the visibility of the fields is going to be the same for all the Clients, Organizations and Users), it is possible to use Preferences, but only those ones that have been defined at System Level.</p> <p>This work is a derivative of How to define Display Logic Evaluated at Server Level by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo classic","Display logic","Fields","Application dictionary"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/","title":"How to Develop a DAL Background Process","text":"","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/#overview","title":"Overview","text":"<p>A background process is a process which runs at regular intervals. For this section we will develop a background process for the following scenario:</p> <p>Say our customer wants to have sales information for the last 6 months of each product in the description field.</p> <p>A background process needs to (re)calculate the sales numbers on a regular basis and save them into the Description field of each product that is marked as being sold. Our main Product window's tab should end up similar to:</p> <p></p> <p>Consider that this is a simple exercise and that we are demonstrating how a background process is developed. The above example would probably better be implemented by first adding a new field to the <code>M_PRODUCT</code> database table that would hold this information. However, for the purpose of this exercise, we will just store it in the Description field.</p> <p>In this section, it will be shown how a java process can be implemented as a background process. A java process can however also be called directly from the user interface and have a user interface which allows entering parameters. </p> <p>Info</p> <p>For a generic description of java processes see Processes.</p>","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/#definition-within-the-application-dictionary","title":"Definition within the application dictionary","text":"<p>Background processes are defined within the <code>Application Dictionary</code> &gt; <code>Report and Process</code> window. Use the System Administrator role to create a new record as indicated below:</p> <p></p> <p>The following fields are vital for the definition of a background process: </p> <ul> <li>Module - Your custom module that this new background process will belong to; note that this will consequently indicate the location on the hard drive and the package it must belong to </li> <li>Search Key - Unique identifier of the process; a good practice is to use the class name </li> <li>Name - A user friendly name of the process </li> <li>UI Pattern - Should be set to Manual since Etendo ERP does not need to generate any UI windows </li> <li>Background - Indicates that this process is a background process which consequently also displays the Java Class Name field </li> <li>Java Class Name - The full specification of the class name including the package (this package must follow the package structure of your module specified above): <code>com.etendoerp.client.application.examples.ProductRevenueCalculation</code></li> </ul>","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/#process-and-dalbaseprocess","title":"Process and DalBaseProcess","text":"<p>Before continuing, decide how the background process will perform the database operations. We have two options:</p> <ul> <li>Use the XSQL file that will get converted to a Java class by the SQLC core library upon runtime. If this option is used, your background Java class should implement the Process interface and implement the <code>execute</code> method to perform our tasks. </li> </ul> <p>Info</p> <p>Find this interface in <code>src/org/openbravo/scheduling/Process.java</code>. </p> <ul> <li>Use the new Data Access Layer which provides mid-tier POJOs through which we can manipulate database tables. If this method is used, your background Java class must extend the DalBaseProcess class and implement the <code>doExecute</code> method that performs your task. This will give it access to the correct data context provided by DAL and at the same time, take care of authentication and privileges. </li> </ul> <p>Info</p> <p>Find the abstract class in <code>src/org/openbravo/service/db/DalBaseProcess.java</code> . </p> <p>Since the first method will eventually become deprecated due to database dependency, the second one is the prudent option to take.</p> <p>Note</p> <p>Some understanding of the Hibernate Criteria API is beneficial when using the DAL. Read more information for a detailed description of this API.</p> <p>The Data Access Layer is discussed in several other articles and sections.</p> <p>Info</p> <p>For more information, read the Data Access Layer reference manual.</p>","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/#implementation","title":"Implementation","text":"<p>The example module implements the background process in the <code>modules/org.openbravo.client.application.examples/src/org.openbravo.client.application.examples.ProductRevenueCalculation.java</code></p> ProductRevenueCalculation.java<pre><code>// assign the background process to a package that belongs to the \n// main package of the module this custom development belongs to  \npackage com.etendoerp.client.application.examples;\n\nimport java.math.BigDecimal;\nimport java.util.Calendar;\n\u00a0\nimport org.hibernate.Criteria;\nimport org.hibernate.criterion.Projections;\nimport org.hibernate.criterion.Restrictions;\nimport org.openbravo.dal.service.OBCriteria;\nimport org.openbravo.dal.service.OBDal;\nimport org.openbravo.model.common.order.OrderLine;\nimport org.openbravo.model.common.plm.Product;\nimport org.openbravo.scheduling.ProcessBundle;\nimport org.openbravo.scheduling.ProcessLogger;\nimport org.openbravo.service.db.DalBaseProcess;\nimport org.quartz.JobExecutionException;\n\u00a0\n// the background process needs to extend DalBaseProcess since\n// we will be using DAL objects to perform database operations\npublic class ProductRevenueCalculation extends DalBaseProcess {\n\u00a0\n  static int counter = 0;\n\u00a0\n  private ProcessLogger logger;\n\u00a0\n  // abstract method doExecute needs to be implemented and carries\n  // with itself the ProcessBundle object deriving from Openbravo Quartz\n  // scheduler\n  public void doExecute(ProcessBundle bundle) throws Exception {\n\u00a0\n    logger = bundle.getLogger(); // this logger logs into the LOG column of\n    // the AD_PROCESS_RUN database table\n    BigDecimal sumAmount = BigDecimal.ZERO;\n\u00a0\n    logger.log(\"Starting background product revenue calculation. Loop \" + counter + \"\\n\");\n\u00a0\n    // define time 6 months ago from today which is the timespan that our\n    // calculation will consider\n    Calendar timeSixMonthsAgo = Calendar.getInstance();\n    timeSixMonthsAgo.add(Calendar.DAY_OF_MONTH, -180);\n\u00a0\n    try {\n      // get all products that are sold (M_PRODUCT.ISSOLD = 'Y')\n      final OBCriteria&lt;Product&gt; productList = OBDal.getInstance().createCriteria(Product.class);\n      productList.add(Restrictions.eq(Product.PROPERTY_SALE, true));\n\u00a0\n      logger.log(\"No of products = \" + productList.list().size() + \"\\n\");\n\u00a0\n      // loop through all products that are sold and calculate revenues\n      // for each\n      for (Product product\u00a0: productList.list()) {\n\u00a0\n        sumAmount = BigDecimal.ZERO;\n\u00a0\n        // select lines from C_ORDERLINE table that match the product\n        final Criteria orderLineList = OBDal.getInstance().createCriteria(OrderLine.class)\n            .add(Restrictions.eq(OrderLine.PROPERTY_PRODUCT, product));\n\u00a0\n        // filter out lines that belong to sales (as opposed to\n        // purchase) and fit within the last six months\n        //\n        // when you want to filter on a property of an associated entity\n        // then the property of that association needs an alias, see\n        // here: http://www.javalobby.org/articles/hibernatequery102/\n        orderLineList.createAlias(OrderLine.PROPERTY_SALESORDER, \"order\")\n            .add(Restrictions.eq(\"order.salesTransaction\", true))\n            .add(Restrictions.gt(\"order.orderDate\", timeSixMonthsAgo.getTime()));\n\u00a0\n        // Sum line amounts grouped by product\n        orderLineList.setProjection(Projections.projectionList()\n            .add(Projections.sum(OrderLine.PROPERTY_LINENETAMOUNT))\n            .add(Projections.groupProperty(OrderLine.PROPERTY_PRODUCT)));\n\u00a0\n        // due to grouping and sum operation there will really only be\n        // one resulting record but in theory there could be more (a\n        // list)\n        for (Object o\u00a0: orderLineList.list()) {\n          // the query returns a list of arrays (columns of the query)\n          final Object[] os = (Object[]) o;\n          sumAmount = (BigDecimal) os[0];\n          final Product p = (Product) os[1];\n          logger.log(p.getName() + \" Amount \" + sumAmount + \"\\n\");\n        }\n        product.setDescription(\"6 monthRevenue = \" + sumAmount);\n      }\n\u00a0\n    } catch (Exception e) {\n      // catch any possible exception and throw it as a Quartz\n      // JobExecutionException\n      throw new JobExecutionException(e.getMessage(), e);\n    }\n  }\n}\n</code></pre>","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/#compiling-the-application","title":"Compiling the application","text":"<p>Using the command line compilation, use the <code>./gradlew smartbuild</code> to compile the application's manual code and deploy it to Tomcat context. Then, restart Tomcat.</p>","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/#scheduling","title":"Scheduling","text":"<p>In order for a background process to be executed, it first needs to be scheduled. Using the Etendo Client Admin role (so not the System Admin role) navigate to <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt;<code>Process Request</code> window and enter a new record.</p> <p></p> <p>The following fields are important:</p> <ul> <li>Process - determines which background process to schedule. Only background processes are available in the dropdown</li> <li>Timing - there are several ways of scheduling a process based on the requirement if the process needs to be run once or repetitively. Use the Scheduled option for our purpose </li> <li>Frequency - how often does the process need to run. Based on your selection the fields below will change accordingly for you to be able to enter appropriate interval. Select 02 - Every n minutes for us to be able to see the results immediately</li> <li>Interval in Minutes - How many minutes apart should the process be run in case 02 - Every n minutes was selected above. Enter 10 </li> <li>Num Repetitions - The number of times a process request will repeat after its first execution. Note that 10 repeats will give a total of 11 process executions. Enter 5</li> </ul> <p>Save the record and click on the Schedule Process button in order for the process to finally get scheduled.</p> <p>Note</p> <p>It is needed to use the Etendo Admin role in order for the background process to have access to products of BigBazaar. The client of the role that enters the background process request is used to determine access privileges.  </p>","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/#monitoring","title":"Monitoring","text":"<p>To see the process executions, the status and the log it generated, use the <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt; <code>Process Monitor</code> window. After a minute or two of scheduling the process, entries related to the executions of the new process should be seen.</p> <p></p>","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-develop-a-dal-background-process/#the-result","title":"The Result","text":"<p>To be able to get meaningful results, enter and complete a Sales Order (<code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Sales Order</code>) since the background process calculates revenues within the last 6 months and the demo database can contain records older than that. For example, enter a new Sales Order for a business partner, and enter a line for a certain product, then complete the sales order.</p> <p>Then, navigate to the <code>Master Data Management</code> &gt; <code>Product</code> window and find the product. After a minute or two when the process has recalculated the Description field, you should be able to see the following:</p> <p></p> <p>This work is a derivative of How to develop a DAL background process by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Background Process","Java Development","Data Access Layer","DAL","Database Operations","Process Scheduling"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/","title":"How to Document an Endpoint with OpenAPI","text":"","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#overview","title":"Overview","text":"<p>This documentation details the steps to document API endpoints using the OpenAPI specification. By leveraging Swagger, developers can ensure their APIs are well-documented, standardized, and easy to integrate.</p> <p>Info</p> <p>To be able to include this functionality, the Platform Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Platform Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Platform Extensions - Release notes.</p>","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#define-a-new-openapidefaultrequest","title":"Define a New OpenAPIDefaultRequest","text":"<p>To define a new <code>OpenAPIDefaultRequest</code>, you need to extend the abstract class <code>OpenAPIDefaultRequest</code>.</p> <p>Here is an example:</p> <pre><code>package com.etendoerp.etendorx.openapi;\n\npublic class ImageUploadOpenAPI extends OpenAPIDefaultRequest {\n    public static final String ETENDO_ID_PATTERN = \"^[0-9a-fA-F]{1,32}$\";\n\n    @Override\n    protected Class&lt;?&gt;[] getClasses() {\n        return new Class&lt;?&gt;[]{ com.etendoerp.etendorx.services.ImageUploadServlet.class };\n    }\n\n    @Override\n    protected String getEndpointPath() {\n        return \"/sws/com.etendoerp.etendorx.imageUpload/\";\n    }\n\n    @Override\n    Operation getPOSTEndpoint() {\n        Operation endpoint = new Operation();\n        endpoint.setSummary(\"Upload an image to EtendoERP\");\n        endpoint.setDescription(\"Upload an image to EtendoERP, it can use a configuration associated with a Column ID to automatically resize the image.\");\n\n        Schema reqSchema = new Schema()\n            .addProperty(\"filename\", new StringSchema().description(\"The name of the file\").example(\"image.jpg\"))\n            .addProperty(\"columnId\", new StringSchema().description(\"The column ID where the size and resize configuration is stored\").pattern(ETENDO_ID_PATTERN))\n            .addProperty(\"base64Image\", new StringSchema().description(\"The base64 encoded image\"));\n        reqSchema.required(List.of(\"filename\", \"base64Image\"));\n\n        RequestBody requestBody = new RequestBody().content(new Content()\n            .addMediaType(\"application/json\", new MediaType().schema(reqSchema)));\n        endpoint.requestBody(requestBody);\n\n        return endpoint;\n    }\n}\n</code></pre> <p>This class specifies a POST endpoint for uploading images. It defines the endpoint path, request body schema, and required properties.</p>","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#define-an-openapi-request-flow","title":"Define an OpenAPI Request &amp; Flow","text":"<p>An OpenAPI Request record represents a single API endpoint in your application. OpenAPI Requests are defined in the window <code>OpenAPI Request</code>.</p> <ol> <li>Type: Set the type to <code>Default</code>.</li> <li>Description: Add the endpoint description.</li> <li>Java Class: Specify the Java class created that extends the <code>OpenAPIDefaultRequest</code> class.</li> </ol> <p></p> <p>An OpenAPI Flow groups related API endpoints under a single category or flow. These flows make it easier to organize and navigate the API documentation.</p> <p>Each OpenAPI Flow record can:</p> <ul> <li>Define a flow name and description.</li> <li>Include one or more OpenAPI Requests through the <code>Endpoints</code> tab.</li> <li>Specify which HTTP methods (GET, GET by ID, POST, PUT) the endpoints support using the <code>Endpoints</code> tab fields. When these fields are checked, they generate the corresponding endpoint methods documentation.</li> </ul> <p></p> <p>To ensure an OpenAPI Request appears in Swagger documentation, it must be linked to an OpenAPI Flow. This ensures logical grouping and visibility.</p>","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#additional-openapi-request-types","title":"Additional OpenAPI Request Types","text":"Tab - Etendo RX ModuleWebhook - Webhook Events Module <p>This type allows documenting existing entities or tables without defining a custom class that extends <code>OpenAPIDefaultRequest</code>. It enables seamless interaction with the ERP entities and supports full CRUD operations.</p> <p>To configure a Tab OpenAPI Request:</p> <ol> <li> <p>Create a New Record in the <code>OpenAPI Request</code> Window:</p> <ul> <li>Type: Set the type to Tab.</li> <li>Description: Provide a description of the endpoint.</li> <li>Tabs: A new window tab will be visible. Add a new record and select the desired window tab from the tab selector.</li> </ul> <p></p> </li> <li> <p>Link the Request to an OpenAPI Flow:</p> <ul> <li>Open the <code>OpenAPI Flow</code> window.</li> <li>Add a new record.</li> <li>Link the OpenAPI Request in the child tab.</li> </ul> </li> </ol> <p>Features:</p> <ul> <li>All fields defined in the tab will be available in the endpoint.</li> <li>Callouts, event handlers, triggers, and default values are automatically applied when adding, modifying, or deleting data.</li> <li>Endpoints are session-aware, ensuring data consistency and security.</li> <li>The OpenAPI Specification is autogenerated using the default mandatory fields of the tab, such as POST and PUT properties for the request body. This can be simplified by specifying the required fields in the Fields tab of the OpenAPI Request window. This is possible because the Etendo Headless API endpoints (the endpoints generated by the Tab type) use the same business logic as the Etendo Classic Tab, including default values, callouts, event handlers, triggers, etc. This allows, for example, saving a Sales Order Header with only the Business Partner ID, which behaves exactly the same as the Etendo Classic Tab.</li> </ul> <p>This type allows documenting webhook events without defining a custom class that extends <code>OpenAPIDefaultRequest</code>. It is designed for ease of integration and adherence to standardized formats.</p> <p>To configure a Webhook OpenAPI Request:</p> <ol> <li> <p>Create a New Record in the <code>OpenAPI Request</code> Window:</p> <ul> <li>Type: Set the type to Webhook.</li> <li>Description: Provide a description of the webhook.</li> <li>Webhook Tab: A new window tab will be visible. Add a new record and select the desired webhook from the selector.</li> </ul> <p></p> </li> <li> <p>Link the Request to an OpenAPI Flow:</p> <ul> <li>Open the <code>OpenAPI Flow</code> window.</li> <li>Add a new record.</li> <li>Link the OpenAPI Request in the child tab.</li> </ul> </li> </ol> <p>Features:</p> <ul> <li>Enables clear documentation of webhook events.</li> <li>Simplifies integration by following standardized formats.</li> <li>Easily accessible in the Swagger UI.</li> </ul>","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#check-swagger","title":"Check Swagger","text":"<p>The new endpoint documentation should now be visible at the Swagger UI URL. The URL might vary depending on your deployment but typically follows the format:</p> <p>http://localhost:8080/etendo/web/com.etendoerp.openapi/#/</p> <p>Verify that the new endpoint appears under the defined tag and displays the correct request and response schemas.</p> <p>It will look like this: </p>","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#key-components-of-openapi-integration","title":"Key Components of OpenAPI Integration","text":"","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#openapidefaultrequest","title":"OpenAPIDefaultRequest","text":"<p>The <code>OpenAPIDefaultRequest</code> abstract class provides the base functionality for adding default API endpoints to Swagger documentation. It:</p> <ul> <li>Retrieves related tags and flows.</li> <li>Adds definitions to the OpenAPI object.</li> <li>Supports GET, POST, and PUT operations.</li> </ul>","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#example-of-an-openapi-endpoint-implementation","title":"Example of an OpenAPI Endpoint Implementation","text":"<p>The <code>ImageUploadOpenAPI</code> class demonstrates:</p> <ul> <li>Endpoint Path: <code>/sws/com.etendoerp.etendorx.imageUpload/</code></li> <li>POST Operation: Defines required properties (<code>filename</code>, <code>base64Image</code>) and validates input.</li> <li>Java Class Association: Links to <code>ImageUploadServlet</code> for handling requests.</li> </ul>","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-document-an-endpoint-with-openapi/#openapiendpoint-interface","title":"OpenAPIEndpoint Interface","text":"<p>This interface ensures consistent API endpoint behavior by defining methods such as:</p> <ul> <li><code>boolean isValid(String tag)</code></li> <li><code>void add(OpenAPI openAPI)</code></li> </ul> <p>For example, the <code>ImageUploadOpenAPI</code> class implements these methods to validate tags and add endpoint definitions to the OpenAPI object.</p> <p></p>","tags":["How to","Infrastructure","OpenAPI","Swagger"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-embed-a-widget-into-a-window-tab/","title":"How to embed a Widget into a Window Tab","text":"<p>  This document is still a work in progress. It may contain inaccuracies or errors.   </p>","tags":["How to","Etendo Classic","Widget","Tab"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-embed-a-widget-into-a-window-tab/#introduction","title":"Introduction","text":"<p>This Howto assumes familiarity with both how windows, tabs and fields work and also how widgets are defined in general.</p> <p>This HowTo describes how to embed a widget into a tab of a generated window. In detail it will show the restrictions/differences in the Widget definition itself and explains the following two examples:</p> <ol> <li>How to embed a simple widget into a Tab.</li> <li>How to embed a QueryList widget into a Tab which filters its data according to the currently displayed record.</li> </ol>","tags":["How to","Etendo Classic","Widget","Tab"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-embed-a-widget-into-a-window-tab/#how-to-place-a-widget-into-a-tab","title":"How to place a Widget into a Tab","text":"<p>In this part we will define two simple Widgets and place them into a generated Window/Tab.</p> <p>The goal of this section is to show define a generated Window/Tab which looks like in the following screenshot.</p> <p></p> <p>Widget embedded in a Tab</p> <p>In this example one widget is placed next to a few normal fields in a demo tab. This widget spans a single column but four rows on the top right and does not have a field label (to use the extra space of the label for the content itself). The widget content shows twitter entries including the text \"Openbravo\".</p> <p>The rest of this sections assumes the following action to be done:</p> <ul> <li>Creation of a table.</li> <li>Creation of a window &amp; tab to show this table.</li> </ul> <p>The following now concentrates on how to add the two widgets in the positions shown above to this tab. This will consist of four basic steps for each of the widgets:</p> <ol> <li>Define the widget itself.</li> <li>Define a new reference entry to use the widget.</li> <li>Add a new column &amp; field to the table &amp; tab.</li> <li>Configure the new field to match the layout shown above.</li> </ol> <p>The third step of this uses the same flow as adding any other field and is described in detail in  these  two  other documents.</p> <p>First step is to create a new widget definition which will show the twitter content matching 'Openbravo'. This widget will reuse the code from the already defined Twitter widget shipped with the Openbravo 3 distribution.</p> <p></p> <p>Twitter widget definition</p> <p>One important detail in this definition is that the parameter is defined as Fixed as for widgets embedded in a Window/Tab there are no Widget Instances as described  here.</p> <p>The next step is to define a reference which can be used in the column for the widget.</p> <p></p> <p>Reference definition for Twitter widget</p> <p>The important details in this definition are:</p> <ul> <li>On reference Tab: Parent Reference = OBKMO_Widget in Form Reference</li> <li>On 'Widget in Form' tab: the newly created Widget Class' &amp; unmark _ Show Field Title _to use the extra available space for the widget content itself.</li> </ul> <p>The last step for this widget is to add a column CHAR(1) to the table and a new field to the demo tab. The column needs to be defined according to the following details:</p> <p></p> <p>Column definition for Twitter widget</p> <p>The last step is to add a form field to the tab and configure this form field with the wanted UI details consisting of:</p> <ul> <li>Sequence No: for the usual field ordering.</li> <li>Colspan: to define how many columns the field/widget should occupy.</li> <li>Rowspan: to define how many rows the field/widget should occupy.</li> </ul> <p></p> <p>Field definition for Twitter widget</p>","tags":["How to","Etendo Classic","Widget","Tab"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-embed-a-widget-into-a-window-tab/#how-to-link-a-widget-to-the-current-record","title":"How to link a Widget to the current Record","text":"<p>The goal of this section is to create a QueryList widget similar to the existing Invoice to collect widget available for placement in the workspace which shows data for all business partners.</p> <p>In order to see changes done in the widget is necessary to refresh the entire Workspace not only the tab. This can be done in the Workspace Tab - Manage Workspace - Refresh</p> <p></p> <p>Invoice to collect in Workspace</p> <p>The widget to be create here should instead be shown in the Business Partner window and only show the data for the currently displayed record.</p> <p></p> <p>Invoice to collect in Business Partner Window</p> <p>Comparing to the original Invoices to collect widget the following changes need to be done:</p> <ol> <li>Removal of the Business Partner column, as instead the new widget should be filtered by the current business partner.</li> <li>Removal of the user-editable parameter definition.</li> <li>Addition of one new named parameter businessPartnerID linking to the current record.</li> <li>Changes to the HQL-Query to adjust it to the last two changes listed here.</li> </ol> <p>The following shows the changed HQL in detail. Examining the HQL for the newly added named parameter it can be seen that the named parameter definition is identical to a 'normal' named parameter like it would be used for a user-editable value.</p> <pre><code>  SELECT\n    inv.id AS invoiceId,\n    inv.documentNo AS documentNo,\n    inv.businessPartner.id AS businessPartnerId,\n    inv.businessPartner.name AS businessPartnerName,\n    inv.invoiceDate AS invoiceDate,\n    inv.grandTotalAmount AS grandTotalAmount,\n    inv.currency.iSOCode AS currency,\n    inv.paymentTerms.name AS paymentTerms,\n    inv.outstandingAmount AS outstandingAmount,\n    inv.daysTillDue AS daysTillDue,\n    inv.dueAmount AS dueAmount,\n    inv.organization.name AS organizationName\n  FROM\n    Invoice AS inv\n  WHERE\n    inv.businessPartner.id =\u00a0:businessPartnerID\n  AND inv.processed = true\n  AND inv.paymentComplete = false\n  AND inv.salesTransaction = true\n  AND inv.client.id =\u00a0:client\n  AND inv.organization.id IN (:organizationList)\n  AND @optional_filters@\n  ORDER BY\n    inv.invoiceDate\n</code></pre> <p>The last and interesting difference in the definition of the new parameter businessPartnerID so that it automatically takes the id -value of the currently displayed record.</p> <p>To achieve this a new parameter entry needs to be created having the following details:</p> <ul> <li>DB Column Name = businessPartnerID matching the named parameter in the query.</li> <li>Fixed = not marked.</li> <li>Default Value = ${formValues.id} to refer to the id property of the currently displayed record.</li> </ul> <p>This dynamic parameter definition and the naming rules for the properties are explained in more detail in  this  section of the Widgets documentation.</p> <p>Copying the Invoices to collect widget definition and doing the adjustments described above will lead to a parameter definition as seen in the following image:</p> <p></p> <p>Invoices Widget Parameter definition</p> <p>The placement of this widget definition in the business partner definition works exactly like outlined in the previous section by following its steps of:</p> <ul> <li>Definition new reference for the widget.</li> <li>Adding a new column using this reference.</li> <li>Adding a new field using this column + configuring its layout.</li> </ul> <p>This concludes this HowTo which placed the information about collectible invoices the current Business Partner directly into the view of a user looking at the Business Partner tab.</p> <p>This work is a derivative of How to embed a widget into a window tab by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo Classic","Widget","Tab"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-exclude-database-physical-objects-from-model/","title":"How To Exclude Database Physical Objects From Model","text":"","tags":["How to","Etendo Classic","Model","Database","Exclude","Physical objects"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-exclude-database-physical-objects-from-model/#overview","title":"Overview","text":"<p>Etendo Classic keeps track of the database physical objects (such as tables, views, functions, sequences or triggers) through an utility called <code>dbsourcemanager</code>. This utility is able to export all the database model object definitions to <code>XML</code> files, which are stored in the <code>src-db/database/model</code> folder (both in Core and in modules).</p> <p>This tool is designed to work in a multiplatform environment, both supporting Oracle and PostgreSQL. This means that sometimes if specific syntax or features of a particular Database Management System are used, the tool might not support them.</p> <p>In these cases, a possible approach is to create these specific objects using a Module Script (you can find more about them here), and then exclude them from the database physical model of Etendo Classic.</p>","tags":["How to","Etendo Classic","Model","Database","Exclude","Physical objects"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-exclude-database-physical-objects-from-model/#excluding-objects-in-modules","title":"Excluding objects in modules","text":"<p>Objects are excluded through a file called <code>excludeFilter.xml</code>. This file should be located inside the <code>src-db/database/model/</code> folder of the module (if it doesn't exist, you will need to create it), and it follows a very simple XML format. Here is an example:</p> <pre><code>    &lt;?xml version=\"1.0\"?&gt;\n      &lt;vector&gt;\n        &lt;excludedTable name=\"TEST_TABLE\"/&gt;\n        &lt;excludedView name=\"TEST_VIEW\"/&gt;\n        &lt;excludedFunction name=\"TEST_FUNCTION\"/&gt;\n        &lt;excludedTrigger name=\"TEST_TRIGGER\"/&gt;\n        &lt;excludedSequence name=\"TEST\\_%\"/&gt;\n      &lt;/vector&gt;\n</code></pre> <p>This file will exclude the table TEST_TABLE, the view TEST_VIEW, the function TEST_FUNCTION, and the trigger TEST_TRIGGER from the model, and therefore they will be neither exported nor removed, nor modified in any way during the normal database management tasks (<code>update.database</code> and <code>export.database</code>).</p> <p>The use of SQL Wildcards is supported, so the same treatment will be done to all sequences whose name begins with TEST_. All exclusions whose name contain the <code>%</code> character will be treated as wildcards. When defining an exclusion using a wildcard, remember to escape with a backslash the <code>_</code> characters, unless it is meant to be used as a substitute for any single character.</p> <p>This work is a derivative of How to Exclude Database Physical Objects from Model by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Etendo Classic","Model","Database","Exclude","Physical objects"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-export-sample-data/","title":"How to Export Sample Data","text":"","tags":["How to","Export Sample Data","Extensions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-export-sample-data/#overview","title":"Overview","text":"<p>The objective of this document is to explain how the Etendo sample data is exported using the <code>export.sample.data</code> task.</p>","tags":["How to","Export Sample Data","Extensions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-export-sample-data/#sample-data-dataset","title":"Sample Data Dataset","text":"<p>The tables that will be exported when the <code>export.sample.data</code> task is run are included in the Client Definition dataset. You can read more about datasets in Datasets.</p> <p>Note</p> <p>The way the <code>export.sample.data</code> task currently works, the SQL Where Clause defined in the dataset tables of the Client Definition dataset will be ignored and replaced by a client filter.</p>","tags":["How to","Export Sample Data","Extensions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-export-sample-data/#exporting-the-sample-data","title":"Exporting the Sample Data","text":"<p>To export the sample data of a given client, this <code>export.sample.data</code> gradle task, available from the Etendo root folder must be run. It has the following parameters:</p> <ul> <li>Client: The name of the client whose sample data will be exported.</li> <li>Module: The module where the sample.data will be exported. The exported sample data will be stored in the referencedata/sampledata/clientName folder relative to the module path. To export to the core sample data folder, 'org.openbravo' must be specified in the client parameter.</li> <li>ExportFormat (optional): It is used to specify the export format of the sample data. Currently there are two available export formats: xml (the default one) and copy. The copy export format will be only available when exporting the sample data from a PostgreSQL database. Sample data exported with the copy format can only be imported in PostgreSQL databases. If the copy parameter is used in an Oracle environment, a warning message will be shown and the xml format will be used instead.</li> </ul> <p>For instance, to export the sample data of the 'F&amp;B International Group' client to core using the COPY format, the following command must be used:</p> Terminal<pre><code>./gradlew export.sample.data -Dclient=\"F&amp;B International Group\" -Dmodule=org.openbravo -DexportFormat=copy\n</code></pre> <p>For a more detailed info, visit QA Sample Data Export.</p> <p>This work is a derivative of How to Export Sample Data by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Export Sample Data","Extensions","Etendo Classic"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/","title":"How to Implement a Business Event Handler","text":"","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#overview","title":"Overview","text":"<p>The  business entity event  allows you to implement business logic which reacts to specific events which are fired when entities are updated, deleted or inserted into the database.  Business entity events correspond to triggers in the database.  The main advantage of implementing logic using business entity events instead of in triggers is that you can code your logic in java using your IDE.  This helps productivity and quality as you can code, debug and test in an integrated environment with the rest of your business logic.</p> <p>Some notes on business entity events:</p> <ul> <li>They are fired when an entity instance is updated, deleted or inserted. Before the actual operation has been done in the database, so you can change or add information which persists together with the event entity. </li> <li>Your event handling code runs in the same transaction as the business event, changes you make to the database persist together with the business entity event in one transaction. </li> <li>Business entity events only work when accessing the database through the data access layer, so they do not work for classic windows or direct jdbc calls.</li> <li>You can make use of the full data access layer functionality in your event handling code, you can query, create new objects, persist etc.</li> </ul> <p>Warning: Don't call setters on the instance itself, this does not work because when the event has been broadcasted, Hibernate has already read the state of the object.    So you must change the value through the special <code>setCurrentState</code> method: <code>event.setCurrentState(greetingTitleProperty, title + \".\");</code></p> <p>Business events make use of the event framework provided by the Weld framework. To register an event handler, annotations are used. </p> <p>Note</p> <p>In order to maximize performance, certain part of the classpath are excluded, check out this section if your event handlers are not found.</p> <p>In this section, we will implement an event handler on the Greeting entity. Whenever a title is saved, a Spanish translation will be added. In addition, we will print some messages to the console for other business events.</p> <p></p>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#example-module","title":"Example Module","text":"<p>This section is supported by an example module which shows an example of the code shown and discussed here.</p> <p>The code of the example module can be downloaded from this repository: com.etendoerp.client.application.examples</p>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#the-event-handler-a-first-implementation","title":"The event handler - A first implementation","text":"<p>An event handler is implemented as a normal java class in your module. The key thing is to create methods with an annotation on the parameters. Here is a first simple example of an event handler which listens to events on the Greeting entity:</p> GreetingEventHandler.java<pre><code>class GreetingEventHandler extends EntityPersistenceEventObserver {\n  private static Entity[] entities = { ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME) };\n  private static final Logger logger = LogManager.getLogger();\n\u00a0\n  @Override\n  protected Entity[] getObservedEntities() {\n    return entities;\n  }\n\u00a0\n  public void onUpdate(@Observes EntityUpdateEvent event) {\n    if (!isValidEvent(event)) {\n      return;\n    }\n    logger.info(\"Greeting \" + event.getTargetInstance().getId() + \" is being updated\");\n  }\n\u00a0\n  public void onSave(@Observes EntityNewEvent event) {\n    if (!isValidEvent(event)) {\n      return;\n    }\n    logger.info(\"Greeting \" + ((Greeting) event.getTargetInstance()).getName()\n        + \" is being created\");\n  }\n\u00a0\n  public void onDelete(@Observes EntityDeleteEvent event) {\n    if (!isValidEvent(event)) {\n      return;\n    }\n    logger.info(\"Greeting \" + event.getTargetInstance().getId() + \" is being deleted\");\n  }\n}\n</code></pre> <p>Note</p> <ul> <li>It makes sense to extend the EntityPersistenceEventObserver, it helps to filter for the correct events. </li> <li>The name of the method is not relevant, the relevant thing is the annotation on the parameter and the parameter. Weld uses this to detect and register for which events this class listens to </li> <li>The event handler will be called for events occurring on all entities, therefore each method starts with the if statement with isValidEvent, to filter out unwanted events. </li> <li>The use of the <code>_org.apache.logging.log4j.Logger_</code> class is recommended for logging as shown above </li> </ul> <p>Info</p> <p>Classes extending <code>_EntityPersistenceEventObserver_</code> are defined as <code>_@ApplicationScoped_</code> by default.</p>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#result","title":"Result","text":"<p>When you add the above class to your module, restart the system, then go to the greeting window: http://localhost:8080/etendo/?tabId=282</p> <p>And do some actions you should see the following messages in the console:</p> <pre><code>Greeting FF8081813097E041013097E805F4000F is being updated\nGreeting FF8081813097E041013097E805F4000F is being deleted\nGreeting Mr is being created\n</code></pre>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#event-methods","title":"Event methods","text":"<p>The source code above illustrates how the event methods are implemented:     \u00a0 <pre><code>public void onUpdate(@Observes EntityUpdateEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  logger.info(\"Greeting \" + event.getTargetInstance().getId() + \" is being updated\");\n}\n\u00a0\npublic void onSave(@Observes EntityNewEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  logger.info(\"Greeting \" + ((Greeting) event.getTargetInstance()).getName()\n      + \" is being created\");\n}\n\u00a0\npublic void onDelete(@Observes EntityDeleteEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  logger.info(\"Greeting \" + event.getTargetInstance().getId() + \" is being deleted\");\n}\n</code></pre></p> <p>Note</p> <ul> <li>You only need to implement a method for the event you want to listen to, so if you only need to listen to update events, then only implement a method with the @Observes EntityUpdateEvent parameter. </li> <li>Each method starts with a check if the event is valid, this is needed to filter for relevant events only, see the section below. </li> <li>Within the event handler methods, you can use the api on the event object to detect which is the entity event and to get access to the current and previous state of the entity. See here for more information. </li> </ul>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#filtering-only-relevant-events","title":"Filtering Only Relevant Events","text":"<p>As mentioned above, the event methods get called for all entities of all types.  In our example, we only want to handle events on the Greeting entity. There is specific code in the example above which takes care of this.  It starts in the top of the class:</p> <pre><code>private static Entity[] entities = { ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME) };\n\u00a0\n@Override\nprotected Entity[] getObservedEntities() {\n  return entities;\n}\n</code></pre> <p>The <code>getObservedEntities</code> method is called when you call the <code>isValidEvent</code> method, <code>getObservedEntities</code> returns the entities you want to handle in this event handler.  To make use of it add this code to each event handling method in the beginning:</p> <pre><code>if (!isValidEvent(event)) {\n  return;\n}\n</code></pre> <p>This part is needed because the event methods will be called for entities of all types.  In this example we only want to listen to changes on the Greeting entity.</p>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#adding-some-business-logic","title":"Adding some business logic","text":"<p>In this next step, we add logic to the event handler:</p> <ul> <li>Whenever a greeting gets created/updated, add a . to the title, if it was not already there </li> <li>When a new greeting gets created, add a translation for it. </li> </ul> <p>Note</p> <p>To create a new translation for when a new greeting is added.  For this example, we will be adding a dutch translation.</p>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#changing-the-entity-on-updateinsert","title":"Changing the entity on update/insert","text":"<p>In this step we will be adding some simple logic to the update and save event to add a dot to the title if it not already has one.</p> <pre><code>public void onUpdate(@Observes EntityUpdateEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  final Greeting greeting = (Greeting) event.getTargetInstance();\n  final String title = greeting.getTitle();\n  if (title\u00a0!= null &amp;&amp;\u00a0!title.endsWith(\".\")) {\n    final Entity greetingEntity = ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME);\n    final Property greetingTitleProperty = greetingEntity.getProperty(Greeting.PROPERTY_TITLE);\n    // note use setCurrentState and not setters on the Greeting object directly\n    event.setCurrentState(greetingTitleProperty, title + \".\");\n  }\n  logger.info(\"Greeting \" + event.getTargetInstance().getId() + \" is being updated\");\n}\n\u00a0\npublic void onSave(@Observes EntityNewEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  final Greeting greeting = (Greeting) event.getTargetInstance();\n  // now also add the dot to the title\n  final String title = greeting.getTitle();\n  if (title\u00a0!= null &amp;&amp;\u00a0!title.endsWith(\".\")) {\n    final Entity greetingEntity = ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME);\n    final Property greetingTitleProperty = greetingEntity.getProperty(Greeting.PROPERTY_TITLE);\n    // note use setCurrentState and not setters on the Greeting object directly\n    event.setCurrentState(greetingTitleProperty, title + \".\");\n  }\n\u00a0\n  logger.info(\"Greeting \" + ((Greeting) event.getTargetInstance()).getName()\n      + \" is being created\");\n}\n</code></pre> <p>Let's walk through the code. First, cast the instance and get the title:</p> <pre><code>final Entity greetingEntity = ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME);\nfinal String title = greeting.getTitle();\n</code></pre> <p>If the title does not end on a dot then get the entity and the relevant property:</p> <pre><code>if (title\u00a0!= null &amp;&amp;\u00a0!title.endsWith(\".\")) {\n  final Entity greetingEntity = ModelProvider.getInstance().getEntity(Greeting.ENTITY_NAME);\n  final Property greetingTitleProperty = greetingEntity.getProperty(Greeting.PROPERTY_TITLE);\n</code></pre> <p>Note</p> <p>We use the generated constants to the entity name and property names, this gives compile time checking and is a recommended practice.</p> <p>And then set the current state.</p> <p>Note</p> <p>Don't call setters on the Greeting instance itself, this does not work because when the event has been broadcasted, Hibernate has already read the state of the object. So you must change the value through the special <code>setCurrentState</code> method:</p> <pre><code>event.setCurrentState(greetingTitleProperty, title + \".\");\n</code></pre> <p>The changed entity instance does not need to be saved explicitly, this is done by the data access layer and hibernate automatically.</p> <p>Then test the changes, go to the window (http://localhost:8080/etendo/?tabId=282), enter a new greeting without a dot in the title.  When saving you will see a dot getting added.  Try updating the record, you will have the same behavior.</p>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#adding-a-child-instance","title":"Adding a child instance","text":"<p>As the next step we will be adding logic to the <code>onSave</code> method to create an extra child instance (a new translation).  This is a bit more complex. Add the following code to the onSave method at the end:</p> <pre><code>final GreetingTrl greetingTrl = OBProvider.getInstance().get(GreetingTrl.class);\n// set relevant translation properties\ngreetingTrl.setGreeting(greeting);\n// 171 is dutch, choose any other language..\ngreetingTrl.setLanguage(OBDal.getInstance().get(Language.class, \"171\"));\n// note we can call getters on the targetInstance, but not setters!\ngreetingTrl.setName(greeting.getName());\ngreetingTrl.setTitle(greeting.getTitle());\ngreetingTrl.setTranslation(false);\n\u00a0\n// and add the greetingTrl to the greeting\n// we don't use event.setCurrentState as we get the list and add to it\n// get the trl property for the greeting entity\nfinal Property greetingTrlProperty = greetingEntity\n    .getProperty(Greeting.PROPERTY_GREETINGTRLLIST);\n@SuppressWarnings(\"unchecked\")\nfinal List&lt;Object&gt; greetingTrls = (List&lt;Object&gt;) event.getCurrentState(greetingTrlProperty);\ngreetingTrls.add(greetingTrl);\n\u00a0\n// don't need to save the greetingTrl, it is saved as the child of the greeting\n// OBDal.getInstance().save(greetingTrl);\n</code></pre> <p>Let's walk through the code. First the trl object is created and some properties are set.  Note as the object is not part of the event you can call its setters directly.  The language is arbitrarily chosen.  See the  DAL document for information on the api's you can use to retrieve objects from the database.</p> <pre><code>final GreetingTrl greetingTrl = OBProvider.getInstance().get(GreetingTrl.class);\n// set relevant translation properties\ngreetingTrl.setGreeting(greeting);\n// 171 is dutch, choose any other language..\ngreetingTrl.setLanguage(OBDal.getInstance().get(Language.class, \"171\"));\n// note we can call getters on the targetInstance, but not setters!\ngreetingTrl.setName(greeting.getName());\ngreetingTrl.setTitle(greeting.getTitle());\ngreetingTrl.setTranslation(false);\n</code></pre> <p>Then, as a next step, add the new trl object to the event entity. This is a bit special as we need to update a List property of the event entity. So instead of calling <code>setCurrentState</code> we get the list and add to it. This is a correct way of doing this:</p> <pre><code>// and add the greetingTrl to the greeting\n// we don't use event.setCurrentState as we get the list and add to it\n// get the trl property for the greeting entity\nfinal Property greetingTrlProperty = greetingEntity\n    .getProperty(Greeting.PROPERTY_GREETINGTRLLIST);\n@SuppressWarnings(\"unchecked\")\nfinal List&lt;Object&gt; greetingTrls = (List&lt;Object&gt;) event.getCurrentState(greetingTrlProperty);\ngreetingTrls.add(greetingTrl);\n\u00a0\n// don't need to save the greetingTrl, it is saved as the child of the greeting\n// OBDal.getInstance().save(greetingTrl);\n</code></pre> <p>The trl object is a child of the Greeting event entity and will persist together with it, so it is not necessary to explicitly save it. When you now enter a new entry in the window, you will see an additional translation child record being created.</p> <p></p>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#interrupt-the-save-action","title":"Interrupt the Save Action","text":"<p>Sometimes you need to interrupt the save action because the user is doing something wrong, this can be done throwing an exception</p> <pre><code>public void onUpdate(@Observes\nEntityUpdateEvent event) {\n  if (!isValidEvent(event)) {\n    return;\n  }\n  final OBSA_Orderline_Assign olineAssign = (OBSA_Orderline_Assign) event.getTargetInstance();\n  if (olineAssign.getProductWithStorage().getProduct()\u00a0!= olineAssign.getSalesOrderLine()\n      .getProduct()) {\n    String language = OBContext.getOBContext().getLanguage().getLanguage();\n    ConnectionProvider conn = new DalConnectionProvider(false);\n    throw new OBException(Utility.messageBD(conn, \"OBSA_ErrorProduct\", language));\n  }\n}\n</code></pre>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-implement-a-business-event-handler/#examples-of-business-entity-event-handlers","title":"Examples of Business Entity Event Handlers","text":"<p>Etendo Classic uses business entity event handlers to implement business logic in various locations, here are some examples:</p> <ul> <li>ModuleHandler</li> <li>SetDocumentNoHandler</li> </ul> <p>The complete source code of the example event handler is available here com.etendoerp.client.application.examples</p> <p>This work is a derivative of How to implement a business event handler by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Event Handler","Business Logic","Event Method"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-publish-modules-to-github-repository/","title":"How to Publish Modules to a GitHub Repository","text":"","tags":["How to","GitHub","Module Deployment","Gradle","Publish Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-publish-modules-to-github-repository/#overview","title":"Overview","text":"<p>This article explains how to publish a module to GitHub Repositories.</p> <p>Now, modules will be published in ZIP and JAR format.</p> <p>A published module can be declared as a Gradle dependency, which makes installing or updating modules easier.</p> <p>Using dependencies alongside with Gradle in an Etendo environment can remove the need to transfer the modules from a local machine to the server using FTP, SSH etc. The module is hosted as a package in the repository and  Gradle is in charge of downloading the correct version, and its dependencies.</p> <p>Partners will have access to Etendo\u2019s public and commercial repositories to download standard modules, in addition to this, it is possible to use their own repositories where they can privately store their modules for internal or commercial usage.</p> <p>Requirements</p> <ul> <li>GitHub user and token, with access to read and write packages.</li> <li>A module to be distributed.</li> </ul> <p>Success</p> <p>It is recommended to use GitFlow to manage work flow, versions and tags.</p>","tags":["How to","GitHub","Module Deployment","Gradle","Publish Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-publish-modules-to-github-repository/#deployment","title":"Deployment","text":"<p>Info</p> <p>The module version, group and artifact that will deploy are those declared in the file <code>src-db/database/sourcedata/AD_MODULE.xml</code> file</p>","tags":["How to","GitHub","Module Deployment","Gradle","Publish Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-publish-modules-to-github-repository/#1-create-buildgradle-file","title":"1.  Create build.gradle file:","text":"<p>To generate the <code>build.gradle</code> with all the necessary information to publish, execute the following task:</p> <p>Terminal<pre><code>./gradlew createModuleBuild -Ppkg=&lt;javapackage&gt; -Prepo=&lt;repositoryURL&gt; --info\n</code></pre> Example: Terminal<pre><code>./gradlew createModuleBuild -Ppkg=com.myrepo.test -Prepo=https://maven.pkg.github.com/myrepo/com.myrepo.test --info\n</code></pre></p> <p>Important</p> <pre><code>- If the module depends on other modules or libraries, they need to be specified in the build.gradle file using the implementation configuration.\nBefore adding an Etendo module dependency, they have to be published in the repository.\n- You need to make sure those dependencies are also published.\n- Add the dependencies manually in `build.gradle` file.\n- Add Core dependency to define the range of versions the module is compatible with.\n</code></pre> <p>Info</p> <p>To make use of the dependencies resolution approach, you should declare in the modules dependencies which version of the core your module depends on. If the Etendo Core dependency is omitted, the module can be installed on any version of Etendo, even if there are inconsistencies in the compilation.</p> <p>Modules Dependencies example:</p> build.gradle<pre><code>/**\n*   This file was generated automatically by the 'createModuleBuild' task.\n*   Created at: 2022-12-16T15:41:21.426339Z.\n*\n*   WARNING: Do not put your credentials directly in this file.\n*\n*/\n\ngroup          = \"com.etendoerp\"\nversion        = \"1.0.0\"\ndescription    = \"Test module to publish\"\next.artifact   = \"test\"\next.repository = \"https://maven.pkg.github.com/myrepo/com.myrepo.test\"\n\nconfigurations {\n    moduleDependencyContainer\n}\n\npublishing {\n    publications {\n        \"com.myrepo.test\"(MavenPublication) {\n            from components.java\n            groupId    = group\n            artifactId = artifact\n            version    = version\n        }\n    }\n    repositories {\n        maven {\n            url \"https://maven.pkg.github.com/myrepo/com.myrepo.test\"\n        }\n    }\n}\n\nrepositories {\n    mavenCentral()\n    maven {\n        url \"https://maven.pkg.github.com/myrepo/com.myrepo.test\"\n    }\n}\n\n/**\n* Declare Java dependencies using 'implementation'\n* Ex: implementation \"com.sun.mail:javax.mail:1.6.2\"\n*/\ndependencies {\n        implementation(com.myrepo:dependency.test:1.0.0)\n\n    implementation('com.etendoerp.platform:etendo-core:[22.1.0, x.y.z)')\n}\n</code></pre>","tags":["How to","GitHub","Module Deployment","Gradle","Publish Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-publish-modules-to-github-repository/#2-in-case-of-adding-dependencies-of-a-new-repository-declare-it-in-buildgradle","title":"2.  In case of adding dependencies of a new repository, declare it in <code>build.gradle</code>","text":"build.gradle<pre><code>repositories {\n    mavenCentral()\n    maven {\n        url \"https://maven.pkg.github.com/myrepo/com.myrepo.test\"\n    }\n     maven {\n        url \"https://maven.pkg.github.com/myrepo2/com.myrepo2.test\"\n    }\n}\n</code></pre>","tags":["How to","GitHub","Module Deployment","Gradle","Publish Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-publish-modules-to-github-repository/#3-if-your-module-makes-use-of-dependency-injection-you-need-to-specify-the-location-of-the-beansxml-file","title":"3. If your module makes use of dependency injection, you need to specify the location of the 'beans.xml' file","text":"<p>Add to the build.gradle the location of the beans.xml <pre><code>sourceSets {\n    main {\n        resources {\n            srcDirs(\"etendo-resources\")\n        }\n    }\n}\n</code></pre></p> <p>Create the following structure in the root of your module <pre><code>com.test.yourmodule\n    |--- etendo-resources\n            | --- META-INF\n                    | --- beans.xml\n</code></pre></p> <p>Add to the beans.xml</p> <pre><code>&lt;beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd\" bean-discovery-mode=\"all\" version=\"2.0\"&gt;\n&lt;/beans&gt;\n</code></pre>","tags":["How to","GitHub","Module Deployment","Gradle","Publish Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-publish-modules-to-github-repository/#4-deploy-the-new-module-running-the-commands","title":"4.  Deploy the new module, running the commands :","text":"<p>Info</p> <p>Before publishing a module, it will be compiled and packaged to a JAR format.</p> <p>Terminal<pre><code>./gradlew update.database smartbuild\n</code></pre> Terminal<pre><code>./gradlew publishVersion -Ppkg=&lt;javapackage&gt;\n</code></pre></p> <p>Success</p> <p>Once Gradle finishes the deployment, your module is ready to be used as a dependency.</p>","tags":["How to","GitHub","Module Deployment","Gradle","Publish Modules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-run-an-initial-client-setup-process/","title":"How to Run an Initial Client Setup Process","text":"","tags":["How to","Accounting Schema","Client Setup","Organization Setup","System Administrator"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-run-an-initial-client-setup-process/#overview","title":"Overview","text":"<p>The Initial Client Setup process is a crucial process in Etendo which allows defining information about the client and the accounting schema the organization will use. The information configured through this window sets the bases for the organizational structure and the chart of accounts to be used with every organization of the client. </p> <p>Info</p> <p>It can be run by logging in Etendo as System Administrator role.</p> <p>This process allows to:</p> <ul> <li>Enter the name of the client, the client username and a password.</li> <li>Enter the base currency of the client, that is going to be the currency of the Client regardless of if an Organization which belongs to it might have a different currency.</li> <li>Include Accounting for the client.</li> </ul>","tags":["How to","Accounting Schema","Client Setup","Organization Setup","System Administrator"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-run-an-initial-client-setup-process/#including-accounting-schema","title":"Including accounting Schema","text":"<p>Decide on the accounting schema the organization will use and set the accounting using the Initial Client Set up window.</p>","tags":["How to","Accounting Schema","Client Setup","Organization Setup","System Administrator"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-run-an-initial-client-setup-process/#include-accounting","title":"Include accounting","text":"<p>To include this data, there is a checkbox named Include Accounting which obligates the user to enter a specific chart of accounts. For this, there are two options:</p> <ol> <li>Uploading a <code>CSV</code> file with the chart of accounts, as explained in the Accounting File section below.</li> <li>If you have a localization bundle installed, selecting one of the chart of accounts listed in the Reference data section since these datasets are already installed.</li> </ol> <p>Info</p> <p>It is recommended to have the Include Accounting option checked if the user needs to apply the same chart of accounts to all of its organizations. In case of entering a different chart of accounts for each specific organization, you should run this process without checking the checkbox and then configure the Chart of Accounts in the Initial Organization Setup window.</p> <p>Note</p> <p>In the Reference Data section, the existing datasets will depend on the localization installed, if any. </p> <p></p> <p>If the checkbox Include Accounting is selected and an accounting file or reference data is selected, Etendo creates:</p> <ul> <li>a Fiscal Calendar which can be shared by all the Legal with Accounting organizations types which belongs to that Client and </li> <li>an Account Tree or Chart of Accounts and a General Ledger configuration which is shared by all the organizations created within the Client.</li> </ul> <p>The General Ledger Configuration and the Chart of Accounts created by default can be later on customized. </p> <p>Info</p> <p>For more information, read General Setup. </p> <p>The General Ledger Configuration is linked to the Account Tree as the Account is a mandatory dimension of the general ledger configuration.</p>","tags":["How to","Accounting Schema","Client Setup","Organization Setup","System Administrator"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-run-an-initial-client-setup-process/#accounting-file","title":"Accounting file","text":"<p>Etendo also allows choosing the accounting <code>CSV</code> file with the corresponding chart of accounts (Account Tree) to upload into the system from the field Accounting File. </p> <p></p> <p>Info</p> <p>For more information, read How to Create Accounts Files </p>","tags":["How to","Accounting Schema","Client Setup","Organization Setup","System Administrator"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-run-an-initial-client-setup-process/#module-configuration","title":"Module configuration","text":"<p>Etendo distributes accounting <code>CSV</code> files as modules which can be applied as reference data. These kinds of modules are part of the Etendo localization for a given country.</p> <p>Info</p> <p>The list of available localization bundles is found in the Etendo marketplace.</p> <p>There are some additional modules that may be important for the initial client setup.</p> <p>The key modules include:</p> <ul> <li> <p>Standard document types for orders, invoices, etc, this one is selected by default as it is necessary for creating transactional data such as orders and invoices.</p> </li> <li> <p>Reference data such as master data or configuration data (i.e. tax setup) created for Etendo extension modules.</p> </li> </ul> <p>These modules are useful as tax configurations generally apply to all organizations in a country, and setting standard document types helps avoid inconsistent numbering issues across different organizations.</p> <p>Note</p> <p>It is recommended to install necessary modules for the proper operation of the client, based on their specific requirements.</p> <p>Info</p> <p>Datasets Installation: additional modules can be added from the Enterprise Module Management window within the system.</p> <p>Every new Client created in Etendo centrally maintains at least the mandatory accounting dimensions listed below:</p> <ul> <li>Organization</li> <li>Business Partner</li> <li>and Product</li> </ul> <p>unless the Central Maintenance checkbox is unselected for the Client which would imply the configuration and management of all the accounting dimensions (mandatory and not mandatory) at organization level.</p> <p>To conclude, it is important to carefully conduct the initial setup in Etendo, considering the organization's needs and specific requirements. Additionally, thorough documentation of the accounting structure and module configurations is essential for future reference and efficient system management.</p> <p>Info</p> <p>Visit General Setup to continue with Etendo's initial setup.</p> <p>This work is a derivative of Initial Client Setup by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Accounting Schema","Client Setup","Organization Setup","System Administrator"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/","title":"How to Use Advanced Sequences","text":"<p>title: How to Use Advanced Sequences</p> <p>tags:     - How to     - Sequences     - Transactional Sequences     - Non-Transactional Sequences     - Database Sequence Management</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#sequences","title":"Sequences","text":""},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#overview","title":"Overview","text":"<p>This document covers how to use the implementation of sequences, explain all the features, and give some implementation example cases.</p> <p>There are two base reference implementations defined that you can use or extend:</p> <ul> <li>Transactional Sequences: These sequences lock the table in the database to guarantee \u00a0the generation of identifiers sequentially and avoid duplicates or gaps.</li> <li>Non-Transactional Sequences: In this case, the process to create sequences uses Database Sequences and should be used in cases where the gaps between numbers is not an issue.</li> </ul> <p>Important</p> <p>Please be aware that both Transactional and Non-Transactional Sequences, as configured in our system, are not supported within Database Stored Procedures (PLs). This includes specific processes like POSOrder, which cannot utilize these sequences. Implementing these sequences in PLs, such as within the POSOrder process, may result in system malfunctions or errors. These sequences are tailored for the application layer and may not align with the procedural context of direct database operations.</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#quick-sequence-setup","title":"Quick Sequence Setup","text":"<ol> <li> <p>First, log-in as \u201cSystem administrator\u201d. Open the <code>Application</code> &gt; <code>Application Dictionary</code> &gt;<code>Tables and Columns</code> Select the Column that you want to set as a sequence and change the Reference field to Transactional Sequence or non-Transactional sequence.</p> <p>Info</p> <p>If you want to define a new sequence reference, you must add it in Reference Search Key field and the parent (Base Sequence) must be in the Reference field. See how to create a new reference in new sequence reference.</p> <p> Adding transactional sequence in the invoice table <li> <p>Then, it is necessary to run a process in <code>Application</code> &gt; <code>General Setup</code>&gt; <code>Application</code>&gt; <code>Create Sequences</code> to generate the sequences, selecting the root Organization where they will be created.</p> <p>Warning</p> <p>To run this process, the user must be logged using the role which manages the sequence, not as system administrator.</p> <p>Warning</p> <p>This process will only generate the combinations for organization and document types, in case you want to generate sequences for the new dimensions described below, you must extend the <code>SequencesGenerator</code> action and overwrite the <code>generateSequenceCombination</code> and <code>setSequenceValues</code> methods in order to generate the relevant combinations and set the newly added dimensions. You can also create the required sequences manually.</p> <p> Executing the process to create new sequences <p>After that, in the <code>Document Sequence</code> window you can see the sequences generated.</p> <p> List of sequences generated by the process <p>When you edit the record, you can see:</p> <p> Sequence form view <ul> <li>Organization: Owner organization associated to the sequence.</li> <li>Name: An identifier using the Table and Column associated to the sequence.</li> <li>Description: Field to add information or details about the sequence.</li> <li>Auto Numbering: \u00a0Check to define the increment and initial numbering.</li> <li>Increment By: Numeric Value to define the sequence increment.</li> <li>Next Assigned Number: Initial sequence number.</li> <li>Prefix: String at the beginning of the sequence \u00a0(Supports masking).</li> <li>Suffix: String at the end of the sequence \u00a0(Supports masking).</li> <li>Document Type : In case that the table has document types, a sequence for each document type will have been created.</li> <li>Mask: It is a string defining a parse format, with the possibility to define a dynamic date or literal substring, in addition to the formatted incremental number. </li> </ul> <p>Info</p> <p>For more information about masking see Sequences Masking user guide.</p> <ul> <li>Table: Defines the table in which the sequence type column is located.</li> <li>Column: The column where the sequence is defined.</li> </ul> <li> <p>In case the sequence is applied in DocumentNo field, the user has to ensure that the Document Type associated has the property <code>sequenced document</code> unchequed to avoid throwing the legacy process. To do that, first log in as a user, then open <code>Aplication&gt;Finantial Management&gt;Accounting&gt;Setup&gt;Document Type</code>, select the Document Type associated and finally, edit it.</p> <p>Warning</p> <p>If the step is not followed, the legacy process will be run.</p> <p> Document Type example <li> <p>Finally, you must compile the application. To do this, run:</p> Terminal<pre><code>./gradlew compile.complete smartbuild\n</code></pre> </li> <li> <p>To export the changes to your module, do not forget to do a:</p> Terminal<pre><code>./gradlew export.database\n</code></pre> </li>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#new-sequence-reference","title":"New sequence reference","text":"<p>If you want to define a new reference with transactional or non-transactional parent reference, you must create a new record in the Reference window (<code>Application</code> &gt; <code>Application Dictionary</code> &gt;<code>Reference</code>) and set:</p> <p> </p> New sequence reference example <ul> <li>Name: New reference identifier.</li> <li>Description: Field to add information or details about the reference.</li> <li>Parent Reference: Select transactional or non-transactional sequence.</li> </ul> <p> </p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#sequence-config-tab","title":"Sequence Config tab:","text":"<ul> <li>Generator Java Class: Class that generate the next sequence value using the document sequence definitions. (If it is empty, a default generator is used ).</li> </ul> <p>When creating a non-transactional sequence, you must define:</p> <ul> <li>DB Sequence Name: Name of the sequence defined in Data Base.</li> <li>DB Sequence Initial Value: Initial sequence number.</li> <li>DB Sequence Increment Value: Numeric Value to define the sequence increment.</li> </ul> <p>You can use a defined Sequence or create a new one using SQL:</p> <pre><code>CREATE SEQUENCE [ IF NOT EXISTS ] sequence_name\n    [ AS { SMALLINT | INT | BIGINT } ]\n    [ INCREMENT [ BY ] increment ]\n    [ MINVALUE minvalue | NO MINVALUE ]\n    [ MAXVALUE maxvalue | NO MAXVALUE ]\n    [ START [ WITH ] start ]\n    [ CACHE cache ]\n    [ [ NO ] CYCLE ]\n    [ OWNED BY { table_name.column_name | NONE } ]\n</code></pre> <p>| Postgres syntax to create a new sequence |</p> <p>Info</p> <p>In case the parent is Transactional Sequence only the Generator Java Class field will appear, but in case of the parent being a Non-Transactional Sequence you must define all the fiels.</p> <p> </p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#dimension-list","title":"Dimension List","text":"<p>A Dimension is a new filter clause used to select the sequence to be used when creating or saving a new record. The default dimensions are:</p> <ul> <li>Client</li> <li>Organization</li> <li>Document Type</li> </ul> <p>This way you can have two different sequences depending on, for example, the Organization of the record. The same applies to the other default dimensions.</p> <p>Info</p> <p>Dimensions are currently supported only in Transactional Sequences.</p> <p></p> <p> </p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#adding-custom-dimensions","title":"Adding custom dimensions","text":"<p>If you want to add a new dimension to filter sequences, this dimension should be a column in both tables <code>AD_Sequence</code> and the table where the transactional sequence is used. You must also create a new reference, and create a new record in the <code>Dimension List</code> tab with this column (see how to create a new sequence reference above).</p>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#when-a-dimension-is-a-foreign-key-column","title":"When a dimension is a foreign key column","text":"<ol> <li> <p>To define a new dimension, you have to start adding a column in the <code>AD_Sequence</code> table, and a Foreign Key to the referenced column in an specific table. The dimension column must be created in the corresponding table (<code>M_Product</code> in this example) unless you decide to use an existing column as dimension.</p> <p>Warning</p> <p>The name of the columns must be the same in both tables.</p> <pre><code>ALTER TABLE AD_Sequence ADD COLUMN &lt;dimension&gt;_id varchar(32),\nADD CONSTRAINT ad_sequence_&lt;dimension&gt; FOREIGN KEY (&lt;dimension&gt;_id) REFERENCES &lt;table&gt; (&lt;dimension&gt;_id)\n\nALTER TABLE M_Product ADD COLUMN &lt;dimension&gt;_id varchar(32),\nADD CONSTRAINT M_product_&lt;dimension&gt; FOREIGN KEY (&lt;dimension&gt;_id) REFERENCES &lt;table&gt; (&lt;dimension&gt;_id)\n</code></pre> <p>Note</p> <p>Remember to replace <code>&lt;dimension&gt;</code> with your desired name.</p> </li> <li> <p>Then you have to create the corresponding <code>AD_Column</code> register in the Application Dictionary. <code>Application</code> &gt; <code>Application Dictionary</code> &gt; <code>Tables and Columns</code> search the <code>AD_Sequence</code> Table and create the new column.    Then you must set the <code>Reference</code> field of the dimension pointing to the foreign key table.</p> <p>Warning</p> <p>If the table with the dimension records is a new table, it should be created in <code>Application</code> &gt; <code>Application Dictionary</code> &gt;<code>Reference</code>, setting the Base Reference as Table, and adding the table in the <code>Table Reference</code> tab.</p> </li> <li> <p>Also, you have to create the field in the <code>Document Sequence</code> window. <code>Application</code> &gt; <code>Application Dictionary</code> &gt;<code>Windows, Tabs and Fields</code> search <code>Document Sequence</code> window and in <code>Sequence</code> tab run the process to create the new field.</p> </li> <li> <p>If the dimension is a new column, you must to repeat the previous step to create the field in the table where the sequence is used.</p> </li> <li> <p>Finally, go back to your Reference created previously and create a new register in the <code>Dimension List</code> tab, selecting the new column you just created, then execute a:</p> </li> </ol> Terminal<pre><code>  ./gradlew smartbuild\n</code></pre>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#when-a-dimension-is-a-list","title":"When a dimension is a List","text":"<ol> <li> <p>First, you have to create a new column in AD_Sequence table to reference a list and do the same in the table which uses the sequence. The other option is to use an existing one.</p> <p>Warning</p> <p>The name of the columns must be the same in both tables.</p> <pre><code>ALTER TABLE public.ad_sequence\nADD COLUMN &lt;list_name&gt; character varying(60);\n\nALTER TABLE public.m_product\nADD COLUMN &lt;list_name&gt; character varying(60);\n</code></pre> <p>Note</p> <p>Remember to replace <code>&lt;list_name&gt;</code> with your desired name.   </p> </li> <li> <p>Then, you have to create the column in the <code>Application</code> &gt; <code>Application Dictionary</code> &gt;<code>Tables and Columns</code> search <code>AD_Sequence</code> Table and create the new column.    You must set the <code>Reference</code> field of the new Column to <code>List</code> and indicate the corresponding Reference Search Key (Or define a new one). In the Default field you can set the id of one of the list elements and when a new Sequence is created, the reference automatically will be set.    You also have to do the same in the table that uses the sequence, or you can use an existing one.</p> </li> <li> <p>Finally, go back to your Reference previously created and create a new register in the <code>Dimension List</code> tab by selecting the new column you have just created then, execute a:</p> </li> </ol> Terminal<pre><code>  ./gradlew smartbuild.\n</code></pre>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-advanced-sequences/#change-sequence-when-change-dimension","title":"Change sequence when change dimension","text":"<ul> <li>If you want the sequence to change automatically when you change the dimension or the configured list, you must implement a callback or extend it if it already exists.   The following example explains how to implement the callout, taking into account that the dimension used is the Product Category and that the order is automatically entered in the Search Key field.</li> </ul> <pre><code>public class ChangeSequenceAfterChangeProductCategory extends SimpleCallout {\n  @Override\n  protected void execute(SimpleCallout.CalloutInfo info) throws ServletException {\n    final String strcProductId = info.vars.getStringParameter(\"inpmProductId\");\n\n    if (StringUtils.isBlank(strcProductId)) {\n      try {\n        OBContext.setAdminMode();\n        Tab tab = OBDal.getInstance().get(Tab.class,info.getTabId());\n        Field field = tab.getADFieldList()\n        .stream()\n        .filter(f -&gt; (\"inp\" + Sqlc.TransformaNombreColumna(f.getColumn().getDBColumnName())).equals(\"inpvalue\"))\n        .findFirst()\n        .orElse(null);\n        String sequenceNumber = Utilities.getDocumentNo(field);\n        info.addResult(\"inpvalue\", \"&lt;\" + sequenceNumber + \"&gt;\");\n      } finally {\n        OBContext.restorePreviousMode();\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-property-fields/","title":"How to Use Property Fields","text":"","tags":["How to","Property Field","Derived Information","Validation Rules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-property-fields/#overview","title":"Overview","text":"<p>A property field allows you to show derived information in a grid/form. A property field is very similar to a normal field in a tab. The only difference is that instead of the column, a property (path) is defined.</p> <p>Property fields make it possible to:</p> <ul> <li>show related information in a grid/form </li> <li>filter and sort by this related information </li> <li>show parent information in a child tab and filter/sort by this parent information </li> <li>create Etendo windows which show a child table in the root of the window, making it for example possible to create a single grid showing all sales invoice lines accross multiple sales invoice and filter using parent as well as child information. </li> </ul>","tags":["How to","Property Field","Derived Information","Validation Rules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-property-fields/#example-module","title":"Example Module","text":"<p>This section is supported by an example module which shows example of the code shown and discussed in this section.</p> <p>The code of the example module can be downloaded from this repository: com.etendoerp.client.application.examples</p>","tags":["How to","Property Field","Derived Information","Validation Rules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-property-fields/#defining-property-fields","title":"Defining property fields","text":"<p>Property fields are defined in the same way as a normal field in an Etendo tab. The only difference is that instead of selecting a column a property is set.</p> <p></p> <p>The property can consist of multiple steps separated by a dot, the system will help you to set the correct property value. If you make a typo then the system will report an error.</p> <p>Property fields are not editable in the user interface, they are however automatically updated when inserting or updating a record in the system.</p> <p>Note</p> <p>Property fields are meant to show derived information. They should not be used to show the contents of a column stored in the table associated with the tab where the property field is being defined.  </p>","tags":["How to","Property Field","Derived Information","Validation Rules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-property-fields/#using-in-validation-rules","title":"Using in validation rules","text":"<p>Property fields can be used in  Validations. In this case the validation code referencing the property field should look like <code>@_propertyField_ _fieldName_ _columnname_@</code> where <code>fieldname</code> is the name of the field property (lower case and removing blank spaces) and <code>columnname</code> is the name of the referenced column.</p> <p>As field properties are only computed when the record is saved, but they are not reevaluated on field changes, only in case they refer a path coming from the record header should be used in validations. Example in Order Line you could use any property field taking the data from its order header.</p>","tags":["How to","Property Field","Derived Information","Validation Rules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-property-fields/#using-in-display-logic","title":"Using in display logic","text":"<p>You can set a display logic that references a property field. The way of setting the display logic which references a property field is the following one: <code>@inp_propertyField_NameOfThePropertyField_ColumnName@</code>. For example:</p> <ul> <li>Imagine that you have a property field called Document with column name DocumentStatus. </li> <li>You have another field Field A which you want to display only when the property field Document has the status DR. </li> <li>In the display logic of the Field A field, you should write: <code>@inp_propertyField_Document_DocumentStatus@ = 'DR'</code></li> </ul>","tags":["How to","Property Field","Derived Information","Validation Rules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-property-fields/#use-case-show-related-information","title":"Use case: show related information","text":"<p>The first usage of a property field is to show related information in the user interface. The example in the previous section showed how to define a new business partner category field in the sales invoice header window/tab. This is visualized as follows in the user interface:</p> <p></p> <p>And you can sort and filter on the related/derived field:</p> <p></p> <p>And also display it in the form:</p> <p></p> <p>Note</p> <p>Note that direct linking also works for derived fields, so in this example you can 'jump' directly to the business partner category window for the business partner category.</p>","tags":["How to","Property Field","Derived Information","Validation Rules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-property-fields/#use-case-show-child-table-in-top-of-the-window","title":"Use case: show child table in top of the window","text":"<p>A great usage of the property field concept is to show child records (for example: sales invoice lines) in the root of a window. This then makes it possible to filter and sort the child records accross multiple parents (for example: sales invoice headers).</p> <p>The screenshot below shows an example of a sales invoice line window which shows all sales invoice lines accross multiple sales invoice headers. It makes it really easy to filter and sort accross all sales invoice lines in the system.</p> <p></p> <p>Some things to note when creating these type of windows:</p> <ul> <li>The main restriction for these types of grids is that insertion of records is not possible, editing and deletion are however no problem. So, for these types of windows/tabs set the UI pattern to Edit Only. </li> <li>For editing it is possible that certain fields need parent or other context information. This context information needs to be added as fields to the tab. If you do not want these context info fields to show up in the grid or form set the following properties to no (unchecked): displayed and show in grid view.    See the screenshot below which shows how the organization is added to the tab as a field, so that combos show the correct information when editing the sales invoice lines:</li> </ul> <p></p> <p>This work is a derivative of How to add a canvas field to a form or grid by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Property Field","Derived Information","Validation Rules"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-secure-webservices/","title":"How to Use Secure Web Services","text":"","tags":["How to","Swagger","Secure Web Services","Secure Webservices","Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-secure-webservices/#overview","title":"Overview","text":"<p>This module allows calling any standard Etendo web service in the same way as calling the <code>/ws</code> endpoint, but using token authentication.</p> <p>This authentication method also allows defining the context for the calls by choosing the role and/or organization when requesting a token. It is also possible to renew a token to refresh the expiration date or change the role/organization.</p> <p>Besides the authentication implementation, the module includes utilities for developers and useful web services, such as jsonDal (to access the OB Data Access Layer with json).</p>","tags":["How to","Swagger","Secure Web Services","Secure Webservices","Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-secure-webservices/#setup","title":"Setup","text":"<p>Info</p> <p>By default, the ES256 encryption algorithm is used, it is possible to change it by setting a new preference with the <code>Encryption Algorithm</code> property and set its value to <code>HS256</code>.</p>","tags":["How to","Swagger","Secure Web Services","Secure Webservices","Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-secure-webservices/#initial-configuration","title":"Initial configuration","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Client</code> &gt; <code>Client</code> It is necessary to configure the encryption key and the expiration time for the authentication tokens in the Client window with the System Administrator role.</p> <p>If the expiration time is equal to \"0\" the tokens do not expire.</p> <p>Generate a random key with the \"Generate key\" button.</p> <p></p>","tags":["How to","Swagger","Secure Web Services","Secure Webservices","Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-use-secure-webservices/#secure-web-services-swagger","title":"Secure Web Services Swagger","text":"<p>Info</p> <p>For more information, visit Secure Web Services Swagger.</p>","tags":["How to","Swagger","Secure Web Services","Secure Webservices","Web Services"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-jest-testcases/","title":"How to Create Jest Test Cases","text":"","tags":["How to","Jest","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-jest-testcases/#overview","title":"Overview","text":"<p>Jest is a testing framework created by Facebook and currently used as the default testing framework in  create-react-app  . Unlike Mocha, it is an opinionated test runner and provides its own assertion and mocking methods. The main advantage is that it runs out-of-the-box and has good integration with technologies like React, Babel or Typescript.</p>","tags":["How to","Jest","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-jest-testcases/#installation","title":"Installation","text":"<p>All dependencies can be installed just by running:</p> <pre><code>npm install\n</code></pre>","tags":["How to","Jest","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-jest-testcases/#creating-a-test-case","title":"Creating a Test Case","text":"<p>Info</p> <p>Tests should be placed in <code>web-test</code> folder, and files should have the suffix <code>.test.js</code> .</p> <p>This is a valid path for a test class:</p> <p><code>modules/com.etendoerp.mymodule/web-test/mycomponent.test.js</code> </p> <p>Now you can require() your subject under test and start creating test cases. See  Jest documentation  for reference.</p>","tags":["How to","Jest","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-jest-testcases/#sample-test-file","title":"Sample test file","text":"org.openbravo.client.application/web-test/ob-utilities-date.test.js<pre><code>require('../web/org.openbravo.client.application/js/utilities/ob-utilities-date');\n\u00a0\ndescribe('org.openbravo.client.application - OB.Utilities.Date', () =&gt; {\n  beforeEach(() =&gt; {\n    // Execute this before each test\n  });\n\u00a0\n  afterEach(() =&gt; {\n    // Execute this after each test\n  });\n\u00a0\n  it('The year where we should change century in 2 digits year format is 50', () =&gt; {\n    expect(OB.Utilities.Date.centuryReference).toEqual(50);\n  });\n\u00a0\n  // Describe blocks can be nested to group test cases\n  describe('OB.Utilities.Date.normalizeDisplayFormat', () =&gt; {\n    it('function works', () =&gt; {\n      const normalizedFormat = OB.Utilities.Date.normalizeDisplayFormat('DD-MM-YYYY');\n      expect(normalizedFormat).toEqual('%d-%m-%Y');\n    });\n\u00a0\n    it('function works with other input', () =&gt; {\n      const normalizedFormat = OB.Utilities.Date.normalizeDisplayFormat('DD-MM-YY');\n      expect(normalizedFormat).toEqual('%d-%m-%y');\n    });\n  });\n});\n</code></pre>","tags":["How to","Jest","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-jest-testcases/#run-testscoverage","title":"Run tests/coverage","text":"<p>To run all unit tests available in an Etendo instance (both Core and all installed modules), run the following command:</p> <pre><code>npm test\n</code></pre> <p>Testing can be limited to a particular module adding the path at the end of the command:    </p> <pre><code>npm test modules/com.etendoerp.mymodule/\n</code></pre> <p>If, along with the test, you want to see a coverage report, run:</p> <pre><code>npm run coverage\n</code></pre> <p>This work is a derivative of How to Create Jest testcases by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","Jest","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/","title":"How to Create JUnit Test Cases","text":"","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#overview","title":"Overview","text":"<p>This how-to will focus on creating a test case making use of the <code>OBBaseTest</code> and <code>WeldBaseTest</code> classes. The test case will check that our system has at least one User with password. For this, we'll use the new DAL approach to access the database.</p> <p>In computer programming, unit testing is a software design and development method where the programmer gains confidence that individual units of source code are fit for use. A unit is the smallest testable part of an application. In procedural programming a unit may be an individual program, function, procedure, etc., while in object-oriented programming, the smallest unit is a method, which may belong to a base/super class, abstract class or derived/child class.</p> <p>All new developments must belong to a module that is not the core module.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#preparing-development-environment","title":"Preparing development environment","text":"<p>Info</p> <p>Make sure that in the root build.gradle you have included the plugin <code>com.etendoerp.testing.gradleplugin</code>. If you don't have it, consult the Etendo Testing Plugin documentation to install it and finally reload Gradle from your IntelliJ.</p> <p>First of all you need to create a src-test directory in your module package directory in Etendo ERP.</p> <pre><code>modules\n\u2514\u2500\u2500 com.etendoerp.example\n    \u2514\u2500\u2500 src-test                &lt;-- source of the test cases \n        \u2514\u2500\u2500 src\n            \u2514\u2500\u2500 com.etendoerp.example\n                \u2514\u2500\u2500 EtendoTest.java\n</code></pre> <p>Now, you are ready to work with test cases.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#creating-the-test-case","title":"Creating the test case","text":"","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#inheriting-from-obbasetest","title":"Inheriting from OBBaseTest","text":"<p>All the core test cases are subclasses from <code>OBBaseTest</code>. (org.openbravo.test.base.OBBaseTest). This class handles all the necessary steps to initialize the Data Access Layer, takes care of transaction handling and provides a set of utilities (methods) for working with the Openbravo context (OBContext).</p> <p>Info</p> <p>When writing test cases for Etendo that involve dependency injection or require the execution of DAL event observers, it is recommended to extend <code>org.openbravo.base.weld.test.WeldBaseTest</code> instead of <code>org.openbravo.test.base.OBBaseTest</code>. <code>OBBaseTest</code> has limitations related to CDI, and it does not support certain features that are available when using WeldBaseTest tests. The latter is a subclass of <code>OBBaseTest</code> and provides access to the complete DAL infrastructure, making it more suitable for scenarios involving CDI and event observers. Make sure to use <code>WeldBaseTest</code> to leverage the full capabilities of dependency injection and DAL event observers in your test cases.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#execution-order-of-test-methods","title":"Execution order of test methods","text":"<p>Until now, the methods were simply invoked in the order returned by the reflection API. However, using the JVM order is unwise since the Java platform does not specify any particular order. Of course, well-written test code would not assume any order, but some does, and a predictable failure is better than a random failure on certain platforms.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#creating-the-java-class","title":"Creating the Java class","text":"<ul> <li>Open your IntelliJ IDE. </li> <li>Create a new folder structure under the <code>modules</code> folder: <code>modules/com.etendoerp.examples/src-test/src/com.etendoerp.example</code> . </li> <li>Create a new Java class with the following content: </li> </ul> <p>ExampleTest.java<pre><code>package com.etendoerp.example;\n\u00a0\nimport static org.junit.Assert.assertTrue;\n\u00a0\nimport java.util.List;\n\u00a0\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.TestMethodOrder;\nimport org.junit.jupiter.api.MethodOrderer.OrderAnnotation;\nimport org.openbravo.dal.core.OBContext;\nimport org.openbravo.dal.service.OBCriteria;\nimport org.openbravo.dal.service.OBDal;\nimport org.openbravo.model.ad.access.User;\nimport org.openbravo.base.weld.test.WeldBaseTest;\nimport org.openbravo.test.base.TestConstants;\nimport org.openbravo.client.kernel.RequestContext;\nimport org.openbravo.base.secureApp.VariablesSecureApp;\n\n\n@TestMethodOrder(OrderAnnotation.class)\npublic class ExampleTest extends WeldBaseTest {\n\n  @Override\n  @BeforeEach\n  public void setUp() throws Exception {\n    super.setUp();\n    OBContext.setOBContext(TestConstants.Users.SYSTEM, TestConstants.Roles.SYS_ADMIN,\n        TestConstants.Clients.SYSTEM, TestConstants.Orgs.MAIN);\n    VariablesSecureApp vsa = new VariablesSecureApp(\n        OBContext.getOBContext().getUser().getId(),\n        OBContext.getOBContext().getCurrentClient().getId(),\n        OBContext.getOBContext().getCurrentOrganization().getId(),\n        OBContext.getOBContext().getRole().getId()\n    );\n    RequestContext.get().setVariableSecureApp(vsa);\n  }\n\n  @Test\n  public void testUsersCount() {\n    final OBCriteria&lt;User&gt; uCriteria = OBDal.getInstance().createCriteria(User.class);\n    final List&lt;User&gt; uList = uCriteria.list();\n    int userCount = 0;\n    for (User u: uList) {\n      if (u != null &amp;&amp; u.getPassword() != null &amp;&amp; !u.getPassword().isEmpty())\n        userCount++;\n    }\n    assertTrue(userCount &gt; 0, \"There should be at least one user with password\");\n    System.out.println(\"Total of users with password: \" + (userCount));\n  }\n}\n</code></pre> </p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#understanding-the-class","title":"Understanding the class","text":"<p>You have just created a new class named Example that extends from the <code>WeldBaseTest</code> class.</p> <pre><code>@TestMethodOrder(OrderAnnotation.class)\n</code></pre> <p>This annotation specifies that test methods will be executed in the order specified by the <code>@Order</code> annotation. You can use <code>@Order</code> on test methods to define their execution order.</p> <pre><code>public void testUsersCount() {}\n</code></pre> <p>This class has a testUsersCount function. Note that in JUnit 5, the method naming convention is not required anymore as the <code>@Test</code> annotation is what identifies a test method. However, for clarity, it's still a good practice to use a naming convention for test methods.</p> <pre><code>@Override\n@BeforeEach\npublic void setUp() throws Exception {\n  super.setUp();\n  OBContext.setOBContext(TestConstants.Users.SYSTEM, TestConstants.Roles.SYS_ADMIN,\n      TestConstants.Clients.SYSTEM, TestConstants.Orgs.MAIN);\n  VariablesSecureApp vsa = new VariablesSecureApp(\n      OBContext.getOBContext().getUser().getId(),\n      OBContext.getOBContext().getCurrentClient().getId(),\n      OBContext.getOBContext().getCurrentOrganization().getId(),\n      OBContext.getOBContext().getRole().getId()\n  );\n  RequestContext.get().setVariableSecureApp(vsa);\n}\n</code></pre> <p>Note the <code>@BeforeEach</code> annotation instead of JUnit 4's <code>@Before</code>. This method sets the context as if a System Administrator is logged in the application. You can also set the context as if another user is logged in the application.</p> <pre><code>final OBCriteria&lt;User&gt; uCriteria = OBDal.getInstance().createCriteria(User.class);\nfinal List&lt;User&gt; uList = uCriteria.list();\n</code></pre> <p>Uses the <code>OBDal</code> instance to create a new <code>OBCriteria</code> object, and uses it for listing all (since we are not filtering) the Users in the database.</p> <pre><code>int userCount = 0;\nfor (User u: uList) {\n  if (u != null &amp;&amp; u.getPassword() != null &amp;&amp; !u.getPassword().isEmpty())\n    userCount++;\n}\n</code></pre> <p>We loop through the uList collection, and we increment the userCount variable if the user has a password.</p> <pre><code>assertTrue(userCount &gt; 0, \"There should be at least one user with password\");\n</code></pre> <p>We assert that the userCount is more than 0. Note the optional message parameter in JUnit 5's assertion methods.</p> <pre><code>System.out.println(\"Total of users with password: \" + (userCount));\n</code></pre> <p>Finally, we print a total of users with password just for the record.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#transaction-handling","title":"Transaction Handling","text":"<p>A question which might pop-up when looking at the above code: where is the database transaction handling done? The answer is that this is handled by the <code>WeldBaseTest</code> class and the Etendo data access layer:</p> <ul> <li>a transaction is automatically started at first database access in the test cases. This is done by the Data Access Layer. </li> <li>a transaction is either committed (when no exception happened) or rolled-back (when an exception happened). </li> </ul> <p>The <code>WeldBaseTest</code> class detects automatically if an exception happened or not.</p> <p>There are certainly cases whereby it makes sense to have more control over the database transactions. There are a number of relevant methods which can be useful then:</p> <ul> <li><code>OBDal.getInstance().flush()</code>: flushes the update/insert queries in hibernate to the database. </li> <li><code>OBDal.getInstance().commitAndClose()</code>: commits the transaction and closes the session. A new session/transaction is automatically started at the next database access. </li> <li><code>OBDal.getInstance().rollbackAndClose()</code>: rolls back and closes the transactions. A new session/transaction is automatically started at the next database access. </li> </ul> <p>Info</p> <p>DAL event observers  are not triggered within test cases extending <code>OBBaseTest</code> class. They to work require of test cases extending <code>WeldBaseTest</code>. </p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#side-effect-free","title":"Side-Effect Free","text":"<p>A test case will often change the data in the underlying database. Most of the time, it is not feasible to setup a completely new test database for each test run. Therefore test-cases should be developed such that they are side effect free. This means:</p> <ul> <li>When the test-case changes data then it should have a test method which is run as the last test method which cleans up/repairs the data. </li> <li>This clean-up method should also clean up data which is left from previous test runs. For this common issue should be used <code>@AfterAll</code> notation. This method runs automatically at the end of the class.</li> </ul> <p>This last point is important because there can be always reasons why during a test the clean-up step is not performed. For example because the test run is stopped before the clean-up is done.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#approach-to-features-of-junit","title":"Approach to features of JUnit","text":"","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#parameterized-tests","title":"Parameterized Tests","text":"<p>Info</p> <p>For more information, visit:  Parameterized-Test.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#extension","title":"Extension","text":"<p>Info</p> <p>In JUnit 5, the Rules concept has been replaced by Extensions. For more information, visit:  Extension.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#assertions-and-hamcrest-113","title":"Assertions and Hamcrest 1.13","text":"<p>Info</p> <p>For more information, visit:  Hamcrest.</p> <p>Hamcrest is a framework for writing matcher objects allowing 'match' rules to be defined declaratively. There are a number of situations where matchers are invaluble, such as UI validation, or data filtering, but it is in the area of writing flexible tests that matchers are most commonly used.</p> <p>When writing tests it is sometimes difficult to get the balance right between overspecifying the test, and not specifying enough (making the test less valuable). Having a tool that allows you to pick out precisely the aspect under test and describe the values it should have, to a controlled level of precision, helps greatly in writing tests.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#mocking-with-mockito-in-junit","title":"Mocking with Mockito in JUnit","text":"<p>When writing unit tests, it's often necessary to simulate the behavior of external dependencies. Mockito is a popular mocking library for Java that allows you to create mock objects to isolate the code being tested from its dependencies.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#ways-to-create-mocks","title":"Ways to Create Mocks","text":"<p>There are two main approaches to creating mocks in Mockito:</p> <ol> <li> <p>Using Annotations</p> <p>The cleanest way is to use annotations:</p> <pre><code>@ExtendWith(MockitoExtension.class)\nclass UserServiceTest {\n\n    @Mock\n    private UserRepository userRepository;\n\n    @InjectMocks\n    private UserService userService;\n\n    @Test\n    void testGetUserById() {\n        // Arrange\n        String userId = \"123\";\n        User mockUser = new User(userId, \"John Doe\");\n        when(userRepository.findById(userId)).thenReturn(mockUser);\n\n        // Act\n        User result = userService.getUserById(userId);\n\n        // Assert\n        assertEquals(mockUser.getName(), result.getName());\n        verify(userRepository).findById(userId);\n    }\n}\n</code></pre> <p>In this example: - <code>@ExtendWith(MockitoExtension.class)</code> integrates Mockito with JUnit 5 - <code>@Mock</code> creates a mock implementation of UserRepository - <code>@InjectMocks</code> injects the created mocks into UserService</p> </li> <li> <p>Creating Mocks Manually</p> <p>You can also create mocks manually:</p> <pre><code>@Test\nvoid testUserServiceManualMocks() {\n    // Create mocks manually\n    UserRepository mockRepo = mock(UserRepository.class);\n    UserService service = new UserService(mockRepo);\n\n    // Configure behavior\n    User mockUser = new User(\"123\", \"Jane Doe\");\n    when(mockRepo.findById(\"123\")).thenReturn(mockUser);\n\n    // Execute and verify\n    User result = service.getUserById(\"123\");\n    assertEquals(\"Jane Doe\", result.getName());\n}\n</code></pre> </li> </ol>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#mocking-static-methods","title":"Mocking Static Methods","text":"<p>To mock static methods, you must use <code>mockito-inline</code>. This allows you to simulate classes with static methods such as utilities or service facades.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#example-with-mockedstatic","title":"Example with MockedStatic","text":"<pre><code>@Test\nvoid testWithStaticMock() {\n    // The static mock must be created inside a try-with-resources block\n    // or closed manually to prevent memory leaks\n    try (MockedStatic&lt;DateUtils&gt; dateUtilsMock = mockStatic(DateUtils.class)) {\n        // Configure the behavior of the static method\n        LocalDate fixedDate = LocalDate.of(2025, 4, 8);\n        dateUtilsMock.when(DateUtils::getCurrentDate).thenReturn(fixedDate);\n\n        // Now DateUtils.getCurrentDate() will return our fixed date\n        LocalDate result = DateUtils.getCurrentDate();\n\n        assertEquals(fixedDate, result);\n        dateUtilsMock.verify(DateUtils::getCurrentDate);\n    }\n}\n</code></pre>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#complete-example-mocking-regular-and-static-dependencies","title":"Complete Example: Mocking Regular and Static Dependencies","text":"<p>Here's an example that combines regular and static mocks:</p> <pre><code>@ExtendWith(MockitoExtension.class)\nclass PaymentProcessorTest {\n\n    @Mock\n    private PaymentGateway paymentGateway;\n\n    @InjectMocks\n    private PaymentProcessor paymentProcessor;\n\n    @Test\n    void testProcessPayment() {\n        // Regular object mock\n        Payment payment = new Payment(\"123\", 100.00);\n        TransactionResult mockResult = new TransactionResult(true, \"Approved\");\n        when(paymentGateway.submitPayment(payment)).thenReturn(mockResult);\n\n        // Static method mock for current date\n        try (MockedStatic&lt;TransactionUtils&gt; transUtilsMock = mockStatic(TransactionUtils.class)) {\n            LocalDateTime fixedDateTime = LocalDateTime.of(2025, 4, 8, 15, 30);\n            transUtilsMock.when(TransactionUtils::getCurrentDateTime).thenReturn(fixedDateTime);\n\n            // Act\n            TransactionResponse response = paymentProcessor.processPayment(payment);\n\n            // Assert\n            assertTrue(response.isSuccessful());\n            assertEquals(fixedDateTime, response.getTransactionDate());\n\n            // Verify that methods were called correctly\n            verify(paymentGateway).submitPayment(payment);\n            transUtilsMock.verify(TransactionUtils::getCurrentDateTime);\n        }\n    }\n}\n</code></pre>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#mocking-best-practices","title":"Mocking Best Practices","text":"<ol> <li> <p>Close static mocks: Static mocks must be closed to prevent memory leaks.    <pre><code>try (MockedStatic&lt;UtilityClass&gt; mock = mockStatic(UtilityClass.class)) {\n    // Use the static mock\n} // Automatically closed\n</code></pre></p> </li> <li> <p>Verify interactions: Use <code>verify()</code> to confirm that expected methods were called.    <pre><code>verify(mockObject).someMethod();\nverify(mockObject, times(3)).someMethod();\nverify(mockObject, never()).otherMethod();\n</code></pre></p> </li> <li> <p>Use annotations for simple cases: Annotations like <code>@Mock</code> and <code>@InjectMocks</code> make the code more readable.</p> </li> <li> <p>Reset mocks when necessary: If you need to reuse a mock with different behavior:    <pre><code>reset(mockObject);\n</code></pre></p> </li> </ol>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#json-matchers","title":"JSON Matchers","text":"<p>Etendo provides a set of matchers that can be useful when asserting JSONObjects or JSONArrays.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#equal","title":"equal","text":"<p>Matches when the examined <code>JSONObject</code> has exactly the same number of properties with the same values as the expected one. The order of the keys is not taken into account. Supports matcher properties.</p> <pre><code>@Test\npublic void testEqual() {\n  JSONObject json1 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"abcd\"));\n  JSONObject json2 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"abcd\"));\n  JSONObject json3 = new JSONObject(Map.of(\"p2\", \"abcd\", \"p1\", 1));\n  JSONObject json4 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"efgh\"));\n  JSONObject json5 = new JSONObject(Map.of(\"p1\", 1));\n  JSONObject json6 = new JSONObject(Map.of(\"p1\", greaterThan(0), \"p2\", startsWith(\"abc\"))); // matcher properties\n\u00a0\n  assertThat(\"JSON objects are equal\", json1, equal(json2));\n  assertThat(\"JSON objects are equal\", json1, equal(json3));\n  assertThat(\"JSON objects are not equal\", json1, not(equal(json4)));\n  assertThat(\"JSON objects are not equal\", json1, not(equal(json5)));\n  assertThat(\"JSON objects are equal\", json1, equal(json6));\n}\n</code></pre>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#matchesobject","title":"matchesObject","text":"<p>Matches when the examined JSONObject contains the properties with the same values of the expected one. The order of the keys is not taken into account. Supports matcher properties.</p> <pre><code>\u00a0\n@Test\npublic void testMatchesObject() {\n  JSONObject json1 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"abcd\"));\n  JSONObject json2 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"abcd\"));\n  JSONObject json3 = new JSONObject(Map.of(\"p2\", \"abcd\", \"p1\", 1));\n  JSONObject json4 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"efgh\"));\n  JSONObject json5 = new JSONObject(Map.of(\"p1\", 1));\n  JSONObject json6 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"abcd\", \"p3\", \"abcd\"));\n  JSONObject json7 = new JSONObject(Map.of(\"p1\", greaterThan(0), \"p2\", \"abcd\"));\n\u00a0\n  assertThat(\"JSON object match\", json1, matchesObject(json2));\n  assertThat(\"JSON object match\", json1, matchesObject(json3));\n  assertThat(\"JSON object does not match\", json1, not(matchesObject(json4)));\n  assertThat(\"JSON object match\", json1, matchesObject(json5));\n  assertThat(\"JSON object does not match\", json1, not(matchesObject(json6)));\n  assertThat(\"JSON object match\", json1, matchesObject(json7));\n}\n</code></pre>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#hasitems","title":"hasItems","text":"<p>Used to match the items of a <code>JSONArray</code>. This matcher can be used with two different kind of arguments.</p> <p>If an array of objects is passed, then it matches when the examined <code>JSONArray</code> contains all the received objects. The order of the objects is not taken into account.</p> <pre><code>\u00a0\n@Test\npublic void testHasItems() {\n  JSONObject json1 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"abcd\"));\n  JSONObject json2 = new JSONObject(Map.of(\"p2\", 2, \"p3\", \"efgh\"));\n  JSONArray array = new JSONArray();\n  array.put(json1);\n  array.put(json2);\n  array.put(5);\n  JSONObject json3 = new JSONObject(Map.of(\"p2\", 2, \"p3\", startsWith(\"e\")));\n  JSONObject json4 = new JSONObject(Map.of(\"p2\", 2, \"p3\", \"ijkl\"));\n\u00a0\n  assertThat(\"JSON array has items\", array, hasItems(5, json3));\n  assertThat(\"JSON array does not have items\", array, not(hasItems(4, json3)));\n  assertThat(\"JSON array does not have items\", array, not(hasItems(json4)));\n}\n</code></pre> <p>It also supports receiving an array of  Hamcrest  matchers. In that case, then it matches when the examined JSONArray matches with all the received matchers.</p> <pre><code>\u00a0\n@Test\npublic void testHasItems() {\n  JSONObject json1 = new JSONObject(Map.of(\"p1\", 1, \"p2\", \"abcd\"));\n  JSONObject json2 = new JSONObject(Map.of(\"p2\", 2, \"p3\", \"efgh\"));\n  JSONArray array = new JSONArray();\n  array.put(json1);\n  array.put(json2);\n  array.put(5);\n  JSONObject json3 = new JSONObject(Map.of(\"p2\", 2, \"p3\", startsWith(\"e\")));\n  JSONObject json4 = new JSONObject(Map.of(\"p1\", 1));\n  JSONObject json5 = new JSONObject(Map.of(\"p2\", 2, \"p3\", \"ijkl\"));\n\u00a0\n  assertThat(\"JSON array has items\", array, hasItems(greaterThan(4), equal(json3)));\n  assertThat(\"JSON array has items\", array, hasItems(greaterThan(4), matchesObject(json4)));\n  assertThat(\"JSON array does not have items\", array, not(hasItems(greaterThan(5))));\n  assertThat(\"JSON array does not have items\", array, not(hasItems(equal(json5))));\n}\n</code></pre>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#run-tests","title":"Run Tests","text":"<p>Etendo has a number of ant tasks which run the test cases:</p> <ul> <li><code>./gradlew test</code>: This suite contains all the test cases.</li> <li><code>./gradlew test --tests \"module-name.*\"</code>: This suite contains all the test cases of a particular module. (e.g. <code>./gradlew test --tests \"com.etendoerp.example.*\"</code>)</li> </ul> <p>Info</p> <p>If tests have been implemented or modified for etendo_core and package belongs to org.openbravo, make sure that the class is included in the <code>StandaloneTestSuite</code> or <code>WebserviceTestSuite</code>.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#the-result","title":"The Result","text":"<p>To be able to execute your test cases:</p> <ul> <li>Right click on the <code>ExampleTest</code> class. </li> <li>Select Run <code>ExampleTest</code>. </li> </ul> <p></p> <ul> <li>You can check the result of the test case on the JUnit view and the output of your tests in the Console view: </li> </ul> <p></p> <p>Also, in the build folder you can find the report of the tests execution, and you can open it on your browser. <pre><code>build\n\u2514\u2500\u2500 reports\n    \u2514\u2500\u2500 tests \n        \u2514\u2500\u2500 test\n            \u2514\u2500\u2500 index.html\n</code></pre></p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#testing-requests","title":"Testing Requests","text":"<p>In general unit tests don't require of an Etendo Classic instance running in Tomcat to be executed. But in some cases, how requests work is wanted to be tested. Depending on the request to be tested, different classes should be extended:</p> <ul> <li>REST Webservices . <code>BaseWSTest</code> should be extended, it deals with authentication and provides methods to execute requests, parse xml results, etc. </li> <li>Other Requests (such as datasources). <code>BaseDataSourceTestNoDal</code> or <code>BaseDataSourceTestDal</code> classes can be extended (depending if the test case requires or not DAL). Similarly to webservices it provides authentication handling as well as utility methods to perform requests. </li> </ul>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#testing-cdi","title":"Testing CDI","text":"<p>Default test cases extending <code>org.openbravo.test.base.OBBaseTest</code> class cannot make use of dependency injection. In order to use it <code>org.openbravo.base.weld.test.WeldBaseTest</code> class needs to be extended instead. This is also a subclass of <code>OBBaseTest</code> , so it makes available all DAL infrastructure.</p> <p><code>WeldBaseTest</code> uses internally Weld SE containers for CDI support.</p> <p>Example of a test case injecting dependencies:</p> <pre><code>public class CdiInfrastructure extends WeldBaseTest {\n\u00a0\n@Inject\nprivate ApplicationScopedBean applicationBean;\n\u00a0\n@Inject\nprivate SessionScopedBean sessionBean;\n\u00a0\n@Inject\nprivate RequestScopedBean requestBean;\n\u00a0\n/** beans are correctly injected */\n@Test\npublic void beansAreInjected() {\n  assertNotNull(applicationBean, \"application bean is injected\");\n  assertNotNull(sessionBean, \"session bean is injected\");\n  assertNotNull(requestBean, \"request bean is injected\");\n}\n}\n</code></pre>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#scopes","title":"Scopes","text":"<p>Application and session scopes are shared among all test cases in the same class whereas a new request scope is created for each test case method. Application scope is reset for each new class.</p> <pre><code>/** starts application and session scopes */\n@Test\n@Order(1)\npublic void start() {\n  applicationBean.setValue(\"application\");\n  sessionBean.setValue(\"session\");\n  requestBean.setValue(\"request\");\n\n  assertEquals(\"application\", applicationBean.getValue());\n  assertEquals(\"session\", sessionBean.getValue());\n  assertEquals(\"request\", requestBean.getValue());\n}\n\n/** application and session scopes are preserved but not request scope */\n@Test\n@Order(2)\npublic void applicationAndSessionShouldBeKept() {\n  assertEquals(\"application\", applicationBean.getValue());\n  assertEquals(\"session\", sessionBean.getValue());\n  assertNull(requestBean.getValue());\n}\n</code></pre>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#parameterization","title":"Parameterization","text":"<p>In JUnit 5, parameterized tests are natively supported via the <code>@ParameterizedTest</code> annotation, eliminating the need for special runners or rules:</p> <pre><code>public class ParameterizedCdi extends WeldBaseTest {\n\n  @ParameterizedTest\n  @ValueSource(strings = {\"param1\", \"param2\", \"param3\"})\n  public void testWithParameters(String parameter) {\n    assertNotNull(parameter);\n    assertTrue(parameter.startsWith(\"param\"));\n  }\n\n  @ParameterizedTest\n  @CsvSource({\n    \"param1, 1\",\n    \"param2, 2\",\n    \"param3, 3\"\n  })\n  public void testWithMultipleParameters(String name, int value) {\n    assertNotNull(name);\n    assertTrue(name.endsWith(String.valueOf(value)));\n  }\n\n  @ParameterizedTest\n  @MethodSource(\"provideParameters\")\n  public void testWithMethodSource(String parameter) {\n    assertNotNull(parameter);\n    assertTrue(parameter.startsWith(\"param\"));\n  }\n\n  static Stream&lt;String&gt; provideParameters() {\n    return Stream.of(\"param1\", \"param2\", \"param3\");\n  }\n}\n</code></pre> <p>In this example <code>test1</code> test case will be executed 3 times having <code>parameter</code> field \"param1\", \"param2\" and \"param3\" value in each of these executions.</p> <p>Unlike when using <code>Parameterized.class</code> runner, all these 3 executions are seen as a single execution ( <code>Parameterized.class</code> would show 3 independent executions), this causes that if, for example, first execution fails the rest will not be run.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-classic/how-to-guides/how-to-create-testcases/how-to-create-junit-testcases/#dal-event-observers","title":"DAL event observers","text":"<p>Because  DAL event observers  make use of CDI to work, they are not executed in standard test cases extending <code>OBBaseTest</code> .</p> <p>This limitation does not apply when using <code>WeldBaseTest</code> tests.</p> <p>This work is a derivative of How to Create JUnit testcases by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["How to","JUnit","Test","Test Cases"]},{"location":"developer-guide/etendo-copilot/installation/","title":"Developer Guide - Copilot Installation","text":"","tags":["Copilot","Install","IA","Infrastructure","Assistants"]},{"location":"developer-guide/etendo-copilot/installation/#overview","title":"Overview","text":"<p>This guide provides detailed instructions on how to get started with Etendo Copilot, an API that allows interaction with a bot capable of selecting the appropriate tools to respond to user queries. It includes the necessary requirements, instructions for adding dependencies, environment variable configurations, and steps to run Copilot on an Etendo Classic project. Additionally, it covers optional configurations to customize Copilot's behavior and provides links to detailed installation guides for required software.</p>","tags":["Copilot","Install","IA","Infrastructure","Assistants"]},{"location":"developer-guide/etendo-copilot/installation/#requirements","title":"Requirements","text":"<ol> <li>Install Etendo Classic. For this, follow the Etendo Installation Guide.</li> <li>This project depends on the following tools:<ul> <li>Docker: version <code>26.0.0</code> or higher.</li> <li>Docker Compose: version <code>2.26.0</code> or higher.</li> <li>Python 3 version <code>3.10</code>or higher.</li> </ul> </li> </ol> <p>Info</p> <p>The Docker Management module, included as a dependency allows for the distribution of the infrastructure within Etendo modules, which include Docker containers for each service.</p>","tags":["Copilot","Install","IA","Infrastructure","Assistants"]},{"location":"developer-guide/etendo-copilot/installation/#installation","title":"Installation","text":"<p>Etendo Copilot is distributed within the Copilot Extensions bundle, which in addition to including the Copilot Core functionality and infrastructure, includes default assistants and tools that can be used directly or compose their use in new wizards.  </p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Install","IA","Infrastructure","Assistants"]},{"location":"developer-guide/etendo-copilot/installation/#running-etendo-copilot","title":"Running Etendo Copilot","text":"<p>The simplest configuration we are going to follow as an example is to mount Copilot Dockerized and Tomcat running as a local service. Other configurations are detailed in the section, Advanced Configurations.</p> <ol> <li> <p>In <code>gradle.properties</code> file is necessary to add some environment variables as a mandatory requirement</p> <p>Info</p> <p>From Etendo Classic version 24.4.0 onwards the variables <code>ETENDO_HOST</code>, <code>COPILOT_HOST</code> and <code>ETENDO_HOST_DOCKER</code> are optional, in case they are defined they will overwrite the automatically generated variables.</p> gradle.properties<pre><code>OPENAI_API_KEY= ****\nANTHROPIC_API_KEY= ****\nDEEPSEEK_API_KEY= ****\nETENDO_HOST=https://&lt;Etendo URL&gt;/&lt;Context Path&gt;\nETENDO_HOST_DOCKER=http://host.docker.internal:&lt;Tomcat Port&gt;/&lt;Context Path&gt;\nCOPILOT_HOST=&lt;Copilot URL&gt;\nCOPILOT_PORT=&lt;Copilot Port&gt;\n\ndocker_com.etendoerp.copilot=true\n</code></pre> Environment Variable Default Info OPENAI_API_KEY <code>****</code> Optinal You can use an OPEN AI API Key of your own, or you can contact the Etendo support team to obtain one. ANTHROPIC_API_KEY <code>****</code> Optional You can use an ANTHROPIC API Key of your own, or you can contact the Etendo support team to obtain one. Remember, its only necessary if you want to use Anthropic AI Models. DEEPSEEK_API_KEY <code>****</code> Optional You can use an DEEPSEEK API Key of your own, or you can contact the Etendo support team to obtain one. Remember, its only necessary if you want to use DeepSeek AI Models. ETENDO_HOST Optional The URL of the Etendo system, this is where copilot will send the requests to communicate with the Etendo system. E.g: https://demo.etendo.cloud/etendo or http://localhost:8080/etendo ETENDO_HOST_DOCKER Optional The URL of the Etendo system, this is where copilot will send the requests to communicate with the Etendo system. This variable is used when the copilot is running in a docker container and the Etendo Instance is not accessible from a domain. COPILOT_HOST <code>localhost</code> Optional The copilot host can be defined by the user. By default use <code>localhost</code> COPILOT_PORT <code>5005</code> Required The copilot port can be defined by the user. By default use <code>5005</code> docker_com.etendoerp.copilot <code>true</code> Required Configuration variable for the Etendo Copilot container to be launched. <p>Info</p> <p>The <code>ETENDO_HOST_DOCKER</code> variable is used when the copilot is running in a docker container and the Etendo Instance is not accessible from a domain. This is important because the copilot needs to communicate with the Etendo system to perform the necessary actions. For example, if Copilot is running into a docker container and the Etendo Instance is running locally, the <code>ETENDO_HOST</code> variable should be <code>http://localhost:8080/etendo</code> and the <code>ETENDO_HOST_DOCKER</code> variable should be <code>http://host.docker.internal:8080/etendo</code> if you are using Docker Desktop.</p> <p>Warning</p> <p>If you are using docker via console, the <code>ETENDO_HOST_DOCKER</code> variable should be <code>http://172.17.0.1:8080/etendo</code></p> </li> <li> <p>Once the Copilot Extensions Bundle dependency was added and the variables configurated, in the terminal execute the following command to apply the changes:</p> Terminal<pre><code>./gradlew setup\n</code></pre> <p>Then, the copilot container needs to be created: Terminal<pre><code>./gradlew resources.up\n</code></pre></p> <p>And then recomplile the environment: </p> Terminal<pre><code>./gradlew update.database compile.complete smartbuild --info\n</code></pre> </li> <li> <p>To start the copilot Docker image, execute:</p> Terminal<pre><code>./gradlew resources.up\n</code></pre> <p>To stop the Copilot container you can run:  Terminal<pre><code>./gradlew resources.stop\n</code></pre></p> <p>Everytime a new tool is added or the enviorement variables change, it's necessary to delete and create the Copilot container again. Execute the following command to delete the container:  Terminal<pre><code>./gradlew resources.down\n</code></pre></p> <p>Warning</p> <p>Be aware that resources.stop and resources.down will also affect other services configured in the etendo container</p> </li> <li> <p>Try Copilot in your Etendo instance. To configure an assistant to use Etendo Copilot, follow the Copilot Setup and Usage guide.</p> </li> </ol>","tags":["Copilot","Install","IA","Infrastructure","Assistants"]},{"location":"developer-guide/etendo-copilot/installation/#advanced-configurations","title":"Advanced Configurations","text":"Copilot &amp; Tomcat DockerizedCopilot locally (for developing copilot only) <p>The <code>com.etendoerp.tomcat</code> module enables the Dockerization of Tomcat within Etendo Classic. This module modifies Gradle tasks to automatically deploy the <code>WAR</code> file into the container when executing the <code>smartbuild</code> task. Follow the Dockerized Tomcat Service documentation to learn how to configure it.</p> <p>When using both services in docker, the enviorement variables should look like this:</p> gradle.properties<pre><code>OPENAI_API_KEY= ****\nETENDO_HOST=http://tomcat:&lt;Docker Tomcat Port&gt;/&lt;Context Path&gt;\nETENDO_HOST_DOCKER=http://host.docker.internal:&lt;Docker Tomcat Port&gt;/&lt;Context Path&gt;\nCOPILOT_HOST=copilot\nCOPILOT_PORT=&lt;Docker Copilot Port&gt;\n\ndocker_com.etendoerp.copilot=true\ndocker_com.etendoerp.tomcat=true\ndocker_com.etendoerp.tomcat_port=&lt;Docker Tomcat Port&gt;\n</code></pre> <p>Requirements:</p> <ul> <li> <p>Python 3.10 or 3.11</p> </li> <li> <p>Poetry</p> </li> </ul> <p>We recommend usign PyCharm to run copilot locally. Download and install here PyCharm Community Edition</p> <ol> <li> <p>Open PyCharm, search for the copilot module and open it. </p> </li> <li> <p>Open the <code>Run.py</code> file, then add a new interpreter.  </p> </li> <li> <p>Add a new configuration file and select Python  </p> </li> <li> <p>Select the interpreter created before, in the script field select the <code>run.py</code> file and .env field select the <code>gradle.properties</code> </p> </li> <li> <p>Once done, open the PyCharm terminal and execute the following commands: terminal<pre><code>source venv/bin/activate\npoetry install\n</code></pre></p> </li> <li> <p>Execute <code>Run.py</code> from PyCharm</p> </li> </ol>","tags":["Copilot","Install","IA","Infrastructure","Assistants"]},{"location":"developer-guide/etendo-copilot/installation/#developer-environment-variables","title":"Developer Environment Variables","text":"<p>In addition, there are other optional variables to configure certain aspects of the copilot. If not specified, default values are used.</p> Environment Variable Options Default Info COPILOT_DEBUG <code>Boolean</code> <code>false</code> Optional If true, copilot will log additional messages in the console. COPILOT_MAX_ITERATIONS <code>Integer</code> <code>100</code> Optional Maximum number of interactions of agents. COPILOT_EXECUTION_TIMEOUT <code>Integer</code> <code>0</code> Optional Defines a timeout in the execution of an agent in seconds, by default 0 represents unlimited time. COPILOT_STREAM_DEBUG <code>Boolean</code> <code>false</code> Optional Enable debug mode in the copilot pop-up, to see the log while the response is being generated. CONFIGURED_TOOLS_FILENAME <code>JSON File name</code> <code>tools_config.json</code> Optional The name of the file that contains the configuration of the enabled tools. DEPENDENCIES_TOOLS_FILENAME <code>TOML File name</code> <code>tools_deps.toml</code> Optional The name of the file that contains the configuration of the dependencies of the tools. COPILOT_PULL_IMAGE <code>Boolean</code> <code>true</code> Optional If true, the copilot docker image will be pulled from docker hub. If false, gradle will try to use the local image with the tag specified in COPILOT_IMAGE_TAG, but if it does not exist, it will be pulled from docker hub. COPILOT_IMAGE_TAG <code>String</code> <code>master</code> Optional The tag of the copilot docker image that will be used. COPILOT_PORT_DEBUG <code>String</code> <code>5100</code> Optional The copilot debug port can be defined by the user.","tags":["Copilot","Install","IA","Infrastructure","Assistants"]},{"location":"developer-guide/etendo-copilot/available-tools/api-call-tool/","title":"API Call Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Etendo Copilot","API Integration","HTTP Requests","REST API","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/api-call-tool/#overview","title":"Overview","text":"<p>The API Call Tool is designed to execute HTTP requests to external APIs. It enables developers to connect their applications to external services using RESTful methods. The tool accepts input parameters such as the API URL, endpoint, HTTP method, query parameters, body content, and an optional authorization token. As output, it returns the response body and the status code of the API call.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p> <p>This tool provides the assistant with:</p> <ul> <li>Integration: It allows applications to consume external REST APIs easily.</li> <li>Flexibility: Supports GET, POST, and PUT methods with customizable headers and payloads.</li> <li>Automation: Facilitates interaction with external systems from within Etendo Copilot.</li> </ul> <p>This tool is ideal for developers integrating third-party services, internal APIs, or microservices.</p>","tags":["Etendo Copilot","API Integration","HTTP Requests","REST API","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/api-call-tool/#setup","title":"Setup","text":"<p>No specific environment variables are required to use this tool. However, if a bearer token is needed for authorization, it can be passed in the input as the <code>token</code> parameter.</p> <p>Additionally, if you use the special token value <code>ETENDO_TOKEN</code>, the tool will fetch the token using Etendo's token management utility.</p>","tags":["Etendo Copilot","API Integration","HTTP Requests","REST API","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/api-call-tool/#functionality","title":"Functionality","text":"<p>This tool enables execution of RESTful requests through the following steps:</p> <ul> <li> <p>Processing Arguments</p> <p>It processes input parameters such as: - <code>url</code>: API base URL (required) - <code>endpoint</code>: Specific API endpoint (required) - <code>method</code>: HTTP method (<code>GET</code>, <code>POST</code>, or <code>PUT</code>) (required) - <code>body_params</code>: Payload (for POST and PUT) - <code>query_params</code>: Query string as a JSON object - <code>token</code>: Optional bearer token</p> </li> <li> <p>Handling Query Parameters</p> <p>If provided, query parameters are appended to the endpoint with appropriate URL encoding.</p> </li> </ul>","tags":["Etendo Copilot","API Integration","HTTP Requests","REST API","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/api-call-tool/#using-etendo_token","title":"Using ETENDO_TOKEN","text":"<p>If you set the <code>token</code> parameter to the special value <code>ETENDO_TOKEN</code>, Copilot will automatically replace it with a secure token retrieved from the Etendo environment. This approach ensures the token is not exposed to the language model and remains secure during execution.</p> <p>Example:</p> <pre><code>{\n    \"method\": \"GET\",\n    \"url\": \"https://my.etendo.instance/etendo\",\n    \"endpoint\":\"/sws/mySecureWebservice\",\n    \"token\": \"ETENDO_TOKEN\"\n}\n</code></pre> <ul> <li> <p>Replacing Base64 Placeholders</p> <p>If the body contains <code>@BASE64_filepath@</code> placeholders, they are replaced with the base64-encoded content of the specified file.</p> <p><pre><code>    {\n        \"method\": \"POST\",\n        \"url\": \"https://my.etendo.instance/etendo\",\n        \"endpoint\":\"/sws/UploadFile\",\n        \"token\": \"ETENDO_TOKEN\",\n        \"body_params\": {\n            \"file\": \"@BASE64_filepath@\"\n        }\n    }\n</code></pre> The API Call Tool will replace <code>@BASE64_filepath@</code> with the base64-encoded content of the file specified in the <code>file</code> parameter without exposing the file content or base64 to the model (not only for security reasons but also to avoid model confusion).</p> </li> <li> <p>Executing the Request</p> <p>Based on the method, the tool performs the corresponding request using the <code>requests</code> library.</p> </li> <li> <p>Returning the Response</p> <p>Returns a structured response with:</p> <pre><code>{\n    \"requestResponse\": \"&lt;response body&gt;\",\n    \"requestStatusCode\": 200\n}\n</code></pre> <p>In case of error:</p> <pre><code>{\n    \"error\": \"Detailed error message\"\n}\n</code></pre> </li> </ul>","tags":["Etendo Copilot","API Integration","HTTP Requests","REST API","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/api-call-tool/#usage-example","title":"Usage Example","text":"<p>Imagine you want to send a POST request to an external API for creating a new user. The input parameters for the assistant would be:</p> <ul> <li><code>url</code>: https://api.example.com</li> <li><code>endpoint</code>: /users/create</li> <li><code>method</code>: POST</li> <li><code>body_params</code>:      <pre><code>{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n}\n</code></pre></li> <li><code>token</code>: YOUR_BEARER_TOKEN</li> </ul> <p>The API Call Tool will format and send the request with the appropriate headers and body, and return the result including the response status code and body content.</p>","tags":["Etendo Copilot","API Integration","HTTP Requests","REST API","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/attach-file-tool/","title":"Attach File Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.openapi.purchase</code></p>","tags":["Tool","Etendo Copilot","File Upload","Webhook Integration","Base64 Encoding"]},{"location":"developer-guide/etendo-copilot/available-tools/attach-file-tool/#overview","title":"Overview","text":"<p>The Attach File tool uploads a file using the <code>AttachFile</code> webhook after verifying its existence and accessibility. It involves reading the file from a specified path, encoding it in base64, and then sending it to Etendo using the webhook, along with necessary identifiers and an access token.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Tool","Etendo Copilot","File Upload","Webhook Integration","Base64 Encoding"]},{"location":"developer-guide/etendo-copilot/available-tools/attach-file-tool/#functionality","title":"Functionality","text":"<p>The primary purpose of the Attach File Tool is to facilitate the process of attaching files to records in Etendo, by ensuring the file is accessible and correctly encoded before upload. It is highly valuable in automated processes that require attaching files to records. </p> <p>This process consists of the following actions:</p> <ul> <li> <p>Receiving Parameters</p> <p>The tool receives an input object containing the following keys:</p> <ul> <li> <p><code>filepath</code> : The path of the file to upload.</p> </li> <li> <p><code>ad_tab_id</code> : A 32-character string which is the ID of the Tab.</p> </li> <li> <p><code>record_id</code> : A 32-character string which is the ID of the record.</p> </li> </ul> </li> <li> <p>File Verification</p> <p>The tool checks if the file at the specified path exists and is readable. If the file does not exist or is not accessible, it returns an error.</p> </li> <li> <p>File Reading and Encoding</p> <p>If the file is available, it reads the file content and encodes it in base64 format.</p> </li> <li> <p>Authentication</p> <p>The tool retrieves an access token from the extra information stored in the thread context. If no access token is provided, it returns an error.</p> </li> <li> <p>API Communication</p> <p>The tool constructs the necessary headers and body parameters and sends the encoded file to the specified API endpoint using an HTTP POST request.</p> </li> <li> <p>Returning the Result</p> <p>Once the operation is completed, the tool returns the result of the API call, which could be a success or an error message.</p> </li> </ul>","tags":["Tool","Etendo Copilot","File Upload","Webhook Integration","Base64 Encoding"]},{"location":"developer-guide/etendo-copilot/available-tools/attach-file-tool/#usage-example","title":"Usage Example","text":"<p>Imagine there is a file at <code>/home/user/document.pdf</code>, and it is necessary to upload it to a specific record identified by its tab ID and record ID. The tool is used as follows:</p> <ul> <li> <p>Input:</p> <pre><code>{\n\"filepath\": \"/home/user/document.pdf\",\n\"ad_tab_id\": \"1234567890abcdef1234567890abcdef\",\n\"record_id\": \"abcdef1234567890abcdef1234567890\"\n}\n</code></pre> </li> <li> <p>Output:</p> <pre><code>{\n\"result\": { \"message\", \"Attachment created successfully\"}\n}\n</code></pre> </li> </ul>","tags":["Tool","Etendo Copilot","File Upload","Webhook Integration","Base64 Encoding"]},{"location":"developer-guide/etendo-copilot/available-tools/audio-tool/","title":"Audio Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","Audio Recognition","Audio","Transcription"]},{"location":"developer-guide/etendo-copilot/available-tools/audio-tool/#overview","title":"Overview","text":"<p>The Audio Tool is a tool that recognizes text from audio files. It can be used in Assistants to extract information from audio files, such as transcribing interviews, meetings, or podcasts. The tool accepts an audio file path as input and returns the text extracted from the audio.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Audio Recognition","Audio","Transcription"]},{"location":"developer-guide/etendo-copilot/available-tools/audio-tool/#functionality","title":"Functionality","text":"<p>This tool automates the process of text extraction from audio files. This can be particularly useful for tasks such as transcribing conversation or speech from audio recordings. The tool uses a speech-to-text model to convert the audio content into text.</p> <p>Using this tool consists of the following actions:</p> <ul> <li> <p>Receiving Parameters:</p> <ul> <li>The tool receives an input object that contains the path of the audio file to be processed.</li> <li>path: The path of the audio file to be processed.</li> </ul> </li> <li> <p>Obtaining the File:</p> <ul> <li>The tool retrieves the file specified in the path parameter. It verifies the existence of the file and ensures it is in a supported format (this tool uses the Whisper model of OpenAI ).</li> </ul> </li> <li> <p>Returning the Result:</p> <ul> <li>The tool returns a JSON object containing the extracted text from the audio file.</li> <li>message: The extracted text from the audio file.</li> </ul> </li> </ul>","tags":["Copilot","Audio Recognition","Audio","Transcription"]},{"location":"developer-guide/etendo-copilot/available-tools/audio-tool/#usage-example","title":"Usage Example","text":"","tags":["Copilot","Audio Recognition","Audio","Transcription"]},{"location":"developer-guide/etendo-copilot/available-tools/audio-tool/#requesting-text-recognition-from-an-audio-file","title":"Requesting text recognition from an audio file","text":"<p>Suppose you have an audio at <code>/home/user/request.mp3</code> and you want to extract text related to an invoice information: </p> <p>Audio Content <pre><code>Can you create a new invoice for the customer John Doe with the following items: 2 Product A, 1 Product B and 3 Product C\n</code></pre></p> <ul> <li> <p>Use the tool as follows:</p> <ul> <li> <p>Input:</p> <pre><code>{\n    \"path\": \"/home/user/request.mp3\"\n}\n</code></pre> </li> <li> <p>Output:</p> Output Json<pre><code>{\n    \"message\": \"Can you create a new invoice for the customer John Doe with the following items: 2 Product A, 1 Product B and 3 Product C\"\n}\n</code></pre> </li> </ul> </li> </ul> <p>Note</p> <p>Remember that the result of the tool can be used in other tools, for example, you can use the result of the Audio Tool as input for an agent that uses the extracted text to create an invoice.</p>","tags":["Copilot","Audio Recognition","Audio","Transcription"]},{"location":"developer-guide/etendo-copilot/available-tools/codbar-tool/","title":"Codbar Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.ocrtool</code></p>","tags":["Copilot","Codbar","Image Recognition","Barcode"]},{"location":"developer-guide/etendo-copilot/available-tools/codbar-tool/#overview","title":"Overview","text":"<p>The CodbarTool is a tool that reads barcodes from image files. It accepts an array of file paths as an input and returns an array of barcodes found in those images.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Codbar","Image Recognition","Barcode"]},{"location":"developer-guide/etendo-copilot/available-tools/codbar-tool/#functionality","title":"Functionality","text":"<p>This tool allows assistants to read barcodes from multiple images, which can then be applied in inventory management, product tracking, and document processing among other areas.</p> <p>Using this tool consists of the following actions: </p> <ul> <li> <p>Receiving Parameters: </p> <ul> <li>The tool receives an input object containing a key called filepath which is a list of strings. Each string represents the file path of an image to be analyzed.</li> <li> <p>Example input:</p> <p><code>{\"filepath\": [\"/tmp/test.png\", \"/tmp/test1.png\"]}</code></p> </li> </ul> </li> <li> <p>Processing Images: </p> <ul> <li>For each file path provided, the tool opens the image and attempts to decode any barcodes present.</li> <li>It utilizes the pyzbar library to decode barcodes from the images.</li> </ul> </li> <li> <p>Returning the Result: </p> <ul> <li>If barcodes are found, the tool collects and returns them in a list.</li> <li> <p>Example output:</p> <p><code>{\"message\": [\"123456789012\", \"987654321098\", ...]}</code></p> </li> </ul> </li> </ul> <p>Info</p> <p>The tool utilizes the PIL library to open image files.</p> <p>Note</p> <p>The pyzbar library is used to decode barcodes from the image. If no barcodes are found, it returns None for that image. If barcodes are found, it decodes each barcode\u2019s data.</p>","tags":["Copilot","Codbar","Image Recognition","Barcode"]},{"location":"developer-guide/etendo-copilot/available-tools/codbar-tool/#usage-example","title":"Usage Example","text":"<ul> <li>Suppose there is an image at <code>/tmp/goods-receipt.png</code> and you want to extract the barcode related to the goods receipt information:</li> </ul> <p>The following is an example image of a goods receipt: </p> <p></p> <ul> <li> <p>The tool will be used as follows: </p> <ul> <li> <p>Input</p> <pre><code>`{\"filepath\": [\"/tmp/goods-receipt.png\"]}`\n</code></pre> </li> <li> <p>Output</p> <pre><code>`{\"message\": ['ALV-4066905', '871000003252']}`\n</code></pre> </li> </ul> </li> </ul>","tags":["Copilot","Codbar","Image Recognition","Barcode"]},{"location":"developer-guide/etendo-copilot/available-tools/docker-tool/","title":"Docker Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","Docker","Code Execution","Python","Bash"]},{"location":"developer-guide/etendo-copilot/available-tools/docker-tool/#overview","title":"Overview","text":"<p>The DockerTool is a tool that manages Docker containers to execute Python or Bash code. It allows users to run isolated commands, copy files into containers, and clean up containers automatically after a period of inactivity.</p> <p>Info</p> <p>To include this functionality, the Copilot Extensions Bundle must be installed. For instructions, visit the marketplace: Copilot Extensions Bundle. For details about versions, core compatibility, and new features, check Copilot Extensions - Release notes.</p>","tags":["Copilot","Docker","Code Execution","Python","Bash"]},{"location":"developer-guide/etendo-copilot/available-tools/docker-tool/#functionality","title":"Functionality","text":"<p>This tool facilitates code execution in isolated Docker environments, supporting workflows for development, automation, and system tasks. The primary functionalities include:</p>","tags":["Copilot","Docker","Code Execution","Python","Bash"]},{"location":"developer-guide/etendo-copilot/available-tools/docker-tool/#parameters","title":"Parameters","text":"<ul> <li>Executor: The type of executor for the code (<code>python</code> or <code>bash</code>).</li> <li>Code: The code to be executed inside the container.</li> <li>Files to Copy: An optional list of file paths to copy into the container for execution.</li> </ul>","tags":["Copilot","Docker","Code Execution","Python","Bash"]},{"location":"developer-guide/etendo-copilot/available-tools/docker-tool/#execution-workflow","title":"Execution Workflow","text":"<ol> <li> <p>Container Creation:</p> <ul> <li>A Docker container is created if it doesn't already exist.</li> <li>Containers are named using the format <code>tempenv-copilot-{conversation_id}</code> for traceability.</li> </ul> </li> <li> <p>File Transfer:</p> <ul> <li>Files specified in the <code>Files to Copy</code> parameter are uploaded to the container at the specified paths.</li> </ul> </li> <li> <p>Command Execution:</p> <ul> <li>The tool runs the specified Python or Bash code.</li> <li>The output is captured and returned to the user.</li> </ul> </li> <li> <p>Container Cleanup:</p> <ul> <li>Containers are automatically deleted after 1 hour of inactivity.</li> </ul> </li> </ol>","tags":["Copilot","Docker","Code Execution","Python","Bash"]},{"location":"developer-guide/etendo-copilot/available-tools/docker-tool/#usage-example","title":"Usage example","text":"<ul> <li>Example Input</li> </ul> <pre><code>{\n    \"executor\": \"bash\",\n    \"code\": \"ping -c 4 google.com\",\n    \"files_to_copy\": []\n}\n</code></pre> <ul> <li>Example Output</li> </ul> <pre><code>{\n    \"message\": \"PING google.com (172.217.12.206): 56 data bytes\\n64 bytes from 172.217.12.206: icmp_seq=0 ttl=115 time=12.5 ms\\n64 bytes from 172.217.12.206: icmp_seq=1 ttl=115 time=12.3 ms\\n64 bytes from 172.217.12.206: icmp_seq=2 ttl=115 time=12.4 ms\\n64 bytes from 172.217.12.206: icmp_seq=3 ttl=115 time=12.6 ms\\n\\n--- google.com ping statistics ---\\n4 packets transmitted, 4 packets received, 0.0% packet loss\\nround-trip min/avg/max/stddev = 12.3/12.5/12.6/0.1 ms\"\n}\n</code></pre> <p>Info</p> <p>This tool uses the official Python 3.10-slim Docker image for execution and can execute both Python and Bash commands.</p>","tags":["Copilot","Docker","Code Execution","Python","Bash"]},{"location":"developer-guide/etendo-copilot/available-tools/file-copy-tool/","title":"File Copy Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","IA","Tool","File Copy"]},{"location":"developer-guide/etendo-copilot/available-tools/file-copy-tool/#overview","title":"Overview","text":"<p>The File Copy Tool receives two paths: one from a file and one from a directory. Its function is to copy the specified file to the specified directory and return the path of the copied file.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","IA","Tool","File Copy"]},{"location":"developer-guide/etendo-copilot/available-tools/file-copy-tool/#functionality","title":"Functionality","text":"<p>This tool is useful when you need to duplicate files in different locations within the file system. This can be essential for backup tasks, file organization, or preparing files for processing in specific locations. This simplifies the process of copying files and managing directories, ensuring the existence of the destination directory and providing clear feedback with the path of the copied file.</p> <p>This process consists of the following actions:</p> <ul> <li> <p>Receiving Parameters</p> <p>The tool receives an input object containing two keys:</p> <ul> <li><code>source_path</code>: path to the source file to be copied.</li> <li><code>destination_directory</code>: path to the destination directory where you want to copy the file.</li> </ul> </li> <li> <p>Creating the Output Directory</p> <p>If the output directory does not exist, the tool automatically creates it to ensure that the copy operation does not fail due to a missing path.</p> </li> <li> <p>Copying the file</p> <p>Use Python's <code>shutil.copy</code> function to copy the source file to the target directory.</p> </li> <li> <p>Returning the Result</p> <p>Once the process is complete, the tool returns an object containing the full path to the copied file in the output directory.</p> </li> </ul>","tags":["Copilot","IA","Tool","File Copy"]},{"location":"developer-guide/etendo-copilot/available-tools/file-copy-tool/#usage-example","title":"Usage Example","text":"<p>If you have a file in <code>/home/user/file.txt</code> and you want to copy it to the <code>/home/user/destination_directory</code> directory, you would use the tool as follows:</p> <ul> <li> <p>Input <pre><code>{\"source_path\": \"/home/user/file.txt\", \"destination_directory\": \"/home/user/destination_directory\"}\n</code></pre></p> </li> <li> <p>Output <pre><code>{\"file_path\": \"/home/user/destination_directory/file.txt\"}\n</code></pre></p> </li> </ul>","tags":["Copilot","IA","Tool","File Copy"]},{"location":"developer-guide/etendo-copilot/available-tools/file-downloader-tool/","title":"File Downloader Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","IA","Tool","File Downloader"]},{"location":"developer-guide/etendo-copilot/available-tools/file-downloader-tool/#overview","title":"Overview","text":"<p>The File Downloader Tool is designed to receive a URL and download the corresponding file to a temporary directory, returning the path to the temporary file. This tool is extremely valuable for any application that needs to dynamically interact with files on the web. It allows you to efficiently download files and store them temporarily, facilitating their later use and manipulation without the need to worry about file management in the system. In addition, it handles different types of content (text and binary) automatically, making the operation transparent and simple for the user.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","IA","Tool","File Downloader"]},{"location":"developer-guide/etendo-copilot/available-tools/file-downloader-tool/#functionality","title":"Functionality","text":"<p>This tool is especially useful when you need to download files from the web for further processing without worrying about managing the files on the local system. It can be useful for tasks such as:</p> <ul> <li>Downloading images, documents or other files for analysis and processing.</li> <li>Getting files for temporary storage, avoiding the need for direct file system management.</li> </ul> <p>This process consists of the following actions:</p> <ul> <li> <p>Receiving Parameters</p> <p>The tool receives a URL as a string via the <code>file_path_or_url</code> parameter.</p> </li> <li> <p>Verifying URL</p> <p>It checks if the entry is a valid URL (starts with <code>http://</code> or <code>https://</code>).</p> </li> <li> <p>Downloading File</p> <ul> <li>It performs an HTTP GET request to the URL.</li> <li>If the request is successful (status code 200):<ul> <li>It attempts to determine the file name from the URL.</li> <li>If the name cannot be determined, it determines a generic name such as <code>downloaded_file</code>.</li> <li>It determines the content type of the file (text or other):<ul> <li>If text, it writes the contents to a temporary file with the extension <code>.txt</code>, if it does not have another extension.</li> <li>If other, it copies the content to a temporary file with the corresponding extension.</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Returning the Result</p> <p>It returns a dictionary with the path to the temporary file created under the <code>temp_file_path</code> key.</p> </li> <li> <p>Handling the Error</p> <p>If the URL is invalid or the download fails, it returns a relevant error message.</p> </li> </ul>","tags":["Copilot","IA","Tool","File Downloader"]},{"location":"developer-guide/etendo-copilot/available-tools/file-downloader-tool/#usage-example","title":"Usage Example","text":"<p>If there is a file hosted at <code>https://example.com/file.txt</code> and it is necessary to download it temporarily:</p> <ul> <li>Input</li> </ul> <pre><code>file_path_or_url: \"https://example.com/file.txt\"\n</code></pre> <ul> <li>Output</li> </ul> <pre><code>{\"temp_file_path\": \"/path/to/temp/downloaded_file.txt\"}\n</code></pre>","tags":["Copilot","IA","Tool","File Downloader"]},{"location":"developer-guide/etendo-copilot/available-tools/ocr-tool/","title":"Optical Character Recognition (OCR) Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.ocrtool</code></p>","tags":["Copilot","OCR","Image Recognition","Optical Character Recognition","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/ocr-tool/#overview","title":"Overview","text":"<p>The Optical Character Recognition (OCR) Tool is a tool that recognizes text from images or pdfs. It can be used in Assistants to extract information from images or pdfs that are uploaded to the chat.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","OCR","Image Recognition","Optical Character Recognition","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/ocr-tool/#functionality","title":"Functionality","text":"<p>This tool automates the process of text extraction from image-based files or PDFs. This can be particularly useful for tasks such as document digitization, data extraction, and content analysis. </p> <p>Using this tool consists of the following actions:</p> <ul> <li> <p>Receiving Parameters:</p> <ul> <li> <p>The tool receives an input object that contains two keys:</p> <ul> <li>path: The path of the image or PDF file to be processed.</li> <li>question: A contextual question specifying the information to be extracted from the image. This is mandatory for precise results.</li> </ul> </li> </ul> </li> <li> <p>Obtaining the File:</p> <ul> <li>The tool retrieves the file specified in the path parameter. It verifies the existence of the file and ensures it is in a supported format (JPEG, JPG, PNG, WEBP, GIF, PDF).</li> </ul> </li> <li> <p>PDF Conversion:</p> <ul> <li>If the input file is a PDF, it is converted to an image format (JPEG) using the pypdfium2 library. Each page of the PDF is rendered as a separate image.</li> </ul> </li> <li> <p>Image Conversion:</p> <ul> <li>Other image formats are processed directly or converted to JPEG if necessary.</li> </ul> </li> <li> <p>Image Processing:</p> <ul> <li>The image is processed using a Vision model powered by GPT. This model interprets the text within the image and extracts the relevant information based on the provided question.</li> </ul> </li> <li> <p>Returning the Result:</p> <ul> <li>The tool returns a JSON object containing the extracted information from the image or PDF.</li> </ul> </li> </ul>","tags":["Copilot","OCR","Image Recognition","Optical Character Recognition","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/ocr-tool/#usage-example","title":"Usage Example","text":"","tags":["Copilot","OCR","Image Recognition","Optical Character Recognition","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/ocr-tool/#requesting-text-recognition-from-an-imagepdf","title":"Requesting text recognition from an image/pdf","text":"<p>Suppose you have an image at <code>/home/user/invoice.png</code> and you want to extract text related to an invoice information:</p> <p>The following is an example image of an invoice:</p> <p></p> <ul> <li> <p>Use the tool as follows:</p> <ul> <li> <p>Input:</p> <pre><code>{\"path\": \"/home/user/invoice.png\", \"question\": \"Give me the content of this invoice\"}\n</code></pre> </li> <li> <p>Output:</p> Output Json<pre><code>{\n    \"company\": {\n        \"name\": \"F&amp;B Espa\u00f1a, S.A.\",\n        \"tax_id\": \"B-1579173\",\n        \"address\": \"Pg. de Gracia, 123 2-1\u00aa\",\n        \"city\": \"08009 - Barcelona (BARCELONA)\"\n    },\n    \"invoice\": {\n        \"title\": \"This is a Sales invoice\",\n        \"number\": \"1000000\",\n        \"currency\": \"EUR\",\n        \"date\": \"15-02-2011\"\n    },\n    \"customer\": {\n        \"name\": \"Restaurantes Luna Llena, S.A.\",\n        \"contact\": \"Ana Cortes\",\n        \"phone\": \"092765188\",\n        \"address\": \"Pl. Mayor, 78\",\n        \"postal_code\": \"76764\"\n    },\n    \"items\": [\n        {\n        \"reference\": \"ES0024\",\n        \"product_name\": \"Agua sin Gas 1L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 25000,\n        \"price\": 1.13,\n        \"total\": 28250.00\n        },\n        {\n        \"reference\": \"ES0021\",\n        \"product_name\": \"Bebida Energ\u00e9tica 0,5L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 45000,\n        \"price\": 1.49,\n        \"total\": 67050.00\n        },\n        {\n        \"reference\": \"ES1000\",\n        \"product_name\": \"Cerveza Ale 0,5L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 33000,\n        \"price\": 2.48,\n        \"total\": 81840.00\n        },\n        {\n        \"reference\": \"ES1002\",\n        \"product_name\": \"Cerveza Lager 0,5L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 45000,\n        \"price\": 2.64,\n        \"total\": 118800.00\n        },\n        {\n        \"reference\": \"ES0030\",\n        \"product_name\": \"Cola de Cereza 0,5L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 40000,\n        \"price\": 0.83,\n        \"total\": 33200.00\n        },\n        {\n        \"reference\": \"ES0032\",\n        \"product_name\": \"Limonada 0,5L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 40000,\n        \"price\": 0.83,\n        \"total\": 33200.00\n        },\n        {\n        \"reference\": \"ES0023\",\n        \"product_name\": \"Vino Blanco 0,75L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 36000,\n        \"price\": 3.05,\n        \"total\": 109800.00\n        },\n        {\n        \"reference\": \"ES0025\",\n        \"product_name\": \"Vino Rosado 0,75L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 36000,\n        \"price\": 5.83,\n        \"total\": 209880.00\n        },\n        {\n        \"reference\": \"ES1004\",\n        \"product_name\": \"Vino Tinto 0,75L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 36000,\n        \"price\": 5.07,\n        \"total\": 182520.00\n        },\n        {\n        \"reference\": \"ES0037\",\n        \"product_name\": \"Zumo de Naranja 0,5L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 45000,\n        \"price\": 1.13,\n        \"total\": 50850.00\n        },\n        {\n        \"reference\": \"ES1014\",\n        \"product_name\": \"Zumo de Pi\u00f1a 0,5L\",\n        \"uom\": \"Unit\",\n        \"quantity\": 33000,\n        \"price\": 1.13,\n        \"total\": 37390.00\n        }\n    ],\n    \"payment_terms\": \"30 days\",\n    \"totals\": {\n        \"subtotal\": 927640.00,\n        \"tax\": {\n        \"rate\": \"IVA 18%\",\n        \"amount\": 166975.20\n        },\n        \"total\": 1094615.20\n    }\n}\n</code></pre> </li> </ul> </li> </ul>","tags":["Copilot","OCR","Image Recognition","Optical Character Recognition","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/ocr-tool/#result-chaining","title":"Result Chaining","text":"<p>Note</p> <p>Remember that the result of the tool can be used in other tools, for example, you can use the result of the OCR Tool in a tool that writes the information in a database or sends it to a web service. </p>","tags":["Copilot","OCR","Image Recognition","Optical Character Recognition","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/pdf-to-images-tool/","title":"PDF to Images Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","PDF","Images","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/pdf-to-images-tool/#overview","title":"Overview","text":"<p>The PDF to Images Tool is a tool that converts a PDF file into an array of images, with each image representing a page of the PDF. The tool utilizes specialized Python libraries for PDF processing and image handling to achieve this conversion efficiently.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","PDF","Images","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/pdf-to-images-tool/#functionality","title":"Functionality","text":"<p>This tool allows assistants to convert PDF documents into image formats. This is particularly useful for scenarios where individual pages of a PDF need to be processed as images, such as in digital archiving, document review, or further image analysis tasks.</p> <p>It is invaluable for any automated workflow that requires handling PDF contents as image data. It simplifies the process of converting PDF pages to images, ensuring each page is accurately rendered and saved as a high-quality image. This tool is essential in fields such as digital archiving, where documents need to be preserved in an easily accessible and viewable format, and in applications involving image analysis, where each page of a PDF document can be independently processed.</p> <p>Using this tool consists of the following actions:</p> <ul> <li> <p>Receiving Parameters </p> <p>The tool receives an input object that contains the following key:</p> <ul> <li> <p>path</p> <p>(str): the path to the PDF file to be converted.</p> </li> </ul> </li> <li> <p>Processing</p> <ul> <li> <p>Validation: The tool first checks if the provided PDF path points to an existing file. If the file does not exist, it raises an exception with a relevant error message.</p> </li> <li> <p>PDF Loading: The tool uses the pypdfium2 library to load the PDF document.</p> </li> <li> <p>Page Rendering: For each page in the PDF:</p> <ul> <li> <p>The page is rendered at a scale of 2.0 to produce a high-quality image.</p> </li> <li> <p>The rendered bitmap is then converted to a PIL (Python Imaging Library) image.</p> </li> </ul> </li> <li> <p>Temporary Storage: Each converted image is temporarily stored on the filesystem at a predefined path (<code>/tmp/page_{page_number}.png</code>).</p> </li> <li> <p>Collecting Results: Paths to the stored images are collected in a list, which is returned as the final output.</p> </li> </ul> </li> <li> <p>Returning the Result</p> <p>Once the conversion process is completed, the tool returns a list of file paths, each pointing to the respective converted image for each page of the PDF.</p> </li> </ul>","tags":["Copilot","PDF","Images","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/pdf-to-images-tool/#usage-example","title":"Usage Example","text":"<p>If you have a PDF file located at <code>/home/user/document.pdf</code> and you want to convert its pages into images, you would use the tool as follows:</p> <ul> <li>Input:</li> </ul> <pre><code>{\n  \"path\": \"/home/user/document.pdf\"\n}\n</code></pre> <ul> <li>Output:</li> </ul> <pre><code>[\n  \"/tmp/page_0.png\",\n  \"/tmp/page_1.png\",\n  \"/tmp/page_2.png\"\n  // paths for all pages\n]\n</code></pre>","tags":["Copilot","PDF","Images","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/print-directory-tool/","title":"Print Directory Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","IA","Tool","Directory","File System"]},{"location":"developer-guide/etendo-copilot/available-tools/print-directory-tool/#overview","title":"Overview","text":"<p>The Print Directory Tool is a tool designed to print files and directories from the current directory or from a specified upstream directory. It allows the option to list the contents recursively.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p> <p>This tool is extremely valuable for file system management and monitoring. It makes it easy to view the directory structure, either locally or upwards, and allows for detailed audits of the structure. Its ability to ignore specific directories common in development environments ensures that listings are relevant and clean, making the tool efficient and practical.</p>","tags":["Copilot","IA","Tool","Directory","File System"]},{"location":"developer-guide/etendo-copilot/available-tools/print-directory-tool/#functionality","title":"Functionality","text":"<p>This tool is used when you need to get a clear view of the file and directory structure in a specific directory on the system, either the current directory or one of its parent directories. It can be useful for:</p> <ul> <li>Auditing and reviewing the file structure.</li> <li>Automate operations that depend on the existence of certain files.</li> <li>Obtain directory listings for further processing.</li> </ul> <p>This process consists of the following actions:</p> <ul> <li> <p>Receiving Parameters</p> <p>The tool receives two key parameters:</p> <ul> <li>Recursive (boolean): It indicates whether to list subdirectories recursively.</li> <li><code>parent_doubledot_qty</code> (integer): It specifies how many parent directories to ascend from the current directory.</li> </ul> <p>Input example</p> <pre><code>{\n\"recursive\": true,\n\"parent_doubledot_qty\": 2\n}\n</code></pre> <p>Calculation of the Directory to List:</p> <ul> <li>Calculates the directory path based on the number of parents specified.</li> <li>For example, if <code>parent_doubledot_qty</code> is 2, it will go up two levels from the current directory (../../).</li> </ul> </li> <li> <p>Directory list</p> <ul> <li>If recursive is True, it will use <code>os.walk</code> to list all files and subdirectories recursively.</li> <li>If recursive is False, it will use <code>os.listdir</code> to list only the contents of the specified directory.</li> </ul> </li> <li> <p>Returning the Result</p> <p>It returns a dictionary with the list of files and directories under the message key.</p> </li> </ul>","tags":["Copilot","IA","Tool","Directory","File System"]},{"location":"developer-guide/etendo-copilot/available-tools/print-directory-tool/#usage-example","title":"Usage Example","text":"<p>If you want to recursively list the files and directories in the grandparent directory of the current directory:</p> <ul> <li>Input <pre><code>{ \"recursive\": true, \"parent_doubledot_qty\": 2 }\n</code></pre></li> <li>Output <pre><code>{ \"message\": [\"/path/to/parent/dir/file1\", \"/path/to/parent/dir/subdir/file2\", ...] }\n</code></pre></li> </ul>","tags":["Copilot","IA","Tool","Directory","File System"]},{"location":"developer-guide/etendo-copilot/available-tools/read-file-tool/","title":"Read File Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","Tool","Read","File"]},{"location":"developer-guide/etendo-copilot/available-tools/read-file-tool/#overview","title":"Overview","text":"<p>The Read File Tool is designed to read the contents of files given a filepath parameter. It provides a simple way to access the contents of text files on the local system.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Tool","Read","File"]},{"location":"developer-guide/etendo-copilot/available-tools/read-file-tool/#functionality","title":"Functionality","text":"<p>This tool is especially useful to access the contents of a file for processing or viewing. It can be used in several situations, such as:</p> <ul> <li>Reading configuration files.</li> <li>Accessing logs and log files.</li> <li>Viewing or processing data stored in text files.</li> </ul> <p>This process consists of the following actions.</p> <ul> <li> <p>Receiving Parameters</p> <p>The tool receives an input parameter called <code>filepath</code> which is the path to the file to be read.</p> </li> <li> <p>Reading File</p> <ul> <li>It opens the file specified by <code>filepath</code>.</li> <li>It reads the entire contents of the file.</li> </ul> </li> <li> <p>Returning the Result     It returns a dictionary with the contents of the file under the <code>message</code> key.</p> </li> </ul>","tags":["Copilot","Tool","Read","File"]},{"location":"developer-guide/etendo-copilot/available-tools/read-file-tool/#usage-example","title":"Usage Example","text":"<p>If you want to read the contents of the <code>/tmp/test.txt</code> file:</p> <ul> <li>Input <pre><code>{ \"filepath\": \"/tmp/test.txt\" }\n</code></pre></li> <li>Output <pre><code>{ \"message\": \"Content of the read file...\" }\n</code></pre></li> </ul>","tags":["Copilot","Tool","Read","File"]},{"location":"developer-guide/etendo-copilot/available-tools/send-email-tool/","title":"Send Email Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Etendo Copilot","Email Automation","SMTP","Resend API","Notifications","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/send-email-tool/#overview","title":"Overview","text":"<p>The Send Email Tool is designed to send emails. This tool facilitates sending emails in an efficient and structured way. It accepts the following input parameters: subject (the email subject), mailto (the recipient's email address), and html (the HTML content of the email). As output, it returns a message indicating the result of sending the mail. </p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p> <p>This tool provides the assistant with:</p> <ul> <li>Automation: It automates the sending of emails in web applications and systems.</li> <li>Flexibility: It allows selecting between different sending methods (Resend or SMTP), depending on the environment configuration.</li> <li>Efficiency: It facilitates the management of email notifications and communications, improving operational efficiency.</li> </ul> <p>This tool is essential for developers and system administrators who need to easily integrate email functionalities into their applications or services.</p>","tags":["Etendo Copilot","Email Automation","SMTP","Resend API","Notifications","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/send-email-tool/#setup","title":"Setup","text":"<p>To use this tool, it is necessary to configure the variable <code>MAIL_METHOD</code>:</p> <ul> <li>SMTP: It uses the SMTP protocol to send mail. It configures and sends mail using an SMTP server such as Gmail. The SMTP is the default value for this variable. Additionally, credentials must be setup: <code>MAIL_FROM</code> with the sender email and <code>SMTP_PASSWORD</code> with the sender password.</li> </ul> <p>For example:</p> <p>gradle.properties<pre><code>MAIL_METHOD=SMTP\nMAIL_FROM= example@example.com\nSMTP_PASSWORD= ******\n</code></pre> - resend: In this case, the resend API service is used, designed to resend email requests. In case this is selected, it is necessary to set up the variable <code>RESEND_API_KEY</code>. For example:</p> gradle.properties<pre><code>MAIL_METHOD=resend\nRESEND_API_KEY=******\n</code></pre>","tags":["Etendo Copilot","Email Automation","SMTP","Resend API","Notifications","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/send-email-tool/#functionality","title":"Functionality","text":"<p>This tool is useful in any application or service that needs to send emails automatically. It can be used for notifications, updates, order confirmations, password resets, among other things.</p> <p>This process consists of the following actions:</p> <ul> <li> <p>Processing Arguments </p> <p>It takes the input parameters specifying the subject, recipient and HTML content of the mail.</p> </li> <li> <p>Verifying Sending Method </p> <p>It determines the sending method using a <code>MAIL_METHOD</code> environment variable. The options are mentioned in the Setup section above.</p> </li> <li> <p>Sending Mail</p> <p>Depending on the sending method, it configures and sends mail with the information provided.</p> </li> <li> <p>Returning the Result</p> <p>Returns a message indicating if the mail was sent successfully or if there was an error. For example:</p> <pre><code>{ \u201cmessage\u201d: \u201cMail sent successfully\u201d}\n</code></pre> <p>if the mail was sent successfully.</p> <pre><code>{ \u201cmessage\u201d: \u201cMail method not supported\u201d}\n</code></pre> <p>if the sending method is not supported.</p> </li> </ul>","tags":["Etendo Copilot","Email Automation","SMTP","Resend API","Notifications","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/send-email-tool/#usage-example","title":"Usage Example","text":"<p>Imagine you want to send a notification email. The input parameters for the assistant would be:</p> <ul> <li><code>subject</code>: Account update</li> <li><code>mailto</code>: user@example.com</li> <li><code>html</code>:      <pre><code>&lt;h1&gt;Account Upgrade&lt;/h1&gt;\n&lt;p&gt;Your account has been successfully upgraded.&lt;/p&gt;\n&lt;p&gt;&lt;p&gt;Your account has been successfully upgraded.\n</code></pre></li> </ul> <p>The Send Email Tool will process these parameters and select the configured sending method. It will then send the mail and return a message indicating whether the mail was sent successfully.</p>","tags":["Etendo Copilot","Email Automation","SMTP","Resend API","Notifications","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/task-creator-tool/","title":"Task Creator Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Etendo Copilot","Task Automation","CSV Processing","Excel Processing","ZIP Processing","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/task-creator-tool/#overview","title":"Overview","text":"<p>The Task Creator Tool automates the creation of tasks based on the content of a file. It supports ZIP, CSV, XLS, and XLSX formats. Each file or row extracted from the input becomes a separate task, making it ideal for bulk task creation based on structured data.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p> <p>Tip</p> <p>To know when is the best time to use this tool or how there are executed this tasks, check the How to create bulk tasks for Copilot guide.</p> <p>This tool provides the assistant with:</p> <ul> <li>Bulk Task Creation: Automatically generate multiple tasks from one file.</li> <li>Multi-format Support: Works with <code>.zip</code>, <code>.csv</code>, <code>.xls</code>, and <code>.xlsx</code>.</li> <li>Smart Defaults: Automatically detects and creates missing task types, statuses, or group IDs if not provided.</li> <li>Parallel Execution: Creates tasks concurrently for better performance.</li> </ul> <p>It is especially useful for team collaboration, project onboarding, data entry workflows, and recurring structured task setups.</p>","tags":["Etendo Copilot","Task Automation","CSV Processing","Excel Processing","ZIP Processing","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/task-creator-tool/#setup","title":"Setup","text":"<p>The tool doesn\u2019t require specific environment variables from the user. However, it depends on the internal Etendo configuration for token and host retrieval, using the <code>ETENDO_TOKEN</code> and <code>ETENDO_HOST</code> values internally. These values are handled securely and are never exposed to the model.</p>","tags":["Etendo Copilot","Task Automation","CSV Processing","Excel Processing","ZIP Processing","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/task-creator-tool/#supported-file-formats","title":"Supported File Formats","text":"<ul> <li>ZIP: A task is created for each extracted file.</li> <li>CSV / Excel (XLS, XLSX): A task is created for each row (excluding the header), with data mapped as key-value strings.</li> <li>Other Files: A single task is created using the full file path.</li> </ul>","tags":["Etendo Copilot","Task Automation","CSV Processing","Excel Processing","ZIP Processing","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/task-creator-tool/#functionality","title":"Functionality","text":"<p>The tool follows these main steps:</p> <ul> <li> <p>Input Processing</p> <p>Accepts the following parameters:</p> <ul> <li><code>question</code>: Description or request that will be used as the task base.</li> <li><code>file_path</code>: Path to the input file (ZIP, CSV, XLS, or XLSX).</li> <li><code>group_id</code>: Optional group ID. If not set, it uses the conversation ID.</li> <li><code>task_type_id</code>: Optional task type ID. If not set, it auto-creates one named \"Copilot\".</li> <li><code>status_id</code>: Optional status ID. Defaults to \"Pending\".</li> </ul> </li> <li> <p>File Extraction</p> <p>Depending on the file type:</p> <ul> <li>ZIP: Unzips and lists file paths.</li> <li>CSV/XLS/XLSX: Reads and converts each row to a string representation.</li> </ul> </li> <li> <p>Task Generation</p> <p>For each extracted item (file path or row), it generates a task with:</p> <ul> <li>The base <code>question</code> + item content.</li> <li>The associated <code>task_type</code>, <code>status</code>, <code>group_id</code>, and the current assistant ID.</li> </ul> </li> <li> <p>Secure Token Use</p> <p>The tool retrieves the Etendo access token using <code>ETENDO_TOKEN</code>, ensuring sensitive values are resolved securely before execution and are not visible to the model.</p> </li> <li> <p>Parallel Execution</p> <p>Tasks are created in parallel using up to 10 concurrent threads to optimize performance.</p> </li> <li> <p>Final Response</p> <p>Returns:</p> <pre><code>{\n    \"message\": \"Bulk Task creation process completed, the tasks from this batch group has the group id: &lt;group_id&gt;\"\n}\n</code></pre> </li> </ul>","tags":["Etendo Copilot","Task Automation","CSV Processing","Excel Processing","ZIP Processing","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/task-creator-tool/#usage-example","title":"Usage Example","text":"<p>You have a <code>.csv</code> file with a list of customer feedback. Each row should become a separate task under the same group. You would input:</p> <ul> <li><code>question</code>: Review feedback</li> <li><code>file_path</code>: /path/to/feedback.csv</li> <li><code>group_id</code>: 123456789</li> <li><code>task_type_id</code>: (optional)</li> <li><code>status_id</code>: (optional)</li> </ul> <p>The Task Creator Tool will process each row and generate a task with the base question + the row's data. If task type or status is not set, it creates default values.</p> <p>This helps you automate large-scale task generation in just one step, saving time and avoiding manual entry.</p>","tags":["Etendo Copilot","Task Automation","CSV Processing","Excel Processing","ZIP Processing","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/tavily-tool/","title":"Tavily Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","Tavily","API","Search Engine","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/tavily-tool/#overview","title":"Overview","text":"<p>The TavilySearchTool is a custom tool designed to perform searches using the Tavily search engine, which is known for allowing users to search the Internet for various types of information.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Tavily","API","Search Engine","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/tavily-tool/#configuration","title":"Configuration","text":"","tags":["Copilot","Tavily","API","Search Engine","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/tavily-tool/#tavily-api-key-configuration","title":"Tavily API key Configuration","text":"<ol> <li>Visit the Tavily website and sign up for an account.</li> <li>Once logged in, navigate to the API key section of your account.</li> <li>Generate a new API key.</li> <li> <p>It is necessary to add the <code>gradle.properties</code> file with the following configuration:</p> gradle.properties<pre><code>TAVILY_API_KEY=&lt;your_api_key_here&gt;\n</code></pre> </li> <li> <p>Restart Copilot service</p> terminal<pre><code>./gradlew resources.down resources.up\n</code></pre> </li> </ol>","tags":["Copilot","Tavily","API","Search Engine","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/tavily-tool/#functionality","title":"Functionality","text":"<p>This tool is used to interface with the Tavily search engine and retrieve search results for a given query.</p> <p>Everytime this tool is called, the parameter to use is a JSON like:</p> <pre><code>{ \"query\": \"What is the capital of Spain?\" }\n</code></pre>","tags":["Copilot","Tavily","API","Search Engine","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/template-tool/","title":"Template Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Etendo Copilot","Python Tool Template","Development Standardization","Rapid Prototyping","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/template-tool/#overview","title":"Overview","text":"<p>The Template Tool is a template for creating new tools in Python-based applications. It is designed to provide a basic structure on which to build custom functionality. The input parameters it accepts are: input1 and input2. The output consists of a message that confirms a predetermined action.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Etendo Copilot","Python Tool Template","Development Standardization","Rapid Prototyping","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/template-tool/#functionality","title":"Functionality","text":"<p>This tool is useful for developers who want to create new tools quickly following a standard format. It can be used as a starting point to develop specific functions without having to worry about the initial code setup. It provides the user with:</p> <ul> <li>Standardization: It facilitates the creation of new tools following a standard format, ensuring consistency in development.</li> <li>Development Speed: It speeds up the development process by providing a predefined basic structure.</li> <li>Flexibility: It allows developers to modify and customize functionality according to the specific needs of their application.</li> </ul> <p>Using this tool consists of the following actions:</p> <ul> <li> <p>Processing Arguments</p> <p>It takes input parameters that are in JSON format. If the input is a string, it converts it to a JSON object; if it is already a JSON object, it uses it directly.</p> </li> <li> <p>Accessing Parameters</p> <p>It extracts the values of input1 and input2 from the provided JSON object.</p> </li> <li> <p>Personalized Code</p> <p>It contains a space where you can add specific code to perform the desired actions using input1 and input2.</p> </li> <li> <p>Returning the Result</p> <p>It returns a message that currently reads <code>{\u201cmessage\u201d: \u201cMail sent successfully\u201d}</code>, but can be customized according to the action performed.</p> </li> </ul>","tags":["Etendo Copilot","Python Tool Template","Development Standardization","Rapid Prototyping","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/template-tool/#usage-example","title":"Usage Example","text":"<p>Imagine you want to create a tool that adds two numbers together. We would use the Template Tool as follows:</p> <ul> <li>input1: 3</li> <li>input2: 5</li> </ul> <p>We can add the necessary code inside the code here section to perform the addition:</p> <pre><code>result = p_input1 + p_input2\nreturn {\u201cmessage\u201d: f \u201cSum result is {result}\u201d}\n</code></pre>","tags":["Etendo Copilot","Python Tool Template","Development Standardization","Rapid Prototyping","Tool"]},{"location":"developer-guide/etendo-copilot/available-tools/test-run-tool/","title":"Test Run Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","Tool","Test","Run Test","Test Excecution","Gradle"]},{"location":"developer-guide/etendo-copilot/available-tools/test-run-tool/#overview","title":"Overview","text":"<p>The Test Run Tool is designed to execute Java tests using Gradle, providing an efficient way to run tests in Java projects within a specific environment.</p> <p>Info</p> <p>To include this functionality, the Copilot Extensions Bundle must be installed. For more information, follow the instructions in the marketplace: Copilot Extensions Bundle. For information about available versions, core compatibility, and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Tool","Test","Run Test","Test Excecution","Gradle"]},{"location":"developer-guide/etendo-copilot/available-tools/test-run-tool/#functionality","title":"Functionality","text":"<p>This tool is especially useful for running and validating Java test suites. It can be used in various scenarios, such as:</p> <ul> <li>Running specific tests or groups of tests to ensure functionalities are correctly implemented.</li> <li>Integrating automated tests into the development workflow.</li> </ul> <p>The process consists of the following actions:</p> <p>Receiving Parameters</p> <p>The tool receives the following input parameters:</p> <ul> <li><code>test_targets</code>: One or more tests or packages to execute.</li> <li><code>working_directory</code>: The directory where the <code>gradlew</code> script is located.</li> </ul> <p>Running Tests</p> <ul> <li>A Gradle command is constructed and executed with the specified tests.</li> <li>The execution is performed in the specified working directory.</li> </ul> <p>Returning the Result</p> <p>Returns a summary of the test execution along with details of passed and failed tests.</p>","tags":["Copilot","Tool","Test","Run Test","Test Excecution","Gradle"]},{"location":"developer-guide/etendo-copilot/available-tools/test-run-tool/#usage-example","title":"Usage Example","text":"<p>If you want to run specific tests in the <code>/path/to/erp</code> directory, the input and output format would be as follows:</p> <ul> <li>Input</li> </ul> <pre><code>{\n  \"test_targets\": [\"com.etendoerp.webhookevents.WebhookSetupTest\"],\n  \"working_directory\": \"/path/to/erp\"\n}\n</code></pre> <ul> <li>Output</li> </ul> <pre><code>{\n  \"summary\": \"Some tests failed. Review the details below.\",\n  \"details\": {\n    \"passed_tests\": [\n      \"Test 1 PASSED&gt;\"\n    ],\n    \"failed_tests\": [\n      \"Test 2 FAILED&gt; Reason\"\n    ]\n  },\n  \"raw_logs\": \"Complete logs in case of failure\"\n}\n</code></pre>","tags":["Copilot","Tool","Test","Run Test","Test Excecution","Gradle"]},{"location":"developer-guide/etendo-copilot/available-tools/uncompress-tool/","title":"Uncompress Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","Tool","Uncompress files","Zip"]},{"location":"developer-guide/etendo-copilot/available-tools/uncompress-tool/#overview","title":"Overview","text":"<p>The Uncompress Tool is a utility designed to uncompress various types of compressed files and return the paths of the uncompressed files. It supports common file types including <code>zip</code>, <code>gzip</code>, <code>bzip2</code>, and <code>rar</code>.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Tool","Uncompress files","Zip"]},{"location":"developer-guide/etendo-copilot/available-tools/uncompress-tool/#functionality","title":"Functionality","text":"<p>The primary purpose of the this tool is to streamline the process of extracting files from compressed formats. It is particularly useful in scenarios where automated file extraction is needed, such as data processing pipelines, backup restoration, and file management systems. By supporting multiple common compression formats and providing a straightforward interface for file extraction, it simplifies workflows involving compressed files and ensures efficient handling of data archives.</p> <p>This process consists of the following actions.</p> <ul> <li> <p>Receiving Parameters     The tool expects a single input parameter:</p> <p><code>compressed_file_path</code> : Path to the compressed file that needs to be uncompressed.</p> </li> <li> <p>Determining the File Type</p> <p>The tool inspects the file extension to determine the type of compressed file and selects the appropriate uncompression method.</p> </li> <li> <p>Creating the Output Directory</p> <p>The tool creates an output directory based on the name of the compressed file to store the uncompressed contents.</p> </li> <li> <p>Uncompressing the File</p> <p>The tool supports multiple compression formats and uses corresponding Python libraries to uncompress files:</p> <ul> <li> <p><code>gzip</code> : Uses the <code>gzip</code> library to uncompress <code>.gz</code> files.</p> </li> <li> <p><code>bzip2</code> : Utilizes the <code>bz2</code> library to handle <code>.bz2</code> files.</p> </li> <li> <p><code>rar</code> : Employs the rarfile library to extract <code>.rar</code> files.</p> </li> <li> <p><code>zip</code> : Leverages the <code>zipfile</code> library to uncompress <code>.zip</code> files.</p> </li> </ul> </li> <li> <p>Returning the Result</p> <p>After successfully uncompressing the files, the tool returns an object containing the paths of the uncompressed files.</p> </li> </ul>","tags":["Copilot","Tool","Uncompress files","Zip"]},{"location":"developer-guide/etendo-copilot/available-tools/uncompress-tool/#usage-example","title":"Usage Example","text":"<p>If there is a compressed file at <code>/home/user/archive.zip</code> and it is necessary to uncompress it, the tool would be used as follows:</p> <ul> <li>Input:</li> </ul> <pre><code>{\"compressed_file_path\": \"/home/user/archive.zip\"}\n</code></pre> <ul> <li>Output:</li> </ul> <pre><code>{\"uncompressed_files_paths\": [\"/home/user/archive/file1.txt\", \"/home/user/archive/file2.jpg\", ...]}\n</code></pre>","tags":["Copilot","Tool","Uncompress files","Zip"]},{"location":"developer-guide/etendo-copilot/available-tools/write-file-tool/","title":"Write File Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","Tool","Write","File"]},{"location":"developer-guide/etendo-copilot/available-tools/write-file-tool/#overview","title":"Overview","text":"<p>The Write File Tool is a tool for writing and editing files. It allows specifying the file you want to write, the content to write and the option to overwrite the file or not. It also allows you to specify the exact line where you want to write the content. This tool returns a message indicating the result of the operation.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Tool","Write","File"]},{"location":"developer-guide/etendo-copilot/available-tools/write-file-tool/#functionality","title":"Functionality","text":"<p>This tool is useful in any application or system that needs to manipulate text files programmatically. It can be used to edit settings, record data, create log files, among other things. This makes it easier for the user to handle:</p> <ul> <li>File Manipulation: It facilitates editing and manipulation of text files without the need to manually open the files in an editor.</li> <li>Task Standardization: It standardizes writing files from different parts of an application.</li> <li>Security: It creates automatic backups when writing existing files, preventing data loss.</li> </ul> <p>Using this tool consists of the following actions:</p> <ul> <li> <p>Processing Arguments</p> <p>It takes the following input parameters:</p> <ul> <li><code>filepath</code>: It specifies the file (file path)</li> <li><code>content</code>: The content to write</li> <li><code>override</code>: Whether the file should be overwritten</li> <li><code>lineno</code>: The line on which the content should be written</li> </ul> </li> <li> <p>Creating the File</p> <p>If the specified file does not exist, it creates it.</p> </li> <li> <p>Backup</p> <p>If the file exists, it reads it and creates a backup copy of it by adding a timestamp to the file name (<code>.bak%timestamp%</code>).</p> </li> <li> <p>Writing the Content</p> <ul> <li>Override: If the override option is enabled, the file is cleaned up and the specified content is written, either at the end of the file (if line number is not specified) or on a specific line.</li> <li>No Override: If no override is chosen, the content is appended to the end of the existing file.</li> </ul> </li> <li> <p>Returning the Result     It returns a message including the file path and whether a backup was created. For example:     <pre><code>{ \u201cmessage\u201d: \u201cFile /tmp/test.txt written successfully, backup: True\u201d}\n</code></pre>     if the file was modified and a backup was created.     <pre><code>{ \u201cmessage\u201d: \u201cFile /tmp/test.txt written successfully, backup: False\u201d}\n</code></pre>     if a backup did not need to be created.</p> </li> </ul>","tags":["Copilot","Tool","Write","File"]},{"location":"developer-guide/etendo-copilot/available-tools/write-file-tool/#write-permissions","title":"Write Permissions","text":"<p>To handle file and folder permissions, the Write File Tool leverages the <code>COPILOT_WRITE_RULE</code> environment variable. Add this variable to the <code>gradle.properties</code> file if needed.</p> <p>This variable allows you to specify the file permissions (in octal format) to be applied to files and folders created by the tool. It is optional, and if not set, the system's default file permissions will be used.</p> <ul> <li>Folder Creation: If the specified folder does not exist, it will be created. If <code>COPILOT_WRITE_RULE</code> is set, the tool applies the corresponding permissions to the newly created folder.</li> <li>File Creation: When a new file is created, the tool applies the permissions specified in <code>COPILOT_WRITE_RULE</code>.</li> </ul> <p>The value of <code>COPILOT_WRITE_RULE</code> must be a valid octal representation of file permissions (e.g., <code>777</code> for full read/write/execute access).</p>","tags":["Copilot","Tool","Write","File"]},{"location":"developer-guide/etendo-copilot/available-tools/write-file-tool/#usage-example","title":"Usage Example","text":"<p>Imagine we want to write Hello World in the file <code>/tmp/test.txt</code>, overwriting its contents, in the first line of the file. Our entry could be:</p> <ul> <li>filepath: /tmp/test.txt</li> <li>content: Hello World</li> <li>override: True</li> <li>lineno: 1</li> </ul> <p>The Write File Tool will process these parameters, write Hello World to the first line of the <code>/tmp/test.txt</code> file and return a message indicating that the operation completed successfully and whether a backup was created.</p>","tags":["Copilot","Tool","Write","File"]},{"location":"developer-guide/etendo-copilot/available-tools/xls-tool/","title":"XLS Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","XLS Processing","Data Extraction","Excel","Google Sheets","CSV"]},{"location":"developer-guide/etendo-copilot/available-tools/xls-tool/#overview","title":"Overview","text":"<p>The XLS Tool processes <code>XLS</code> or <code>CSV</code> files to extract data. It is designed to facilitate tasks such as parsing spreadsheet content, processing tabular data, and extracting specific information from XLS files. The tool accepts the file path of an data file and returns processed data based on defined parameters.</p> <p>Info</p> <p>To include this functionality, the Copilot Extensions Bundle must be installed. Follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about available versions, core compatibility, and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","XLS Processing","Data Extraction","Excel","Google Sheets","CSV"]},{"location":"developer-guide/etendo-copilot/available-tools/xls-tool/#functionality","title":"Functionality","text":"<p>This tool automates the process of data extraction from XLS files. It is particularly useful for tasks such as reading financial data, extracting customer details, or parsing inventory records. The tool supports customizable processing logic to handle diverse data structures.</p> <p>Using this tool consists of the following actions:</p> <ul> <li> <p>Receiving Parameters:</p> <ul> <li>The tool receives an input object containing the file path of the XLS file to be processed and optional parameters for data extraction.</li> <li>path: The path of the XLS file to be processed.</li> <li>parameters: Optional extraction parameters such as sheet name, specific rows, or columns.</li> </ul> </li> <li> <p>Processing the File:</p> <ul> <li>The tool reads the XLS file from the specified path, verifies its existence, and ensures the file format is supported.</li> <li>It processes the file based on the input parameters to extract the required data.</li> </ul> </li> <li> <p>Returning the Result:</p> <ul> <li>The tool returns a JSON object containing the extracted data.</li> <li>data: The processed data extracted from the XLS file.</li> </ul> </li> </ul>","tags":["Copilot","XLS Processing","Data Extraction","Excel","Google Sheets","CSV"]},{"location":"developer-guide/etendo-copilot/available-tools/xls-tool/#usage-example","title":"Usage Example","text":"","tags":["Copilot","XLS Processing","Data Extraction","Excel","Google Sheets","CSV"]},{"location":"developer-guide/etendo-copilot/available-tools/xls-tool/#extracting-data-from-an-xls-file","title":"Extracting data from an XLS file","text":"<p>Suppose you have an Excel file at <code>/home/user/data.xls</code> and you want to extract customer information from the file:</p> <p>XLS Content <pre><code>| Customer ID | Name       | Purchase Amount |\n|-------------|------------|-----------------|\n| 1001        | John Doe   | 500             |\n| 1002        | Jane Smith | 300             |\n</code></pre></p> <ul> <li> <p>Use the tool as follows:</p> <ul> <li> <p>Input:</p> <pre><code>{\n    \"path\": \"/home/user/data.xls\",\n    \"parameters\": {\n        \"sheet\": \"Customers\",\n        \"columns\": [\"Customer ID\", \"Name\", \"Purchase Amount\"]\n    }\n}\n</code></pre> </li> <li> <p>Output:</p> Output Json<pre><code>{\n    \"data\": [\n        {\"Customer ID\": \"1001\", \"Name\": \"John Doe\", \"Purchase Amount\": 500},\n        {\"Customer ID\": \"1002\", \"Name\": \"Jane Smith\", \"Purchase Amount\": 300}\n    ]\n}\n</code></pre> </li> </ul> </li> </ul> <p>Note</p> <p>The result of the tool can be used as input for other processes. For instance, the extracted customer data can be utilized to generate personalized marketing campaigns or invoices.</p>","tags":["Copilot","XLS Processing","Data Extraction","Excel","Google Sheets","CSV"]},{"location":"developer-guide/etendo-copilot/available-tools/xml-translation-tool/","title":"XML Translation Tool","text":"<p> Javapackage: <code>com.etendoerp.copilot.xmltranslationtool</code></p>","tags":["Copilot","Translation Tool","Module Translation","Language","Localization"]},{"location":"developer-guide/etendo-copilot/available-tools/xml-translation-tool/#overview","title":"Overview","text":"<p>The XMLTranslationTool directly translates XML files\u2019 content based on the specified language attribute within the XML, allowing for effective and accurate localization across different languages. </p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p>","tags":["Copilot","Translation Tool","Module Translation","Language","Localization"]},{"location":"developer-guide/etendo-copilot/available-tools/xml-translation-tool/#functionality","title":"Functionality","text":"<p>The XMLTranslationTool allows assistants to translate the content of XML files from one language to another, as specified within the XML itself. This is particularly useful in scenarios where localized versions of XML content are required for different regions or languages.</p> <p>This tool is ideal for automated workflows that need to handle XML translations efficiently, enabling seamless adaptation of content for various languages. By directly translating XML content based on specified language attributes, it ensures accurate localization of text without manually editing individual files.</p> <p>Using this tool consists of the following actions:</p> <ul> <li> <p>Receiving Parameters      The tool receives an input object that contains the following key:</p> <ul> <li> <p>relative_path </p> <p>(str): The relative path to the XML files directory where translation is required.</p> </li> </ul> </li> <li> <p>Processing</p> <ol> <li> <p>Validation: The tool first verifies if the provided relative_path points to an existing directory. If the directory does not exist, it returns an error message indicating the issue.</p> </li> <li> <p>Path Calculation: It calculates the absolute path of the XML directory based on the relative path provided.</p> </li> <li> <p>XML File Iteration: For each XML file in the directory:</p> <ul> <li> <p>Skip Condition: If a file is already translated, it skips the translation process.</p> </li> <li> <p>Translation Process:</p> <ul> <li> <p>The tool uses OpenAI's API to translate each XML file's text content according to the target language specified within the XML's attributes.</p> </li> <li> <p>Each unlocalized element is marked as \"translated\" after processing.</p> </li> <li> <p>If all files are already translated, a message indicating this is returned.</p> </li> </ul> </li> </ul> </li> <li> <p>Collecting Results: Paths to the successfully translated XML files are collected in a list, which is returned as the final output.</p> </li> </ol> </li> <li> <p>Returning the Result</p> <p>Once the translation process is completed, the tool returns a list of file paths, each pointing to a successfully translated XML file.</p> </li> </ul>","tags":["Copilot","Translation Tool","Module Translation","Language","Localization"]},{"location":"developer-guide/etendo-copilot/available-tools/xml-translation-tool/#usage-example","title":"Usage Example","text":"<p>If you have XML files located at <code>/modules/com.etendoerp.webhookevents.es_es</code> that need translation, you would use the tool as follows:</p> <ul> <li>Input:</li> </ul> <pre><code>{\n  \"relative_path\": \"/modules/com.etendoerp.webhookevents.es_es\"\n}\n</code></pre> <ul> <li>Output:</li> </ul> <pre><code>{\n  \"translated_files_paths\": [\n    \"Successfully translated file /modules/com.etendoerp.webhookevents.es_es/AD_REF_LIST_TRL_es_ES.xml\",\n    \"Successfully translated file /modules/com.etendoerp.webhookevents.es_es/AD_ELEMENT_TRL_es_ES.xml\"\n  ]\n}\n</code></pre>","tags":["Copilot","Translation Tool","Module Translation","Language","Localization"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/","title":"Dev Assistant","text":"<p> Javapackage:  <code>com.etendoerp.copilot.devassistant</code></p>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#overview","title":"Overview","text":"<p>This page provides an overview of the tools, functionality, and usage examples for various development assistants available in Etendo. Dev Assistant streamlines workflow management for developers by offering specialized assistants that simplify tasks such as creating buttons, windows, tabs and tables, Event Handlers, Jasper Reports, background processes, and more. These assistants are designed to enhance productivity and reduce complexity, making it easier for developers to efficiently build and manage different components within the Etendo platform.</p> <p>Info</p> <p>To be able to include this functionality, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p> <p>Warning</p> <p>Consider that the assistants are currently in their beta testing phase. </p> <p>Access to the information for each of the Assistants:</p> <p> Background Process Creator </p> <p> Button Process Creator </p> <p> Code Run </p> <p> Etendo Code Expert </p> <p> Event Handler Creator </p> <p> Jasper Report Creator </p> <p> Java Test Supervisor </p> <p> Message Creator </p> <p> Module Creator </p> <p> Module Translation Creator </p> <p> Refactor Assistant </p> <p> Reference Creator </p> <p> Tables, Windows and Tabs Creator </p> <p> Unique Java Test Assistant </p> <p> Webhook Creator </p>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#agents","title":"Agents","text":"","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#background-process-creator","title":"Background Process Creator","text":"<p>Background Process Creator is an assistant specialized in the automatic creation of Background Processes in Java. The assistant reads previously indexed code and uses examples of classes extending <code>DalBaseProcess</code> to build new Background Processes.</p> <p>Tools</p> <ul> <li> <p>API Call Tool</p> </li> <li> <p>Read File Tool</p> </li> <li> <p>Write File Tool</p> </li> </ul> <p>Functionality</p> <p>Background Process Creator generates Background Processes in Java using indexed examples of classes that extend <code>DalBaseProcess</code>. To configure the assistant properly, you need to provide the following parameters:</p> <ul> <li>Java package: The Java package where the new process will be saved. It should follow the format <code>java.package.of.the.module</code>.</li> <li>Name: The name of the Java file to be created.</li> <li>Search Key: A key that will be used to locate the process in other windows when necessary.</li> <li>Code description: The purpose and logic that the Background Process should fulfill.</li> </ul> <p>Usage Example</p> <ol> <li> <p>To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select Background Process Creator and synchronize it. Then, go to the Assistant Access window and give access to the role.</p> <p></p> </li> <li> <p>Open Copilot and select Background Process Creator, then ask to the assistant what you need to create.</p> </li> <li> <p>Then, this is the result given by the assistant.</p> <p></p> <p></p> </li> </ol>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#button-process-creator","title":"Button Process Creator","text":"<p>The Button Process Creator simplifies the process of creating and registering buttons and process definitions in Etendo Classic. By automating the workflow through webhooks, it removes the need for manual configuration, ensuring that your processes and buttons are set up correctly and efficiently.</p> <p>Tools</p> <ul> <li> <p>ApiCallTool </p> </li> <li> <p>ReadFileTool</p> </li> <li> <p>WriteFileTool</p> </li> </ul> <p>Functionality</p> <p>The Button Process Creation Assistant automates the creation of a button and the registration of a process in Etendo Classic through a webhook call. Through a webhook call, the tool ensures the correct setup by validating necessary parameters like the module prefix, Java package, and process name, making sure the search key is correctly formed. It then generates a Java class for the button, which extends <code>BaseProcessActionHandler</code>, and registers this button in the desired window, tab, and table within the Etendo system. </p> <p>Additionally, it defines and registers the process by creating a process definition and associating it with any required parameters, including attributes like database name, length, and reference, ensuring integration and functionality within the system. </p> <p>When creating a button or registering a process, the assistant will request the following information:</p> <ul> <li>Java Package: The Java package of the module where the button's class will be created (e.g., <code>com.etendoerp.module</code>).</li> <li>Module Prefix: A prefix for the module (e.g., <code>COPDEV</code>).</li> <li>Window: The window in Etendo where the button will appear.</li> <li>Tab: The specific tab within the window where the button will be located.</li> <li>Table: The table associated with the process.</li> <li>Process Name: The name of the process to be created.</li> <li>Search Key: A unique search key for the process that includes the module prefix (e.g., <code>COPDEV_ActualizarDescripci\u00f3nPedido</code>).</li> <li>Parameters: Optional parameters for the process, including:<ul> <li>BD_NAME: The database column name.</li> <li>NAME: The name of the parameter.</li> <li>LENGTH: The length of the parameter field.</li> <li>SEQNO: The sequence number of the parameter.</li> <li>REFERENCE: A reference for the parameter (if it's linked to another field or table).</li> </ul> </li> <li>Help Comment: An optional help comment for the process.</li> <li>Description: An optional description for the process.</li> </ul> <p>The webhook call used to register the process in Etendo will require the following body parameters:</p> <pre><code>body_params = {\n    \"Prefix\": \"COPDEV\",\n    \"SearchKey\": \"COPDEV_ActualizarDescripci\u00f3nPedido\",\n    \"ProcessName\": \"ActualizarDescripci\u00f3nPedidos\",\n    \"HelpComment\": \"This process updates the description of associated orders.\",\n    \"Description\": \"A process to update the description of the associated sales orders based on a text input.\",\n    \"Parameters\": [\n        {\n            \"BD_NAME\": \"text_parameter\",\n            \"NAME\": \"Description Text\",\n            \"LENGTH\": 255,\n            \"SEQNO\": 10,\n            \"REFERENCE\": \"Text\"\n        }\n    ],\n    \"JavaPackage\": \"com.etendoerp.copilot.devassistant\"\n}\n</code></pre> <p>This call registers the process in the system and attaches the necessary parameters.</p> <p>Usage Example </p> <p>The process and the button will be automatically registered, and the user will be notified.</p> <p></p> <p>At this point, we will have the Java class of the button created along with the registered process.</p> <p></p>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#code-run","title":"Code Run","text":"<p>Code Run is an assistant designed for executing Python commands in a controlled environment. It translates the request into Python or Bash commands to fulfill the task. </p> <p>Tools</p> <ul> <li>Docker Tool</li> </ul> <p>Functionality</p> <p>Code Run enables users to execute Python scripts and commands dynamically, even if dependencies or configurations are missing. Key features include:</p> <ol> <li> <p>Dynamic Code Execution:</p> <ul> <li> <p>Allows running Python code snippets.</p> </li> <li> <p>Example: <code>print('Hello, World!')</code>.</p> </li> </ul> </li> <li> <p>Natural Language Requests:</p> <ul> <li>Users can provide tasks in plain language (e.g., \"Ping Google\"), and the assistant translates them into executable Python or Bash commands.</li> </ul> </li> <li> <p>Automatic Dependency Management:</p> <ul> <li> <p>Identifies and installs missing libraries when a task requires them.</p> </li> <li> <p>Example: <code>!pip install numpy</code>.</p> </li> </ul> </li> <li> <p>Error Handling:</p> <ul> <li>Provides meaningful error messages for invalid commands or missing inputs.</li> </ul> </li> <li> <p>Flexible Task Management:</p> <ul> <li>Supports file operations and multi-step workflows combining Python and Bash.</li> </ul> </li> </ol> <p>Usage Example</p> <ol> <li> <p>Log in to the system as the System Administrator role and configure the assistant in the Assistant window. Synchronize it and grant access to the role in the Assistant Access window.</p> </li> <li> <p>Open Copilot and select Code Run. Then, ask the assistant what you need to execute.</p> </li> <li> <p>Example interaction and result:</p> <p></p> <p>Input:</p> <ul> <li>\"Create a Python program that calculates the sum of the numbers between 1 and 100.\"</li> </ul> <p>Execution:</p> <ul> <li>The assistant processes the request and executes the following Python code:</li> </ul> <pre><code>def calculate_sum(start, end):\n    return sum(range(start, end + 1))\n\n# Calculate the sum of numbers between 1 and 100\nresult = calculate_sum(1, 100)\nprint(f'The sum of numbers between 1 and 100 is: {result}')\n</code></pre> <p>Result:</p> <ul> <li>The assistant outputs the result of the program:</li> </ul> <pre><code>The sum of numbers between 1 and 100 is: 5050\n</code></pre> </li> </ol>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#etendo-code-expert","title":"Etendo Code Expert","text":"<p>Etendo Code Expert is an assistant designed to read indexed files and provide answers related to their content. </p> <p>Functionality</p> <p>With this assistant it is possible to ask code development questions and based on Etendo code indexed, the assistant will give possible code suggestions or solutions. It can summarize, answer technical questions, suggest programming code improvements, and offer general assistance about files.</p> <p>This assistant is useful for avoiding the need to manually review all files. Also, multiple files can be configured if neccesary.</p> <p>Usage Example </p> <ol> <li> <p>To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. This assistant do not include the path configured to the indexed files. To do that, go to the Knowledge Base File window in <code>Application</code>&gt;<code>Service</code>&gt;<code>Copilot</code>&gt;<code>Knowledge Base File</code> and select the <code>EtendoJAvaSourceCode</code> file and, in the File Path Tab, specify the path where the code files you need the assistant to read are located. </p> <p> In this example using the path shown in the image, we will obtain all the files with Java extension from the Etendo core source code </p> </li> <li> <p>Then, go to the Assistant window, configure Etendo Code Expert and synchronize it. After that, go to the Assistant Access window and give access to the role.  </p> </li> <li> <p>Start using the assistant. Open Copilot and select Etendo Code Expert.</p> <p></p> </li> <li> <p>Ask the assistant for what you need to create.</p> <p></p> </li> </ol>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#event-handler-creator","title":"Event Handler Creator","text":"<p>This assistant is capable of creating Event Handlers in Etendo Classic. You only need to provide the Java package of the module where it should be exported and specify the action to be performed. </p> <p>Tools</p> <ul> <li> <p>Read File Tool</p> </li> <li> <p>Write File Tool</p> </li> </ul> <p>Functionality</p> <p>Event Handler Creator is an assistant designed to automatically create event handlers in Java. It uses code indexed in its knowledge base to read classes that extend <code>EntityPersistenceEventObserver</code>, providing examples to build a new event handler. To generate an event handler, the assistant requires the following parameters:</p> <ul> <li>Java package: The package where the file will be saved.</li> <li>File name: The name of the file to create.</li> <li>Entity: The entity to observe.</li> <li>Description: A description of the functionality to be implemented by the event handler.</li> </ul> <p>Usage Example</p> <ol> <li> <p>To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select Event Handler Creator and synchronize it. Then, go to the Assistant Access window and give access to the role.  </p> </li> <li> <p>Open Copilot and select Event Handler Creator, then ask to the assistant what you need to create.</p> <p></p> </li> <li> <p>Then, this is the result given by the assistant.</p> <p></p> </li> </ol>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#jasper-report-creator","title":"Jasper Report Creator","text":"<p>The Jasper Assistant is designed to facilitate the creation, editing, and registration of reports within the Etendo platform. Using JasperReports, it allows developers to define the structure of the report, apply styles, manage parameters, and register the reports in the system to use in different modules.</p> <p>Info</p> <p>This assistant simplifies the process by verifying that all fields used in a report are correctly defined in the database, thus avoiding common errors such as Field not found. It also supports integrating logos, applying styles, and performing data grouping to ensure that the reports meet business requirements.</p> <p>Tools</p> <ul> <li> <p>JasperTool</p> </li> <li> <p>OCRTool</p> </li> <li> <p>ReadFileTool</p> </li> <li> <p>WriteFileTool</p> </li> </ul> <p>Functionality</p> <p>Report Creation</p> <p>The Jasper Assistant requests the following parameters to create a report:</p> <ul> <li>Report storage path: The location in the file system where the report file will be saved.</li> <li>Report name: The name that will be assigned to the report.</li> <li>Report encoding language: The language in which the report will be encoded (default is UTF-8).</li> <li>Report parameters: A list of parameters that the report will accept.</li> <li>SQL query: The SQL query that will provide data to the report.</li> <li>Report styles: Definition of the visual styles applied to the report.</li> <li>Data grouping: Configuration of data grouping within the report.</li> <li>Image or logo in the report: Specification of images or logos to include.</li> <li>Data distribution: Structure of how the data will be organized in the report.</li> </ul> <p>Report Registration</p> <p>Once the report is created, it can be registered in the system. The assistant requests the following arguments:</p> <ul> <li>Report name: Name that will be used to register the report in the system.</li> <li>Module prefix: Prefix that identifies the module where the report will be registered.</li> <li>Search key: Unique key to identify the report in the system.</li> <li>Help comments: Additional information to help understand the purpose of the report.</li> <li>Description: Detailed description of the report.</li> <li>Report path: Path where the report is stored.</li> <li>Parameters: List of registered parameters that can be used when executing the report.</li> </ul> <p>Report Editing</p> <p>The assistant also allows editing existing reports. Available actions include:</p> <ul> <li>Parameter Modification: Allows editing any already registered report parameter.</li> <li>SQL Query Update: Modification of the SQL query used by the report.</li> <li>Change of Styles and Groupings: Update of visual styles and data grouping configuration.</li> </ul> <p>Usage Example</p> <ol> <li> <p>To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select Jasper Report Creator and synchronize it. Then, go to the Assistant Access window and give access to the role.  </p> </li> <li> <p>Open Copilot and select Jasper Report Creator</p> </li> <li> <p>Depending on the request, the Jasper Assistant will return:</p> </li> </ol> <p>Report Creation</p> <p></p> <p>Report Registration</p> <p></p> <p>After running the smartbuild we will be able to see the process of the created report:</p> <p></p> <p>As you can see in the image, it also adds the parameters and even in the Report Definition tab, it defines the PDF Template of the report and in the Menu, it creates the Process definition that we have defined in the previous step.</p> <p></p> <p></p> <p>Finally, we can observe the created report and set the chosen parameter to see the printed version.</p> <p></p> <p>Report Editing</p> <p></p>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#test-supervisor","title":"Test Supervisor","text":"<p>A supervisor that allows to generate tests for a whole Etendo Module through a workflow, checking the files without tests and generating them. The supervisor will also execute the tests and provide feedback to the user.</p> <p>Functionality</p> <p>This assistant receives an Etendo Module and will check for Java and Javascript files, determining which ones have tests and which ones do not. </p> <ul> <li>The assistant will generate a report with the results and will suggest the user to generate tests for the files without them. </li> <li>The assistant will generate the Java and React tests. </li> </ul> <p>Team Members</p> <ul> <li> </li> <li> </li> <li> </li> <li> </li> </ul> <p>Usage Example</p> <ol> <li> <p>To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select <code>Test Supervisor</code> and synchronize it. Then, go to the *Assistant Access window and give access to the role.</p> </li> <li> <p>Open Copilot and select <code>Test Supervisor</code>, then ask to the assistant what you need to create. A suggested input could be <code>Generate tests for the module com.etendoerp.examplemodule</code>.</p> </li> <li> <p>The assistant will generate the tests and execute them, checking for errors and providing feedback to the user.</p> </li> </ol>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#java-test-checker","title":"Java Test Checker","text":"<p>This assistant receiving a Etendo Module, will check for Java files, determining which ones have tests and which ones do not. The assistant will generate a report with the results and will suggest the user to generate tests for the files without them.</p> <p>Info</p> <p>This assistant is intended and designed to be used as part of a Langgraph type supervisor, it can be used individually, but does not have full functionality.</p> <p>Tools</p> <ul> <li>Print Directory Tool</li> </ul>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#java-test-executor","title":"Java Test Executor","text":"<p>This assistant is designed to execute tests for a Java Package, can be used to execute:</p> <ul> <li>All tests.</li> <li>Tests for a module.</li> <li>Tests for a single Java file.</li> </ul> <p>This depends on the user input. The assistant will execute the tests and provide feedback to the user.</p> <p>Info</p> <p>This assistant is intended and designed to be used as part of a Langgraph type supervisor, it can be used individually, but does not have full functionality.</p> <p>Tools </p> <ul> <li>Test Run Tool</li> </ul>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#java-test-generator","title":"Java Test Generator","text":"<p>This assistant generates tests for a single Java file. It reads the Java file and creates a test file with the same name and the suffix <code>Test</code> in the same package. The assistant generates test methods for each method in the Java file. The assistant has a Knowledge Base with the Java classes of Etendo Classic. This assistant will generate the tests and execute them, checking for errors and providing feedback to the user.</p> <p>Info</p> <p>This assistant is intended and designed to be used as part of a Langgraph type supervisor, it can be used individually, but does not have full functionality.</p> <p>Tools</p> <ul> <li>Read File Tool</li> <li>Write File Tool</li> <li>Test Run Tool</li> </ul>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#react-test-assistant","title":"React Test Assistant","text":"<p>The React Test Assistant is a specialized agent for creating and managing React component tests using <code>TypeScript</code> and <code>@testing-library/react-native</code>. Its primary focus is generating high-quality test files for React and React Native components within Etendo sub-application modules.</p> <p>Detects React components (<code>.tsx</code> or <code>.jsx</code> files) that lack corresponding test files in the <code>__tests__</code> directory. Analyzes component structure, props, and dependencies, generates Jest and React Testing Library test files and covers key scenarios such as rendering, user interactions, state changes, and edge cases.</p> <p>Info</p> <p>This assistant is designed to be used within the Etendo ecosystem as part of a Test Supervisor LangGraph agent. However, it can be used independently with limited functionality.</p> <p>Tools</p> <ul> <li>Read File Tool</li> <li>Write File Tool</li> </ul>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#message-creator","title":"Message Creator","text":"<p>The Message Creator streamlines the process of creating and registering AD_Messages in Etendo Classic. By utilizing a webhook, it ensures efficient and error-free message creation while adhering to naming conventions and best practices. </p> <p>Tools</p> <ul> <li>ApiCallTool</li> </ul> <p>Functionality</p> <p>The Message Creator facilitates the creation of AD_Messages by interacting with Etendo Classic via a webhook. It validates the input parameters, enforces the proper format for search keys, and registers the message with the appropriate module. This assistant supports both parametric and non-parametric messages and ensures messages are immediately usable in Java code. </p> <p>The assistant performs the following tasks:</p> <ul> <li>Validates Input Parameters: Ensures required fields like module Java package, search key, message type, and message text are correctly provided.</li> <li>Search Key Format Enforcement: Confirms that search keys follow the required format: <code>PREFIX_DescriptiveName</code>, where:</li> <li><code>PREFIX</code> is the module's prefix in uppercase.</li> <li><code>DescriptiveName</code> is in CamelCase.</li> <li>The total length does not exceed 32 characters.</li> <li>Message Type Validation: Confirms the message type is either <code>\"I\"</code> (Informative) or <code>\"E\"</code> (Error).</li> <li>Registers the AD_Message: Saves the message in the system, linking it to the specified module.</li> </ul> <p>When creating a message, the assistant will request the following information:</p> <ul> <li>Module Java Package: The Java package of the module where the message will be created (e.g., <code>com.etendoerp.module</code>).</li> <li>Search Key: A unique identifier for the message following the <code>PREFIX_DescriptiveName</code> format.</li> <li>Message Type: The type of the message:</li> <li><code>\"I\"</code> for informative messages.</li> <li><code>\"E\"</code> for error messages.</li> <li>Message Text: The content of the message.</li> </ul> <p>Notes:</p> <ul> <li> <p>Module In Development: The module must be set to development mode to allow the assistant to create it.</p> </li> <li> <p>Java Usability: After creation, the AD_Message can be used in Java with: <code>OBMessageUtils.messageBD(\"MESSAGE_SEARCH_KEY\")</code>.</p> </li> <li> <p>Parametric Messages: If the message requires parameters, <code>%s</code> can be added to the text, and the assistant will provide a code snippet to use <code>String.format</code>.   Example: Message Text: <code>\"The value %s is invalid.\"</code> Java Usage: <pre><code>String formattedMessage = String.format(OBMessageUtils.messageBD(\"PREFIX_InvalidValue\"), value);\n</code></pre></p> </li> </ul> <p>Usage Example</p> <ol> <li> <p>Provide the required inputs:</p> <ul> <li>Module Java Package: <code>com.etendoerp.module</code></li> <li>Search Key: <code>MODPREFIX_InvalidInput</code></li> <li>Message Type: <code>E</code></li> <li>Message Text: <code>\"The input provided is not valid.\"</code></li> </ul> <p></p> </li> <li> <p>The assistant validates and sends the request to the webhook.</p> </li> <li> <p>Upon successful creation, the system will confirm:</p> <ul> <li>Message created with the key: <code>MODPREFIX_InvalidInput</code>.</li> </ul> <p></p> </li> <li> <p>The message is ready for use in Java:     <pre><code>OBMessageUtils.messageBD(\"MODPREFIX_InvalidInput\");\n</code></pre></p> </li> </ol>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#module-creator","title":"Module Creator","text":"<p>Etendo Classic allows you to create modules that provide additional functionality that can be deployed independently. These modules can range from additional reports to content packs (translations, chart of accounts, etc.).</p> <p>Tools</p> <ul> <li>ApiCallTool</li> </ul> <p>Functionality</p> <p>The Module Creator streamlines the process of building independent modules that enhance Etendo Classic with new functionalities, such as additional reports or content packs like translations or charts of accounts. By using the <code>CreateModuleWebHook</code>, the tool automates several critical steps. It begins by validating essential details like the module's Java package, name, description, version, and database prefix, ensuring everything is properly formatted and complete. After validation, it assigns the necessary database prefix, registers the module within the system, and allows for optional inclusion of dependencies. </p> <p>To start creating your module in Etendo, follow the steps below.</p> <ul> <li> <p>Provide the following information:</p> </li> <li> <p>Javapackage: The Java package of the module (e.g., <code>com.etendoerp.copilot.prueba</code>).</p> </li> <li>Module Name: A name for your module (e.g., <code>Test Module</code>).</li> <li>Description: A brief description of the module's functionality.</li> <li>Help/Comment: Additional help text or comments regarding the module (optional).</li> <li>Version: The version of the module (e.g., <code>1.0.0</code>).</li> <li>Type: The type of the module. Option are \"M\" for standard module, \"T\" for template module.</li> <li>DBprefix: A prefix for the database objects associated with the module (must be in uppercase, e.g., <code>LAPY</code>).</li> <li> <p>License: The license type for the module. Options are:</p> <ul> <li><code>Apache License 2.0</code></li> <li><code>Openbravo Public License</code></li> <li><code>Mozilla Public License 1.1</code></li> <li><code>Etendo Commercial License</code></li> </ul> </li> <li> <p>Call the <code>CreateModuleWebHook</code>. The <code>CreateModuleWebHook</code> simplifies the creation process by automating various steps. This webhook will:</p> </li> <li> <p>Validate all the parameters (such as module name, version, and license).</p> </li> <li>Assign the database prefix.</li> <li>Register the module.</li> <li> <p>Optionally, add module dependencies.</p> </li> <li> <p>When invoking the webhook, the body parameters should follow this structure:</p> </li> </ul> <pre><code>body_params = {\n  \"Javapackage\": \"com.etendoerp.copilot.test\",\n  \"SearchKey\": \"testmodule\",\n  \"ModuleName\": \"Test Module\",\n  \"HelpComment\": \"This is a test module created for demonstration purposes.\",\n  \"Description\": \"This module adds test functionality to Etendo Classic.\",\n  \"Version\": \"1.0.0\",\n  \"Prefix\": \"LAPY\",\n  \"Type\": \"M\",\n  \"ModuleLicense\": \"Etendo Commercial License\"\n}\n</code></pre> <p>Note</p> <p>The database prefix must always be in uppercase.</p> <p>Usage Example</p> <ol> <li> <p>To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select Module Creator and synchronize it. Then, go to the Assistant Access window and give access to the role.</p> </li> <li> <p>Open Copilot and select Module Creator, then ask to the assistant what you need to create.</p> </li> </ol> <p></p> <p>If we go to the Module window we can find the created record.</p> <p></p> <p>The module will also have the dependency, in this case Core with the prefix and data package mentioned by the user.</p> <p></p> <p></p> <p></p> <p>Once the webhook has been called, it will automatically:</p> <ul> <li>Register the module in Etendo.</li> <li>Assign the Java package and database prefix.</li> <li>Handle the specified license.</li> <li>Set up basic module dependencies.</li> </ul> <p>You can confirm that the module has been created by navigating to the <code>Module</code> window in Etendo.</p> <p>Note</p> <p>If your module depends on other modules (besides the Core module), you need to manually add these dependencies in the <code>Dependency</code> tab of the module window.</p> <p>Info</p> <p>For further customization and development, refer to the official Etendo Developer Guide for more detailed steps.</p>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#module-translation-creator","title":"Module Translation Creator","text":"<p>Tools</p> <ul> <li>XML Translation Tool</li> </ul> <p>Functionality</p> <p>The Module Translation Creator automatically translates the content of a module.</p> <p>Before using the assistant, the user will need to have a translation module already created with the XML files to translate.</p> <p>Note</p> <p>For more info check How to Create and Update Translation Modules.</p> <p>Then, provide the path to the translation module to the assistant (e.g., <code>/modules/com.etendoerp.mymodule.es_ES</code>) and it will automatically translate all the files to the desired language.</p> <p>Usage Example 1. Create a new module in the <code>Module</code> window     - Check the flag \"Is translation module\".     - Select the module languague (e.g., <code>Spanish (Spain)</code>).      - It should depend on the module you want to translate.</p> <ol> <li> <p>If it's the first time the language is configured:</p> <ul> <li>In the <code>Language</code> window, look for the language selected and mark the \"System Language\" checkbox.</li> <li>Execute the button `Verify Languages``. </li> </ul> </li> <li> <p>Then, go to the \"Import/Export Language\" window, select the language and execute the Export process (this may take some time to finish). </p> </li> <li> <p>The previous step will generate XML files for all modules in the <code>attachments/lang/es_ES</code> folder. Locate the module you want to translate and copy the files to the translation module in the <code>modules/&lt;JAVAPACKAGE.OF.THE.MODULE&gt;/referencedata/translation/es_ES</code> folder. </p> </li> <li> <p>Now, to use this assistant it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select Module Translation Creator and synchronize it. Then, go to the Assistant Access window and give access to the role.</p> </li> <li> <p>Open Copilot and select Module Translation Creator, then ask to the assistant to translate the files in your module (e.g., <code>/modules/&lt;JAVAPACKAGE.OF.YOUR.MODULE&gt;</code>). </p> </li> <li> <p>To apply the changes, execute these commands:</p> </li> </ol> Terminal<pre><code>./gradlew install.translation -Dmodule=javapackage\n./gradlew smartbuild -Dlocal=no\n</code></pre>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#refactor-assistant","title":"Refactor Assistant","text":"<p>An expert code refactoring assistant focused on improving clarity, maintainability, and originality while preserving functionality. The assistant analyzes code files, identifies areas for improvement, and suggests changes to variable names, documentation, and structures for better readability. It ensures imports, method names, and entity names remain unchanged to maintain functionality. Workflow includes code analysis, user confirmation, applying changes, and verifying updates. Clear explanations and a summary of changes are provided for user understanding. Functionality - The refactor assistant receives a file path. - The assistant will read the file. - The assistant may ask to it knowledge base for suggestions. - The assistant will write the file with the changes, overwriting the original file. - The assistant will read the file again to verify the changes. Tools - Read File Tool - Write File Tool Usage Example 1. To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select Refactor Assistant and synchronize it. Then, go to the Assistant Access window and give access to the role. 2. Open Copilot and select Refactor Assistant, then ask to the assistant what you need to refactor. For example, a suggested input could be <code>Refactor the file located in the path /modules/com.etendoerp.module/src/com/etendoerp/module/MyClass.java changing the variables to spanish</code>. 3. The assistant will read the file, analyze it, and suggest changes. 4. The assistant will write the file with the changes, overwriting the original file.</p>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#reference-creator","title":"Reference Creator","text":"<p>The Reference Creator creates references in the Etendo Application Dictionary. This tool allows for example the addition of new list references to a specific module within the Etendo database via an HTTP request to a webhook.</p> <p>It is particularly useful in the development process, enabling system administrators or developers to define new references that can later be utilized in applications. This tool automates the creation of these references, ensuring consistency and adherence to quality standards in the configuration.</p> <p>Tools</p> <ul> <li>API Call Tool</li> </ul> <p>Functionality</p> <p>The Reference Creator is designed to facilitate the creation of references, for example, it is possible to create list of references in the Etendo Application Dictionary by providing the assistant the necesary input parameters. </p> <p>Usage Example </p> <ol> <li> <p>To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the module in which the changes will be exported in development.</p> </li> <li> <p>Open Copilot and select Reference Creator</p> <p></p> </li> <li> <p>Ask the assistant which reference type you need to create</p> <p></p> </li> <li> <p>The Create References Tool will process these parameters, verify the access token, build the request body and call the Etendo webhook to create the reference.</p> <p>In the Reference window, Etendo shows all the fields with the corresponding information generated and in the List Reference tab, it is possible to see the new list reference created. </p> <p></p> </li> <li> <p>Once the development is validated by the developer, and the necessary manual modifications are made, it is possible to export the changes in the corresponding module.</p> Terminal<pre><code>./gradlew export.database --info\n</code></pre> </li> </ol>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#tables-windows-and-tabs-creator","title":"Tables, Windows and Tabs Creator","text":"<p>Warning</p> <p>The Tables, windows and tabs assistant is currently in its beta testing phase. While it is designed to automate the process of creating windows and tables, there are instances where tasks may not be fully completed. Specifically, there may be issues with adding foreign keys, correctly naming elements, etc.</p> <p>For optimal results, it is recommended to proceed step-by-step and be as specific as possible in your instructions to the Assistant. This will help mitigate potential errors and ensure more accurate task completion.</p> <p>The Tables, Windows and Tabs Creator is designed to help developers and speed up the process of creating windows, tabs, fields, system elements, menu entries, etc.  as well as tables and columns in the database. It is possible to give an input with all the necessary information, or the assistant will go step by step, asking for more information. Also, depending on the context, the assistant can make suggestions that the developer must confirm.</p> <p>Tools</p> <ul> <li> <p>API Call Tool</p> </li> <li> <p>Multiples Webhooks: These webhooks are used to run the java files that create or modify the fields on the Etendo Classic and execute process or queries. These webhooks are: <code>RegisterTable</code>, <code>CreateTable</code>, <code>RegisterFields</code>, <code>RegisterWindowAndTab</code>, <code>RegisterColumns</code>, <code>ElementsHandler</code>, <code>SyncTerms</code>.</p> </li> </ul> <p>Functionality</p> <p>Info</p> <p>With this assistant, it is possible to create: </p> <ul> <li>Tables and Columns: both tables and columns are created based on user specification and the supported types are <code>string</code>, <code>number</code>, <code>tableDir</code>, <code>date</code>, <code>text</code> and <code>boolean</code> (each field will have default lengths unless specified).  </li> <li>Windows: only Mantein type windows are supported</li> <li>Tabs: Can be created at multiple levels, although it is important to make it clear to the assistant to add the corresponding foreign keys.</li> <li>Fields: Fields are created from columns, respecting the same name but without \"_\".</li> <li>Elements: The elements will be created automatically, sharing the name of the columns, but replacing the \"_\" with spaces. The help and description fields will also be added automatically.</li> <li>Menu: A menu entry is automatically created, the developer must manually place it in the desired position.</li> </ul> <ul> <li> <p>Ask the Tables, Windows and Tabs Creator for a window to add in the system and the module database prefix where the table will be exported. The assistant will then register in the system the table and create it in database, including the mandatory columns. At this stage the assistant checks if the module is in development. If is not, the assistant prompts the user for a correct prefix from a module in development. Additionaly, the assistant checks if the table name is already in use; if it is, asks the user to provide a new name. In case the window belongs to the module under development, new columns, tabs and fields can be added.</p> </li> <li> <p>The assistant will ask to the user for information to add, like columns, data types, help and description, etc.</p> </li> <li> <p>The user must confirm the steps or set up a modification about the given information.</p> </li> </ul> <p>Usage Example </p> <ol> <li> <p>To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the module in which the changes will be exported in development.</p> </li> <li> <p>Open Copilot, and select Tables, Windows and Tabs Creator      </p> </li> <li> <p>Ask the assistant for what you need to create.     </p> </li> <li> <p>With the task complete, it is necessary recompile with a smartbuild and restart Tomcat</p> <p>Terminal<pre><code>./gradlew smartbuild --info\n</code></pre> </p> </li> <li> <p>Window in the System, the window can be viewed with the user role.      </p> </li> <li> <p>Once the development is validated by the developer, and the necessary manual modifications are made, it is possible to export the changes in the corresponding module.</p> </li> </ol> Terminal<pre><code>./gradlew export.database --info\n</code></pre>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#unique-java-test-assistant","title":"Unique Java Test Assistant","text":"<p>This assistant is designed to generate tests for a single Java File or an Etendo Classic module.  Functionality - This assistant receives a Java file path or a module path, but its main functionality is to generate tests for a single Java File.  - In the case of a given Module, the assistant will check for file without tests and generate for them. - The assistant expected behaviour is to read the Java file and generate a test file with the same name and the suffix <code>Test</code> in the same package.  - The assistant will also generate the test methods for each method in the Java. - This assistant has a Knowledge Base with the Java classes of Etendo Classic.</p> <p>Tools</p> <ul> <li>Print Directory Tool</li> <li>Read File Tool</li> <li>Write File Tool</li> </ul> <p>Warning</p> <p>The test generators provided by this tool are designed to deliver an initial batch of test cases efficiently, based on the parameters provided. However, it is important to note that the generated tests serve as a starting point and may require additional work to:</p> <ul> <li>Fix potential errors in the generated test cases.</li> <li>Improve test coverage.</li> <li>Adapt them to the specific scenarios of your project or environment.</li> </ul> <p>We recommend carefully reviewing the generated tests, executing them in the development environment, and making the necessary adjustments to ensure they meet the expected functional and quality requirements.</p> <p>Usage Example 1. To use this assistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select Java Test Generator and synchronize it. Then, go to the Assistant Access window and give access to the role. 2. Open Copilot and select Unique Java Test Assistant, then ask to the assistant what you need to create. A suggested input could be <code>Generate tests for the Java file located in the path /modules/com.etendoerp.module/src/com/etendoerp/module/MyClass.java</code>. 3. The assistant will generate the tests and execute them, checking for errors and providing feedback to the user.</p>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/dev-assistant/#webhook-creator","title":"Webhook Creator","text":"<p>Webhook Creator is an assistant designed to facilitate the creation and registration of webhooks in Java. A webhook acts as a communicator between applications or services, allowing data to be automatically sent from one system to another in real-time when a specific event occurs.</p> <p>Tools</p> <ul> <li>API Call Tool</li> <li>Read File Tool</li> <li>Write File Tool</li> </ul> <p>Functionality</p> <p>This assistant simplifies webhook creation by automatically generating the necessary Java files and registering them in the Etendo ERP system, taking examples of indexing code readeing the classes extends of <code>BaseWebhookService</code>. It is necessary give some useful information:</p> <ul> <li>Module Package: The Java package where the new process will be saved. It should follow the format <code>java.package.of.the.module</code>.</li> <li>Webhook Name: The name of the Java file to be created.</li> <li>Parameters: The parameters will be added to the webhook for the use.</li> </ul> <p>Usage Example</p> <ol> <li> <p>To use thisassistant, it is necessary to log in as <code>System Administrator</code> role and set the role access. For this, go to the Assistant window, select Webhook Creator and synchronize it. Then, go to the Assistant Access window and give access to the role.</p> </li> <li> <p>Open Copilot and select Webhook Creator, then ask to the assistant what you need to create.</p> <p></p> </li> <li> <p>Then, this is the result given by the assistant.</p> <p></p> <p></p> </li> </ol>","tags":["Copilot","Tools","Creator","Assistant","Developer Assistant","Dev Assistant"]},{"location":"developer-guide/etendo-copilot/bundles/overview/","title":"Copilot Extensions","text":"<p> Javapackage: <code>com.etendoerp.copilot.extensions</code></p> <p> Etendo Marketplace:  Copilot Extensions Bundle</p> <p>Warning</p> <p>Currently, we are migrating the terminology from Assistant to Agent. This change will be reflected in the documentation soon. Where you see Assistant, consider it as Agent and vice versa.</p>","tags":["Copilot Extensions","AI","Tools","Agents","Developer"]},{"location":"developer-guide/etendo-copilot/bundles/overview/#overview","title":"Overview","text":"<p>The Copilot Extensions Bundle includes functionalities for developers to help them develop AI agents that can assist users in their daily tasks.</p>","tags":["Copilot Extensions","AI","Tools","Agents","Developer"]},{"location":"developer-guide/etendo-copilot/bundles/overview/#modules","title":"Modules","text":"","tags":["Copilot Extensions","AI","Tools","Agents","Developer"]},{"location":"developer-guide/etendo-copilot/bundles/overview/#etendo-copilot","title":"Etendo Copilot","text":"<p> Javapackage: <code>com.etendoerp.copilot</code></p> <p>Etendo Copilot module include a set of windows where you can create, manage, and interact with AI-driven Agents. By default, the module includes Bastian that is an agent with the Etendo Documentation indexed as a knowledge base.</p> <p>Agents included</p> <ul> <li> <p>Bastian: is an agent with the Etendo Documentation indexed as a knowledge base.</p> <ul> <li>Prompt: The agent has a prompt that explain it purpose, the request that the user can make and the response that the agent will give. i.e. in it prompt there are indication to retrieve the article link when anwering a question. Additionally, has a brief explanation of particularities of the Etendo Wiki and the format of the articles.</li> <li>Knowledge Base: The agent has a knowledge base composed of the Etendo Wiki, indexed in the agent. The Knowledge Base file is of type <code>Remote File</code>, pointing to the GitHub repository of the Etendo Wiki. When the agent is synchronized, the agent will download the file and index it. </li> </ul> <p>Info</p> <p>For more information visit, How to create an agent guide.</p> </li> </ul>","tags":["Copilot Extensions","AI","Tools","Agents","Developer"]},{"location":"developer-guide/etendo-copilot/bundles/overview/#etendo-copilot-toolpack","title":"Etendo Copilot Toolpack","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p> <p>Tools Included</p> <ul> <li>API Call Tool: This tool allows you to make a call to an API and get the response.</li> <li>Attach File Tool: This tool allows you to attach a file to an Etendo Classic record.</li> <li>Audio Tool: This tool allows you to convert an audio given to text.</li> <li>Code Bar Tool: This tool allows you to read a barcode from an image.</li> <li>Docker Tool: This tool allows you to run code in an isolated environment.</li> <li>OCR Tool: This tool allows you to extract text from an image or PDF.</li> <li>PDF to Image Tool: This tool allows you to convert a PDF to images.</li> <li>Send Email Tool: This tool allows you to send an email.</li> <li>Task Creator Tool: This tool allows you to create bulk tasks based on a zip file or a CSV/XLSX file.</li> <li>Tavily Tool: This tool allows you to search in web.</li> <li>File Management tools:<ul> <li>File Copy Tool: This tool allows you to copy a file.</li> <li>File Download Tool: This tool allows you to download a file.</li> <li>Print Directory Tool: This tool allows you to print recursively files and directories from the current directory or from a specified upstream directory.</li> <li>Read File Tool: This tool allows you to read a file.</li> <li>Uncompress Tool: This tool allows you to uncompress various types of compressed files like zip, rar, etc.</li> <li>Write File Tool: This tool allows you to write a file.</li> <li>XLS/CSV Reader Tool: This tool allows you to read an XLS or CSV file.</li> </ul> </li> </ul> <p>Note</p> <p>For more information visit, How to Create Copilot Tools guide.</p> <p>Agents Included</p> <ul> <li> <p>SQL Expert: This agent is designed to help users read information from the database. It allows users to ask questions in natural language and get the SQL query that retrieves the information they need. In order to preserve the security of the database, the query is pre-processed with filters to only retrieve data accessible by the user.</p> <ul> <li>Prompt: The agent has a prompt that explain it purpose, the request that the user can make and the response that the agent will give. Has a brief explanation of particularities of the Etendo Classic database. Additionally, has a list of examples of common functions and columns that the tables have.</li> <li>Knowledge Base: The agent has a knowledge base composed by a OpenAPI Specification (of a flow with the endpoints that the agent can use) that is appended to the prompt.</li> <li>API Call Tool: The agent uses the API Call Tool to make the requests to Etendo Classic. </li> </ul> <p>Note</p> <p>For more information visit, How to allow Copilot to interact with Etendo Classic guide.</p> </li> </ul>","tags":["Copilot Extensions","AI","Tools","Agents","Developer"]},{"location":"developer-guide/etendo-copilot/bundles/overview/#etendo-copilot-agents","title":"Etendo Copilot Agents","text":"<p> Javapackage: <code>com.etendoerp.copilot.agents</code></p> <p>Agents included</p> <p>The agents module includes a set of agents that can be used to assist users in their daily tasks. The module includes the agents descripted un the Etendo Copilot Agents - User Guide</p> <ul> <li>Prompt: The agents have a prompt that explains their purpose, the request that the user can make and the response that the agent will give. In addition, it has a brief explanation of the particularities of each agent, explaining how to search for information, which has to be indicated punctually and which has to be found out. They also include information about the order in which the requests to Etendo Classic have to be made, from which we have to use which values from one to the other. </li> <li>Knowledge Base: Most of these agents use OpenAPI Specifications in their knowledge base, appending them to their prompt to understand how to use it. More information about how to allow the agent to interact with Etendo Classic can be found in the How to allow Copilot to interact with Etendo Classic guide.</li> <li>API Call Tool: The agents use the API Call Tool to make the requests to Etendo Classic.</li> <li>OCR Tool: The agents use the OCR Tool to read the information from the images that are attached to the requests. This tool is necessary if the model selected for the agent is not capable of reading the information from the images by itself.</li> <li>Bulk Task Creator Tool: The agent called <code>Bulk task creator</code> uses the Bulk Task Creator Tool to create bulk tasks based on a <code>ZIP</code> file or a <code>CSV/XLSX</code> file. This agent allows to create tasks in bulk to load big amounts of data in background.</li> <li>Langgraph Supervisor architecture: The supervisor agents are built using the Langgraph Supervisor architecture. More information about this architecture can be found in the How to Create an Agent - Langgraph Supervisor Architecture guide.</li> </ul>","tags":["Copilot Extensions","AI","Tools","Agents","Developer"]},{"location":"developer-guide/etendo-copilot/bundles/overview/#dev-assistant","title":"Dev Assistant","text":"<p> Javapackage: <code>com.etendoerp.copilot.devassistant</code></p> <p>The Dev Assistant module includes multiple development agents that will facilitate developers the processes of creating buttons, windows, tabs, fields, background processes, Event Handlers, Jasper reports and much more.</p> <p>Info</p> <p>For more information, visit Dev Assistant - Developer Guide.</p>","tags":["Copilot Extensions","AI","Tools","Agents","Developer"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/","title":"How to Create an Agent","text":"","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#overview","title":"Overview","text":"<p>This article explains how to create a new agent in Etendo Copilot from scratch. The agent will be able to interact with the user and provide responses based on the user's input. This article will guide you through the process of creating a new agent, adding a knowledge base, and selecting a model, etc. The complete explanation of the windows used in this guide can be found in the Setup and Usage article.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#creating-a-basic-response-agent","title":"Creating a Basic Response Agent","text":"<p> <code>Application</code> &gt; <code>Service</code> &gt; <code>Copilot</code> &gt; <code>Assistant</code></p> <p>The Assistant window allows you to define and configure assistants:</p> <p></p> <ul> <li>Name: Assistant name</li> <li>Description: Assistant description</li> <li>Prompt: Specific instructions of the assistant. These instructions can be written in English or other languages, in general, the English language is recommended.</li> <li>Description: The description of the assistant so that the manager can choose the appropriate assistant for each case. </li> <li>Model: Dropdown with the models available, such as OpenAI, Anthropic, etc. Go to section Which model should I choose? for more information.</li> <li> <p>Temperature: This controls randomness, lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive.</p> </li> <li> <p>App Type:</p> <ul> <li> <p>Multi-Model Agent      This type of assistant can use multiple models of different providers, such as OpenAI, Anthropic, etc.       This is the most recommended option to define a simple agent. The Agents can have a knowledge base filled with files, and can use tools to do specific tasks. The agent will strategically use the tools and knowledge base to provide the best possible response.</p> </li> <li> <p>LangGraph</p> <p>This option works as a manager of other assistants and allows to select team members. As a library, LangGraph typically works as a software tool designed to help developers and researchers work with linguistic data in a structured, graph-based format. The default maximum amount of interactions between the manager and the assistants is 50, though a different amount can be configured.</p> </li> </ul> </li> </ul> <p>Info</p> <p>The Prompt field can have the following dynamic variables: @ETENDO_HOST@, @ETENDO_HOST_DOCKER@ and @source.path@ These variables will be replaced with the values defined in the properties. If the App types Open AI Assistant or Langchain Agent are chosen, the tabs shows are Knowledge and Skill and Tools. If the LangGraph option is chosen, the Team Members tab is shown.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#example","title":"Example","text":"<p>For example, we will create a new agent called Task Definition Agent to help users define an issue with the mandatory format for his team. The purpose of the agent is to receive a description of the task and return the task definition with the mandatory format. We will create a new agent with the following information:</p> <ul> <li>Name: Task Definition Agent</li> <li>Description: This agent helps users define a task description with the mandatory format for his team.</li> <li>Model: No need to select a specific model, the default model will be used.</li> <li>Temperature: Set to <code>0.5</code> because we want to have some \"creativity\" in the responses.</li> <li>Module: This agent will not be exported to a module.</li> <li> <p>Prompt:</p> <pre><code>You are an agent to generate a task description based on the client's conveyed needs. This definition is intended for a developer.\n\nThe description should follow this format:\n\n# Title\n- Title of the Task\n\n# Issue Description\n- State the primary need expressed, the problem to solve o the context of the change.\n\n# Solution Design\n- Outline what needs to be developed.\n\n# Use Cases\n* **Given**: Describe the initial context or precondition.\n* **When**: Explain the event or action taken.\n* **Then**: Describe the expected outcome.\n\n\nThe goal is to generate a concise description. Be succinct and to the point.\n\nAfter creating the initial description, please answer the following questions to refine it further:\n1. Is the primary need of the client clearly and accurately stated?\n2. Does the solution design provide sufficient detail for development without ambiguity?\n3. Are the use cases comprehensive and cover all possible scenarios?\n4. Are there any assumptions or dependencies that need to be clarified?\n\nSeparate the proposal of task  definition and the refinement questions with ---------------- for a better view\n\nPlease provide your response in Markdown format, adhering strictly to the given template so it can be easily pasted into the issue.\n\nOnce you respond with your answers, I will revise the description accordingly and provide additional questions for further refinement.\n\nTranslate everything to English, because the issues must be in English.\n</code></pre> </li> </ul> <p>After saving the agent, the system will auto-give access to it. Open the Copilot Chat with the button <code>\u2728Copilot</code> and select the agent <code>Task definition agent</code>. You can start interacting with the agent. </p> <p>Tip</p> <p>From the most basic agent, its behavior is determined by its system prompt. Therefore, in case of an undesired operation, it is important to verify that the failure is not in an incorrect, inefficient or unclear prompt. It is possible to debug LLM calls with Langsmith. Read the How to debug an agent prompt with Langsmith article for more information.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#which-model-should-i-choose","title":"Which Model Should I Choose?","text":"<p>Currently, Copilot support the following providers:</p> <ul> <li>OpenAI: This provider is the default one and is the most used. It is the most versatile and has the best performance in most cases.</li> <li>Anthropic: This provider is is specialized in code generation. It is the best option for code-related tasks.</li> <li>Deepseek: This provider is for generaral tasks like OpenAI, but cheaper.</li> <li>Ollama (Self-hosted models): This provider is for users that have their own models running in their own infrastructure. The support for this provider is in experimental phase. For more information visit, How to Use and RunSelf Hosted Models with Ollama guide.</li> </ul>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#default-model","title":"Default Model","text":"<p>The default model for Etendo Copilot is <code>gpt-4o</code> from OpenAI. This model is selected automatically if the agent hasn't a specific model selected.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#what-model-are-available-ai-models-window","title":"What Model are Available? - AI Models window","text":"<p>Etendo Copilot provides a Window where you can see the available models and their details. This window is populated when synchronizing the models. Additionally, if the provider offers models that are not present in this list, they can be added manually. More information here AI Models</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#add-a-knowledge-base","title":"Add a Knowledge Base","text":"<p>LLMs are the brains behind the agent and these come by default with knowledge gained from the model's own training. However, in many cases we need them to have specific information that they do not have, so we resort to the Knowledge Base File to conform their Knowledge Base. This will allow us to train our agent with certain information.</p> <p>The most crucial is to determine:</p> <ul> <li>Knowledge Base File Type: Basically it is the origin or how Etendo can get that file. This is configured in the <code>Knowledge Base File</code> Window.</li> <li>Knowledge Base File Behavior: Which is the way this file is integrated in the agent or in the conversation. This is configured in the <code>Knowlegde</code> tab of the <code>Assistant</code> window.</li> </ul>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#knowledge-base-file-type","title":"Knowledge Base File Type","text":"Type When to Use It Needed Information Attached File Use when the file is one that never changes. File itself, which has to be attached to the Knowledge Base File registry. Remote File It is highly recommended when the file can change and the latest version can be accessed from the same url. For example, a file in a repository on GitHub. File URL HQL Query It is used when you want the agent to be able to read information from a table or from the result of a database query. For example, a list of Business Partners or orders. HQL Query Text When the information is static and can be written directly in the window. The text itself OpenAPI Flow Specification Use when the knowledge base file is the OpenAPI Specification of a Etendo Classic Flow. See How to allow Copilot to interact with Etendo Classic for more information. Select the flow in the selector Code Index When the agent needs to know Locally stored code. Specify the paths of the folders <p>Info</p> <p>More information about this window can be found in the Nowledge Base File Window article.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#knowledge-base-file-behavior","title":"Knowledge Base File Behavior","text":"Behavior When to Use It Functionality Limitations [Assistant] Append the file content to the prompt Its recommended when the volume of the file content can be handled by the model or the information its crucial for the agent work. When the prompt is builded, the content of the file will be inserted in every @alias@ ocurrence inside the prompt. If the alias was not defined, the content of the file is appended at the final of the prompt. The length of the file directly impacts the length of the system prompt, which has a limit in each module. In addition, a very large prompt can slow down the agent's responses. [Assistant] Add to the assistant as Knowledge Base Its recommended to use when the volume of information is larger than the limit of tokens that the model can handle as 'prompt'. The agent will not \"know\" the content of the knowledge base file from the beginning of the execution, but will be equiped with a <code>Knowledge base Search</code> tool to search for information in the knowledge base, working as a search engine. This is so because the information is indexed in a database of vectors, proper of the agent and the search tool is the one that allows to search in it by \"Meaning\". The agent will not be able to use the information in the knowledge base to generate responses without using the <code>Knowledge base Search</code> tool. [User question] Append content to each question It is recommended when data changes very frequently and you need to have the data at the time of each question. The content of the file should be as short as possible. Add the content of the file at the end of each message. It has a direct impact on the length of messages, which have character limits. It can also slow down the agent's responses if the message is very large. [Assistant] SPEC: Add as assistant specification Can be used when the file content is an OpenAPI Specification The specification is not added to the request, but is sent to Copilot. When the agent is built, the specification is processed and tools are generated automatically (for each method and each endpoint), which are then added to the agent. In this way, the assistant has tools to be able to use the Call Tool API without the need to use the Call Tool API and have all the OpenAPI Spec at the prompt. It is currently in the experimental phase. <p>Info</p> <p>More information about this window can be found in the Knowladge Tab section.</p> <p>Tip</p> <ul> <li>Remember the Synchronization: After adding/modifying/deleting a knowledge base file from an Agent, its necessary to synchronize the agent to apply the changes. This not only regenerates/reloads the Knowledge Base File but also updates the Agent with the latest changes.</li> <li>Splitting: We the indexation in the knowledge base file is done, the content is splitted in chunks depending of the type of the file. For example, if the file is a markdown file, the content is splitted in chunks by the headers. If the files not are large, its possible to mark as <code>Skip Splitting</code> in the knowledge base file configuration. This will avoid the splitting of the content in chunks. This causes that the content of the documents is retrieved as a single chunk, which can be useful in some cases.</li> </ul>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#example_1","title":"Example","text":"<p>We got the example of the default Copilot agent <code>Bastian</code> that has a knowledge base file based in the Etendo Documentation from it GitHub repository. Copilot support <code>.zip</code> format for the knowledge base file behaviour, automatically extracting it and indexing the files inside. In this case, the <code>ZIP</code> file contains the Etendo Documentation in markdown format. The agent has the knowledge base file configured as <code>Remote File</code> and the behaviour as <code>Add to the assistant as Knowledge Base</code>. The agent has the following configuration:</p> <ul> <li> <p>Setting the Knowledge Base File:     </p> </li> <li> <p>Setting the Knowledge Base File Behaviour (Connecting the Knowledge Base File to the Agent):     </p> </li> <li> <p>After asking the agent for information about a topic, the agent will search in the knowledge base file and return the information. The agent will use the <code>Knowledge Base Search</code> tool to search in the knowledge base file.      </p> </li> <li> <p>The agent will return a response with the information found in the knowledge base file.     </p> </li> </ul> <p>Note</p> <p>Remember, explain in the prompt that the agent must search in the knowledge base file to find the information. This will help to the agent to know how to work with the knowledge base file.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#add-tools","title":"Add Tools","text":"<p>When creating an agent, it is possible to add tools to it. Tools are functionalities that allow the agent to perform specific tasks. These tools can be used to interact with external systems, manipulate files, or perform other actions. The tools are added in the <code>Skills and Tools</code> tab of the <code>Assistant</code> window.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#available-tools","title":"Available Tools","text":"<p>The following tools are available in Etendo Copilot there listed in the Etendo Copilot ToolPack module documentation. In the module Etendo Copilot Toolpack the are a set of tools that can be used to assist in multiple cases.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#how-to-add-a-tool","title":"How to add a tool","text":"<p>To add a tool to an agent, follow these steps:</p> <ol> <li>Open the <code>Assistant</code> window.</li> <li>Go to the <code>Skills and Tools</code> tab.</li> <li>Add the tool by creating a record in the <code>Skills and Tools</code> tab.</li> </ol>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#example_2","title":"Example","text":"<p>For example, we will add a tool to the agent <code>Task Definition Agent</code> to allow to write a file with the task definition. The tool will be the <code>Write File Tool</code> that allows to write a file with the content provided.  </p> <p>After adding the tool, the agent will have the tool available to use. The agent can use the tool to write a file with the task definition. The agent will use the tool to write the file with the task definition.  We can check the created file: </p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#how-to-allow-copilot-to-interact-with-an-api-or-etendo-classic","title":"How to allow Copilot to Interact with an API or Etendo Classic?","text":"<p>The most powerful and useful feature of Etendo Copilot is the ability to interact with APIs (including Etendo Classi)c. Currently the paradigm of AI agents is to automate and/or reuse what is already done. In other words, the utility arises from the fact that AI agents can use all the business logic that is already available.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#external-api","title":"External API","text":"<p>The most usual way is based on a combination of an OpenAPI Specification and a tool that allows to make requests to that API. To do this, the following steps are needed: - Add the OpenAPI Specification: The OpenAPI Specification is a standard way to describe an API. This specification is added as a Knowledge Base File. And configure it as <code>[Assistant] Append the file content to the prompt</code>. This will allow the agent to know the endpoints and methods of the API. - Add the API Call Tool: The API Call Tool is a tool that allows to make requests to an API. This tool is added as a tool in the agent. The agent can use this tool to make requests to the API.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#etendo-classic","title":"Etendo Classic","text":"<p>For Etendo Classic, the process is a bit different. The main difference is that we can take advantage of the OpenAPI Specification automatically generated by the <code>Flows</code>, where we can define a set of endpoints to which we want to give access to our agent. To know more about how to create a flow in Etendo Classic, check the How to Document an Endpoint with OpenAPI guide. The steps to allow an agent to interact with Etendo Classic are:</p> <ul> <li>Add the OpenAPI Specification: This specification is added as a Knowledge Base File of type <code>OpenAPI Flow Specification</code>. When this type is selected, a selector with the available flows is shown, to select the flow that we want to use. The behaviour of this file can be <code>[Assistant] Append the file content to the prompt</code>. This will allow the agent to know the endpoints and methods of the API.</li> <li>Add the API Call Tool: The API Call Tool is a tool that allows to make requests to an API. This tool is added as a tool in the agent. The agent can use this tool to make requests to the API.</li> </ul> <p>Warning</p> <p>If the behaviour of the Knowledge Base File is <code>[Assistant] Add to the assistant as Knowledge Base</code>, the agent will not be able to use the information in the knowledge base file to generate responses without using the <code>Knowledge base Search</code> tool. So the agent needs to search in the knowledge base file to find the information. This is not recommended due to the performance of the agent.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#auto-generation-of-tools","title":"Auto Generation of Tools","text":"<p>When the OpenAPI Specification is added as a Knowledge Base File of type <code>OpenAPI Flow Specification</code>, the agent will automatically generate tools for each method and endpoint of the API. These tools can be used to make requests to the API without the need to configure the API Call Tool. The agent will have a tool for each method and endpoint of the API. This functionality is currently in the experimental phase.</p>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-an-agent/#example_3","title":"Example","text":"<p>For example, we will create an agent to create Products in Etendo Classic, using an already defined flow with the endpoints needed to create Products, Product Categories and Prices. </p> <ol> <li> <p>First, we will create a new Knowledge Base File of type <code>OpenAPI Flow Specification</code> and select the flow <code>Product Flow</code>.</p> <p>Info</p> <p>Be sure to use the agent that has the necessary permissions to interact with the data. In this case, the agent must have the necessary permissions to create products, categories and prices in Etendo Classic.</p> <p></p> </li> <li> <p>After adding the Knowledge Base File, we will create the agent with a prompt that explains his scope, strategy and the request that the user can make. Additionally, we will add the OpenAPI Specification to the prompt to allow the user to know the endpoints and methods of the API.</p> <p></p> <p>Warning</p> <p>Remember to synchronize the agent to apply the changes. This not only regenerates/reloads the Knowledge Base File but also updates the Agent with the latest changes.</p> </li> <li> <p>Open the Copilot Chat with the button <code>\u2728Copilot</code> and select the agent <code>Product Creator Agent</code>(if not shown, make sure to have access to it). </p> </li> <li> <p>You can start interacting with the agent. The agent will have the OpenAPI Specification in the prompt and will be able to use the API Call Tool to make requests to the API.</p> <p></p> </li> </ol>","tags":["How to","Etendo Copilot","Agent","Create","LLM","Assistant"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/","title":"How to create and work with bulk tasks for Copilot","text":"","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#overview","title":"Overview","text":"<p>This article explains how to create and work with bulk tasks for Copilot. This is useful when you want to create multiple tasks at once and execute in background with Copilot</p>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#concept-and-use-cases","title":"Concept and Use Cases","text":"<p>When you need to make use of an AI agent to perform tasks with a high volume of iterations, it will be limited in the amount it can handle and its speed. Then the concept of Bulk tasks is born, which consists of storing requests in a window of the <code>Tasks</code> module. </p> <p>Warning</p> <p>It is necessary to consider that these tasks must be isolated from each other. That is, they do not need information from each other. For example, when loading data from an excel file, each row will be executed separately.</p> <p>These requests can be executed manually or be processed in a background process already included in the Copilot module.</p>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#how-to-add-copilot-tasks","title":"How to Add Copilot Tasks","text":"<p>The Etendo Copilot module includes:</p> <ul> <li>Add Copilot Task Button: This button in the <code>Tasks</code> window allows you sent a CSV/XLSX/ZIP file to create bulk tasks.</li> <li>Bulk Task Creator: This agent is configured with the Task Creator Tool to create bulk tasks based on a zip file or a CSV/XLSX file. This agent can be added to a supervisor agent to chain with other agents.</li> </ul> <p>In both options, the requirements are the same:</p> <ul> <li>CSV/XLSX/ZIP file: The file that contains the data to be processed.</li> <li>Question: The description or request that will be used as the task base. For the case of the agent <code>Bulk Task Creator</code>, it will be encharge to reform the task to convert to singular tasks. But for the other options, it is necessary to provide the task base in singular form.</li> <li>Execution Group: Optional group. If not set, it uses the conversation ID. Its use to identify the tasks that belong to the same group.</li> <li>Task Type: Optional task type ID. If not set, it auto-creates one named \"Copilot\". Its use to identify the type of task.</li> <li>Status: Optional status ID. Defaults to \"Pending\". Its use to identify the status of the task. After the task is processed, the status will be updated to <code>Completed</code>.</li> <li>Agent: The agent that will process the tasks. If the agent is not specified, will be selected the assistant that used the tool. For the case of the agent <code>Bulk task creator</code>, it will be selected the supervisor agent that contains it.</li> </ul> <p>Info</p> <p>When the tasks are created, the tasks will be created one per row in the case of CSV/XLSX files, one per file in the case of ZIP files, and one per file in the case of other files. The task request will be the following format: <code>BASE_TASK - [FILE_NAME/ROW DATA]</code></p>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#example","title":"Example","text":"<p>For example, if you have a CSV file with the following data:</p> SKU Description Category Price 33601251 FAN 38*30 NATURAL FIBER Others 6100 33600292 BOTTLE OPENER Others 10500 33600139 RUBBER BATH MAT Decoration 3900 33600228 TREE Plants 11500 33600739 ROUND METAL BUCKET Others 9000 33600356 BAG 14X7X15 Others 1000 33600337 PIANO MUSIC BOX Decoration 12000 products.csv<pre><code>SKU,Description,Category,Price\n33601251,FAN 38*30 NATURAL FIBER,Others,6100\n33600292,BOTTLE OPENER,Others,10500\n33600139,RUBBER BATH MAT,Decoration,3900\n33600228,TREE,Plants,11500\n33600739,ROUND METAL BUCKET,Others,9000\n33600356,BAG 14X7X15,Others,1000\n33600337,PIANO MUSIC BOX,Decoration,12000\n</code></pre> <p>And the objetive is to insert these products in Etendo. For this example we will use the  <code>Client Initialization Supervisor</code> agent that contains the <code>Product Generator</code> agent that can create products in Etendo. The steps to create the bulk tasks are:</p>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#using-the-add-copilot-task-button","title":"Using the <code>Add Copilot Task</code> button","text":"<ol> <li>Go to the <code>Tasks</code> window.</li> <li> <p>Click on the <code>Add Copilot Task</code> button. That will open a window to set the parameters for the bulk tasks.</p> <ol> <li>Set the Question parameter with the description of the task, in singular form, that will be used as the task base. For example, <code>Create product with this data:</code>.</li> <li>Select the Agent. In this case, select the <code>Client Initialization Supervisor</code> agent.</li> <li>Select the File to be processed. In this case, select the CSV file with the products data.</li> <li>Set an identifier for the Execution Group. For example, <code>Product Load 01/04/2025</code>. This can be used to identify the tasks that belong to the same group.</li> <li>Set an Element separator. This is the character that will be used to separate the data from the file CSV. For example, <code>,</code> or  <code>;</code>.</li> </ol> <p></p> </li> <li> <p>Click on <code>Done</code> button. And the tasks will be created.     </p> </li> </ol>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#using-the-task-creator-tool-in-an-agent","title":"Using the <code>Task Creator Tool</code> in an agent","text":"<ol> <li>Go to the agent that contains the <code>Task Creator Tool</code>.</li> <li>Open a conversation with the agent.</li> <li>Attach in the conversation the CSV file with the products data.</li> <li> <p>Send some request like:</p> <pre><code>Create bulk tasks for the attached file.\n- Question/request: \"Create product with this data:\".\n- The group id is 'Product Load 01/04/2025'. \n-The agent ID is 'A9E0861E88B1460A98CAF55DCB2BEE82'. \n- Not indicate task type and status, to use the defaults.\n</code></pre> <p>Info</p> <p>This use of the <code>Task Creator Tool</code> is an example, the agent can have assumptions or simplifications that can change the way to use it. This can be done customizing the agent prompt.</p> </li> <li> <p>The agent will create the tasks based on the file data using the <code>Task Creator Tool</code>. </p> </li> </ol>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#using-the-bulk-task-creator-agent","title":"Using the <code>Bulk Task Creator</code> agent","text":"<p>This agent know to use the <code>Task Creator Tool</code> strategically, converting the request in singular tasks. The steps to create the bulk tasks are:</p> <ol> <li>Add the <code>Bulk Task Creator</code> agent to a supervisor agent. In this case, we will use the <code>Client Initialization Supervisor</code> agent that contains the <code>Product Generator</code> agent.</li> <li>Open a conversation with the supervisor agent.</li> <li>Attach in the conversation the CSV file with the products data.</li> <li> <p>Send some request like: </p> <pre><code>Create the products in the attached file.\n</code></pre> <p></p> </li> <li> <p>The supervisor agent will delegate the task to the <code>Bulk Task Creator</code> agent that will create the tasks based on the file data and then process it.</p> </li> </ol>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#how-to-process-copilot-tasks","title":"How to Process Copilot tasks","text":"<p>The tasks can be processed in two ways:</p> <ul> <li> <p>Manual processing: The user can process the tasks manually in the <code>Tasks</code> window. Select the tasks to be processed and click on the <code>EXECUTE TASK WITH COPILOT</code> button. After the task is processed, the status will be updated to <code>Completed</code> and the result will be shown in the <code>Response</code>.</p> </li> <li> <p>Background processing: The tasks can be processed automatically in the background. Go to <code>Process Request</code> window to schedule the background process called <code>Execute Copilot Bulk Tasks</code>. In each execution, the process will take 10 tasks to process, so it is necessary to execute the process multiple times to process all the tasks.</p> </li> </ul> <p>After the task is processed, the status will be updated to <code>Completed</code> and the result will be shown in the <code>Response</code>.</p>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-and-work-with-bulk-tasks-for-copilot/#example_1","title":"Example","text":"<p>For example, we will process few tasks created in the previous example, in the manual way</p> <ol> <li>Go to the <code>Tasks</code> window.</li> <li>Select the tasks to be processed.</li> <li>Click on the <code>EXECUTE TASK WITH COPILOT</code> button.     </li> <li>The tasks will be processed and the status will be updated to <code>Completed</code>.     </li> <li>In the field <code>Response</code> will be shown the result of the task.     </li> </ol> <p>For the remaining tasks, we will schedule the background process to process them.</p> <ol> <li>Go to the <code>Process Request</code> window.</li> <li>Create a record selecting the <code>Execute Copilot Bulk Tasks</code> process. It is recommended to schedule the process to be executed from time to time, depending on the specific need. For this case, we will do it every 10 minutes.     </li> <li>Click in the button <code>Schedule Process</code>.</li> <li>The process will be scheduled and will process the tasks in the background.     </li> <li>The tasks selected are the tasks executed:     </li> </ol>","tags":["How to","Copilot","Bulk","Tasks"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/","title":"How to Create Copilot Tools","text":"","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/#overview","title":"Overview","text":"<p>This guide provides step-by-step instructions to help you create custom tools for Etendo Copilot. You will learn how to:</p> <ul> <li>Define the required module structure.</li> <li>Specify tool inputs and dependencies.</li> <li>Register and test your tools in Etendo Classic.</li> <li>Integrate your tools with Etendo Classic using the Event Webhooks API.</li> </ul> <p>This enables seamless interaction between your Python-based tools and the Etendo platform.</p>","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/#etendo-copilot","title":"Etendo Copilot","text":"<p>The Etendo Copilot infraestructure allows you to create tools that extend agents functionality. These tools are developed in Python and run in the Docker container where Copilot operates. In this guide, you will learn how to create a new Copilot tool in a dedicated module. However, it is also possible to add tools to an existing module. Each module can contain one or multiple tools.</p> <p>Etendo Copilot is based on Langchain</p> <p>The Langchain libraries are available by default in Copilot. You can use them in your tools. See Langchain documentation for more information.</p>","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/#requirements","title":"Requirements","text":"<p>The Copilot Extensions bundle must be installed in Etendo Classic. If it is not already installed, follow the Etendo Copilot Installation Guide to set it up.</p>","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/#create-a-new-tool","title":"Create a New Tool","text":"<p>In this example, you will create a tool that performs a ping to a specified host. The tool will be called <code>PingTool</code> and will be located in the <code>com.etendoerp.copilot.pingtool</code> package.</p> <ol> <li> <p>Create an Etendo Classic module: All Copilot tools must be placed inside an Etendo Classic module. To create a new module, follow the steps in How to Create a Module.</p> <p>Warning</p> <p>For the tool to function correctly and be recognized by the Copilot infrastructure, the module must include the <code>build.gradle</code> file. This file is created when the module is prepared to be published. See How to publish modules to GitHub repository</p> <p>The structure of the module will be as follows:</p> <pre><code>modules\n\u2514\u2500\u2500 com.etendoerp.copilot.pingtool\n    \u251c\u2500\u2500 src-db \n    \u2502   \u2514\u2500\u2500 database\n    \u2502       \u2514\u2500\u2500 sourcedata\n    \u2502           \u251c\u2500\u2500 AD_MODULE.xml\n    \u2502           \u251c\u2500\u2500 AD_MODULE_DBPREFIX.xml\n    \u2502           \u251c\u2500\u2500 AD_MODULE_DEPENDENCY.xml\n    \u2502           \u2514\u2500\u2500 ETCOP_TOOL.xml\n    \u251c\u2500\u2500 tools \n    \u2502   \u2514\u2500\u2500 PingTool.py\n    \u251c\u2500\u2500 build.gradle\n    \u2514\u2500\u2500 tools_deps.toml\n</code></pre> <p>src-db: Contains the database structure of the module. This folder is created automatically when creating and exporting the module from Etendo Classic.</p> <p>tools: Contains the tools of the module. A module can contain one or more tools.</p> <p>build.gradle: Contains module configurations.</p> <p>tools_deps.toml: Defines Python dependencies for the tools in the module. These dependencies are automatically installed inside the Copilot Docker container when the tool is loaded.</p> </li> <li> <p>Create the Python tool. It is necessary to use a <code>Dict</code> as input. To do this, define a class using <code>pydantic</code> to specify the structure of the input.      For the <code>PingTool</code>, create a class called <code>PingToolInput</code> inside the <code>PingTool.py</code> file. Here is an example:</p> <p>Warning</p> <p>The <code>SearchKey</code> of the tool must match the name of the class that extends the <code>ToolWrapper</code> class.</p> PingTool.py<pre><code>import os\nfrom typing import Type, Dict\n\nfrom copilot.core.tool_input import ToolInput, ToolField\n\nfrom copilot.core.tool_wrapper import ToolWrapper  # Import the ToolWrapper class from the copilot.core.tool_wrapper module. This class is the one that must be extended to create a new tool.\n\n\nclass PingToolInput(ToolInput):\n    host: str = ToolField(\n        title=\"Host\",\n        description='''The host to ping.''',\n    )\n    message_to_print: str = ToolField(\n        default=\"default message!\",  # Default value of the input, if there is no default value, the input is mandatory.\n        title=\"Message to print\",\n        description=\" Custom message to print before the ping result.\",\n    )\n\n\nclass PingTool(ToolWrapper):\n    name: str = 'PingTool'  # Name of the tool\n    # Description of the tool.\n    # This description tells Copilot what the tool does and based on this description it will decide if this tool will solve the user's request.\n    description: str = (\n        '''This tool receives a hostname and returns the ping result.''')\n    args_schema: Type[ToolInput] = PingToolInput  # The args_schema attribute must be a Pydantic model that defines the inputs of the tool.\n\n    #return_direct = True  # If return_direct is True, the tool will return the result directly, without execute any other tool. If return_direct is not defined, the tool output can be used as input of another tool. This is only available for tools in the Langchain agent. In the OpenAI agent, the return_direct attribute is taken into account, and the tool output can be used as input of another tool.\n\n    def run(self, input_params: Dict, *args,\n            **kwargs):  # The run method is the one that will be executed when the tool is executed.\n        import requests  # Import the necessary libraries to execute the tool.\n        # It is recommended to import the libraries inside the run method to avoid conflicts with other tools.\n        host = input_params.get('host')  # Get the host input from the input_params dictionary.\n        # Get the message_to_print input from the input_params dictionary\n        # or from the args attribute that contains the default values of the inputs.\n        message_to_print = input_params.get('message_to_print') or self.args.get('message_to_print').get('default')\n        print('MESSAGE:' + message_to_print)\n        response = requests.get(host)\n        return {\"status_code\": response.status_code}  # The run method must return a dictionary with the outputs of the tool.\n</code></pre> <p>Environment variables</p> <p>Copilot automatically reads the <code>gradle.properties</code> file of Etendo Classic and exposes these as environment variables (dots replaced with underscores). For example:</p> <ul> <li><code>COPILOT_PORT</code> \u2192 <code>COPILOT_PORT</code></li> <li><code>bbdd.sid</code> \u2192 <code>bbdd_sid</code></li> </ul> <p>You can access these environment variables in your tools.</p> </li> <li> <p>Create the <code>tools_deps.toml</code> file in the root folder of the module. This file defines dependencies in TOML format:</p> <p><pre><code>[ToolName]\ndependency_name = \"dependency_version\"\ndependency_name = \"dependency_version\"\n</code></pre> For our example, the content of the file will be as follows:</p> <pre><code>[PingTool]\nrequests = \"*\"\n</code></pre> <p>The version can be specified with the following operators:</p> <pre><code>[PingTool]\nrequests = \"*\" # Installing latest version\nrequests = \"==2.26.0\" # Installing a specific version\nrequests = \"&gt;=2.26.0\" # Greater than or equal to a certain version\nrequests = \"&lt;=2.26.0\" # Less than or equal to a certain version\nrequests = \"&gt;2.26.0\" # Greater than a certain version\nrequests = \"&lt;2.26.0\" # Less than a certain version\nrequests = \"&gt;=2.26.0,&lt;=2.26.1\" # Using version ranges\nrequests = \"~=2.26.0\" # Tilde operator (~) for installing compatible versions\n</code></pre> <p>Tip</p> <p>During the load of Copilot service, the tool will be loaded and the dependencies will be installed. Additionally, the dependencies will be tested to ensure that they are installed correctly.</p> <p>Different name of depedency while installing and importing</p> <p>If the name of the dependency is different from the name of the package that is imported in the tool, it is necessary to specify it. </p> <p>For example, if the dependency is installed with the name <code>pyscopg2-binary</code> but is imported with the name <code>psycopg2</code>, we can use a <code>|</code> to specify both names. </p> <p>If this clarification is not made, the tool will not be able to import the dependency to test if it is installed correctly, this will throw a warning, but the tool will be able to run.</p> <p>The content of the file will be as follows:</p> <pre><code>[ToolName]\n\"pyscopg2-binary|psycopg2\" = \"*\"\n</code></pre> </li> <li> <p>Restart the Copilot service: </p> <p>``` Title=\"Termina\" ./gradlew resources.stop <pre><code>``` Title=\"Termina\"\n./gradlew resources.up\n</code></pre></p> </li> <li> <p>Open the Skill/Tool window in Etendo Classic (System Administrator role). Create a new record with:</p> <ul> <li>Search key: Must match the tool class name.</li> <li>Name: The name of the tool. Displayed in the Copilot UI.</li> <li>Module: Set the module created in step 1.</li> <li>Description: Populated from the Python class automatically when syncing the tool.</li> <li>JSON Info: Contains a JSON description of the tool, inputs and outputs. Populated automatically when syncing the tool.</li> </ul> <p>To retrieve parameter information from the tool definition, execute Sync Tool Structure. </p> <p>Warning</p> <p>It is mandatory to have copilot running and the tool loaded in the copilot container. If the tool is not loaded, the process will not retrieve the tool parameters.</p> <p></p> </li> <li> <p>After defining the tool, export the configurations to the module:</p> Terminal<pre><code>./gradlew export.database\n</code></pre> </li> <li> <p>Once the Copilot Tool is defined, this tool must be associated to the assistant(s), to do so, a record must be created in the tools tab of the Assistant window, this record will allow us to activate or deactivate the tool.</p> <p></p> <p>Note</p> <p>Remember to execute <code>Sync Assistant</code> process after linking the tool, if not, the tool will not be available in the agent.</p> </li> <li> <p>To test the developed tool, you can ask an agent that has the tool associated with it to perform the required action, the agent will run the tool and return the result.</p> </li> </ol>","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/#interacting-with-etendo","title":"Interacting with Etendo","text":"<p>When creating tools that need to interact with Etendo Classic, the best approach is to use the Event Webhooks API. This API simplifies authentication and allows your tools to trigger webhooks with data.</p>","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/#utilizing-etendo-classic-event-webhooks-api","title":"Utilizing Etendo Classic Event Webhooks API","text":"<p>The Etendo Classic Event Webhooks API is a standard feature in Etendo, and it allows for easier integration with tools through Copilot utilities. For example, if you need to trigger a WebHook named <code>UpdateOrderDescription</code> to update an order in Etendo Classic, receiving a document number and a description as parameters, you can do so by creating a specific tool.</p>","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/#example-tool-updatesotool","title":"Example Tool: UpdateSOTool","text":"<p>Here is an example of a tool that triggers the <code>UpdateOrderDescription</code> WebHook:</p> <pre><code>from typing import Type, Dict\n\nfrom copilot.core.etendo_utils import call_webhook, get_etendo_token, get_etendo_host\nfrom copilot.core.tool_input import ToolInput, ToolField\nfrom copilot.core.tool_wrapper import ToolWrapper, ToolOutput, ToolOutputMessage\n\nclass UpdateSOToolInput(ToolInput):\n   documentNo: str = ToolField(description=\"DocumentNo of the Sales Order\")\n   description: str = ToolField(description=\"New description to set in the Sales Order\")\n\nclass UpdateSOTool(ToolWrapper):\n   name: str = \"UpdateSOTool\"\n   description: str  = \"Set description in a Sales Order by DocumentNo2\"\n   args_schema: Type[ToolInput] = UpdateSOToolInput\n   return_direct: bool = False\n\n   def run(self, input_params: Dict = None, *args, **kwargs) -&gt; ToolOutput:\n       documentNo = input_params['documentNo']\n       description = input_params['description']\n       token = get_etendo_token()\n       # Build the body of the request\n       body = {\n           \"documentNo\": documentNo,\n           \"description\": description\n       }\n       url = get_etendo_host()\n       response = call_webhook(url=url, webhook_name=\"UpdateOrderDescription\", access_token=token, body_params=body)\n       return ToolOutputMessage(message=response)\n</code></pre>","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-create-copilot-tools/#explanation-of-tool-components","title":"Explanation of Tool Components","text":"<p>The above tool leverages utilities provided by Copilot Core:</p> <ul> <li> <p><code>get_etendo_token()</code>: This function returns the authentication token for Etendo Classic, allowing the tool to operate within the user's session. Copilot, acting as a \"proxy,\" manages these sessions.</p> </li> <li> <p><code>get_etendo_host()</code>: This function returns the URL of the Etendo Classic instance, which is required to trigger the WebHook. This host URL is configured as <code>ETENDO_HOST</code> in the <code>gradle.properties</code> configuration file.</p> </li> <li> <p><code>call_webhook(url:String, webhook_name:String, access_token:String, body_params:Dict)</code>: This function triggers the WebHook, passing the Etendo Classic URL, the WebHook name, the authentication token, and the parameters needed by the WebHook.</p> </li> </ul>","tags":["How to","Create Tool","Copilot Tool","Python Dependencies"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/","title":"How to Debug an Agent Prompt with LangSmith","text":"","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/#introduction","title":"Introduction","text":"<p>Langsmith is a powerful observability tool that allows you to track and analyze the performance of your AI applications, if based on LangChain/Langgraph. It provides a comprehensive view of your application's behavior, enabling you to identify bottlenecks, optimize performance, and improve user experience. This tutorial guides you through setting up the observability SDK to track Copilot in LangSmith.</p>","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/#create-an-api-key","title":"Create an API Key","text":"<p>Go to the Langsmith Website and log in. If you don't have an account, create one.</p> <p>To create an API key, navigate to the LangSmith settings page. Then, click on Create API Key and follow the instructions.</p>","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/#set-up-your-environment","title":"Set Up Your Environment","text":"<p>Configure your <code>gradle.properties</code> file to include the following environment variables:</p> <pre><code>LANGCHAIN_TRACING_V2=true\nLANGCHAIN_ENDPOINT=\"https://api.smith.langchain.com\"\nLANGCHAIN_API_KEY=\"your-langsmith-api-key\"\nLANGCHAIN_PROJECT=\"your project name\"\n</code></pre> <ul> <li><code>LANGCHAIN_TRACING_V2</code>: Set to <code>true</code> to enable tracing.</li> <li><code>LANGCHAIN_ENDPOINT</code>: The endpoint for LangSmith.</li> <li><code>LANGCHAIN_API_KEY</code>: Your API key from LangSmith.</li> <li><code>LANGCHAIN_PROJECT</code>: The name of your project in LangSmith. The executions, called traces, and events will be stored under this name. If this project does not exist, it will be created automatically. For this article, the name will be <code>MyLangsmithProjectForCopilot</code>.</li> </ul> <p>Ensure you restart Copilot to set environment variables in the container.</p> Terminal\u00df<pre><code>./gradlew resources.up --info\n</code></pre>","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/#viewing-from-langsmith","title":"Viewing From LangSmith","text":"<ul> <li>Once in LangSmith, access to your organization's projects is available.     </li> <li>In Tracing Projects, the name set in the <code>LANGCHAIN_PROJECT</code> variable should appear. This is the project where all traces will be stored.     </li> <li>Selecting your project allows you to view the trace of queries made in Copilot and evaluate responses.     </li> </ul>","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/#usage-example","title":"Usage Example","text":"<ol> <li>Make a request to any Copilot agent.     </li> <li>Upon receiving a response, if you want to evaluate internal processes or investigate issues, view the trace in LangSmith.      </li> <li> <p>The most recent entry will be the last request made to the assistant. Access it to see detailed information:     </p> <ul> <li>On the left, view all checkpoints from user interaction to response.     </li> <li> <p>Access each endpoint, webhook, or tool to see how queries are formed.      </p> </li> <li> <p>For interactions with OpenAI, an option called Playground is available.     </p> </li> </ul> </li> </ol>","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/#using-the-playground","title":"Using the Playground","text":"<p>Accessing the Playground lets you experiment, test, and debug prompt chains and interactions with language models. This tool allows:</p> <ul> <li>Real-time task execution visualization.</li> <li>Model performance analysis.</li> <li> <p>Error and inefficiency detection for optimization and improvement of Copilot.     </p> </li> <li> <p>You can test different prompts or user interactions without returning to the assistant. For instance, if you want to see how an assistant responds with a prefix like \"ETHRT\":</p> </li> <li> <p>Find the user query section in the Playground and modify the prefix.</p> BEFORENOW <p></p> <p></p> </li> <li> <p>Select Start to rerun with the prefix.     </p> </li> <li> <p>Instantly, observe the trace executing with the prefix ETHRT. </p> </li> <li> <p>To run multiple interactions to test assistant consistency:</p> <ul> <li>Click the arrow next to Start.</li> <li>Deselect Enable streaming.</li> <li>Adjust the Repetitions to your desired count, such as three times.      </li> <li>Press Start again. The query will execute thrice.      This feature is crucial for testing various requests and modifying prompts to meet requirements.</li> </ul> </li> </ul>","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/#system-prompt-debugging","title":"System Prompt Debugging","text":"<p>The playground allows you to debug the prompt used in the agent. This is useful to improve the behavior of the agent in case of unexpected results. As we have seen above, in Langsmith you can see the execution of tools and other actions performed by the assistant, which are indicated by the LLM. That is, the decision or reasoning comes from the LLM and it is at these points that we can use it. </p> <p>When loading the playground we will see:</p> <ul> <li>The system prompt.</li> <li>And the sequence of messages, tool executions and answers up to that moment.</li> </ul> <p>When executing Start, what we do is to request to the LLM, its answer given that system prompt and that conversation. Where we will be able to receive an answer in text or the order to execute a tool with certain parameters.</p> <p>Then, if analyzing the execution trace, we find the point where the agent \u201cmade a mistake\u201d or \u201cdecided wrong\u201d, we can place ourselves at that point and adjust the prompt to improve the reasoning. Additionally, we can execute this request multiple times to make sure it has decided correctly because the prompt was improved and not by chance (the LLM is not deterministic in situations not clearly defined).</p>","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-debug-an-agent-prompt-with-langsmith/#example","title":"Example","text":"<p>In this example we will see how to improve the prompt of an agent that is not giving the expected answer. In this case we will use the agent Writer Agent, and the prompt is:</p> <p><pre><code>You task is to write notes.\nThe path must be ./[filename].txt\n</code></pre> The request is: <pre><code>Create a note that remind me \"call to my boss, tomorrow\"\n</code></pre></p> <p>Inspecting the trace, can see the LLM decision to execute the tool WriteFileTool with the parameters: <pre><code>filepath: ./reminder.txt\ncontent: call to my boss, tomorrow\noverride: false\n</code></pre> </p> <p>So, suppose we want to change the agent name the file to use SnakeCase, and the format of the note to be more formal and structured. We can open the playground and see the system prompt and change it to: <pre><code>You task is to write notes.\nthe path must be ./[filename].txt\n\n- The file name must be in snake_case.\n- The format of the note is: \nDATE: \nDESCRIPTION:\n</code></pre> </p> <p>So, to see if the change was effective, we can execute the request again and see the result. For better results, we can execute the request multiple times to see if the result is consistent.</p> <p>After executing the request, we can see that the file name is now in snake_case and the format of the note is more structured with the requirements we set in the prompt. </p> <p>If the result is not consistent, we can keep iterating on the prompt until we get the expected result.</p>","tags":["Copilot","LangSmith","SDK","Observability"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-execute-copilot-through-console/","title":"How to execute Copilot through the console","text":"","tags":["How to","Copilot","Console","Execute Copilot","Terminal"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-execute-copilot-through-console/#overview","title":"Overview","text":"<p>This article explains how to execute Copilot through the console. This is useful when you want to test a tool or assistant without using the Etendo Classic interface.</p>","tags":["How to","Copilot","Console","Execute Copilot","Terminal"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-execute-copilot-through-console/#prerequisites","title":"Prerequisites","text":"<ul> <li>Access to the Etendo Classic host.</li> </ul>","tags":["How to","Copilot","Console","Execute Copilot","Terminal"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-execute-copilot-through-console/#command","title":"Command","text":"<pre><code>./gradlew copilot.do -Phost='https://my.etendo.instance/etendo' -Papp_id=\"Module Creator\" -Pusername=my-user -Ppassword=my-password -Pquestion=\"Can you create a Module called 'Test Module? \"  --console=plain \n</code></pre>","tags":["How to","Copilot","Console","Execute Copilot","Terminal"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-execute-copilot-through-console/#parameters","title":"Parameters","text":"<ul> <li>-Phost: The URL of the Etendo Classic host. If not provided, the default host http://localhost:8080/etendo will be used.</li> <li>-Pusername: The Etendo Classic username, who will execute the command. This user must have the necessary permissions to execute the command.</li> <li>-Ppassword: The Etendo Classic password who will execute the command. </li> <li>-Prole: The role of the user who will execute the command. If not provided, the default role will be used.</li> <li>-Papp_id: The ID of the assistant to be executed. It can be the exact name of the assistant or the ID of the assistant.</li> <li> <p>-Pquestion: The question you want to ask the assistant.</p> </li> <li> <p>--console=plain: This parameter is used to avoid the Gradle console from showing the progress bar.</p> </li> </ul> <p>Warning</p> <ul> <li>The parameters <code>username</code> and <code>password</code> are mandatory.</li> <li>If not provided, the script will ask for them. This is to avoid storing sensitive information in the command history.</li> </ul>","tags":["How to","Copilot","Console","Execute Copilot","Terminal"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-export-tools-and-assistants/","title":"How to Export Tools and Assistants","text":"","tags":["How to","Export Assistant","Distribute Assistant","Copilot","Datasets","Export Tool","Distribute Tool"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-export-tools-and-assistants/#overview","title":"Overview","text":"<p>When developing in Etendo Copilot, it is possible to export assistants and tools. This documentation details how to export them and how to make sure that, when installing the module, the configurations are ready to use, allowing a plug and play process.</p>","tags":["How to","Export Assistant","Distribute Assistant","Copilot","Datasets","Export Tool","Distribute Tool"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-export-tools-and-assistants/#exporting-assistants","title":"Exporting Assistants","text":"<p>There are two main methods for exporting assistants: export it as a dataset where the configured assistant is exported within an Etendo Classic dataset or export as a System Administrator, where the assistant(s) defined with the System Administrator role are exported directly together with the module.</p>","tags":["How to","Export Assistant","Distribute Assistant","Copilot","Datasets","Export Tool","Distribute Tool"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-export-tools-and-assistants/#exporting-assistants-as-datasets","title":"Exporting Assistants as Datasets","text":"<p>Assistants must be exported as a dataset, in case optional installation is required and with <code>Client/Organization</code> data access level. </p> <ol> <li> <p>Initial setup of the assistant:</p> <ul> <li>Configure the assistant and tools in the environment where the development takes place.</li> <li>Make sure to include all the necessary fields to be exported. Make sure to configure correctly the Knowledge Base, Skills/Tools and Team Members tabs, as well as the records in the Knowledge Base File window.</li> </ul> <p> Assistant example with complete tabs. <ol> <li> <p>Create and Configure a Dataset:</p> <ul> <li>As System Administrator, go to the Dataset window and create a new record by selecting the module under development.</li> <li>Define the Search Key and Name of the dataset.</li> <li>Set the Data Access Level to System/Organization (recommended for user assistants).</li> </ul> </li> <li> <p>Add Tables to the Dataset</p> <p>For each window or tab to be exported, create a record in the Table tab. Specify the corresponding table and add the appropriate HQL/SQL Where clause.</p> <ul> <li>Assistant: Table <code>etcop_app</code> Where Clause<pre><code>id in ('&lt;AssistantID&gt;')\n</code></pre></li> <li>Knowledge Base: Table <code>etcop_app_source</code> Where Clause<pre><code>etcopApp.id in ('&lt;AssistantID&gt;')\n</code></pre></li> <li>Skills/Tools: Table <code>etcop_app_tool</code> Where Clause<pre><code>`copilotApp.id in ('&lt;AssistantID&gt;')\n</code></pre></li> <li>Team Members: Table <code>ETCOP_Team_Member</code> Where Clause<pre><code>copilotApp.id in ('&lt;AssistantID&gt;')\n</code></pre></li> <li>Knowledge Base File: Table <code>etcop_file</code> Where Clause<pre><code>id in ('&lt;knowladgeBaseFileID&gt;')\n</code></pre></li> </ul> <p> Dataset window configuration example in the module Copilot Purchase Expert </p> </li> <li> <p>Export Reference Data Button</p> <ul> <li>Execute the Export Reference Data process, which will create the <code>referencedata/</code> folder inside the selected module, with all the records that were exported according to the dataset configuration. </li> </ul> <p>Note</p> <p>Verify that all the required records are generated in the <code>.XML</code> file.</p> </li> <li> <p>Include Reference Data in the Module</p> <ul> <li>Check the Include Reference Data checkbox in the module definition and add a description to the dataset referring to the exported assistant.</li> </ul> <p> Configuration example in the module Copilot Purchase Expert </p> <ul> <li>When the module is installed, the dataset will be available for application in the Enterprise Module Management window.</li> </ul> <p> Distributed datasets example </p> </li> </ol>","tags":["How to","Export Assistant","Distribute Assistant","Copilot","Datasets","Export Tool","Distribute Tool"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-export-tools-and-assistants/#exporting-assistants-as-system-administrator","title":"Exporting Assistants as System Administrator","text":"<p>When exporting assistants that need to be pre-configured in a module installation, they must be created with the System Administrator role. These assistants will be editable only by the System Administrator, but they can be executed either by the <code>System Administrator</code> or by users with <code>Client/Organization</code> data access levels.</p> <ol> <li> <p>Create Assistant with System Administrator Role:</p> <ul> <li>Log in as System Administrator.</li> <li>Configure the assistant and its tabs, ensuring to select the module (under development) in the Module field.</li> <li>If the assistant should be restricted to System Administrator use only, check the System App checkbox. Otherwise, leave it unchecked to allow execution across all data access levels.</li> </ul> <p> Exported assistant example and available only as System Administrator </p> </li> <li> <p>Export the Database.</p> <ul> <li>Execute the command <code>./gradlew export.database</code> to export the assistant together with the module.</li> </ul> </li> </ol>","tags":["How to","Export Assistant","Distribute Assistant","Copilot","Datasets","Export Tool","Distribute Tool"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-export-tools-and-assistants/#exporting-tools","title":"Exporting Tools","text":"<p>Tool configuration: When defining a tool, select the module (under development) in the Module field, and run <code>./gradlew export.database</code> command to export the tool together with the module.</p> Tool configuration example <p>Info</p> <p>For more information, visit How to create a Copilot Tool.</p>","tags":["How to","Export Assistant","Distribute Assistant","Copilot","Datasets","Export Tool","Distribute Tool"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/","title":"Using Etendo Copilot Context Features","text":"","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#overview","title":"Overview","text":"<p>This guide explains how to use Etendo Copilot's context-aware features to enhance user interactions in Etendo Classic. It covers how Copilot captures window, record, and user context, and how to configure default prompts for personalized responses.</p>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#activating-copilot","title":"Activating Copilot","text":"<ol> <li>Open any window in the Etendo (e.g., Sales Order, Inventory).</li> <li>Locate the Copilot Button in the toolbar at the top of the window.</li> <li>Click the button to launch the Copilot interface.</li> <li>Ask a question or provide an instruction (e.g., \"What information can you give me about this window?\").</li> </ol> <p>Info</p> <p>The Copilot button is available across all Etendo windows, making it easy to access assistance wherever you are.</p> <p></p>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#understanding-context-in-copilot","title":"Understanding Context in Copilot","text":"<p>Copilot enhances its responses by automatically capturing context based on your actions in Etendo Classic. It supports three key context types:</p>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#1-active-window-context","title":"1. Active Window Context","text":"<p>Copilot identifies the currently active window, such as \"Purchase Order\" or \"Product List,\" and includes this information in its responses. For example:</p> <ul> <li>Action: Open the \"Sales Order\" window and activate Copilot.</li> <li>Question: \"What information can you give me about this window?\"</li> <li>Response: Copilot provides details related to the \"Sales Order\" window.</li> </ul>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#2-selected-record-context","title":"2. Selected Record Context","text":"<p>When you select a record in a list or grid, Copilot captures its details (e.g., ID, name, or other relevant fields) and uses this data to assist you. For example:</p> <ul> <li>Action: Select a product from the \"Product\" grid and activate Copilot.</li> <li>Question: \"What info can you give me about this record?\"</li> <li>Response: Copilot returns information specific to the selected product.</li> </ul>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#3-edited-record-context","title":"3. Edited Record Context","text":"<p>If you're editing a record in a form, Copilot detects the form\u2019s edit mode and captures the current input values, including unsaved changes. For example:</p> <ul> <li>Action: Edit a \"Business Partner\" record, change the name, and activate Copilot.</li> <li>Question: \"What info can you give me about this record?\"</li> <li>Response: Copilot includes the updated name and other form fieldwork.</li> </ul> <p>Tip</p> <p>Ensure the correct window or record is active before asking Copilot a question to get the most accurate response.</p>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#setting-a-default-prompt","title":"Setting a Default Prompt","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Preference</code></p> <p>You can customize Copilot by setting a default prompt that tailors its behavior to your needs. This is done in the Etendo Classic Preferences section.</p> <ol> <li>Navigate to the Preferences section in the Etendo Classic.</li> <li>Create a new preference for Copilot Default Context Prompt</li> <li>Enter a prompt using placeholders like <code>@ORG_NAME@</code> or <code>@USERNAME@</code>. For example:</li> </ol> Deafault Prompt<pre><code>You are working in the organization '@ORG_NAME@' (ID: @AD_ORG_ID@) under the client '@CLIENT_NAME@' (ID: @AD_CLIENT_ID@). You are logged in as @USERNAME@ (User ID: @AD_USER_ID@) with the role '@ROLE_NAME@' (Role ID: @AD_ROLE_ID@). The current warehouse in use is '@WAREHOUSE_NAME@' (Warehouse ID: @M_WAREHOUSE_ID@).\n</code></pre> <p>Available Placeholders</p> Placeholder Replace with value @AD_CLIENT_ID@ User client ID @CLIENT_NAME@ User client name @AD_ORG_ID@ Current organization ID selected @ORG_NAME@ Current organization name selected @AD_USER_ID@ Current user id @USERNAME@ Current username @AD_ROLE_ID@ Selected role ID @ROLE_NAME@ Selected role name @M_WAREHOUSE_ID@ Selected warehouse ID @WAREHOUSE_NAME@ Selected warehouse name <p>Info</p> <p>Your custom prompt persists across sessions, ensuring a consistent experience.</p>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#examples-of-use","title":"Examples of Use","text":"<p>Here are practical examples based on real-world scenarios:</p>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#1-checking-window-details","title":"1. Checking Window Details","text":"<ul> <li>Scenario: You\u2019re in the \"Purchase Order\" window.</li> <li>Steps: Click the Copilot button and ask, \"What information can you give me about this window?\"</li> <li>Result: Copilot describes the \"Purchase Order\" window\u2019s purpose and key fields.</li> </ul>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#2-analyzing-a-selected-record","title":"2. Analyzing a Selected Record","text":"<ul> <li>Scenario: You select a customer record in the \"Business Partner\" grid.</li> <li>Steps: Click the Copilot button and ask, \"What info can you give me about this record?\"</li> <li>Result: Copilot provides the customer\u2019s ID, name, and other details.</li> </ul>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#3-reviewing-an-edited-record","title":"3. Reviewing an Edited Record","text":"<ul> <li>Scenario: You\u2019re editing a product\u2019s price in a form.</li> <li>Steps: Click the Copilot button and ask, \"What info can you give me about this record?\"</li> <li>Result: Copilot reflects the new price and other edited fields.</li> </ul>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-context-features/#4-confirming-user-context","title":"4. Confirming User Context","text":"<ul> <li>Scenario: You want to verify your configured prompt.</li> <li>Steps: Click the Copilot button and ask, \"What is my context?\"</li> <li>Result: Copilot returns your organization, role, and other details from the default prompt.</li> </ul>","tags":["Context","Copilot"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-run-self-hosted-models-with-ollama/","title":"How to Run Self-Hosted Models with Ollama","text":"","tags":["How to","Model","Copilot","Ollama"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-run-self-hosted-models-with-ollama/#overview","title":"Overview","text":"<p>This article explains how to run and use self-hosted models with Ollama in Copilot. Copilot uses by default LLM models hosted from cloud providers. However, you can use your own models by hosting them on your own servers. This can be useful for privacy reasons or to use models that are not available in OpenAI. Ollama allows to run self-hosted models in a Docker container.</p>","tags":["How to","Model","Copilot","Ollama"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-run-self-hosted-models-with-ollama/#running-ollama-as-a-docker-container","title":"Running Ollama as a Docker Container.","text":"<p>Copilot includes a Docker Compose file that allows to run Ollama with the Docker module gradle tasks. To see more information about the Docker module, visit Docker Management documentation.</p> <p>To enable the compose file for Ollama, its necessary to add the following line in the <code>gradle.properties</code> file:</p> <p>gradle.properties<pre><code>docker_com.etendoerp.copilot.ollama=true\n</code></pre> After that, you can run the following command to start the Ollama container:</p> Terminal<pre><code>./gradlew resources.up --info\n</code></pre>","tags":["How to","Model","Copilot","Ollama"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-run-self-hosted-models-with-ollama/#installing-a-model","title":"Installing a Model","text":"<p>The models available in Ollama need to be installed in order to be used. This is done only once because the container configuration allows the models to be persisted, so restarting the container will not affect the availability of the models once installed.</p> <p>To install the models, it is necessary to enter the Ollama container and run the following command:</p> <p>Terminal<pre><code>docker exec -it etendo-ollama-1 bash\n</code></pre> This will open a shell inside the container. Once inside the container, you can install the model using the following command(for example, to install the model llama3.2:3b):</p> Docker Terminal<pre><code>ollama run llama3.2:3b\n</code></pre> <p>After the model is installed, you must create a record in the AI Model window in Copilot, with the following information:</p> <ul> <li>Provider: \"ollama\"</li> <li>Model: \"llama3.2:3b\"</li> </ul>","tags":["How to","Model","Copilot","Ollama"]},{"location":"developer-guide/etendo-copilot/how-to-guides/how-to-use-run-self-hosted-models-with-ollama/#using-the-model-in-copilot","title":"Using the Model in Copilot","text":"<ul> <li>Finally you can use the model in Copilot by selecting the record created in the model selector in the Assistant window.</li> </ul>","tags":["How to","Model","Copilot","Ollama"]},{"location":"developer-guide/etendo-mobile/getting-started/","title":"Developer Guide - Getting Started - Etendo Mobile","text":"","tags":["Etendo Mobile","React-Native","Subapp Development","Environment Setup","Infrastructure"]},{"location":"developer-guide/etendo-mobile/getting-started/#overview","title":"Overview","text":"<p>Etendo Mobile is a subapplication development platform that includes the possibility to log in to an Etendo Classic server and configure the available dynamic subapplications there according to role. </p> <p>A schematic of the infrastructure is shown here:</p> <p></p> <p>In this page we will first explain the step-by-step to install and configure for the first time sub-applications on a client and then what are the requirements to create a sub-application and the tools needed to develop a new sub-app.</p>","tags":["Etendo Mobile","React-Native","Subapp Development","Environment Setup","Infrastructure"]},{"location":"developer-guide/etendo-mobile/getting-started/#initial-setup","title":"Initial Setup","text":"","tags":["Etendo Mobile","React-Native","Subapp Development","Environment Setup","Infrastructure"]},{"location":"developer-guide/etendo-mobile/getting-started/#client-access-token","title":"Client Access Token","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Client</code> &gt; <code>Client</code></p> <p>It is necessary to configure the encryption token for authentication. This token is required for the mobile app to start a session.</p> <ol> <li>Access Etendo Classic as a <code>System Administrator</code>.</li> <li>Navigate to <code>Client</code> &gt; <code>Secure Web Service Configuration</code> tab.</li> <li>Click the Generate Key button to create a token. The expiration time is measured in minutes, if set to 0 the token does not expire. </li> </ol> <p>Info</p> <p>This token doesn\u2019t require any action; it just needs to be generated for the authentication process to work properly.</p>","tags":["Etendo Mobile","React-Native","Subapp Development","Environment Setup","Infrastructure"]},{"location":"developer-guide/etendo-mobile/getting-started/#install-distributed-sub-applications-in-etendo-classic","title":"Install Distributed Sub-applications in Etendo Classic","text":"<p>You can find the sub-applications distributed by Etendo, available for installation and their documentation in the Available Sub-apps to Install section.</p> <p>Info</p> <p>The bundles that include subapps are: </p> <ul> <li>Mobile Extensions Bundle</li> <li>Copilot Extensions Bundle.</li> </ul> <p>To install these bundles you can follow the following guide Install Modules in Etendo Classic</p>","tags":["Etendo Mobile","React-Native","Subapp Development","Environment Setup","Infrastructure"]},{"location":"developer-guide/etendo-mobile/getting-started/#development-setup","title":"Development Setup","text":"","tags":["Etendo Mobile","React-Native","Subapp Development","Environment Setup","Infrastructure"]},{"location":"developer-guide/etendo-mobile/getting-started/#requirements","title":"Requirements","text":"<ul> <li>Etendo Classic</li> <li>Etendo Mobile latest version available in PlayStore or Appstore.</li> <li>Platform Extensions Bundle.</li> <li>Docker: version <code>26.0.0</code> or higher.</li> <li>Docker Compose: version <code>2.26.0</code> or higher.</li> <li>Yarn version <code>1.22.0</code> or higher</li> <li>NodeJS version <code>16.20</code> or higher.</li> <li>Java JDK 17 </li> </ul> <p>Then continue with the Create New Subappliction tutorial.</p>","tags":["Etendo Mobile","React-Native","Subapp Development","Environment Setup","Infrastructure"]},{"location":"developer-guide/etendo-mobile/concepts/subapp-structure/","title":"Subapplications Structure in Etendo Mobile","text":"","tags":["Etendo Mobile","Subapplications Structure","React-Native","Language Management","Etendo UI Library"]},{"location":"developer-guide/etendo-mobile/concepts/subapp-structure/#overview","title":"Overview","text":"<p>This page provides a comprehensive guide to the structure of subapplications in Etendo Mobile. It explains key concepts such as the <code>App.tsx</code> file, which serves as the main entry point for subapplications, and details how parameters from Etendo Mobile are utilized for initialization. Additionally, the guide covers language management, navigation between screens using the navigation stack, and the use of the Etendo UI Library for consistent design and functionality across subapps. These elements form the foundation for developing dynamic and well-integrated subapplications within Etendo Mobile.</p>","tags":["Etendo Mobile","Subapplications Structure","React-Native","Language Management","Etendo UI Library"]},{"location":"developer-guide/etendo-mobile/concepts/subapp-structure/#app-file","title":"App File","text":"<p>In <code>App.tsx</code>, it is the main file located in the root of the subapplication. In this file, we will define the routes and the components that will be rendered in each route. In addition, this file is responsible for the initialization of the subapplication and gets the params from Etendo Mobile.</p>","tags":["Etendo Mobile","Subapplications Structure","React-Native","Language Management","Etendo UI Library"]},{"location":"developer-guide/etendo-mobile/concepts/subapp-structure/#params-from-etendo-mobile","title":"Params from Etendo Mobile","text":"<p>Etendo Mobile sends params to the subapplication and all of them are ready to use, they are:</p> <p>Params</p> <ul> <li>_ id: ID of the subapplication</li> <li>url: the environment URL(setted in setting's Etendo Mobile)</li> <li>_contextPathUrl:  the environment context path (setted in setting's Etendo Mobile)</li> <li>navigationContainer: an instance of the navigation container of Etendo Mobile</li> <li>token: Token</li> <li>language: Language</li> <li>dataUser: all data related to the user. It has a typed interface that can be found in the file <code>src/interfaces/index.ts</code></li> <li>isDev: boolean that identifies whether the application is configured in development (true) or production (false) mode.</li> <li>Camera: a component previously integrated into Etendo Mobile has now been seamlessly transferred to the subapps. This particular component includes a remarkable QR code scanning capability, enhancing the overall functionality of the subapps.</li> <li>sharedFiles: IFile array, if a file is shared to Etendo Mobile from an external application, sharing and selecting a sub-application will add the file to the file array of the corresponding sub-application.</li> </ul>","tags":["Etendo Mobile","Subapplications Structure","React-Native","Language Management","Etendo UI Library"]},{"location":"developer-guide/etendo-mobile/concepts/subapp-structure/#language","title":"Language","text":"<p>The language is a string that serves as a representation of the user's selected language. This language setting is configurable within the Etendo Mobile application's settings and plays a crucial role in determining the language in which texts are presented within the subapplication. In this example, we will use the language parameter received as input to initialize the remaining aspects of the application in the <code>App.tsx</code> file.</p> App.tsx<pre><code>  locale.init();\n  locale.setCurrentLanguage(locale.formatLanguageUnderscore(language));\n</code></pre> <p>Tip</p> <p>All subapps must be developed in English en-US and may include translations such as Spanish es-ES.  </p> <p>As you can see, we use <code>locale</code> to set the language of the subapplication. This <code>locale</code> is an instance of a custom handler of the language which is based in <code>i18n</code> and defined in the path <code>subapp/src/localization/locale.ts</code>.</p> locale.ts<pre><code>const locale: LocaleModule = {\n  currentDateLocale: null,\n\n  i18n,\n  init() {...}\n\n  t(key, params) {...}\n\n  setCurrentLanguage(input) {...}\n\n};\n\nexport default locale;\n</code></pre> <p>Info</p> <ul> <li>Translations folder: Translations are organized in the folder <code>subapp/src/lang</code></li> <li>JSON files by language: Each translation file corresponds to a language and locale, following a structure that includes the language code and region. E.g:</li> </ul> <pre><code>\u2514\u2500\u2500 subapp\n      \u2514\u2500\u2500 src\n        \u2514\u2500\u2500 lang\n            \u2514\u2500\u2500 enEN.json\n            \u2514\u2500\u2500 esES.json\n</code></pre> <p>Between the functions of the <code>locale</code> handler, some of the most important are:</p> <ul> <li> <p><code>t(key, params)</code>: this function receives a key (and other optional params) and returns the text translated to the language of the subapplication. This function is based on i18n and the keys are defined in <code>.json</code> files in <code>subapp/src/lang</code>. </p> </li> <li> <p><code>setCurrentLanguage(input)</code>: gets a language as a param and sets this language as default in the subapplication.</p> </li> </ul> <p>The translation definition files can group the information, for example, in the English translations file <code>/subapp/src/lang/enUS.json</code> we can group the messages or labels by screens, components or as it is optimal according to the development. For Example</p> enUS.json<pre><code>{\n  \"ScreenOne\": {\n    \"LabelOne\": \"Label 1 Example\",\n    \"LabelTwo\": \"Label 2 Example\",\n  },\n  \"ScreenTwo\": {\n    \"LabelOne\": \"Label 1 Example\",\n    \"LabelTwo\": \"Label 2 Example\",\n  },\n</code></pre> <p>Then to use it, use the <code>local.t</code> function, E.g:  <code>locale.t('ScreenOne.LabelOne')</code></p>","tags":["Etendo Mobile","Subapplications Structure","React-Native","Language Management","Etendo UI Library"]},{"location":"developer-guide/etendo-mobile/concepts/subapp-structure/#navigation-stack","title":"Navigation Stack","text":"<p>The navigation stack part of <code>App.tsx</code> that allows us to navigate between screens. It is a component provided by  <code>@react-navigation/stack</code> in a React Native application. Conceptually, a navigation stack manages the flow between different screens in the app, allowing users to navigate forward and backward between these screens.</p> <p>Key Concepts</p> <ol> <li> <p>Navigation Stack Initialization:     The <code>createStackNavigator()</code> function from <code>@react-navigation/stack</code> is used to create a navigation stack. This stack manages a sequence of screens, and each screen is treated as a \"route\" within the stack.</p> <pre><code>const Stack = createStackNavigator();\n</code></pre> </li> <li> <p>Screen Definitions: Each screen in the app is defined using the <code>Stack.Screen</code> component. The <code>name</code> prop specifies the unique identifier of the screen, and the component associated with the screen is defined within the children or passed as a function using render props (<code>{props =&gt; &lt;Component {...props} /&gt;}</code>).</p> <p>Example of screen definitions:</p> <pre><code>&lt;Stack.Screen\nname=\"Home\"\noptions={{ headerShown: false }}\ninitialParams={{ dataUser }}&gt;\n{props =&gt; &lt;Home {...props} navigationContainer={navigationContainer} /&gt;}\n&lt;/Stack.Screen&gt;   \n</code></pre> </li> <li> <p>Initial Route: The <code>initialRouteName</code> prop in <code>Stack.Navigator</code> specifies which screen will be loaded first when the app starts. In the following example case, the Home screen is defined as the initial route:</p> <pre><code>&lt;Stack.Navigator initialRouteName=\"Home\"&gt;\n</code></pre> </li> </ol>","tags":["Etendo Mobile","Subapplications Structure","React-Native","Language Management","Etendo UI Library"]},{"location":"developer-guide/etendo-mobile/concepts/subapp-structure/#etendo-ui-library","title":"Etendo UI Library","text":"<p>Etendo UI Library is a library of UI components following the style and design of Etendo, that should be used throughout the subapplication development. This library is based on React Native Elements and it is available on NPM - Etendo UI Library . You can use it in all of your subapplications. In this library, we can find components like:  Button, Input, Navbar, Cards, Icons, etc.</p> <p>Info</p> <p>For more information, visit Etendo UI Library - Storybook place where you can see all the components of the library. Also, you can see the code of each component and how to use it.</p> <p></p>","tags":["Etendo Mobile","Subapplications Structure","React-Native","Language Management","Etendo UI Library"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/","title":"Create New Subapplication","text":"","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#overview","title":"Overview","text":"<p>This tutorial provides a step-by-step guide to creating a new subapplication within Etendo Mobile. By following these instructions, you will learn how to fully utilize the capabilities of Etendo RX and leverage the visual components available in the Etendo UI Library to build a functional subapplication.</p> <p>The tutorial will guide you through the creation of the Product Subapp, a simple application that enables the addition, deletion, and modification of products, as well as their visualization in a grid. Upon completion, you will have the skills to create and distribute subapplications as modules, thereby extending the mobile functionality of Etendo.</p> <p>Info</p> <p>Before beginning, ensure that your local environment meets all necessary requirements by reviewing the Etendo Mobile Getting Started section.</p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#module-setup","title":"Module Setup","text":"","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#create-new-etendo-classic-module","title":"Create New Etendo Classic Module","text":"<p> <code>Application</code> &gt; <code>Application Dictionary</code> &gt; <code>Module</code></p> <ol> <li> <p>As a System Administrator role, open the Module window and create a new register. This module will be used to develop and distribute the application.</p> <p> Product Subapp module configuration example </p> <p>Tip</p> <ul> <li>Notice that the name can be anything you want, but the type has to be set as Module.</li> <li>The description field is free and also required.</li> <li>The Is Rx checkbox indicates that this module will include RX service configurations, the RX service Javapackage must be specified.</li> <li>The Is React checkbox indicates that this module includes a subapplication and React Native code is generated.</li> <li>In this case, start from <code>1.0.0</code> module version and set the DB Prefix as <code>ETSAPPP</code>.</li> </ul> </li> </ol>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#dynamic-app-configuration","title":"Dynamic App configuration","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Dynamic App</code></p> <p>Configure and export dynamic applications in Etendo Classic, which are displayed dynamically in Etendo Mobile.</p> <p>In the Dynamic App window, specify the subapplication path and version. </p> <p>For the example we are following, the Dynamic App in Etendo must be configured with the following form fields and corresponding values:</p> <p></p> <p>Fields to note:</p> <ul> <li>Module: The module that can export the window configuration. In our example case, set <code>Product SubApp</code>.</li> <li>Name: Name with the application will be shown. In our example case, set <code>Product Subapp</code></li> <li>Directory Location: The path where the compiled application bundle is located. In development, the path is empty <code>/</code>, but in production, the path is <code>/web/&lt;javapackage&gt;/</code>. In our example case, set <code>/</code></li> <li>Active: To select if this application is active or not. In our example case, set <code>true</code></li> </ul> <p>The Dynamic App Version tab allows the application to be versioned, enabling both development and production versions.</p> <p>Fields to note:</p> <ul> <li>Name: Name of the application version E.g. <code>dev</code> or <code>1.0.0</code>. In our example case, set <code>dev</code></li> <li>File Name: The bundle name of the compiled application, by default <code>dist.js</code>.</li> <li>Default: This check defines that this version is productive. In our example case, set <code>false</code></li> <li>Is Development: This check defines that this version is in development and can be deployed locally. In our example case, set in <code>true</code></li> <li>Active: To select if this application version is active or not. In our example case, set <code>true</code></li> </ul> <p>Info</p> <p>For more information visit the Dynamic App developer guide.</p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#role-configuration","title":"Role configuration","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Security</code> &gt; <code>Role</code></p> <p>Logged in as the Group Admin role (which is the default role for accessing Etendo Mobile), the settings are applied as specified below.</p> <p></p> <p>Important</p> <p>Keep this dynamic app as active.</p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#export-the-module","title":"Export the Module","text":"<ol> <li> <p>After saving all the configuration, you have to export the changes. Open a terminal in the root of your Etendo Classic project and execute the following command:</p> Terminal<pre><code>./gradlew export.database --info\n</code></pre> <p>Important</p> <p>The output must be a \"BUILD SUCCESSFUL\" message.</p> </li> <li> <p>A new module is created in the <code>/modules</code> folder, with the following structure</p> <pre><code>modules\n\u2514\u2500\u2500 com.etendoerp.subapp.product\n    \u2514\u2500\u2500 src-db \n</code></pre> </li> </ol>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#dockerized-services","title":"Dockerized Services","text":"<p>Before starting the dockerized services, there are some configurations that need to be done in Etendo Classic</p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#client-setup","title":"Client Setup","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Client</code> &gt; <code>Client</code></p> <p>It is necessary to configure the encryption token for the authentication in the  Client window with the System Administrator role. If the expiration time is equal to \"0\" the tokens do not expire.</p> <p>Generate a random key with the \"Generate key\" button.</p> <p></p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#rx-config-window","title":"RX Config window","text":"<p> <code>Application</code> &gt; <code>Etendo RX</code> &gt; <code>RX Config</code></p> <p>This configuration window stores the access data for Etendo RX services, which are crucial for the interaction between different services. In this case, some records need to be created. As <code>System Administrator</code> role, in this window, it is necessary to add the entries, one for each service to be used. The following fields should be included:</p> <ul> <li>Service Name: The name of each service.</li> <li>Service URL: The internal URL of the Docker service.</li> <li>Updatable Configs: Check this checkbox.</li> <li>Public URL: Configure the publicly accessible URL for the service.</li> </ul> <p>Info</p> <p>The Public URL field only needs to be configured when the sub-application is set to production.</p> <p>See the configuration examples bellow and replicate them. </p> <pre><code>application   \nauth        http://localhost:8094\nconfig      http://localhost:8888\ndas         http://localhost:8092  \nedge        http://localhost:8096\n</code></pre> <p>Also in the case of edge and auth services it is necessary to add the <code>das.url</code> Parameter Key with the Parameter Value <code>http://das:8092</code>.</p> <p></p> <p>Info</p> <p>If using Dockerized Tomcat, the URLs within the container's network are <code>http://auth:8094</code>, <code>http://config:8888</code>, <code>http://das:8092</code>  and <code>http://edge:8096</code>.</p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#execute-rx-services","title":"Execute RX services","text":"<p>Before proceeding, it is necessary to start the Etendo RX services. These services provide a security layer (Auth Service), a data access layer (Das Service), which are essential for consuming or writing data in Etendo and Edge Service . Additionally, by selecting the isReact checkbox in the previously defined module, React code will be automatically generated, allowing for easier data access.</p> <p>To launch all the services, it is necessary to define the following configuration variables in the <code>gradle.properties</code> file:</p> gradle.properties<pre><code>docker_com.etendoerp.etendorx=true\n</code></pre> <p>Info</p> <p>For more information about how to handle Etendo Dockerizations, visit Docker Management. </p> Tomcat and PostgresSQL Dockerized (Optional) <p>It is also possible to run the dockerized PostgreSQL service and Tomcat service, optionally adding the Platform Extensions Bundle and the following configuration variables:</p> gradle.properties<pre><code>docker_com.etendoerp.tomcat=true\ndocker_com.etendoerp.docker_db=true\n</code></pre> <p>Then, to effectively run the services, it is necessary to execute the command in the terminal: </p> Terminal<pre><code>./gradlew resources.up\n</code></pre> <p>Here, all the services and their respective logs can be seen running using Docker Desktop tool.</p> <p></p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#projections-and-search","title":"Projections and Search","text":"<p>This section covers the creation of projections, mappings, and searches, which enable the generation of a dynamic REST API in the RX DAS service. These configurations allow for reading, writing, and filtering data. Projections are applied to Etendo Classic tables, creating a subset of data that can be interacted with through the API.</p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#create-a-projection","title":"Create a Projection","text":"<p> <code>Application</code> &gt; <code>Etendo RX</code> &gt; <code>Projections and Mappings</code></p> <ol> <li> <p>As a <code>System Administrator</code> role, it is required to create a projection that reflect partial views of the Product class and contain only the necessary properties.</p> </li> <li> <p>To do this, we will go to the <code>Projections and Mappings</code> window and create a new projection, select the module under development <code>Product SubApplication - 1.0.0 - English (USA)</code>, where these configurations will be exported and in the name field we define <code>ProdSubApp</code>.</p> </li> <li> <p>Now, with the selected projection we add in the tab <code>Projected Entities</code> two projections, one for reading data, selecting the table <code>M_Product</code> and in the Mapping Type field we select <code>Etendo to external system</code> and another projection for writing data, selecting again the table <code>M_Product</code> and in the Mapping Type field <code>External system to Etendo</code>.  The other fields are auto-completed with respect to these values.</p> </li> </ol> Projection and Projected Entities configuration example","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#creating-entity-fields","title":"Creating Entity Fields","text":"<ol> <li> <p>Now, we define which fields we want to retrieve. To do this, we start by selecting the data reading projection <code>PRODSUBAPP - Product - Read</code> and run the <code>Create Projection Fields</code> process, in the pop-up we will select the fields to project. In our example case: </p> <ul> <li>active</li> <li>id</li> <li>name</li> <li>productCategory</li> <li>searchkey</li> <li>taxCategory</li> <li>UOM</li> <li>UPCEAN</li> </ul> <p>Note</p> <p>While not all of these fields will be displayed in the application, as record editing is allowed, we are also selecting all the mandatory fields to create a product.</p> <p> Create read projection fields process execution example </p> </li> <li> <p>Now we define which fields should be saved when creating or editing a record, in this case we select the write projection <code>PRODSUBAPP - Product - Write</code> and run the process <code>Create Projection Fields</code> selecting the same fields as for the read one</p> <ul> <li>active</li> <li>id</li> <li>name</li> <li>productCategory</li> <li>searchkey</li> <li>taxCategory</li> <li>UOM</li> <li>UPCEAN</li> </ul> <p>  Entity fields created example </p> </li> <li> <p>In the case of the <code>productCategory</code>, <code>taxCategory</code> and <code>UOM</code> fields in the application they will not be editable, but they must be autocompleted with a default value, for this we can use constant mappings. If new Products are created, these default values will be used.</p> <p>To do this, we go to the <code>application</code> &gt; <code>Etendo RX</code> &gt; <code>Constant Values</code> window and define constant IDs of default values. Here are some example IDs:</p> Name Default Value <code>ProductCategory</code> <code>DC7F246D248B4C54BFC5744D5C27704F</code> <code>taxCategory</code> <code>43A120C9377B4537B5D1976D9B1233D7</code> <code>uOM</code> <code>100</code> <p> Constant values definition example </p> </li> <li> <p>Finally selecting the <code>PRODSUBAPP - Product - Write</code> write projection, edit the <code>productCategory</code>, <code>taxCategory</code> and <code>UOM</code> records, modify the <code>Field Mapping</code> field to <code>Constant Mapping</code>, delete the <code>Jsonpath</code> and select the corresponding value in the <code>Constant Value</code> drop-down list, defined in the previous step.</p> <p> Entity field tab, constant values definition example </p> </li> </ol>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#create-a-search-in-projected-data","title":"Create a Search in Projected Data","text":"<p>Now, when reading data, it is possible to create filters, for this we have to associate these filters to a table and it is possible to export this filter in the module under development.  To do this, we open the <code>Tables and Columns</code> window, in our example select the <code>M_Product</code> table, go to the <code>Repository</code> tab and create a new record with the development module.  Then we create a new record in the <code>Search</code> tab</p> Repository Creation Example","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#create-a-new-search-and-search-parameter","title":"Create a New Search and Search Parameter","text":"<p>Next, we will define a search method to be used when we want to consume the products. To create this new filter/search method, in the Repository tab of the <code>M_Product</code> table, create a new record with the method name <code>getFilteredProducts</code> and the hql query filter. </p> <p><pre><code>SELECT e FROM Product e WHERE (e.active = true) AND (lower(e.name) LIKE lower('%' || :name || '%') OR lower(e.uPCEAN) LIKE lower('%' || :name || '%')) order by e.updated desc\n</code></pre> This query filters active products by name or bar code. </p> <p>As we can see in the query, it receives the<code>:name</code> parameter of String type that we define in the <code>Search Parameter</code> tab.</p> Search and Search Parameter creation example","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#restart-the-etendo-rx-service","title":"Restart the Etendo RX Service","text":"<p>Restart the Das RX service to recognize the projections and mappings.</p> Terminal<pre><code>./gradlew rx.das.restart\n</code></pre> <p>Info</p> <p>By accessing http://localhost:8092/swagger-ui/index.html, the RX DAS Service Swagger can be visualized. This interface allows for consultation of the endpoints generated based on the previously made configurations.</p> <p></p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#creating-the-subapplication","title":"Creating the Subapplication","text":"<ol> <li> <p>Now, create the subapplication based on a template published in NPM, Etendo Subapp Data Template Typescript . Execute the Gradle command to automatically create the subapplication within the module under development.</p> <p>Terminal<pre><code>./gradlew subapp.create -Ppkg=&lt;javapackage&gt; --info\n</code></pre> In the example we are working on, use the following command:</p> Terminal<pre><code>./gradlew subapp.create -Ppkg=com.etendoerp.subapp.product --info\n</code></pre> <p>A new subapplication will be created within the module, with the following structure:</p> <pre><code>modules\n\u2514\u2500\u2500 com.etendoerp.subapp.product\n  \u251c\u2500\u2500 src-db \n  \u2514\u2500\u2500 subapp\n      \u251c\u2500\u2500 .bundle\n      \u251c\u2500\u2500 _tests_\n      \u251c\u2500\u2500 android\n      \u251c\u2500\u2500 ios\n      \u251c\u2500\u2500 lib\n      \u251c\u2500\u2500 node_modules\n      \u2514\u2500\u2500 src\n      \u2514\u2500\u2500 App.tsx\n</code></pre> </li> </ol>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#product-subapp-example","title":"Product Subapp Example","text":"<p>This section covers an overview about the product subapplication example screens and principal parts of the subapplication.</p> <p>Consideration</p> <p>The applications must be developed for both platforms: phone and tablet. </p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#home-screen","title":"Home Screen","text":"<ul> <li>This is the main screen of the subapplication. It will show a list of products. Also, it will allow us to edit and remove a product, find a product by name and navigate to the detail of a product.</li> </ul> <p>Phone View</p> <p> </p> <p>Tablet View </p> <ul> <li>The route to this screen is <code>src/screens/home/index.tsx</code> and the content:</li> </ul> src/screens/home/index.tsx<pre><code>import React from 'react';\nimport TableList from '../../components/table/list';\nimport { NavigationProp } from '@react-navigation/native';\nimport { INavigationContainerProps } from '../../interfaces';\nimport locale from '../../localization/locale';\nimport useProduct from '../../lib/data_gen/useProduct';\nimport { Product } from '../../lib/data_gen/product.types';\n\ninterface TableListProps {\n  navigation: NavigationProp&lt;any&gt;;\n  route: any;\n  navigationContainer: INavigationContainerProps;\n}\n\nconst Home = (props: TableListProps) =&gt; {\n  const { getFilteredProducts, updateProduct } = useProduct();\n  return (\n    &lt;TableList\n      deleteDataItem={async (item: Product) =&gt; {\n        item.active = false;\n        await updateProduct(item);\n      }}\n      {...props}\n      columns={[\n        {\n          key: 'id',\n          primary: true,\n          visible: false,\n        },\n        {\n          key: 'name',\n          label: locale.t('Table.products'),\n          visible: true,\n          width: '50%',\n        },\n        {\n          key: 'uPCEAN',\n          label: locale.t('Table.barcode'),\n          visible: true,\n          width: '30%',\n        },\n      ]}\n      getData={getFilteredProducts}\n      labels={{\n        dataName: 'Product',\n        navbarTitle: locale.t('Home.welcome'),\n        containerTitle: locale.t('Home.productList'),\n        buttonNew: locale.t('Home.newProduct'),\n        searchPlaceholder: locale.t('Home.typeProduct'),\n        successfulDelete: locale.t('Success.deleteProduct'),\n        errorDelete: locale.t('Error.deleteProduct'),\n      }}\n    /&gt;\n  );\n};\n\nexport default Home;\n</code></pre>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#product-detail","title":"Product Detail","text":"<ul> <li>This screen will show the detail of a product. Also, it will allow us to edit the product.</li> <li>It is the same screen used to create a new product, if the prop does not have ID.</li> <li>The route to this screen is <code>src/screens/productDetail/index.tsx</code>,  add the content:</li> </ul> src/screens/productDetail/index.tsx<pre><code>import React, { useState } from 'react';\nimport TableDetail from '../../components/table/detail';\nimport { NavigationProp } from '@react-navigation/native';\nimport locale from '../../localization/locale';\nimport useProduct from '../../lib/data_gen/useProduct';\n\ninterface TableDetailProps {\n  navigation: NavigationProp&lt;any&gt;;\n  route: any;\n}\n\nconst ProductDetail = (props: TableDetailProps) =&gt; {\n  const { createProduct, updateProduct } = useProduct();\n  const [id, setId] = useState&lt;string&gt;('');\n  const [searchKey, setSearchKey] = useState&lt;string&gt;('');\n  const [name, setName] = useState&lt;string&gt;('');\n  const [uPCEAN, setUPCEAN] = useState&lt;string&gt;('');\n  return (\n    &lt;TableDetail\n      {...props}\n      createData={async () =&gt; {\n        await createProduct({ searchKey, name, uPCEAN });\n      }}\n      updateData={async () =&gt; {\n        await updateProduct({ id, searchKey, name, uPCEAN });\n      }}\n      fields={[\n        {\n          key: 'id',\n          visible: false,\n          setValue: setId,\n          getValue: id,\n          labels: {\n            title: '',\n            placeholder: '',\n          },\n        },\n        {\n          key: 'searchKey',\n          setValue: setSearchKey,\n          getValue: searchKey,\n          labels: {\n            title: locale.t('ProductDetail.searchKey'),\n            placeholder: locale.t('ProductDetail.searchKeyExample'),\n          },\n        },\n        {\n          key: 'name',\n          setValue: setName,\n          getValue: name,\n          labels: {\n            title: locale.t('ProductDetail.products'),\n            placeholder: locale.t('ProductDetail.nameExample'),\n          },\n        },\n        {\n          key: 'barcode',\n          setValue: setUPCEAN,\n          getValue: uPCEAN,\n          labels: {\n            title: locale.t('ProductDetail.barcode'),\n            placeholder: locale.t('ProductDetail.barcodePlaceholder'),\n          },\n        },\n      ]}\n      labels={{\n        editTitle: locale.t('ProductDetail.editProduct'),\n        newTitle: locale.t('ProductDetail.newProduct'),\n        errorTitle: locale.t('Error.product'),\n        successUpdateTitle: locale.t('Success.updateProduct'),\n        successCreateTitle: locale.t('Success.saveProduct'),\n        connectionError: locale.t('Error.connection'),\n        navbarTitle: locale.t('Home.welcome'),\n        cancel: locale.t('Common.cancel'),\n        save: locale.t('Common.save'),\n        successTitle: id\n          ? locale.t('Success.updateProduct')\n          : locale.t('Success.createProduct'),\n      }}\n    /&gt;\n  );\n};\n\nexport default ProductDetail;\n</code></pre>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#navigation","title":"Navigation","text":"<p>In addition, it is necessary to add the navigation configuration in the <code>app.tsx</code> file, in the return statement. This configuration provides the infrastructure to navigate between the different screens of the application.</p> App.tsx<pre><code>&lt;Stack.Navigator initialRouteName=\"Home\"&gt;\n      &lt;Stack.Screen\n        options={{ headerShown: false }}\n        name=\"Home\"\n        initialParams={{ dataUser }}&gt;\n        {props =&gt; &lt;Home {...props} navigationContainer={navigationContainer} /&gt;}\n      &lt;/Stack.Screen&gt;\n      &lt;Stack.Screen\n        options={{ headerShown: false }}\n        name=\"ProductDetail\"\n        initialParams={{ dataUser }}&gt;\n        {props =&gt; &lt;ProductDetail {...props} /&gt;}\n      &lt;/Stack.Screen&gt;\n&lt;/Stack.Navigator&gt;\n</code></pre> <p>Info</p> <p>For more information, visit Navigation Stack concept in Subapplication Structure Page.</p> <p>Info</p> <p>For more information about the language management and translations, visit Languague concept.</p> <p>Info</p> <p>For more information about Subapplication Params, visit Params from Etendo Mobile concept.</p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#running-the-sub-application","title":"Running the Sub-application","text":"<ol> <li> <p>Once the subapplication is created, the react-native code must be generated, with types and functions that interact with the RX DAS Service, for this we execute the command Gradle : </p> <p>Info</p> <p>Make sure that the Etendo RX services are running and without errors before executing this command.</p> Terminal<pre><code>./gradlew subapp.build -Ppkg=&lt;javapackage&gt; \n</code></pre> <p>In our example case  Terminal<pre><code>./gradlew subapp.build -Ppkg=com.etendoerp.subapp.product --info\n</code></pre> As we can see, it will be generated in the <code>/subapp/src/libs/</code> folder the functions and types that will be used for reading and writing <code>GET</code> and <code>POST</code> data.</p> <pre><code>modules\n\u2514\u2500\u2500 com.etendoerp.subapp.product\n  \u251c\u2500\u2500 src-db \n  \u2514\u2500\u2500 subapp\n      \u2514\u2500\u2500 src\n        \u2514\u2500\u2500 lib\n            \u2514\u2500\u2500 base\n                \u2514\u2500\u2500 baseservice.ts\n                \u2514\u2500\u2500 baseservice.types.ts\n            \u2514\u2500\u2500 data_gen\n                \u2514\u2500\u2500 product.types.ts\n                \u2514\u2500\u2500 productservice.ts\n                \u2514\u2500\u2500 useProduct.ts      \n</code></pre> </li> <li> <p>In a terminal on path <code>modules/&lt;javapackage&gt;/subapp</code>, install the depedencies declared in the <code>package.json</code>,  following the command: </p> Terminal<pre><code>yarn install \n</code></pre> </li> <li> <p>Then, to run the subapplication in development mode execute: </p> Terminal<pre><code>yarn dev \n</code></pre> <p>Note</p> <p>By default, the application run in development mode on <code>localhost</code> at port <code>3000</code>. Additionally, changes in the <code>/src</code> directory are automatically scanned, enabling dynamic updates to the application during development. This ensures that any modifications are reflected in real-time without restarting the application.</p> </li> </ol>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#visualizing-the-subapplications","title":"Visualizing the subapplications","text":"<ol> <li> <p>Open the Etendo Mobile application on a mobile device. You can use either an emulator or a physical device.</p> </li> <li> <p>In Etendo Mobile setting up the Edge service URL (Edge is an Etendo RX service, which implements a Spring cloud-driven gateway), by default the environment URL should be <code>http://&lt;local-network-ip&gt;:8096/</code> and the context path by default <code>/etendo</code>.</p> <p>Info</p> <p>To find out your IP address on the local network, you can run the command <code>ifconfig</code> in a Mac or Linux terminal or <code>ipconfig</code> in Windows CMD.</p> <p></p> </li> <li> <p>Login Etendo Mobile and you will see the list of subapps. Clicking on <code>Product Subapp</code> will access to development mode app.     </p> </li> <li> <p>Now you can view, filter, create, edit and delete products.</p> </li> </ol>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#receiving-shared-files-from-etendo-mobile","title":"Receiving Shared Files from Etendo Mobile","text":"<p>In this section, we will explain how to receive external files from another application into Etendo Mobile using as example the sub-application Documents Manager Subapp.</p> <p>Important</p> <p>Ensure that the Receive External Files checkbox is set to <code>true</code> in the Dynamic App window. This is crucial for the subapplication to appear as an option when sharing external files. </p> <p>The <code>sharedFiles</code> parameter is passed to the subapplication and used to process the received files.</p> <p>Info</p> <p>For more information, visit the Documents Manager Subapp repository. There you will find an example su-application, and the explanation of how to implement the file sharing functionality in your own app. </p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-mobile/tutorials/create-new-subapplication/#debug-log","title":"Debug Log","text":"<p>This section explains how to log data in a sub-application using the <code>logger</code> utility function. To log any information, call the <code>logger</code> function with a key and a value:</p> <pre><code>logger('key', value );\n</code></pre> <p>Importing the Logger Function  To use the logger in any file, import it as follows:</p> <pre><code>import logger from '../../utils/log'; // The path to the file is relative \n</code></pre> <p>Automatic String Conversion</p> <p>Objects passed to the <code>logger</code> function will be automatically converted to strings using the <code>JSON.stringify</code> function. This ensures compatibility with the logging mechanism.</p> <p>Example Usage Below is an example of how to use the logger function, including handling errors:</p> <p><pre><code>try {\n  // Your code here\n} catch (err) {\n  logger('Handle Error', err));\n  showAlert(labels.connectionError, 'error');\n}\n</code></pre> In this example:</p> <ul> <li>The error object <code>err</code> is automatically converted to a <code>String</code> using <code>JSON.stringify</code> and logged.</li> <li>An alert is shown using <code>showAlert</code> component to inform the user of a connection error.</li> </ul> <p>By integrating this logging utility, developers can track application behavior and debug more effectively.</p>","tags":["Etendo Mobile","Etendo RX","Dynamic App Configuration","Subapp","Create Sub-application"]},{"location":"developer-guide/etendo-rx/getting-started/","title":"Developer Guide - Etendo RX - Getting Started","text":""},{"location":"developer-guide/etendo-rx/getting-started/#overview","title":"Overview","text":"<p>This guide will help you set up Etendo, including both the Etendo Classic functionalities and Etendo RX, our reactive platform capable of executing microservices with database interaction and asynchronous actions.</p>"},{"location":"developer-guide/etendo-rx/getting-started/#requirements","title":"Requirements","text":"<ol> <li>Install Etendo Classic. For this, follow the Etendo Classic installation guide.</li> <li>Install the Platform Extensions Bundle.</li> <li>This project depends on the following tools:<ul> <li>Docker: version <code>26.0.0</code> or higher.</li> <li>Docker Compose: version <code>2.26.0</code> or higher.</li> </ul> </li> </ol>"},{"location":"developer-guide/etendo-rx/getting-started/#dockerized-services","title":"Dockerized Services","text":"<p>In the platform bundle, you can find the Dockerized Services module, which provides the necessary architecture to distribute infrastructure. In this case, in this bundle, the module Etendo RX is also included and, to launch the Services distributed in it, a certain configuration is needed. In the <code>gradle.properties</code> file, add the following variable:</p> gradle.properties<pre><code>docker_com.etendoerp.etendorx=true\n</code></pre> <p>Info</p> <p>For more information about how to handle Etendo Dockerizations, visit Docker Management. </p> Tomcat and PostgresSQL Dockerized (Optional) <p>It is also possible to run the dockerized PostgreSQL service and Tomcat service, optionally adding the Platform Extensions Bundle and the following configuration variables:</p> gradle.properties<pre><code>docker_com.etendoerp.tomcat=true\ndocker_com.etendoerp.docker_db=true\n</code></pre> <p>If you want to debug Tomcat locally with IntelliJ, visit Tomcat Dockerized Service.</p>"},{"location":"developer-guide/etendo-rx/getting-started/#etendo-rx-configurations","title":"Etendo RX Configurations","text":"<p>Before starting the dockerized services, there are some configurations that need to be done in Etendo Classic</p>"},{"location":"developer-guide/etendo-rx/getting-started/#client-setup","title":"Client Setup","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Client</code> &gt; <code>Client</code></p> <p>It is necessary to configure the encryption token for the authentication in the <code>Client</code> window with the <code>System Administrator</code> role. If the expiration time is equal to <code>0</code> the tokens do not expire.</p> <p>Generate a random key with the Generate key button.</p> <p></p>"},{"location":"developer-guide/etendo-rx/getting-started/#rx-config-window","title":"RX Config window","text":"<p> <code>Application</code> &gt; <code>Etendo RX</code> &gt; <code>RX Config</code></p> <p>This configuration window stores the access data for Etendo RX services, which are crucial for the interaction between different services. As <code>System Administrator</code> role, in this window, run the <code>Initialize RX Services</code> process in the toolbar. </p> <p></p> <p>After the execution of this process the default configuration variables are completed, depending on the configuration of the instance and the infrastructure, even the default parameters required by each service are configured.</p> <p></p> <p>Info</p> <p>The Public URL field only needs to be configured when the services is set to production.</p>"},{"location":"developer-guide/etendo-rx/getting-started/#launch-rx-services","title":"Launch RX services","text":"<p>Then, to effectively run the services, it is necessary to execute the command in the terminal: </p> Terminal<pre><code>./gradlew resources.up\n</code></pre> <p>Here, all the services and their respective logs can be seen running using lazydocker or Docker Desktop for a simple and fast container management. </p> <p></p> <p>By default, the following services should be up and running:</p> <ul> <li>Config</li> <li>Auth</li> <li>Edge</li> <li>Das</li> </ul> <p>Success</p> <p>You have successfully set up the Etendo RX services. For more information, visit Projections and Mappings and Creating a New Microservice page in the developer guide section.</p>"},{"location":"developer-guide/etendo-rx/concepts/config-server/","title":"Config Server","text":""},{"location":"developer-guide/etendo-rx/concepts/config-server/#etendo-rx-config-server","title":"Etendo RX Config Server","text":"<p>The Etendo RX Config Server is a crucial component in a distributed system, providing both server-side and client-side support for managing externalized configurations. This centralized solution allows for efficient and consistent management of application properties across various environments, from development to production. Seamlessly integrating with the Spring Environment and PropertySource abstractions, the Config Server is not only compatible with RX applications but also adaptable to a wide range of applications in different programming languages. This flexibility ensures that as applications progress through deployment stages, they consistently receive the necessary configurations to function optimally.</p> <p>Info</p> <p>For detailed guidance on advanced usage, visit the Spring Cloud Config Documentation.</p>"},{"location":"developer-guide/etendo-rx/concepts/config-server/#default-configuration","title":"Default configuration","text":"<p>The Config Server, by default, sources its configuration from the <code>./src-rc/rxconfig</code> directory. For those utilizing Etendo via source code, the configurations are located in the <code>./rxconfig</code> directory. To set up the basic configuration, run the command <code>./gradlew setup</code>. This will create the following files in the specified directory:</p> <ul> <li><code>application.yaml</code></li> <li><code>das.yaml</code></li> <li><code>auth.yaml</code></li> <li><code>edge.yaml</code></li> </ul> <p>Each of these YAML files is structured to include the necessary properties for various applications.</p>"},{"location":"developer-guide/etendo-rx/concepts/config-server/#yaml-structure","title":"YAML structure","text":"<p>YAML files are used to define properties required by different applications in a simple, readable format. The syntax of YAML is based on key-value pairs, where indentation (spaces, not tabs) is used to show hierarchy. Here's an example:</p> YAML example<pre><code>classic:\n  url: http://localhost:8080/etendo\n\ndas:\n  url: http://localhost:8092\n  label: Example text\n</code></pre> <p>In this example, properties like <code>classic.url</code>, <code>das.url</code>, and <code>das.label</code> are defined. Applications will refer to these properties using their respective keys.</p>"},{"location":"developer-guide/etendo-rx/concepts/config-server/#properties-access","title":"Properties access","text":"<p>Applications within Etendo RX, such as das, auth, edge, etc., each have a dedicated YAML file for their specific configurations. The application.yaml file is reserved for configurations that are shared across all services. For instance, by setting <code>das.url</code> in <code>application.yaml</code>, all applications can access this data. Properties defined in a service-specific file are exclusive to that service.</p>"},{"location":"developer-guide/etendo-rx/concepts/config-server/#running-config-service","title":"Running config service","text":"<p>To launch the Config Service, execute the command <code>./gradlew rx:rx</code> (or <code>./gradlew rx</code> for source code installations). This action enables each service to access its configuration. For example, accessing <code>http://localhost:8888/das/default</code> yields a JSON response like the following:</p> <p>For example, if you access <code>http://localhost:8888/das/default</code> You will have something similar to:</p> Query response<pre><code>{\n   \"name\":\"das\",\n   \"profiles\":[\n      \"default\"\n   ],\n   \"label\":null,\n   \"version\":null,\n   \"state\":null,\n   \"propertySources\":[\n      {\n         \"name\":\"file:&lt;...&gt;/rxconfig/das.yaml\",\n         \"source\":{\n            \"server.port\":8092,\n            \"spring.datasource.url\":\"jdbc:postgresql://localhost:5432/etendo\",\n            \"spring.datasource.username\":\"tad\",\n            \"spring.datasource.password\":\"tad\",\n            \"spring.jackson.serialization.FAIL_ON_EMPTY_BEANS\":false,\n         }\n      },\n      {\n         \"name\":\"file:/&lt;...&gt;/rxconfig/application.yaml\",\n         \"source\":{\n            \"classic.url\":\"http://localhost:8080/etendo\",\n            \"das.url\":\"http://localhost:8092\",\n            \"management.endpoints.web.exposure.include\":\"*\",\n            \"spring.output.ansi.enabled\":\"ALWAYS\",\n            \"public-key\":\"&lt;...&gt;\"\n         }\n      }\n   ]\n}\n</code></pre> <p>This response indicates the configuration for the das service. The propertySources key lists the properties in priority order; if a property is defined in multiple files, the first definition is used.</p>"},{"location":"developer-guide/etendo-rx/concepts/config-server/#how-to-config-a-property","title":"How to config a property","text":"<p>To modify a property, locate and edit the corresponding service configuration file. The Config Server dynamically updates to reflect the latest file content. However, client services load configurations at startup. Therefore, to apply new configurations, stop the running service using the rx command and then restart it.</p>"},{"location":"developer-guide/etendo-rx/concepts/edge-server/","title":"Edge Server","text":""},{"location":"developer-guide/etendo-rx/concepts/edge-server/#overview-of-etendo-rx-edge-service","title":"Overview of Etendo RX Edge Service","text":"<p>The Etendo RX Edge Service is designed to simplify API routing and provide essential services like security, monitoring, metrics, and resilience. It is a versatile tool that integrates seamlessly into your API infrastructure.</p>"},{"location":"developer-guide/etendo-rx/concepts/edge-server/#key-features","title":"Key Features","text":"<ul> <li>Spring Framework Base: Utilizes the robustness of Spring Framework and Spring Boot.</li> <li>Flexible Route Matching: Capable of matching routes based on various request attributes.</li> <li>Customizable Predicates and Filters: Offers the ability to tailor predicates and filters for specific routes.</li> <li>User-Friendly Configuration: Predicates and filters are straightforward to configure.</li> <li>Path Rewriting Capability: Allows for the modification of request paths as needed.</li> </ul> <p>Info</p> <p>For more advanced configurations and features, visit the Spring Cloud Gateway Documentation.</p>"},{"location":"developer-guide/etendo-rx/concepts/edge-server/#operational-dynamics","title":"Operational Dynamics","text":"<p>The Edge Service functions as a gateway, handling client requests. When a request is made to the Edge Server Gateway, the Gateway Handler Mapping assesses whether the request corresponds to an established route. If it does, the Gateway Web Handler processes the request, applying a set of route-specific filters.</p>"},{"location":"developer-guide/etendo-rx/concepts/edge-server/#running-the-service","title":"Running the Service","text":"<p>To launch the Edge Service, execute <code>./gradlew rx:rx</code> (or <code>./gradlew :rx</code> for installations from the source code). The service can be accessed at its default URL: <code>http://localhost:8096</code>.</p>"},{"location":"developer-guide/etendo-rx/concepts/edge-server/#configuration-guidelines","title":"Configuration Guidelines","text":"<p>Configuration adjustments can be made in the <code>edge.yaml</code> file. For further information on configuration settings, please refer to the Config Server Documentation in the rxconfig directory.</p> <p>The following is a basic overview of the default edge configuration:</p> edge.yaml<pre><code># Global settings\netendorx:\n  auth:\n    url: http://localhost:8094\nclassic:\n  url: http://localhost:8080\nsubapp:\n  url: http://localhost:3000\n\n# Spring Cloud Gateway routing configurations\nspring:\n  cloud:\n    gateway:\n      routes:\n        # Login Authentication Route\n        - id: login_auth_route\n          uri: ${etendorx.auth.url}\n          predicates:\n            - Method=GET,POST\n            - Path=/login\n          filters:\n            - RewritePath=/login, /api/authenticate\n\n        # Classic Application Path Route\n        - id: classic_path_route\n          uri: ${classic.url}\n          predicates:\n            - Method=GET, POST, DELETE, HEAD, PATCH\n            - Path=/etendo/**\n          filters:\n            - RewritePath=/etendo/(?&lt;segment&gt;.*), /etendo/$\\{segment}\n            - RemoveResponseHeader=Location\n\n        # DAS Path Route\n        - id: das_path_route\n          uri: ${das.url}\n          predicates:\n            - Method=GET, POST, DELETE, HEAD, PATCH\n            - Path=/das/**\n          filters:\n            - RewritePath=/das/(?&lt;segment&gt;.*), /$\\{segment}\n</code></pre>"},{"location":"developer-guide/etendo-rx/concepts/edge-server/#understanding-the-configuration","title":"Understanding the Configuration","text":"<ol> <li>Global Variables: Define URLs for different services like authentication, classic app, and sub-applications.</li> <li>Routing Configurations:</li> <li>Login Authentication Route: Routes <code>/login</code> requests to the authentication service.</li> <li>Classic Application Path Route: Handles various HTTP methods for paths starting with <code>/etendo/</code>.</li> <li>DAS Path Route: Manages requests to the DAS service with paths starting with <code>/das/</code>.</li> </ol>"},{"location":"developer-guide/etendo-rx/concepts/edge-server/#adding-custom-services","title":"Adding Custom Services","text":"<p>To integrate a new service, add a routing configuration in <code>spring.cloud.gateway.routes</code>. Follow the existing structure:</p> YAML example<pre><code># Example of adding a custom service route\n- id: &lt;&lt;custom_service_identifier&gt;&gt;\n  uri: &lt;&lt;Internal_url_accessible_by_edge_service&gt;&gt;\n  predicates:\n    - Method=&lt;&lt;HTTP_Methods&gt;&gt;\n    - Path=&lt;&lt;Matching_Path&gt;&gt;\n  filters:\n    - RewritePath=/&lt;&lt;path_segment_to_remove&gt;&gt;/(?&lt;segment&gt;.*), /$\\{segment}\n</code></pre>"},{"location":"developer-guide/etendo-rx/concepts/projections/","title":"Projections and Mappings","text":"","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#overview","title":"Overview","text":"<p>When using Spring Data JPA to implement the persistence layer, the repository typically returns one or more instances of the root class. However, more often than not, we do not need all the properties of the returned objects.</p> <p>In such cases, we might want to retrieve data as objects of customized types. These types reflect partial views of the root class, containing only the necessary properties. This is where projections are useful.</p>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#projections-and-mappings-window","title":"Projections and Mappings Window","text":"<p> <code>Application</code> &gt; <code>Etendo RX</code> &gt; <code>Projections and Mappings</code></p> <p>A projection is a set of specific fields from an entity or combined fields from multiple entities. Projections are useful when we need to retrieve only a subset of data, as it reduces the amount of data we need to retrieve from the database, leading to improved performance.</p> <p>This window allows the creation of data reading and writing endpoints in Etendo, using the DAS service. This service, based on this window configurations, dinamically generates the endpoints when launched.</p> <p>To create a new projection in Etendo, it is necessary to complete the fields in the header of the Projections and Mappings window.</p> <p></p> <ul> <li>Organization: Organizational entity within client.</li> <li>Name: It describes the name of the projection. The maximum amount of characters for this field is 10.</li> <li>Module: It indicates the module the element forms part of. This is the module in which the configuration is exported.</li> <li>Description: Description of the projection.</li> <li>Active: A check to indicate whether this projection is available or disabled.</li> </ul>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#projected-entities-tab","title":"Projected Entities Tab","text":"<p>In this tab, the entities to be projected can be defined. They can have two types of projections: Read and Write. This means that, when interacting with an external system, it is possible to read the information in the Etendo Classic database to expose it to the other system. The other option is to write information into the Etendo Classic database, that is, to extract external system information to use it in Etendo.</p> <p>When referring to an entity to project, this entity is related to a specific table.</p> <p>Warning</p> <p>Remember,  it is always necessary to create both records, a write type one and read type one, so the generated endpoints work properly.</p> <p></p> <p>Fields to note:</p> <ul> <li>Organization: The corresponding organization of the entity</li> <li>Name: This field is autocompleted according to the options selected in the Table and Mapping Type fields, adding Read or Write accordingly.</li> <li>Table: It is the identifier that connects the Etendo entity to project with the database table, responsible to store the entity information.</li> <li>Mapping Type: In this case, there are two options: Etendo to external system and External system to Etendo. In the case of the Read type, the option to select is Etendo to external system. In the case of the Write type, the option to select is External system to Etendo.</li> <li> <p>Is Rest Endpoint: Checkbox to allow the service to generate the endpoint or not.</p> <p>Info</p> <p>This box should not be checked, for example, when it is not necessary to expose a subentity endpoint.</p> <ul> <li>External_Name: parameter to call the API. It must be unique but it is possible to have more than one name for each entity. By default, it is autogenerated with the entity name, but in case of generating more than one, they should have different names.</li> <li>Active: A check to indicate whether this record is available or not.</li> </ul> </li> </ul>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#create-projection-fields-button","title":"Create Projection Fields Button","text":"<p>With this button, a pop up window is shown where you can find a list of all the fields to project and select the necessary ones. This process does not include List and Identity type projections.</p> <p></p> <p>Info</p> <p>The mandatory fields to project can be filtered with the Is mandatory column.</p>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#entity-field-subtab","title":"Entity Field Subtab","text":"<p>In this subtab, each entity field to be included in the projection can be defined by the developer.</p> <p></p> Read TypeWrite Type <p>Fields to note:</p> <ul> <li>Module: It indicates the module the element forms part of. This is the module in which the configuration is exported.</li> <li>Organization: The corresponding organization of the entity</li> <li>Property: This field has 3 types of options:<ul> <li><code>_identifier</code>: This option allows projecting the field/s defined as identifier in the Tables and Columns window. This option always projects a string.</li> <li>Standard: In this case, it is possible to select all the standard fields from the projected entity. Ex: string, number, date types, etc. Also, it is possible to navigate through the different entities. Ex: product.name, businessPartner.name, etc</li> <li><code>*List</code>: The properties that finish in \"List\", allow projecting a list of related entities. These lists are autogenerated from the columns with the Link to Parent Column checkbox selected. Ex: the property <code>OrderLineList</code> of the Order entity is generated since the <code>C_Order_ID</code> column from the <code>C_OrderLine</code> table is related with <code>C_Order</code> table.</li> </ul> </li> <li>Name: Output JSON Key. It must be unique but it is possible to have more than one name for each property. By default, it is autogenerated with the property name, but in case of generating more than one, they should have different names.</li> <li>Identifies Record Univocally: Checkbox to use this record as an identifier. If no field has this check selected, the database ID of the table will be used.</li> </ul> <p>Mapping Configuration</p> <ul> <li>Field Mapping: </li> <li>Direct Mapping: each property is shown as it is.</li> <li>Java Mapping: It is a customizable mapping and can be configured through the Java Mappings window. If this option is chosen, it allows you to define more complex mappings or implement a specific logic The result of the mapping will be Json type. </li> <li>Entity Mapping: this option is used when it is necessary to relate two different projections. In this case, the Related Projection Entity field is enabled to select the projected entity. In case of projecting a list of elements, the selected entity is assigned to each item of the list.</li> <li>Constant Mapping: If you choose this option, the constant value defined in the corresponding field is projected.</li> <li>Related Projection Entity: Extra field shown when Entity Mapping option above is selected. Here, you can select the property to be projected for each entity in the mapping.</li> <li>Constant Value: Only available when Constant Mapping is selected as the Mapping type. Here, you define the constant value to be used in the mapping.</li> <li>Related Projection Identifiers: Extra field shown when Entity Mapping option above is selected. It is an information field to revise the identifier of the mapped entity.</li> <li>Active: A check to indicate whether this record is available or disabled.</li> </ul> <p>Fields to note:</p> <ul> <li>Module: It indicates the module the element forms part of. This is the module in which the configuration is exported.</li> <li>Organization: The corresponding organization of the entity</li> <li>Property: This field has 3 types of options:<ul> <li><code>_identifier</code>: This option allows projecting the field/s defined as identifier in the Tables and Columns window. This option always projects a string.</li> <li>Standard: In this case, it is possible to select all the standard fields from the projected entity. Ex: string, number, date types, etc. Also, it is possible to navigate through the different entities. Ex: product.name, businessPartner.name, etc</li> <li><code>*List</code>: The properties that finish in \"List\", allow projecting a list of related entities. These lists are autogenerated from the columns with the Link to Parent Column checkbox selected. Ex: the property <code>OrderLineList</code> of the Order entity is generated since the <code>C_Order_ID</code> column from the <code>C_OrderLine</code> table is related with <code>C_Order</code> table.</li> </ul> </li> <li>Name: Output JSON Key. It must be unique but it is possible to have more than one name for each property. By default, it is autogenerated with the property name, but in case of generating more than one, they should have different names.</li> <li>Is Mandatory: Checkbox only available for \"Write\" projections. This indicates that the projected property is mandatory when a new item is created.</li> <li>Identifies Record Univocally: Checkbox to use this record as an identifier. If no field has this check selected, the database ID will be used.</li> </ul> <p>Mapping Configuration</p> <ul> <li>Field Mapping: </li> <li>Direct Mapping: each property is shown as it is.</li> <li>Java Mapping: It is a customizable mapping and can be configured through the Java Mappings window. If this option is chosen, it allows you to define more complex mappings or implement a specific logic The result of the mapping will be Json type. </li> <li>Entity Mapping: this option is used when it is necessary to relate two different projections. In this case, the Related Projection Entity field is enabled to select the projected entity. In case of projecting a list of elements, the selected entity is assigned to each item of the list.</li> <li>Constant Mapping: If you choose this option, the constant value defined in the corresponding field is projected.</li> <li>Create related: It enables the creation of related elements from a selected entity. Only available for Write type mappings.</li> <li>Related Projection Entity: Extra field shown when Entity Mapping option above is selected. Here, you can select the property to be projected for each entity in the mapping.</li> <li>Jsonpath: language to extract properties from Json objects. For more information, visit Json.</li> <li>Constant Value: Only available when Constant Mapping is selected as the Mapping type. Here, you define the constant value to be used in the mapping.</li> <li>Related Projection Identifiers: Extra field shown when Entity Mapping option above is selected. It is an information field to revise the identifier of the mapped entity.</li> <li>Active: A check to indicate whether this record is available or disabled.</li> </ul> <p>Map Fields to Child</p> <p>This subtab is shown if the Create related check in the Entity Field subtab is selected. It allows the possibility to provide information from the parent fields to the child records. The records created in this subtab are useful to connect the projected entity fields to properties that belong to parent entities.</p> <p>Fields to note:</p> <ul> <li>Module: It indicates the module the element forms part of. This is the module in which the configuration is exported.</li> <li>Organization: The corresponding organization of the entity.</li> <li>Related Field: Shows field options of the related projected entity already defined.</li> <li>Property: If it is necessary to create a new field, this is the property to use to create it.</li> <li>Active: A check to indicate whether this record is available or disabled.</li> </ul> <p>Example:</p> <p> </p> <p>In this example, when writing a projection on the C_OrderLine table and projecting the orderLineTaxList (with the list of applicable taxes for each line), it is necessary to first select the Create Related checkbox. This option will create the related elements in the input list. However, the tax lines require a mandatory reference to the header, specifically the Order.</p> <p>For this, the information must be transmitted from the source entity to the mapped entity. This can be done by adding a new record in the Map Fields to Child tab. In the Related Field, select the child entity field corresponding to the projected entity (e.g., the Sales Order field in the OrderLineTax entity). In the Property field, select the field from the source entity (e.g., Sales Order from OrderLine entity).</p> <p>This setup ensures that when new order lines are created, the related taxes reference the original order. This configuration is only necessary if the mapped column does not have the Link to Parent Column checkbox selected. In this example, this refers to the Sales Order column in the C_OrderLineTax table.</p>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#tables-and-columns-window","title":"Tables and Columns Window","text":"<p> <code>Application</code> &gt; <code>Application Dictionary</code> &gt; <code>Tables and Columns</code></p> <p>In this window, it is possible to define table associated searches. These are custom filters with HQL queries. </p> <p>This window also allows the creation of search endpoints, using the DAS service. This service, based on this window configurations, dinamically generates the endpoints when launched.</p>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#repository-tab","title":"Repository Tab","text":"<p>In Spring Data, a repository is an abstraction that provides the operations relative to a domain class to interact with a data store. To create the repository for our purpose, we need to go to Tables and Columns, select a table and, in the Repository tab, create a new record defining the module in development where the configurations are exported. </p> <p></p>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#search-subtab","title":"Search Subtab","text":"<p>Then, we can define searches to get filtered data from the selected table. </p> Search example in the C_Order table <p>Fields to note:</p> <ul> <li>Method Name: the name of the search which is used in the endpoint generation.</li> <li>Query: HQL query to filter the table elements.</li> </ul>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#search-parameter-subtab","title":"Search Parameter Subtab","text":"<p>In this subtab, it is possible to define parameters to use in the search.</p> Parameter example used in the previous section search <p>Fields to note:</p> <ul> <li>Name: Parameter name</li> <li>Type: Parameter type. It is a dropdown with the available base types.</li> </ul>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/concepts/projections/#constant-values-window","title":"Constant Values Window","text":"<p> <code>Application</code> &gt; <code>Etendo RX</code> &gt; <code>Constant Values</code></p> <p>In this window, it is possible to define constant values to be used for entity fields in which the information must not be modified. This configuration is done in the Projections and Mappings window.</p> <p></p> <p>Fields to note:</p> <ul> <li>Module: It indicates the module the value forms part of. This is the module in which the configuration is exported.</li> <li>Organization: Organizational entity within client.</li> <li>Name: It describes the identifier name of the value.</li> <li>Constant Value: It describes the value to set, for example, an entity ID.</li> </ul>","tags":["Etendo RX","DAS service","Projections","Mappings","Connector","Search","API"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/","title":"Installation: Connecting Openbravo POS and Etendo","text":"","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#overview","title":"Overview","text":"<p>This guide provides step-by-step instructions to install and configure the integration between Openbravo and Etendo environments. This setup allows you to generate documents in Openbravo POS Terminal, store them in the Openbravo environment and synchronize them with Etendo using Etendo RX as middleware.</p> <p>In this guide we will start from two clean environments using test data, which facilitates the configuration and demonstrates the potential of this integration.</p> <p>Info</p> <p>This guide is based on Openbravo 23Q4.2 and Etendo 24.4.0</p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#required-software-and-tools","title":"Required Software and Tools","text":"<ul> <li>Eclipse IDE</li> <li>Apache Tomcat</li> <li>Docker Desktop or lazydocker</li> <li>Postman</li> <li>Openbravo 23Q4.2</li> <li>Etendo Classic 24.4.0 or later.</li> <li>Platform Extensions Bundle  latest version.</li> </ul>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#openbravo","title":"Openbravo","text":"<p>First, follow the Openbravo Custom Installation Guide and install in a local environment following How to setup Eclipse IDE.  </p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#modules-to-install-on-openbravo","title":"Modules to Install on Openbravo","text":"<p>In the Openbravo environment we need to install the Retail, EDL and Business API modules.</p> <p>To obtain these modules, an active Openbravo License and access to the Openbravo Forge are required. Ensure that the Openbravo environment includes the following modules in versions compatible with the corresponding Openbravo Core version. In this example, the modules will be used in version 23Q4.2.</p> <ul> <li><code>org.openbravo.retail.sampledata</code> version <code>23Q4.2</code></li> <li><code>org.openbravo.retail.returns</code> version <code>23Q4.2</code></li> <li><code>org.openbravo.retail.posterminal</code> version <code>23Q4.2</code></li> <li><code>org.openbravo.retail.poshwmanager</code> version <code>23Q4.2</code></li> <li><code>org.openbravo.retail.pack</code> version <code>23Q4.2</code></li> <li><code>org.openbravo.retail.discounts</code> version <code>23Q4.2</code></li> <li><code>org.openbravo.retail.config</code> version <code>23Q4.2</code></li> <li><code>org.openbravo.mobile.core</code> version <code>23Q4.2</code></li> <li><code>org.openbravo.events.core</code> version <code>1.0.233000</code></li> <li><code>org.openbravo.api</code> version <code>1.0.234001</code> </li> <li><code>org.openbravo.service.openapi</code> version <code>1.1.233000</code> </li> <li><code>org.openbravo.service.external.integration</code> version <code>2.0.234000</code> </li> <li><code>org.openbravo.externaldata.integration</code> version <code>2.0.234000</code> </li> </ul> <p>Warning</p> <p>Is necesary to apply a change in the <code>modules/org.openbravo.api/src/org/openbravo/api/util/ApiUtils.java</code> file  in line 38 reeplace by: </p> <pre><code>    Matcher m = Pattern.compile(\"(^|[^\\\\\\\\]{2}):{1}([a-zA-Z0-9_]+)\").matcher(hqlWhereClause);\n</code></pre> <p>Also, you must clone in the <code>/modules</code> folder the Etendo Connector integration modules, to do that the Partner access level to Etendo Software organization in GitHub is required:</p> <pre><code>git clone git@github.com:etendosoftware/com.etendoerp.integration.openbravo.git --branch 1.0.0\ngit clone git@github.com:etendosoftware/com.etendoerp.integration.openbravo.template.git --branch 1.0.0\n</code></pre>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#set-up-the-openbravo-environment","title":"Set Up the Openbravo Environment","text":"<p>Run the following commands to set up the Openbravo environment:</p> Terminal<pre><code>ant setup\nant install.source\nant import.sample.data -Dmodule=org.openbravo.retail.sampledata\nant smartbuild\n</code></pre> <p>Warning</p> <p>Configure Tomcat to run on port <code>8081</code> since port <code>8080</code> will be occupied by Etendo, then restart Tomcat.  </p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#master-data-configuration","title":"Master Data Configuration","text":"<p>Then, to simplify the configurations we will make some inserts in the <code>openbravo</code> database, for this we can connect from PGAdmin or by command line:</p> Terminal<pre><code>PGPASSWORD=tad  psql -U tad  -d openbravo -h localhost -p 5432\n</code></pre> <p>Run the following script:</p> Setup Script<pre><code>INSERT INTO public.c_external_system(c_external_system_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, description, connectivity_process, name, ad_protocol_id)\n    VALUES('73159A3D97824F07ABB4176F2D514F7D','0','0','Y','2024-05-16 08:12:58.295','0','2024-05-16 08:12:58.295','0',NULL,'N','OB Connector','36ADC30F67164F119013515280D82C01');\nINSERT INTO public.c_external_system_http(c_external_system_http_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, c_external_system_id, url, authorization_type, username, password, request_method, timeout, oauth2_client_identifier, oauth2_client_secret, oauth2_auth_server_url, em_etint_token)\n    VALUES ('EC60C5CF35234C648D9B5B00015190E2','0','0','Y','2024-03-12 10:02:38.42','100','2024-12-18 12:03:21.298','100','73159A3D97824F07ABB4176F2D514F7D','http://localhost:8096','ETINT_X-TOKEN',NULL,NULL,'POST',10,NULL,NULL,NULL,'eyJhbGciOiJFUzI1NiJ9.eyJhdWQiOiJzd3MiLCJyb2xlIjoiRTcxN0Y5MDJDNDRDNDU1NzkzNDYzNDUwNDk1RkYzNkIiLCJvcmdhbml6YXRpb24iOiIwIiwiaXNzIjoic3dzIiwiY2xpZW50IjoiMzkzNjNCMDkyMUJCNDI5M0I0ODM4Mzg0NDMyNUU4NEMiLCJ3YXJlaG91c2UiOiI0RDQ1RkU0QzUxNTA0MTcwOTA0N0Y1MUQxMzlBMjFBQyIsInVzZXIiOiJFOEFEOUIyNkI3RDE0Nzg2OEI2OEE5NTAwQ0M3NkRERCIsImlhdCI6MTczNzE0MzkyM30.MEYCIQDvVJXsg-6stuky6l93cdpM_jsgu5VHDRFh81iUTK0zigIhAJb6Ha2-EnGsb9RrcBsmMPzjJ2-cAYonuuYmfF3YJG3w');\nINSERT INTO public.cnc_events_subs (cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('10F0532FC9074E80923C02AA50234437','39363B0921BB4293B48383844325E84C','0','Y','2024-05-16 09:00:50.672','100','2024-05-16 09:00:50.672','100','4CABD83993ED4DD185354B826CF282AB','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.cnc_events_subs(cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('19299136996A41A188FDF0EBA613439C','39363B0921BB4293B48383844325E84C','0','Y','2024-05-16 08:59:57.049','100','2024-05-16 08:59:57.049','100','EC44C2BF556F4DE5936F77032CFFEDFA','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.cnc_events_subs(cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('41E108F4B4324D93A3822452FC28EAE2','39363B0921BB4293B48383844325E84C','0','Y','2024-05-16 08:59:45.106','100','2024-05-16 08:59:45.106','100','D4220C11026E4BCEB9F5C9E6986E3027','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.cnc_events_subs(cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('74411877488542F9A29E1A62AE9A3095','39363B0921BB4293B48383844325E84C','0','Y','2024-05-16 09:00:18.521','100','2024-05-16 09:00:18.521','100','C8846AB5E6D64201AEB1D8BDDFD1FCB8','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.cnc_events_subs(cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('8D9B45DED9154D12BB59FC61881DF504','39363B0921BB4293B48383844325E84C','0','Y','2024-12-18 16:14:12.695','100','2024-12-18 16:14:12.695','100','1E9960A3751E42BE9C295F659BF31481','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.cnc_events_subs(cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('9B196742FCBF438AB0F993CCEB0FD128','39363B0921BB4293B48383844325E84C','0','Y','2024-05-16 09:01:35.509','100','2024-05-16 09:01:35.509','100','9A827B001D82408D90DA622E6860EC1C','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.cnc_events_subs(cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('B30C7FAA3FE849568C7DFD7B6463A89B','39363B0921BB4293B48383844325E84C','0','Y','2024-05-16 09:01:26.548','100','2024-05-16 09:01:26.548','100','60F1B0A744904709A5BEC2D3163CB0F5','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.cnc_events_subs(cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('D1DFB1E5ACC1482097D2BDF79810B6C5','39363B0921BB4293B48383844325E84C','0','Y','2024-05-16 09:00:32.893','100','2024-05-16 09:00:32.893','100','EE70B36B9755410289137250E4CA3F49','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.cnc_events_subs(cnc_events_subs_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, cnc_public_events_id, em_api_c_external_system_id)\n    VALUES ('FADDA04F4AF54C41B16F13F111834488','39363B0921BB4293B48383844325E84C','0','Y','2024-05-16 09:00:07.792','100','2024-05-16 09:00:07.792','100','C999B37599FA4705A110BEA8F358372A','73159A3D97824F07ABB4176F2D514F7D');\nINSERT INTO public.obedl_configuration(obedl_configuration_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, obedl_process_id)\n    VALUES ('B1F00DAB0FEC4C549AF0068E77492638','39363B0921BB4293B48383844325E84C','0','Y','2024-12-20 11:22:20.267','100','2024-12-20 11:22:20.267','100','9B8E4B855B7E41EB87EE37D3394B7AD2');\nINSERT INTO public.obedl_config_output(obedl_config_output_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, seqno, output_path, output_user, output_pass, output_filename, obedl_configuration_id, obedl_output_type_id, wsmethod, isretryenabled, maxretry, retryinterval, timeout)\n    VALUES ('EE980DAA10CA40B78547056656192F76','39363B0921BB4293B48383844325E84C','0','Y','2024-12-20 11:22:38.946','100','2024-12-20 11:22:38.946','100',10,NULL,NULL,NULL,NULL,'B1F00DAB0FEC4C549AF0068E77492638','BF9649DF97A14168A4C142222E2CBF0C',NULL,'N',NULL,NULL,5);\nINSERT INTO public.ad_preference(ad_preference_id, ad_client_id, ad_org_id, isactive, created, createdby, updated, updatedby, ad_window_id, ad_user_id, attribute, value, property, ispropertylist, visibleat_client_id, visibleat_org_id, visibleat_role_id, selected, ad_module_id, inherited_from)\n    VALUES ('36675A275AC2478C83AB05771EAA23A5','39363B0921BB4293B48383844325E84C','D270A5AC50874F8BA67A88EE977F8E3B','Y','2024-05-23 18:04:26.01','3073EDF96A3C42CC86C7069E379522D2','2024-05-27 10:48:48.382','100',null,null,null,'Y','ETINT_DefaultSyncValue','Y',null,null,null,'Y',null,null);\nDELETE FROM ad_role_orgaccess WHERE ad_client_id='39363B0921BB4293B48383844325E84C';\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('00E25567B08143EEB0218D4539268FFD','4AF94371114B4125877650274C245C5D','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','N','2023-10-11 11:59:33.521','100','2023-10-11 11:59:33.521','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('05E6998CD5B44072809EC2D8DC89810C','FF808181259DADEB01259DDDA4BB01E5','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:33:48.42','100','2016-05-10 17:33:48.42','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('06F04F083ABA408499DA19988FBAAB8C','FF808181259DADEB01259DDDA4C201E6','67839EEFA49E44AC969BD60093FCC899','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('070EB80EFFB945998F16D69825225A54','898E1715D1DF4C15A9CBE0813F23F892','E2A8087A81F54203969C6AED1AABBC72','39363B0921BB4293B48383844325E84C','Y','2019-02-08 00:33:00.243','100','2019-02-08 00:33:00.243','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('0B8FB016F525412E8F51A3041F022DED','45A63D86E04D4052A3E8D04ABCC17E1E','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2017-01-26 13:41:31.129','100','2017-01-26 13:41:31.129','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('0C6E8B1A5F7A46639ADDEDE817E59DB6','FF8081812250326E012250353BDE0006','BF129721D9FB4EB0819509934153E972','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('0C8EB7C3DF964C91922987E6A525A855','FF808181259DADEB01259DDDA4C201E6','4399136852B145BD96CC2A6CE0800C68','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('0E212E2128B34AC18969896B1642074B','FF808181259DADEB01259DDDA4C201E6','01AD882EFC8545ACA6455E2F6FD51EE9','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('0F73E3802207447A965055B702DAF36D','D7D7D228E4594ACE8D00FD0E08B333DE','B5DE96143D6642228E3B9DEC69886A47','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('145D57C3347D4F32B21EE04DC3993A2B','463683CFA16C40C0A4EC8CF934114146','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.048','0','2013-07-04 23:01:15.048','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('15B90797F244416AB8F4DC181DA7BC2B','463683CFA16C40C0A4EC8CF934114146','B5DE96143D6642228E3B9DEC69886A47','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.048','0','2013-07-04 23:01:15.048','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('1A9D803990FA42058D41EE0995AD9DE3','FF8081812250326E012250353BDE0006','B5DE96143D6642228E3B9DEC69886A47','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('1EFCD742FDD94113A8BC9D51651ACB42','463683CFA16C40C0A4EC8CF934114146','4399136852B145BD96CC2A6CE0800C68','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.048','0','2013-07-04 23:01:15.048','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('204B559EFBF94116AF0558C428FEF5C3','D7D7D228E4594ACE8D00FD0E08B333DE','01AD882EFC8545ACA6455E2F6FD51EE9','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('21C7FA46793B4C8A8120D96FF8EFF68C','463683CFA16C40C0A4EC8CF934114146','14B1927026BE471E9B85FE699BCA61C2','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.048','0','2013-07-04 23:01:15.048','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('24CFC72398FC400FB70B427A4B37D275','28D1AFB16B7C4B69B4C8026C16BF88F6','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2018-07-16 09:45:00.77','100','2018-07-16 09:45:00.77','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('27FB52278FD8499E859885BBBA81469D','FF808181259DADEB01259DDDA4BB01E5','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:32:17.675','100','2016-05-10 17:32:17.675','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('310886C13CEF4618B4854F796E297CEA','D7D7D228E4594ACE8D00FD0E08B333DE','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('37CBB9594B014AF098B8CAF10316B00C','FF8081812250326E012250353BDE0006','01AD882EFC8545ACA6455E2F6FD51EE9','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('38688BD551FA4718BD865FE8D4EA3FA7','FF808181259DADEB01259DDDA4BB01E5','14B1927026BE471E9B85FE699BCA61C2','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:33:12.588','100','2016-05-10 17:33:12.588','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('3AA4B571EBDA4757B30E59B19A28752B','FF808181259DADEB01259DDDA4C201E7','DF86640764AA4492AB6D4CA2D432B8D4','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:05:39.566','100','2016-09-05 19:05:39.566','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('3AED4DB65F374ED09558D3B2BC2D2FAD','D7D7D228E4594ACE8D00FD0E08B333DE','14B1927026BE471E9B85FE699BCA61C2','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('3FB7C8A13A954ED9B5AF469FFAD769CD','FF808181259DADEB01259DDDA4C201E6','102D0E6D37DA46C3BABA6DFF3708F341','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('43CFCE1377B046659E5C75B3C9A67447','E0E04AEBED4F497B98821315A039FAE0','B5DE96143D6642228E3B9DEC69886A47','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.048','0','2013-07-04 23:01:15.048','0','Y',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('454CFB3140DA4FFEA6247835FC8A8C9D','FF808181259DADEB01259DDDA4C201E7','0','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:05:21.172','100','2016-09-05 19:05:21.172','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('471CD13FA7024D2CAC8A23B7492EAB8D','FF808181259DADEB01259DDDA4C201E6','BF129721D9FB4EB0819509934153E972','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('49CA2A40287E400DA0D8CAC3B5A6C7BA','FF808181259DADEB01259DDDA4C201E7','102D0E6D37DA46C3BABA6DFF3708F341','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:05:49.47','100','2016-09-05 19:05:49.47','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('4E087E72C4BC49C3A28FE2EB88FC5560','FF808181259DADEB01259DDDA4C201E6','0','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('4E6BA6809674438DADBA699E91A2F4A1','D7D7D228E4594ACE8D00FD0E08B333DE','4399136852B145BD96CC2A6CE0800C68','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('533DACF943EA4C68939C2F00EACBBC92','F539FCE19DD744DEA5BFD9387E61EB42','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2015-10-08 12:40:03.398','100','2015-10-08 12:40:03.398','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('53979ED48C834DD69162C1B390D5C0AA','FF808181259DADEB01259DDDA4BB01E5','0','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:32:00.203','100','2016-05-10 17:32:00.203','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('539B9A17F57F4298B07EDA0DA9791CC0','FF8081812250326E012250353BDE0006','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('53A6D8FFA4C84A8C93F6CDC83B00A7B3','5FA11B3DD8F04C0986C774624809C31E','0','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.048','0','2013-07-04 23:01:15.048','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('551489F6FFB841FFB6A851C9253CEB66','463683CFA16C40C0A4EC8CF934114146','67839EEFA49E44AC969BD60093FCC899','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.048','0','2013-07-04 23:01:15.048','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('56402FE8BD5449EC9244A6AC08AB7F90','4AF94371114B4125877650274C245C5D','65C1C46FB1D04CBD98CBD4167CCFE600','39363B0921BB4293B48383844325E84C','Y','2019-02-07 18:01:06.808','100','2019-02-07 18:01:06.808','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('595C29533DAA4E59AB71FBEFD9D10AEA','E717F902C44C455793463450495FF36B','0','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.048','0','2013-07-04 23:01:15.048','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('5A59133E18CE476AB489FA0EC51ACBF2','FF808181259DADEB01259DDDA4C201E7','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:05:45.382','100','2016-09-05 19:05:45.382','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('5F31E242A9BB4BD18CB7E5B496A858D7','FF808181259DADEB01259DDDA4C201E6','14B1927026BE471E9B85FE699BCA61C2','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('5FF9AAB3C384462D8E812DF4C1B5E35A','D7D7D228E4594ACE8D00FD0E08B333DE','102D0E6D37DA46C3BABA6DFF3708F341','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('6899F9065C3F4A18B46FC78DAFF0442B','FF808181259DADEB01259DDDA4BB01E5','B5DE96143D6642228E3B9DEC69886A47','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:33:17.069','100','2016-05-10 17:33:17.069','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('69F88418E80D4747BE967690EA0EC454','FF808181259DADEB01259DDDA4C201E7','687AD71263F94A31B85A3CC9942FF7ED','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:05:53.711','100','2016-09-05 19:05:53.711','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('6F9D0F236DFB42E6BE596C4569DCD58B','FF808181259DADEB01259DDDA4BB01E5','67839EEFA49E44AC969BD60093FCC899','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:33:43.374','100','2016-05-10 17:33:43.374','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('734B0E318B7C488196F9FF57DD409D40','FF8081812250326E012250353BDE0006','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('7420FFCA3DD94FA08754F1C309164C10','FF8081812250326E012250353BDE0006','102D0E6D37DA46C3BABA6DFF3708F341','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('78D4E9A3C23B494DB2236F0667A6B567','FF808181259DADEB01259DDDA4C201E7','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:06:29.563','100','2016-09-05 19:06:29.563','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('7944BC0FC2E246EAB81DAC10BA66C3DF','FF8081812250326E012250353BDE0006','4399136852B145BD96CC2A6CE0800C68','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('832EF36B4C8B40E18E13971A3E682CC3','FF808181259DADEB01259DDDA4C201E7','14B1927026BE471E9B85FE699BCA61C2','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:05:58.908','100','2016-09-05 19:05:58.908','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('85D5D57E01F44B49A923611D23DAD691','D7D7D228E4594ACE8D00FD0E08B333DE','BF129721D9FB4EB0819509934153E972','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('88650D508D294A79B306CEA9DBF850D7','FF808181259DADEB01259DDDA4C201E6','687AD71263F94A31B85A3CC9942FF7ED','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('88C6B42E7FA7458EB20426226AC2F2BE','7499FEEA12DF46918F5448E8260B5E3E','0','39363B0921BB4293B48383844325E84C','Y','2020-05-22 08:57:23.772','100','2020-05-22 08:57:23.772','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('893248F94B7B45D4B418825A1124B7B7','463683CFA16C40C0A4EC8CF934114146','BF129721D9FB4EB0819509934153E972','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.047','0','2013-07-04 23:01:15.047','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('89F8E8215E85452D883DB5A44695F206','FF808181259DADEB01259DDDA4BB01E5','102D0E6D37DA46C3BABA6DFF3708F341','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:32:59.49','100','2016-05-10 17:32:59.49','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('8AA885C4DA0B441D81937BE1890F2031','FF808181259DADEB01259DDDA4C201E6','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('8ED25886285A405F981F251F45C0E58F','D7D7D228E4594ACE8D00FD0E08B333DE','67839EEFA49E44AC969BD60093FCC899','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('9097B346A30C41BB914C657B4049F552','D7D7D228E4594ACE8D00FD0E08B333DE','0','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('90ABBC7550EA4CC98C8869AE959A1C1B','FF8081812250326E012250353BDE0006','14B1927026BE471E9B85FE699BCA61C2','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('974063A1AD9D4501ACF9FD7072BFF94D','FF808181259DADEB01259DDDA4C201E7','BF129721D9FB4EB0819509934153E972','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:06:33.941','100','2016-09-05 19:06:33.941','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('97AC72DCF7AF40D793D6E4BE80BD65F2','FF808181259DADEB01259DDDA4C201E6','B5DE96143D6642228E3B9DEC69886A47','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('9A7EC9E6391944688C7DF136379E7C30','FF8081812250326E012250353BDE0006','0','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('9ACFD154DEDA4B63B67648F4FE4AF833','FF808181259DADEB01259DDDA4BB01E5','01AD882EFC8545ACA6455E2F6FD51EE9','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:33:38.56','100','2016-05-10 17:33:38.56','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('A30D63F28BEE4CDF99ABCE1A6C8F801D','FF808181259DADEB01259DDDA4BB01E5','BF129721D9FB4EB0819509934153E972','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:33:53.083','100','2016-05-10 17:33:53.083','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('A9403C5AC5E340029CCF6A319C5FC970','45A63D86E04D4052A3E8D04ABCC17E1E','102D0E6D37DA46C3BABA6DFF3708F341','39363B0921BB4293B48383844325E84C','Y','2017-01-26 13:41:18.384','100','2017-01-26 13:41:18.384','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('AE13511035D64E4A925DAF042FB5C909','FF808181259DADEB01259DDDA4C201E7','67839EEFA49E44AC969BD60093FCC899','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:06:23.97','100','2016-09-05 19:06:23.97','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('AFD3C34DD9AA4CC590E986DC7581F571','463683CFA16C40C0A4EC8CF934114146','01AD882EFC8545ACA6455E2F6FD51EE9','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.047','0','2013-07-04 23:01:15.047','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('AFEB72B0B7424EC99167DE820AD2F20D','FF808181259DADEB01259DDDA4C201E7','01AD882EFC8545ACA6455E2F6FD51EE9','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:06:12.551','100','2016-09-05 19:06:12.551','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('B259A9E578C740F483C5FA93DDE34203','41DAFA0C214D4954A6A9B383AF9A3D96','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','N','2023-10-11 11:59:08.846','100','2023-10-11 11:59:08.846','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('B4B94E5E0E61475998070EC51D81FF75','FF808181259DADEB01259DDDA4C201E7','4399136852B145BD96CC2A6CE0800C68','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:06:08.283','100','2016-09-05 19:06:08.283','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('C94DD74AAB414D4996AE4AD6D4067886','FE77051CF38044DCB7471664F9CBB44B','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','Y','2016-09-05 10:16:42.287','100','2016-09-05 10:16:42.287','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('D1621B93AA2B46A8BD2C17A461B75417','FF8081812250326E012250353BDE0006','687AD71263F94A31B85A3CC9942FF7ED','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('D22D0FB1D0F447919D0A8B8A75747DEB','FF808181259DADEB01259DDDA4BB01E5','4399136852B145BD96CC2A6CE0800C68','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:33:34','100','2016-05-10 17:33:34','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('D7774F5E00B743DBA062612850A343F8','D7D7D228E4594ACE8D00FD0E08B333DE','687AD71263F94A31B85A3CC9942FF7ED','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('D95911EC4DFF426785F928105499766D','FF808181259DADEB01259DDDA4C201E6','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:53:57.752511','100','2016-05-10 18:53:57.752511','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('D9B55D1899F24A549DE4F37CE2C37722','D7D7D228E4594ACE8D00FD0E08B333DE','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:04.121774','100','2016-05-10 18:55:04.121774','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('DBF5A71716C64C41BBB95516EE3BFDA5','898E1715D1DF4C15A9CBE0813F23F892','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','N','2023-10-11 11:58:48.036','100','2023-10-11 11:58:48.036','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('E1E5122BECCD402B857A7F5719E02101','463683CFA16C40C0A4EC8CF934114146','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','Y','2013-07-04 23:01:15.047','0','2013-07-04 23:01:15.047','0','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('E35081972A7C4F8F9A6E33041F67BF80','5FA11B3DD8F04C0986C774624809C31E','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','N','2023-10-11 11:57:53.708','100','2023-10-11 11:57:53.708','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('E54135DA0A6E4F449F385986A69C355F','FF808181259DADEB01259DDDA4C201E7','B5DE96143D6642228E3B9DEC69886A47','39363B0921BB4293B48383844325E84C','Y','2016-09-05 19:06:03.536','100','2016-09-05 19:06:03.536','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('EA1A8571906A470EA02AD544190EA841','FF8081812250326E012250353BDE0006','67839EEFA49E44AC969BD60093FCC899','39363B0921BB4293B48383844325E84C','Y','2016-05-10 18:55:21.710401','100','2016-05-10 18:55:21.710401','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('EACCEB3F06564BC98A938B3CDC905D90','FF808181259DADEB01259DDDA4BB01E5','687AD71263F94A31B85A3CC9942FF7ED','39363B0921BB4293B48383844325E84C','Y','2016-05-10 17:33:04.719','100','2016-05-10 17:33:04.719','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('26930A6961E443CDAD94248319D8BC01','E717F902C44C455793463450495FF36B','DF86640764AA4492AB6D4CA2D432B8D4','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:19.791','100','2024-12-17 14:49:19.791','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('4B63427EF7194253AE5623B1A166F6CF','E717F902C44C455793463450495FF36B','3B187EC130A549A7A9388F8060EF156D','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:22.767','100','2024-12-17 14:49:22.767','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('3E3FDCE69F6847E28BE33CFA53D41EED','E717F902C44C455793463450495FF36B','CCAAD77DA7994401A9657F04AEB6342E','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:25.427','100','2024-12-17 14:49:25.427','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('99014DA3A05247BBAE2FEFC8EB0B4547','E717F902C44C455793463450495FF36B','102D0E6D37DA46C3BABA6DFF3708F341','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:28.241','100','2024-12-17 14:49:28.241','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('DB5BB8E6E568469DBC173CFD06D21F2E','E717F902C44C455793463450495FF36B','687AD71263F94A31B85A3CC9942FF7ED','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:32.368','100','2024-12-17 14:49:32.368','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('9E3BA9AD88A7453CA81EC5CE2A36A9E5','E717F902C44C455793463450495FF36B','14B1927026BE471E9B85FE699BCA61C2','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:34.943','100','2024-12-17 14:49:34.943','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('9A8B84A3197B4044A5F4C9315942BBA2','E717F902C44C455793463450495FF36B','E2A8087A81F54203969C6AED1AABBC72','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:39.476','100','2024-12-17 14:49:39.476','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('B59E0EFB9E7D42C699C1F0A4A406C5AF','E717F902C44C455793463450495FF36B','B5DE96143D6642228E3B9DEC69886A47','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:42.525','100','2024-12-17 14:49:42.525','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('ABC7AF1DEC994A4DAEAE9BD545074686','E717F902C44C455793463450495FF36B','4399136852B145BD96CC2A6CE0800C68','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:46.204','100','2024-12-17 14:49:46.204','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('C44405A869AB4756AD723D26FB54AC54','E717F902C44C455793463450495FF36B','01AD882EFC8545ACA6455E2F6FD51EE9','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:49:57.448','100','2024-12-17 14:49:57.448','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('CDBCDE2BB7E54D248A34F6C624F222F0','E717F902C44C455793463450495FF36B','67839EEFA49E44AC969BD60093FCC899','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:50:01.988','100','2024-12-17 14:50:01.988','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('4E49A87DF3FA40FC93B1502824A9A06D','E717F902C44C455793463450495FF36B','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:50:05.95','100','2024-12-17 14:50:05.95','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('4AFE1EB76EB64AF9B378C15A200CCD46','E717F902C44C455793463450495FF36B','65C1C46FB1D04CBD98CBD4167CCFE600','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:50:09.615','100','2024-12-17 14:50:09.615','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('C860DD8876AB49C496A0229AD09A8B29','E717F902C44C455793463450495FF36B','BF129721D9FB4EB0819509934153E972','39363B0921BB4293B48383844325E84C','Y','2024-12-17 14:50:13.15','100','2024-12-17 14:50:13.15','100','N',NULL);\nINSERT INTO public.ad_role_orgaccess(ad_role_orgaccess_id, ad_role_id, ad_org_id, ad_client_id, isactive, created, createdby, updated, updatedby, is_org_admin, inherited_from)\n    VALUES ('73736A39CBBB4301B04A056A831A80FA','5FA11B3DD8F04C0986C774624809C31E','D270A5AC50874F8BA67A88EE977F8E3B','39363B0921BB4293B48383844325E84C','Y','2024-12-17 15:02:50.305','100','2024-12-17 15:02:50.305','100','N',NULL);\nUPDATE public.ad_org SET em_obretco_dbp_orgid='D270A5AC50874F8BA67A88EE977F8E3B' WHERE ad_org_id='D270A5AC50874F8BA67A88EE977F8E3B';\n</code></pre>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#openbravo-access","title":"Openbravo Access","text":"<p>Now, start Tomcat and access to Openbravo.</p> <p>Openbravo Back Office</p> <ul> <li>http://localhost:8081/openbravo/</li> <li>User: Openbravo</li> <li>Password: openbravo</li> </ul> <p>Openbravo POS</p> <ul> <li>http://a.localhost:8081/openbravo/web/org.openbravo.retail.posterminal/?terminal=VBS-1#login</li> <li>User: vallblanca</li> <li>Password: openbravo</li> </ul> <p>By following these steps the POS should be correctly configured, for more information you can visit Retail:Configuration Guide</p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#etendo","title":"Etendo","text":"","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#configure-etendo-environment","title":"Configure Etendo Environment","text":"<p>Follow the steps in the Install Etendo guide, in the tab Steps to Install Etendo with Postgres Database and Tomcat Dockerized.</p> <p>Info</p> <p>At this point we assume that you already have a local Etendo environment, Tomcat and Postgres SQL services dockerized.</p> <p>Warning</p> <p>It is not necessary to configure Tomcat, since the service is already dockeridez and preconfigured.</p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#install-modules","title":"Install Modules","text":"<p>Once you have the Etendo environment you must install the Platform Extensions bundle and the specific modules to the Openbravo connector.</p> <p>To do this, add the dependencies in the <code>build.gradle</code> file:</p> <p>build.gradle<pre><code>dependencies {\n    implementation ('com.etendoerp:platform.extensions:2.10.0') // version 2.10.0 or later\n\n    moduleDeps('com.etendoerp:integration.to.openbravo:1.0.0@zip')\n    moduleDeps('com.etendoerp:integration.to.openbravo.sampledata:1.0.0@zip')\n}\n</code></pre> Also, in the <code>gradle.properties</code> file the following configuration variables must be added, to execute all the necessary dockerized services:</p> gradle.properties<pre><code>context.name=etendo\n\nbbdd.sid=etendo\nbbdd.port=5434\nbbdd.systemUser=postgres\nbbdd.systemPassword=syspass\nbbdd.user=tad\nbbdd.password=tad\n\norg.gradle.jvmargs=-Dfile.encoding=UTF-8\n\ndocker_com.etendoerp.docker_db=true\ndocker_com.etendoerp.tomcat=true\ndocker_com.etendoerp.etendorx=true\ndocker_com.etendoerp.etendorx_async=true\ndocker_com.etendoerp.etendorx_connector=true\ndocker_com.etendoerp.integration.to_openbravo=true\n\netendorx.dependencies=com.etendorx.integration.to_openbravo:mapping:1.0.0, com.etendorx.integration.to_openbravo:worker:1.0.0\netendorx.basepackage=com.etendorx.integration.to_openbravo.mapping\n</code></pre> <p>Warning</p> <p>Since the database service will run dockerized and Openbravo is assumed to be installed on a local Postgres service on port <code>5432</code>, we will change the Etendo database port to <code>ddbb.port=5434</code> so that when the dockerized Postgres service is raised it will do so on that port.</p> <p>Now in a terminal in the Etendo project, we execute the commands:</p> <ol> <li> <p>To apply the changes in the <code>gradle.properties</code> file settings.</p> <p>Terminal<pre><code>./gradlew setup \n</code></pre> 2. Expand source code modules:</p> <p>Terminal<pre><code>./gradlew expandModules \n</code></pre> 3. Launch the dockerized services:</p> </li> </ol> Terminal<pre><code>./gradlew resources.up \n</code></pre>  As you can see the DB Postgres services required for the Etendo installation is running","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#compile-and-access-to-etendo-classic","title":"Compile and access to Etendo Classic","text":"<p>The next step is to compile the Etendo environment and apply sampledata</p> Terminal<pre><code>./gradlew update.database\n./gradlew import.sample.data -Dmodule=com.etendoerp.integration.to.openbravo.sampledata \n./gradlew smartbuild\n</code></pre> <p>Once the environment has been compiled, the Tomcat service is automatically restarted, as can be seen in the last compilation steps.</p> <p>Access Etendo Classic:</p> <ul> <li>http://localhost:8080/etendo</li> <li>User: admin</li> <li>Password: admin</li> </ul>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#etendo-rx-configurations","title":"Etendo RX Configurations","text":"<p>After starting the dockerized services, there are some configurations that need to be done in Etendo Classic</p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#client-setup","title":"Client Setup","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Client</code> &gt; <code>Client</code></p> <p>It is necessary to configure the encryption token for the authentication in the <code>Client</code> window with the <code>System Administrator</code> role. If the expiration time is equal to <code>0</code> the tokens do not expire.</p> <p>Generate a random key with the Generate key button.</p> <p></p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#rx-config-window","title":"RX Config window","text":"<p> <code>Application</code> &gt; <code>Etendo RX</code> &gt; <code>RX Config</code></p> <p>This configuration window stores the access data for Etendo RX services, which are crucial for the interaction between different services. As <code>System Administrator</code> role, in this window, run the <code>Initialize RX Services</code> process in the toolbar. </p> <p></p> <p>After the execution of this process the default configuration variables are completed, depending on the configuration of the instance and the infrastructure, even the default parameters required by each service are configured.</p> <p>Warning</p> <p>In the particular case of the <code>Worker Service</code> it is necessary to add the <code>connector.instance</code> parameter, which refers to the ID of the connector instance with Openbravo, this instance is distributed within the connector, so you must always set the ID <code>6364E51BF1234094A313F17E1DCD2F7D</code>. </p> <p></p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#initial-configuration-scripts","title":"Initial Configuration Scripts","text":"Terminal<pre><code>cd modules/com.etendoerp.integration.to.openbravo/utils\nmake set_wal\nmake insert\nmake setupconnector\n</code></pre>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#relunch-rx-services","title":"Relunch RX services","text":"<p>Then, to effectively run all  the services, it is necessary to execute the command in the terminal: </p> Terminal<pre><code>./gradlew resources.up\n</code></pre> <p>Here, all the services and their respective logs can be seen running using lazydocker or Docker Desktop for a simple and fast container management. </p>  As you can see all the services required for the Openbravo Etendo integration are running","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#testing-data-synchronization-between-environments","title":"Testing Data Synchronization between Environments","text":"","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#etendo-access-token","title":"Etendo Access Token","text":"<p>The last configuration step is to generate an access token for communication from Openbravo to Etendo. To do this we must through a request manager such as Postman execute the following request:</p> <ul> <li>HTTP Method: <code>POST</code></li> <li>URL: <code>http://localhost:8080/etendo/sws/login</code></li> <li>Request Body:   <pre><code>{\n  \"username\": \"obconnector\",\n  \"password\": \"obconnector\",\n  \"role\": \"E717F902C44C455793463450495FF36B\",\n  \"client\": \"39363B0921BB4293B48383844325E84C\",\n  \"organization\": \"0\",\n  \"warehouse\": \"0\",\n  \"secret\": \"123456\",\n  \"service\": \"obconnector\"\n}\n</code></pre></li> </ul> <p>After making the request, you will receive a JSON response. Copy the value of the token field, as it will be used for authentication in subsequent requests. For example:</p> <pre><code>{\n\"status\": \"success\",\n\"token\": \"eyJhbGciOiJFUzI1NiJ9.eyJhdWQiOiJzd3MiLCJyb2xlIjoiRTcxN0Y5MDJDNDRDNDU1NzkzNDYzNDUwNDk1RkYzNkIiLCJvcmdhbml6YXRpb24iOiIwIiwiaXNzIjoic3dzIiwiY2xpZW50IjoiMzkzNjNCMDkyMUJCNDI5M0I0ODM4Mzg0NDMyNUU4NEMiLCJ3YXJlaG91c2UiOiI0RDQ1RkU0QzUxNTA0MTcwOTA0N0Y1MUQxMzlBMjFBQyIsInVzZXIiOiJFOEFEOUIyNkI3RDE0Nzg2OEI2OEE5NTAwQ0M3NkRERCIsImlhdCI6MTc0MDA3NTc5M30.MEQCIHh8GI1kW3l56I5ic6KXaezeSZug-Yb42eejf5YRvCJ5AiA1ulTKNpCqqu8GTWjpLRFUarI33zobyn5BuSuTEmq5mQ\",\n...\n}\n</code></pre>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#external-system","title":"External System","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>External System</code></p> <p>In the Openbravo environment, logged in as <code>System Administrator</code>, it is necessary to access the <code>External System</code> window and set the generated token in the token field, this token is used to authenticate the requests form Openbravo to Etendo.</p> <p></p>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/connectors/openbravo-connector/installation-guide/#testing-the-integration","title":"Testing the Integration","text":"<ol> <li> <p>Log in to the Openbravo POS Terminal, with Valblanca user:</p> <p></p> </li> <li> <p>Create a new customer:</p> <p></p> </li> <li> <p>Create a Purchase Order for this new customer, and make the corresponding payment:</p> <p></p> </li> <li> <p>As you can see, the sales order was created in Openbravo:</p> <p></p> </li> <li> <p>In the EDL Request Window you can see the transactions sent from Openbravo to Etendo, their status and in case of failure see the error log and retry sending:</p> <p></p> </li> <li> <p>Now, after a synchronization time, you can confirm that the documents are synchronized with the Etendo environment correctly with all related master data: </p> <p></p> </li> <li> <p>Finally, in the External ID Mapping window you can see the external record IDs and the mapping to local records:     </p> </li> </ol>","tags":["Connector","Openbravo","POS Terminal","Etendo Classic","Etendo RX","Environment Synk"]},{"location":"developer-guide/etendo-rx/how-to-guides/hot-to-start-rx-as-service-source-code/","title":"How to Start RX as a Service from Source Code","text":"<p>This document guides you through the process of starting the RX service from the source code, including generating JAR files and launching various components.</p>"},{"location":"developer-guide/etendo-rx/how-to-guides/hot-to-start-rx-as-service-source-code/#1-generating-jars","title":"1. Generating JARs","text":"<p>Ensure you have built the JAR files necessary for different service components. Use these commands in your terminal:</p> <pre><code>./gradlew com.etendorx.entities:build \n./gradlew com.etendorx.das:build -x test\n./gradlew com.etendorx.config:build -x test\n./gradlew com.etendorx.auth:build -x test\n</code></pre>"},{"location":"developer-guide/etendo-rx/how-to-guides/hot-to-start-rx-as-service-source-code/#2-starting-the-config-server","title":"2. Starting the Config Server","text":"<p>Before initiating the Config Server, confirm that your configuration files are correctly set up.</p> <p>Configuration Files: Ensure the required files, such as <code>service.yaml</code>, are present in the designated directory (<code>/path/to/directory/rxconfig</code>).</p> <p>Setting Environment Variables: Configure the necessary environment variables to direct the Config Server to these files:</p> <pre><code>export SPRING_PROFILES_ACTIVE=native\nexport SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=$(pwd)/rxconfig\n</code></pre> <p>Starting the Config Service:</p> <pre><code>java -jar modules_core/com.etendorx.config/build/libs/com.etendorx.config-1.1.0.jar\n</code></pre>"},{"location":"developer-guide/etendo-rx/how-to-guides/hot-to-start-rx-as-service-source-code/#3-starting-das","title":"3. Starting DAS","text":"<p>Use this command to start the DAS service, ensuring the correct path and version for the generated entities jar.</p> <pre><code>java -Dloader.path=modules_gen/com.etendorx.entities/build/libs/com.etendorx.entities-1.1.0-plain.jar -jar modules_core/com.etendorx.das/build/libs/com.etendorx.das-1.1.0.jar\n</code></pre> <p>Info</p> <ul> <li>Validation: Confirm that all paths and filenames in the commands align with your project structure.</li> <li>Dependencies: Check that all necessary dependencies are installed prior to executing these commands.</li> <li>Testing: Testing each step in a development setting before production deployment is recommended.</li> </ul>"},{"location":"developer-guide/etendo-rx/how-to-guides/hot-to-start-rx-as-service-source-code/#4-starting-auth","title":"4. Starting AUTH","text":"<p>To initiate the AUTH service, execute the following command, making sure the path and version of the generated entities jar are correct.</p> <pre><code>java -jar modules_core/com.etendorx.auth/build/libs/com.etendorx.auth-1.1.0.jar\n</code></pre>"},{"location":"developer-guide/etendo-rx/how-to-guides/hot-to-start-rx-as-service-source-code/#5-starting-edge","title":"5. Starting EDGE","text":"<p>To initiate the EDGE service, execute the following command, making sure the path and version of the generated entities jar are correct.</p> <pre><code>java -jar modules_core/com.etendorx.edge/build/libs/com.etendorx.edge-1.1.0.jar\n</code></pre>"},{"location":"developer-guide/etendo-rx/how-to-guides/hot-to-start-rx-as-service-source-code/#disclaimer-advanced-knowledge-required","title":"Disclaimer: Advanced Knowledge Required","text":"<p>This guide assumes a fundamental understanding of Java development environments, including familiarity with Gradle build commands and Java application deployment. It is intended for users with intermediate to advanced technical skills in software development and system administration. New users or those unfamiliar with the concepts discussed may need additional resources or assistance. </p>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-change-date-format/","title":"Changing Date Format and Time Zone in a Request","text":""},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-change-date-format/#overview","title":"Overview","text":"<p>This document outlines the steps for developers to change the date format and time zone when making an HTTP request to the application. These features are useful for ensuring that date and time values are interpreted correctly based on the user's locale or specific requirements.</p>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-change-date-format/#prerequisites","title":"Prerequisites","text":"<ul> <li>Familiarity with HTTP requests and RESTful APIs.</li> <li>Access to the application's API documentation for endpoint details.</li> </ul>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-change-date-format/#adding-date-format-and-time-zone-parameters","title":"Adding Date Format and Time Zone Parameters","text":""},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-change-date-format/#date-format","title":"Date Format","text":"<p>To specify a custom date format, add a <code>_dateFormat</code> parameter to your HTTP request. The value should be a string that represents the desired date format, following the Java <code>SimpleDateFormat</code> conventions.</p> <p>Example:</p> <pre><code>GET /OBMAPBusinessPartner/2C4C71BC828B47A0AF2A79855FD3BA7A?_dateFormat=yyyy-MM-dd\n</code></pre> <p>In this example, the date format is set to <code>\"yyyy-MM-dd\"</code>, which will format dates as <code>\"2023-08-29\"</code>.</p>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-change-date-format/#time-zone","title":"Time Zone","text":"<p>To specify a custom time zone, add a <code>_timeZone</code> parameter to your HTTP request. The value should be a string that represents the desired time zone, following the Java <code>TimeZone</code> conventions. This parameter, requires to have a <code>_dateFormat</code>, cannot be used as single parameter.</p> <p>Example:</p> <pre><code>GET /OBMAPBusinessPartner/2C4C71BC828B47A0AF2A79855FD3BA7A?_dateFormat=yyyy-MM-dd&amp;_timeZone=America/New_York\n</code></pre> <p>In this example, the date format is set to <code>\"yyyy-MM-dd\"</code> and the time zone is set to <code>\"America/New_York\"</code>.</p>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-filter-for-active-or-inactive/","title":"How to Filter any request for Active or all Records","text":""},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-filter-for-active-or-inactive/#you-can-filter-any-request-by-active-or-all-rows","title":"You can filter any request by active or all rows","text":"<p>The <code>_noActiveFilter</code> parameter can be used in any request method to filter active records or all records (active and inactive). This way it allows more control when obtaining the results.</p>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-filter-for-active-or-inactive/#example-of-get-request-for-all-records","title":"Example of GET request for all records","text":"<p>Open Postman and we will make a get request.</p> <pre><code>Verbose: GET\n\nURL: http://localhost:8094/BusinessPartner?_noActiveFilter=true\n\nBody: empty\n\nReturn: a json object with all businessPartners active or inactive\n</code></pre>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-filter-for-active-or-inactive/#example-of-get-request-only-for-active-records","title":"Example of GET request only for active records","text":"<p>Open Postman and we will make a get request.</p> <pre><code>Verbose: GET\n\nURL: http://localhost:8094/BusinessPartner?_noActiveFilter=false\n\nBody: empty\n\nReturn: a json object with all active BusinessPartner rows\n</code></pre> <p>Another way to get active rows is to remove the parameter <code>_noActiveFilter parameter</code> , because by default the active row always applies the active row filter.</p>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-give-public-access-to-rx-apache/","title":"How to give public access to RX with Apache2","text":"<p>This guide offers a comprehensive approach to making the Etendo RX Edge Service publicly accessible while ensuring secure communication through SSL encryption. The process involves using Apache2, a popular web server software, as a reverse proxy. This setup not only facilitates public access but also adds an extra layer of security by encrypting data transfer between clients and the server.</p>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-give-public-access-to-rx-apache/#prerequisites","title":"Prerequisites","text":"<ul> <li>Read Config Server Guide and Edge Guide</li> <li>Etendo RX Edge Service set up and running.</li> <li>Apache2 installed on the server.</li> <li>A valid SSL configuration</li> <li>Root or sudo access to the server.</li> </ul>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-give-public-access-to-rx-apache/#disclaimer","title":"Disclaimer","text":"<p>This guide for setting up public access to the Etendo RX Edge Service using Apache2 SSL Proxy covers complex topics that may extend beyond its scope, requiring extra knowledge or expertise:</p> <ul> <li>Apache2 Web Server Configuration: Requires foundational web server management skills, including setting up virtual hosts and configuring SSL.</li> <li>SSL Certificates and Encryption: Assumes knowledge of obtaining, renewing, and installing SSL certificates.</li> <li>Network Security and Firewalls: Involves adjusting firewall settings for HTTPS traffic.</li> <li>Reverse Proxy Setup: Understanding the functioning and configuration of reverse proxies.</li> </ul>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-give-public-access-to-rx-apache/#step-1-configure-apache2-as-a-reverse-proxy","title":"Step 1: Configure Apache2 as a Reverse Proxy","text":"<ol> <li>Enable Proxy Modules: Enable the necessary proxy modules in Apache2.</li> </ol> <pre><code>sudo a2enmod proxy\nsudo a2enmod proxy_http\n</code></pre> <ol> <li>Configure Proxy Settings: Add the following configuration inside the <code>&lt;VirtualHost&gt;</code> block in your SSL virtual host file (<code>etendorx-ssl.conf</code>):</li> </ol> <pre><code>&lt;VirtualHost *:443&gt;\n    # ... SSL configurations ...\n\n    ProxyPreserveHost On\n    ProxyRequests Off\n    ProxyPass / http://localhost:8096/\n    ProxyPassReverse / http://localhost:8096/\n&lt;/VirtualHost&gt;\n</code></pre> <ul> <li> <p>This configuration forwards all requests from the public-facing domain to the Etendo RX Edge Service running on port 8096.</p> </li> <li> <p>Restart Apache2 Again:</p> </li> </ul> <pre><code>sudo systemctl restart apache2\n</code></pre>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-give-public-access-to-rx-apache/#step-2-verify-configuration","title":"Step 2: Verify Configuration","text":"<ol> <li> <p>Browser Test: Open a web browser and navigate to <code>https://yourdomain.com</code>. You should see the Etendo RX Edge Service interface, securely served over HTTPS.</p> </li> <li> <p>Check SSL Configuration: Use an SSL checker tool online to verify that your SSL certificate is correctly installed and valid.</p> </li> </ol>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-give-public-access-to-rx-apache/#step-3-firewall-configuration-optional","title":"Step 3: Firewall Configuration (Optional)","text":"<p>If your server is protected by a firewall, ensure that port 443 (HTTPS) is open for incoming connections.</p>"},{"location":"developer-guide/etendo-rx/how-to-guides/how-to-give-public-access-to-rx-apache/#conclusion","title":"Conclusion","text":"<p>Your Etendo RX Edge Service is now accessible publicly with SSL security provided by Apache2. This setup ensures that the traffic between the clients and your Edge Service is encrypted and secure. Remember to keep your SSL certificates and Apache2 up to date for security and performance.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/","title":"Creating a New Microservice","text":""},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#overview","title":"Overview","text":"<p>This section provides a step-by-step guide for working with Etendo RX, which involves creating a new module with RX capabilities and building a Spring Boot project to consume orders making use of projections, repository and other JPA resources that we will create on our Etendo Classic.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#building-a-new-module-for-rx-capabilities","title":"Building a New Module for RX Capabilities","text":"<p>Note</p> <p>Make sure to complete the Getting Started section in the developer guide to set up the Etendo Platform.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#accessing-as-admin-user","title":"Accessing as Admin User","text":"<p>After setting the local environment up, as described in the install etendo development environment, we will need to log in to the system with administration permissions to create the new module, projections, repository, etc.</p> <p>Log in to your account as an administrator. The default login credentials for this administrative account are:</p> <ul> <li>Username: <code>admin</code></li> <li>Password: <code>admin</code></li> </ul> <p>Once you are logged in, switch your role to System Administrator, as the image shows:</p> <p></p> <p>The System Administrator role allows us to access some windows and permission to create and manipulate the system to fulfill our needs.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#creating-a-new-module","title":"Creating a New Module","text":"<p>Now we will create a new module. It is a self-contained unit of code that performs a specific function and, in our case, it contains all the resources needed in this guide. To create a new module, go to the Module window, and add a new record providing the following information:</p> Parameter Value Java Package <code>com.tutorial.classictutorial</code> Name <code>Tutorial</code> Description <code>Module created for tutorial purposes</code> Version <code>1.0.0</code> Is RX <code>True</code> Rx Java Package <code>com.tutorial.rxtutorial</code> <p>It should look like this:</p> <p></p> <p>With our new module created, we will start working with Projections.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#projection","title":"Projection","text":"<p>When using Spring Data JPA to implement the persistence layer, the repository typically returns one or more instances of the root class. However, more often than not, we do not need all the properties of the returned objects.</p> <p>In such cases, we might want to retrieve data as objects of customized types. These types reflect partial views of the root class, containing only the necessary properties. This is where projections come in handy.</p> <p>Start by opening Projections windows and creating a new projection with the following properties:</p> Field Value Module <code>tutorial - 1.0.0 - English (USA)</code> Name <code>rxtutorial</code> Description <code>Projections needed for the tutorial</code> <p></p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#adding-the-projection-to-a-table","title":"Adding the projection to a table","text":"<p>As we create the projection, now we need to assign it to a table where we want to extract data. For this, open the Tables and Columns window and look for the Order table (as mentioned in the introduction, we want to consume orders).</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#adding-a-projection","title":"Adding a Projection","text":"<p>Next, navigate to the Projections tab and add a new projection with the following value:</p> Field Value Projection <code>rxtutorial - tutorial - 1.0.0 - English (USA)</code> <p></p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#adding-entity-fields","title":"Adding Entity Fields","text":"<p>When a projection is created, we need to define which fields we want to retrieve. In our case, we will need the record ID, Business Partner name, Document No, Document Type name, and the Grand total. Under the Projection tab navigate to the Entity Field tab and add the following fields:</p> \u00a0Field Name \u00a0Property id <code>id</code> businessPartnerName <code>businessPartner.name</code> documentNo <code>documentNo</code> documentTypeName <code>documentType.name</code> grandTotalAmount <code>grandTotalAmount</code> <p>Note</p> <p>The Property field of this tab is handled with an Entity Mapping, this is like a Hibernate property. So, you can navigate the entities related from here. E.g. To get the Business Partner name, you can have it by accessing the entity businessPartner and then, adding the field that you want to filter, name in this case.</p> <p></p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#repository","title":"Repository","text":"<p>In Spring Data, a repository is an abstraction that provides the operations relative to a domain class to interact with a data store. To create the repository for our purpose, and the same as we did for projections, we need to go to Tables and Columns and look for <code>C_Order</code> table.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#creating-a-new-repository","title":"Creating a New Repository","text":"<p>After selecting a table, in this case <code>C_Order</code>, we need to go to Repository tab and create a new record with the following values:</p> Field Value Module <code>tutorial - 1.0.0 - English (USA)</code> <p></p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#search","title":"Search","text":""},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#creating-a-new-search","title":"Creating a New Search","text":"<p>Next, we will define a search method to use later when we want to consume the orders. This query is taken as a filter for retrieving the orders. To create this new filter/search method, under Repository tab of the <code>C_Order</code> table, create a new record with the following data:</p> Field Value Method Name <code>findSalesOrder</code> \u00a0Query <code>select o from Order o where o.documentType.id = :documentType order by o.documentNo</code> <p></p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#creating-a-new-search-parameter","title":"Creating a New Search Parameter","text":"<p>As you can see in the query above, we use a parameter called <code>:documentType</code>.  We can add this type of parameter to use it later by adding a corresponding value to it and filtering depending on the current needs. To define the parameter, we need to create a new row on the Search Parameter tab of the Search tab. Fill it with the following settings:</p> Field Value Line <code>10</code> Name <code>documentType</code> Type <code>String</code> <p>In our case, we will filter depending on the Document Type of the orders.</p> <p></p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#creating-a-new-spring-boot-project","title":"Creating a New Spring Boot Project","text":"<p>Now that we have declared the projection, fields, repository, and searches on Etendo Classic, we will need to create a new spring project to make use of these JPA resources that we have created just before. Next, you will find the steps to create the Spring Boot project and add it as a module on Etendo RX.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#project-creation","title":"Project Creation","text":"<ol> <li>Visit Spring Initializr to start your project setup.</li> <li> <p>Fill in the following details:</p> Field Value Project Gradle Project Language Java Spring Boot 2.7.15 (or latest 2.7.x version) <p>Project Metadata</p> Field Value Group com.tutorial Artifact rxtutorial Name rxtutorial Description Etendo RX tutorial project Package Name com.tutorial.rxtutorial Packaging Jar Java Version 11 </li> <li> <p>Add the following dependencies: Spring Web, Lombok, Config Client</p> </li> <li> <p>Click on the Generate button to download your project. The page will generate a file named <code>rxtutorial.zip</code>.</p> <p></p> </li> <li> <p>Uncompress the zip file to the platform project created in the first step, as: <code>modules_rx/com.tutorial.rxtutorial</code>.</p> </li> </ol> <p>Info</p> <p>Remember to create the <code>com.tutorial.rxtutorial</code> folder, inside of <code>modules_rx</code> before extract it.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#project-configuration","title":"Project Configuration","text":"<p>After creating the project, we need to add some configuration in order to work with Etendo Classic.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#modify-buildgradle-file","title":"Modify build.gradle File","text":"<p>Remove version of spring plugins:</p> <pre><code>plugins {\n    ...\n    id 'org.springframework.boot' version '2.7.14'\n    id 'io.spring.dependency-management' version '1.0.15.RELEASE'\n}\n</code></pre> <p>Change it to this:</p> <pre><code>plugins {\n    ...\n    id 'org.springframework.boot'\n    id 'io.spring.dependency-management'\n}\n</code></pre> <p>Gradle will get versions from the Etendo Platform project.</p> <p>Add the following dependencies in the dependencies section:</p> <pre><code>implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'\nimplementation 'org.springframework.boot:spring-boot-starter-hateoas'\nimplementation 'com.etendorx:clientrest_core:latest.integration'\n</code></pre> <p>Add the Etendo repository:</p> <pre><code>repositories {\n    mavenCentral()\n    maven {\n        url = \"https://maven.pkg.github.com/etendosoftware/etendo_rx\"\n        credentials {\n            username = \"${githubUser}\"\n            password = \"${githubToken}\"\n        }\n    }\n}\n</code></pre> <p>Note</p> <p><code>githubUser</code> and <code>githubToken</code> were configured in the first step.</p> <p>Add custom source set:</p> <p><pre><code>sourceSets {\n    main {\n        java {\n            srcDirs = [\n                'src/main/java',\n                'src-gen/main/java',\n            ]\n        }\n    }\n}\n</code></pre> After configuring the project, we will need to generate the proper files for RX. RX generate.entities task will generate java files in the <code>src-gen</code> directory. Execute <code>rx:generate.entities</code> task to do so.</p> Terminal<pre><code>./gradlew rx:generate.entities\n</code></pre>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#configuring-a-spring-boot-project","title":"Configuring a Spring Boot Project","text":"<p>Now we will configure the new spring boot project to define how it will run.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#updating-the-applicationproperties-file","title":"Updating the application.properties file","text":"<p>Modify your <code>application.properties</code> file, under the new spring boot project created on the previous steps, with the following configurations:</p> application.properties<pre><code>config.server.url=http://localhost:8888\nspring.config.import=configserver:${config.server.url}\nspring.application.name=rxtutorial\nserver.port=8101\ntoken=\n</code></pre> <p>The token is empty, but now we will generate a new one. </p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#adding-the-token-value","title":"Adding the token value","text":"<p>To generate the token value we need to follow these steps:</p> <ol> <li>As System Administrator role on Etendo Classic, go to RX Services window.</li> <li> <p>Create a new row with the following values:</p> \u00a0Field Name \u00a0Property Searchkey Tutorial Secret 123 Module Tutorial - 1.0.0 - English (USA) <p></p> </li> <li> <p>Change to F&amp;B International Group Admin role.</p> </li> <li>Go to User window.</li> <li> <p>Choose a user, e.g. F&amp;B ES User</p> <p>Info</p> <p>Change the password for this record, you will need it later. Also, check that the user is active.</p> </li> <li> <p>In the tab RX Services Access create a new row and fill it with the following values:</p> Field Name \u00a0Property Organization * RX Services Tutorial Default Role F&amp;B Espa\u00f1a, S.A - Sales Default Org F&amp;B Espa\u00f1a, S.A <p></p> </li> <li> <p>Let's run RX so we can make the request to the Auth service:</p> Terminal<pre><code>./gradlew rx:rx\n</code></pre> </li> <li> <p>Open Postman and we will make an authenticate request.</p> <pre><code>Verbose: POST\nURL: http://localhost:8094/api/authenticate\nBody:\n{\n  \"username\":\"F&amp;BESUser\",\n  \"password\":\"EtendoAdmin1\",\n  \"service\":\"Tutorial\",\n  \"secret\":\"123\"\n}\n</code></pre> <p>Warning</p> <p>Remember the password changed before.</p> <p></p> </li> <li> <p>Take the token under the response and fill in the token property on the <code>application.properties</code> of the tutorial module.</p> </li> </ol>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#adding-component-scan-annotation-to-the-application-class","title":"Adding Component Scan Annotation to the Application Class","text":"<p>To scan your application for annotated components, add the <code>@ComponentScan</code> annotation to your Application class with the necessary base packages:</p> <p>Info</p> <p>The path to the application class, in this case, is: <code>modules_rx/com.tutorial.rxtutorial/src/main/java/com/tutorial/rxtutorial/RxtutorialApplication.java</code></p> <pre><code>@ComponentScan({\n    \"com.tutorial.rxtutorial\",\n    \"com.etendorx.clientrest.base\",\n})\n</code></pre> <p>Warning</p> <p>Remember to add the import for ComponentScan annotation:  <pre><code>...\nimport org.springframework.context.annotation.ComponentScan;\n...\n</code></pre></p> <p>Hence, your Application class should look like:</p> <pre><code>package com.tutorial.rxtutorial;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.ComponentScan;\n\n@SpringBootApplication\n@ComponentScan({\n    \"com.tutorial.rxtutorial\",\n    \"com.etendorx.clientrest.base\",\n})\npublic class RxtutorialApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(RxtutorialApplication.class, args);\n  }\n\n}\n</code></pre>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#creating-a-new-spring-boot-service","title":"Creating a New Spring Boot Service","text":"<p>In this last step before launching the microservice, we will create the logic to consume the orders using the projection and all the JPA resources that we defined in the previous steps.  Follow the instructions below to create a new service:</p> <ol> <li> <p>Create a new file at the following path:</p> <pre><code>modules_rx/com.tutorial.rxtutorial/src/main/java/com/tutorial/rxtutorial/RxtutorialService.java\n</code></pre> </li> <li> <p>Then, copy and paste the following code into the file:</p> <pre><code>package com.tutorial.rxtutorial;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.etendorx.clientrest.base.RestUtils;\nimport com.etendorx.clientrest.base.RestUtilsException;\nimport com.tutorial.rxtutorial.entities.org.openbravo.model.common.order.OrderRxtutorialModel;\n\n@RestController\n@RequestMapping(path = \"/api\")\npublic class RxtutorialService {\n  @Autowired\n  RestUtils restUtils;\n\n  @GetMapping(path = \"/\")\n  public String get() throws RestUtilsException {\n    String url = \"/Order/search/findSalesOrder?documentType=AB22CE8FFA5E4AF29F2AC90FCDD400D8&amp;projection=rxtutorial\";\n    var orders = restUtils.getList(url, OrderRxtutorialModel.class);\n    StringBuilder html = new StringBuilder(\"&lt;html&gt;\");\n    html.append(\"&lt;head&gt;\");\n    html.append(\"&lt;style type=\\\"text/css\\\"&gt;html {font-family: sans-serif;}&lt;/style&gt;\");\n    html.append(\"&lt;/head&gt;\");\n    html.append(\"&lt;title&gt;Orders&lt;/title&gt;&lt;/head&gt;\");\n    html.append(\"&lt;body&gt;\");\n    html.append(\"&lt;h2&gt;Orders&lt;/h2&gt;\");\n    html.append(\"&lt;table&gt;\");\n    for (OrderRxtutorialModel o : orders) {\n      html.append(\n          \"&lt;tr&gt;\" +\n              \"&lt;td&gt;\" + o.getDocumentNo() + \"&lt;/td&gt;\" +\n              \"&lt;td&gt;\" + o.getBusinessPartnerName() + \"&lt;/td&gt;\" +\n              \"&lt;td&gt;\" + o.getDocumentTypeName() + \"&lt;/td&gt;\" +\n              \"&lt;td&gt;\" + o.getGrandTotalAmount() + \"&lt;/td&gt;\" +\n              \"&lt;/tr&gt;\"\n      );\n    }\n    html.append(\"&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;\");\n    return html.toString();\n  }\n}\n</code></pre> <p>This file will display a simple HTML page with the retrieved orders. But first, we will take a look at the class that we just created.</p> <p><pre><code>String url = \"/Order/search/findSalesOrder?documentType=AB22CE8FFA5E4AF29F2AC90FCDD400D8&amp;projection=rxtutorial\";\n</code></pre>   This URL is the one that the process will use to consume the service, as you can see, we add here the Search filter that we created before and give it the document type parameter, with one document type id of the order that we will filter. Also, we are adding the projection to use too, same as before, it is the one created before.</p> <pre><code>var orders = restUtils.getList(url, OrderRxtutorialModel.class);\n</code></pre> <p>The orders variable will store all the orders that will be filtered with our request, as you can see, the method <code>getList</code> receives two parameters, the first one is the URL that we will use to make the request, and the second one is the model class of the retrieved object.</p> </li> <li> <p>Then, we simply create a StringBuilder as an HTML page that will be shown on the browser.</p> </li> </ol>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#run-rx-services","title":"Run RX Services","text":"<p>To simplify RX executions you have a simplified run task:</p> Terminal<pre><code>./gradlew rx:rx\n</code></pre> <p>Warning</p> <p>Remember to configure the Auth service as described on the Getting Started page.</p>"},{"location":"developer-guide/etendo-rx/tutorials/creating-a-new-microservice/#run-tutorial-project","title":"Run tutorial project","text":"<p>Now we are able to run our new microservice. For that, execute the following task:</p> Terminal<pre><code>./gradlew :com.tutorial.rxtutorial:bootRun\n</code></pre> <p>Open your browser and you can view the generated page with the following URL: http://localhost:8101/api/</p> <p>Success</p> <p>You have successfully created a fully working RX service.</p>"},{"location":"getting-started/installation/","title":"Install Etendo Classic","text":"","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#overview","title":"Overview","text":"<p>This section explains how to install a new Etendo environment. It includes:</p> <ul> <li>Tutorial about the Etendo installation.</li> <li>The steps to install Etendo.</li> </ul>","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#tutorial","title":"Tutorial","text":"","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<p>This section outlines the System Requirements.</p>","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#postgresql-configuration","title":"PostgreSQL Configuration","text":"<p>Check this article to configure PostgreSQL correctly: PostgreSQL Configuration</p>","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#install-etendo","title":"Install Etendo","text":"JAR Format Source Format Etendo ISO  Database and Tomcat Dockerized","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#steps-to-install-etendo-in-jar-format","title":"Steps to Install Etendo in JAR Format","text":"<ol> <li> <p>Clone Etendo Base project in a temporal directory.</p> Terminal<pre><code>cd /tmp\ngit clone https://github.com/etendosoftware/etendo_base.git EtendoERP \n</code></pre> </li> <li> <p>Copy the sources in <code>/opt/EtendoERP</code> folder.</p> Terminal<pre><code>mv EtendoERP/* /opt/EtendoERP/\ncd /opt/EtendoERP\n</code></pre> </li> <li> <p>Modify the <code>gradle.properties</code> file with your GitHub Credentials. Create the credentials by following this guide.</p> gradle.properties<pre><code>nexusUser=\nnexusPassword=\ngithubUser=&lt;username&gt;\ngithubToken=&lt;*******&gt;\n</code></pre> </li> <li> <p>Change the <code>build.gradle</code> file, uncomment the core dependency in the dependencies section:</p> build.gradle<pre><code>implementation('com.etendoerp.platform:etendo-core:&lt;version&gt;')\n</code></pre> <p>Info</p> <p>To know the available versions of Etendo Classic, please visit the Release Notes page.</p> </li> <li> <p>Modify the <code>gradle.properties</code> file with your environment variables, if it is necessary:</p> gradle.properties<pre><code>context.name=etendo\n\nbbdd.sid=etendo\nbbdd.port=5432\nbbdd.systemUser=postgres\nbbdd.systemPassword=syspass\nbbdd.user=tad\nbbdd.password=tad\n\norg.gradle.jvmargs=-Dfile.encoding=UTF-8\n</code></pre> </li> <li> <p>Dependencies</p> Terminal<pre><code>./gradlew dependencies\n</code></pre> </li> <li> <p>Setup      Terminal<pre><code>./gradlew setup\n</code></pre></p> </li> <li>Installation      Terminal<pre><code>./gradlew install smartbuild\n</code></pre></li> <li> <p>Start the Tomcat, in case of Linux you can run:     Terminal<pre><code>sudo /etc/init.d/tomcat start\n</code></pre></p> <p>Note</p> <p>If you want to run Etendo locally, go to Run Etendo Development Environment.</p> </li> <li> <p>Open your browser in <code>https://&lt;Public server IP&gt;/&lt;Context Name&gt;</code></p> </li> </ol>","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#steps-to-install-etendo-in-sources-format","title":"Steps to Install Etendo in Sources Format","text":"<ol> <li> <p>Clone Etendo Base project in a temporal directory.</p> Terminal<pre><code>cd /tmp\ngit clone https://github.com/etendosoftware/etendo_base.git EtendoERP \n</code></pre> </li> <li> <p>Copy the sources in <code>/opt/EtendoERP</code> folder.</p> Terminal<pre><code>mv EtendoERP/* /opt/EtendoERP/\ncd /opt/EtendoERP\n</code></pre> </li> <li> <p>Modify the <code>gradle.properties</code> file with your GitHub Credentials. Create the credentials by following this guide.</p> gradle.properties<pre><code>nexusUser=\nnexusPassword=\ngithubUser=&lt;username&gt;\ngithubToken=&lt;*******&gt;\n</code></pre> </li> <li> <p>By default, the latest core version available will be expanded but if there is a need to change it, edit the <code>build.gradle</code> file changing the <code>coreVersion = \"(&lt;version&gt;,&lt;version&gt;)\"</code>.</p> build.gradle<pre><code>etendo {\n    coreVersion = \"&lt;version&gt;\"\n}\n</code></pre> <p>Info</p> <p>To know the available versions of Etendo Classic, please visit the Release Notes page.</p> </li> <li> <p>Expand Etendo Base</p> Terminal<pre><code>./gradlew expand \n</code></pre> </li> <li> <p>Modify the <code>gradle.properties</code> file with your environment variables, if it is necessary:</p> gradle.properties<pre><code>context.name=etendo\n\nbbdd.sid=etendo\nbbdd.port=5432\nbbdd.systemUser=postgres\nbbdd.systemPassword=syspass\nbbdd.user=tad\nbbdd.password=tad\n\norg.gradle.jvmargs=-Dfile.encoding=UTF-8\n</code></pre> </li> <li> <p>Setup: to apply or create the initial configurations</p> Terminal<pre><code>./gradlew setup\n</code></pre> </li> <li> <p>Installation: Create the database, compile the sources and deploy to Apache Tomcat</p> Terminal<pre><code>./gradlew install smartbuild\n</code></pre> </li> <li> <p>Make sure you have the following PostgreSQL configuration in your <code>postgresql.conf</code>, this file is located wherever you have postgresql installed</p> Terminal<pre><code>lc_numeric = 'en_US.UTF-8'\nmax_locks_per_transaction = 128\n</code></pre> <p>Note</p> <p>After modifying the file restart postgresql service</p> </li> <li> <p>Start the Tomcat, in case of Linux you can run:</p> Terminal<pre><code>sudo /etc/init.d/tomcat start\n</code></pre> <p>Note</p> <p>If you want to run Etendo locally, go to Run Etendo Development Environment.</p> </li> <li> <p>Open your browser in <code>https://&lt;Public server IP&gt;/&lt;Context Name&gt;</code></p> </li> </ol>","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#steps-to-install-the-etendo-iso","title":"Steps to Install the Etendo ISO","text":"<ol> <li> <p>Download the Etendo ISO from the Etendo ISO - Release Notes page.</p> </li> <li> <p>Burn the Etendo ISO image into a USB stick. It is recommended to use balenaEtcher on Linux or MacOS and Rufus on Windows.</p> <p>Tip</p> <p>If you are installing the Etendo ISO on a virtual machine, it is recommended to use Qemu along with a graphical interface such as Virt-Manager (Linux) or UTM (MacOS) to easily manage your virtual environments. </p> </li> <li> <p>Start the system using the Etendo ISO image. You will be prompted:</p> <ul> <li> <p>Network Connections: Verify that you are on a network with an internet connection and that an IP address is correctly assigned to your server.</p> </li> <li> <p>Guide Storage Configuration: Select the disk where you want to run the installation. If you only have one disk, proceed to the next step.</p> </li> <li> <p>Storage Configuration: Same as the previous step.</p> </li> <li> <p>Profile Setup: Enter your name, the server's name, and the user etendo with the password of your choice.</p> </li> </ul> </li> <li> <p>Wait for the operating system installation and server upgrade to take place. When prompted, select reboot now.</p> </li> <li> <p>After the restart, the final server configuration will begin. Wait for it to finish, and the server will be ready.</p> </li> </ol> <p>Steps to Install the Etendo ISO without Internet Connection</p> <p>If you do not have an internet connection during installation, follow these additional steps:</p> <ol> <li> <p>Follow the same procedure outlined in the previous section, Steps to Install the Etendo ISO with Internet Connection up to the network configuration stage.</p> <ul> <li>Network Configuration: In this section, if you do not have an internet connection, select Continue without internet.</li> </ul> </li> <li> <p>After the operating system installation is complete, restart the server as prompted.</p> </li> <li> <p>Log in to the server using the username and password you configured during installation.</p> </li> <li> <p>Configure the network settings as desired to establish an internet connection.</p> </li> <li> <p>Once connected to the internet, log in as the superuser: <code>sudo su</code>.</p> </li> <li> <p>Begin the installation process by running the command: <code>etendo-install</code>.</p> </li> <li> <p>After the installation is finished, the server will be ready for use.</p> </li> </ol>","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/installation/#steps-to-install-etendo-with-postgres-database-and-tomcat-dockerized","title":"Steps to Install Etendo with Postgres Database and Tomcat Dockerized","text":"<p>The Docker Management module allows for the distribution of the infrastructure needed to configure Etendo Classic within Etendo modules, which include Docker containers for each service. Specifically, the Docker Management module includes the PostgreSQL Database Service and the Dockerized Tomcat Service module, which, as its name suggests, provides the Tomcat service. These modules are part of the Platform Extensions bundle, which will be covered in this step-by-step guide on how to install them.</p> <p>Info</p> <p>In this guide we will assume the installation of Etendo Classic in Sources format, in case you want to install it in JAR format you should consult the changes in the corresponding tab.</p> <ol> <li> <p>Clone Etendo Base project in a temporal directory.</p> Terminal<pre><code>cd /tmp\ngit clone https://github.com/etendosoftware/etendo_base.git EtendoERP \n</code></pre> </li> <li> <p>Copy the sources in <code>/opt/EtendoERP</code> folder.</p> Terminal<pre><code>mv EtendoERP/* /opt/EtendoERP/\ncd /opt/EtendoERP\n</code></pre> </li> <li> <p>Modify the <code>gradle.properties</code> file with your GitHub Credentials. Create the credentials by following this guide.</p> gradle.properties<pre><code>nexusUser=\nnexusPassword=\ngithubUser=&lt;username&gt;\ngithubToken=&lt;*******&gt;\n</code></pre> </li> <li> <p>By default, the latest core version available will be expanded but if there is a need to change it, edit the <code>build.gradle</code> file changing the <code>coreVersion = \"&lt;version&gt;\"</code>.</p> build.gradle<pre><code>etendo {\n    coreVersion = \"&lt;version&gt;\"\n}\n</code></pre> <p>Info</p> <p>To know the available versions,, please visit the Etendo Classic Release Notes page.</p> </li> <li> <p>Expand Etendo Classic</p> Terminal<pre><code>./gradlew expand \n</code></pre> </li> <li> <p>Add Platform Extensions bundle dependency, to include the  dockeridez platform features</p> build.gradle<pre><code>dependencies {\n    //Add other dependencies bellow\n    implementation ('com.etendoerp:platform.extensions:2.6.0') // version 2.6.0 or later\n}\n</code></pre> </li> <li> <p>Modify the <code>gradle.properties</code> file with your environment variables</p> gradle.properties<pre><code>context.name=etendo\n\nbbdd.sid=etendo\nbbdd.port=5434\nbbdd.systemUser=postgres\nbbdd.systemPassword=syspass\nbbdd.user=tad\nbbdd.password=tad\n\norg.gradle.jvmargs=-Dfile.encoding=UTF-8\n\ndocker_com.etendoerp.tomcat=true\ndocker_com.etendoerp.docker_db=true\n</code></pre> <p>Info</p> <p>The dockerized database service will run on the port defined in the <code>bbdd.port</code> variable, we suggest using port <code>5434</code> to avoid conflict if you have a local Postgres instance using the default port.</p> <p>By default the Tomcat service will be up on port <code>8080</code>, in case that port is busy you can use the variable <code>docker_com.etendoerp.tomcat_port=&lt;port&gt;</code>.</p> </li> <li> <p>Launching Dockerized Tomcat and Database services</p> <p>Terminal<pre><code>./gradlew resources.up\n</code></pre>  Postgres database and Tomcat service running dockerized, if necessary you can access the log of each service.  </p> </li> <li> <p>Setup: to apply or create the initial configurations</p> Terminal<pre><code>./gradlew setup\n</code></pre> </li> <li> <p>Installation: Create the database, compile the sources and deploy to Apache Tomcat</p> Terminal<pre><code>./gradlew install smartbuild\n</code></pre> </li> <li> <p>After the smartbuild task finish, the Tomacat service will  automatically restart,  open your browser in: </p> <p><code>https://&lt;Public server IP&gt;/&lt;context.name&gt;</code> or in case that you run in local environment <code>http://localhost:8080/etendo</code></p> </li> </ol>","tags":["Etendo Installation","Installation Guide","Docker Management","PostgreSQL Setup","Etendo Environment","Install","Etendo Install"]},{"location":"getting-started/overview/","title":"Getting Started","text":"","tags":["Etendo Classic","Quick Setup","Prerequisites","Installation","User Interface"]},{"location":"getting-started/overview/#getting-started","title":"Getting Started","text":"<p>We're excited to guide you through the swift setup of Etendo Classic, enabling you to have it up and running within a matter of a few simple steps.  Before you embark on this journey, it's important to ensure that you've met the necessary technical prerequisites for the Etendo installation process.  Additionally, take a moment to acquaint yourself with the intuitive navigation interface, which will prove invaluable as you navigate the software's features. To expedite and streamline your workflow, we've thoughtfully provided convenient shortcuts to make your work easier and faster.</p> <p> Requirements  Install Etendo  Navigating the Interface </p>","tags":["Etendo Classic","Quick Setup","Prerequisites","Installation","User Interface"]},{"location":"getting-started/requirements/","title":"Requirements","text":"","tags":["Etendo Requirements","Web Browsers","Network Connectivity","Java Platform","Software Stack","Etendo Classic","Requirements"]},{"location":"getting-started/requirements/#overview","title":"Overview","text":"<p>This section explains the stack of tools and requirements to install Etendo.</p>","tags":["Etendo Requirements","Web Browsers","Network Connectivity","Java Platform","Software Stack","Etendo Classic","Requirements"]},{"location":"getting-started/requirements/#client-web-browsers","title":"Client: web browsers","text":"Web browser Minimum required Recommended version Google Chrome 95 97 or higher Apple Safari 12 14 or higher Mozilla Firefox ESR 78 90 or higher Microsoft Edge (Chromium based) 95 97 or higher","tags":["Etendo Requirements","Web Browsers","Network Connectivity","Java Platform","Software Stack","Etendo Classic","Requirements"]},{"location":"getting-started/requirements/#client-network-connectivity","title":"Client: network connectivity","text":"<p>Here, there are example configurations, depending on the number of concurrent users to be supported. These assume the server is hosted with a fast connection, so it's network is not a limiting factor.</p> Downstream bandwidth Concurrent users 3Mbit/s &lt;=10 10MBit/s &lt;=20 100MBit/s &lt;=100","tags":["Etendo Requirements","Web Browsers","Network Connectivity","Java Platform","Software Stack","Etendo Classic","Requirements"]},{"location":"getting-started/requirements/#server-java-based-multiplatform","title":"Server: Java based = multiplatform","text":"<p>Etendo runs wherever the Java JDK works. This currently means:</p>","tags":["Etendo Requirements","Web Browsers","Network Connectivity","Java Platform","Software Stack","Etendo Classic","Requirements"]},{"location":"getting-started/requirements/#operating-systems","title":"Operating systems:","text":"<p>  Windows    Linux distribution    FreeBSD    Mac OSX  Solaris and more.  </p>","tags":["Etendo Requirements","Web Browsers","Network Connectivity","Java Platform","Software Stack","Etendo Classic","Requirements"]},{"location":"getting-started/requirements/#architectures","title":"Architectures:","text":"<p>x86, x86_64, IA64, Sparc, PowerPC, AIX. Either PostgreSQL should also be supported by your target system</p>","tags":["Etendo Requirements","Web Browsers","Network Connectivity","Java Platform","Software Stack","Etendo Classic","Requirements"]},{"location":"getting-started/requirements/#server-software-stack","title":"Server: software stack","text":"Stack component Supported versions Recommended version Instalation Guide   Java SE 17 Latest 17.x Java Instalation Guide   PostgreSQL 14.x, 16.x Amazon RDS Latest 16.x Postgres Instalation Guide    Apache Tomcat 9.0.x Latest 9.0.x Tomcat Instalation Guide   Oracle 19c (LTS) 19c (LTS)","tags":["Etendo Requirements","Web Browsers","Network Connectivity","Java Platform","Software Stack","Etendo Classic","Requirements"]},{"location":"getting-started/user-interface/grid-and-forms/","title":"Grid and Forms","text":"","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#grid-and-form-view","title":"Grid and Form View","text":"<p>Etendo allows the customization of grid and form views. Customized windows and form views are stored once saved in the Window Personalization window.</p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#grid-view","title":"Grid View","text":"","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#form-view","title":"Form View","text":"","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#show-table-and-form","title":"Show Table and Form","text":"<p>With this button  in the toolbar, the user can have both grid and form view of the same record and use them more efficiently.</p> <p></p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#grid-view_1","title":"Grid View","text":"<p>The grid view functions as the base view and often as a starting point to filtering and drilling down. The user can open a record in the form view on top of the grid. The interaction metaphor that is used is that of a file explorer of an operating system. The grid is the folder with files, a double click opens the record. The record in form view can be closed at any time by clicking the close (X) button in the top right corner of the form.</p> <p>A record (Form view) in the grid can be opened via:</p> <ul> <li>A double click on the row.</li> <li>Pressing ENTER on the keyboard.</li> <li>Clicking the form/document icon on the left side of the row.</li> </ul>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#column-filtering","title":"Column Filtering","text":"<p>On top of the columns in a grid, the user will find column filters. These filters can be applied to find specific records. There are several types of column filters:</p> <ul> <li>Regular column filters: These are fields that are empty by default, but once the user starts typing the first characters of a search term, the grid will be filtered in real-time.</li> <li>Date column filters: Clicking it will launch a dialog where the user can set a range, for example, 8 days ago till today.</li> <li>Dropdown reference column filters: filters on references to other data, for example, from a sales order to a business partner. You can filter on multiple values, if there are many values to filter on then you can scroll in the dropdown box.</li> <li>Dropdown column filters: Filters that contain a limited set of values. Just open the dropdown and select a value.\u00a0</li> </ul> <p></p> <p>The following symbols can be used in regular column filter fields to create more complex filter expressions. Note that once you start typing a filter expression in a numerical value column, the real-time filtering is switched off and you will need to hit Enter to apply the filter.</p> Symbol Filter Example Meaning &lt; less than (also works for strings) &lt;100 Only shows amounts less than 100 &gt; greater than (also works for strings) &gt;100 Only shows amounts greater than 100 ! not equal (also works for strings) !100 Shows everything except amounts that equal 100 ^ starts with ^H Only shows values that start with \"H\" | ends with H Only shows values that end with \"H\" !^ does not start with !^H Only shows values that do not start with \"H\" !@ does not end with !@H Only shows values that do not end with \"H\" ~ contains (this is the default for most column filters) ~buenas Only shows values that contain \"buenas\" !~ does not contain !~buenas Only shows values that do not contain \"buenas\" ## is Null ## Only shows records without a value in this column (works in regular and date column filters) !## is not Null !## Only shows records with a value in this column (works in regular and date column filters) \\== exact match (for fields where 'contains' is the default) \\==FV/1 Only shows values that equal exactly \"FV/1\" a...b range (between a and b) 0...100 Only shows values between 0 and 100. or OR boolean check or cash Only shows records that contain \"check\" or \"cash\". Note if you want to use the term 'or' as a filter value then, you should prefix it with a '\\'. So to get all records containing the value 'or' filter using this value: \\or. and AND boolean check and cash Only shows records that contain \"check\" and \"cash\". Note if you want to use the term 'and' as a filter value then, you should prefix it with a '\\'. So to get all records containing the value 'and' filter using this value: \\and. <p>Filters can be cleared by clicking the funnel icon in the top right of the grid.</p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#right-click","title":"Right Click","text":"<p>The right click can be used to find more options about any section of the grid view. In this drop-down menu, keyboard shortcuts are displayed, columns can be added to the view and summary options can be found.</p> <p></p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#bulk-processing","title":"Bulk Processing","text":"<p>Etendo allows the user to massively process records. This process engine enables the user to select an input entity, create criteria to get results, run actions for the input or define output which can be later used as input for other actions. </p> <p></p> <p>Info</p> <p>The document actions displayed when selecting more than one document will be all the ones available based on the statuses of the selected records, depending on the type of document being selected.</p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#save-view","title":"Save View","text":"<p>Save View stores grid and form settings, column filters and even the entire layout of the screen, for example, the position of the splitter bar between the header and lines. With this option, the user can rearrange the grid, adapt it to their task and save this view to open it at another time. The user can access saved views through a pull down menu that sits underneath the Save View button in the toolbar.</p> <p></p> <p>A saved view can be set as default and can be deleted. The active view is indicated by a little arrow in front of the view name.</p> <p>Info</p> <p>As an administrator, you are able to save predefined views on different levels (client, org, role) which are made available to users. As a regular user, you can only edit/save views on your own levels and not change views entered by an administrator.</p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"Shortcut Action Ctrl + Shift + f Jump to column filters Esc Returns to grid while keeping the filter value Alt + Del Clear column filters Ctrl + i Insert row Del Delete row F2 Edit row Ctrl + F2 Switch to form view (while editing) Enter Open row (into form view) Ctrl + Alt + Shift +  Execute process (yellow buttons) Esc Cancel editing","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#form-view_1","title":"Form View","text":"<p>In the form view, the user has access to detailed information about each record.</p> <p>In this view, each field title can be followed by two different icons:</p> By clicking here, the user can open a new tab with more specific information. This shows the field is required to be complete. The field has a yellow background.","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#form-personalization","title":"Form Personalization","text":"<p>This button in the toolbar  allows the user to customize forms to include necessary fields and features that suit their needs best.</p> <p></p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#user-messages","title":"User Messages","text":"<p>User Messages are displayed at the top of the view and their function is to inform or warn the user about an exception, error or other situation in the application that needs the user's attention. There are four different types of user messages.</p> <p>Info: This type of message is used to communicate interesting but not essential information.</p> <p></p> <p>Success: This type of message is displayed after successful process execution.</p> <p></p> <p>Error: This type of message is used for exceptions and errors. A typical case is a process that was not executed successfully.</p> <p></p> <p>Warning: This type of message is used to inform the user about a system status or event that might cause a problem.</p> <p></p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#status-bar","title":"Status Bar","text":"<p>The Status Bar conveys the editing status of the document (New, Editing or Saved) together with a user-defined set of read-only attributes. These allow the user to get an overview of the document without having to scan the remainder of the form. The status bar is only visible in form view.</p> <p></p> 1 Status 2 Buttons <p>On the right side of the status bar, the following buttons are available:</p> Browse to next record Browse to previous record Maximize form Restore form to previous size Close form (save and return to grid.png)","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#keyboard-shortcuts_1","title":"Keyboard Shortcuts","text":"Shortcut Action Alt + ArrowDown Open dropdown Space Once a multi-select dropdown list is opened, it (un)selects the focused item. Used in FK and List references in the grid filter Ctrl + Enter Open selector Ctrl + Alt + Enter Open on tab (\"link out\") Alt + Shift + Enter Maximize or restore form view Ctrl + Shift + x Save &amp; Close Esc Close (same as X top-right icon) Alt + Shift + PageUp Next record Alt + Shift + PageDown Previous record Ctrl + Del Delete Ctrl + s Save Ctrl + d New record in form view","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#grid-summary-function-update-on-selection","title":"Grid summary function update on selection","text":"<p>Via the set summary function through the right click button, it is possible to keep on updating the number of selected records in the grid. This function allows the user to dynamically get summary functions of a subset of records in the filtered window. </p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/grid-and-forms/#tabs","title":"Tabs","text":"<p>Etendo allows the user to have multiple transactions opened at the same time on different tabs. You can switch between active tabs. The active tab is highlighted in blue color with a thin yellow line on top of it. The inactive tabs remain greyed out.</p> <p></p> <p>Tabs can be closed by pressing the X button:</p> <p>It is possible to reorder tab position. To do it, drag the tab and drop it in the desired position:</p> <p>In case of tab overflow, when the total width of the tabs exceeds the available horizontal space, three yellow arrows appear to the right of the last tab that allow you to scroll through the tabs and easily navigate to one:</p> <p></p> <p>This work is a derivative of \"User Interface Introduction\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Grid View","Form View","Data Filtering","User Customization","Keyboard Shortcuts"]},{"location":"getting-started/user-interface/navigation/","title":"Navigation","text":""},{"location":"getting-started/user-interface/navigation/#navigation","title":"Navigation","text":"<p>To get to a window, type a part of its name in the Create New button or the Quick Launch button. Etendo also offers a tree menu for easy discovery.</p>"},{"location":"getting-started/user-interface/navigation/#quick-launch","title":"Quick Launch","text":"<p>Info</p> <p>For more information about Quick Launch functionalities, see the Quick Menu section in the Top Navigation Bar section.</p>"},{"location":"getting-started/user-interface/navigation/#application-menu-tree-structure","title":"Application menu tree structure","text":"<p>The Application menu is used to make all the application elements accessible to the user. Also, the last three searches are shown in this window.</p> <p></p>"},{"location":"getting-started/user-interface/navigation/#icon-references","title":"Icon references","text":"<p>There are different types of menu items which are identified with different icons:</p> Folders are used to organize other items within them. They can be expanded or collapsed to show their contents by clicking them. Reports explode information from Etendo Classic. Processes allow complex operations to be performed. Some examples would be to import data from a file or the automatic creation of invoices from purchase orders. Windows allow the user to create, modify or query records. By records, it is meant any entity that has its own data within Etendo Classic, such as a product, an order, an invoice, etc."},{"location":"getting-started/user-interface/navigation/#application-areas","title":"Application Areas","text":"<p>Etendo is split into different application areas. Each area is represented by a separate folder accessible from the Application menu in the top navigation screen area.</p>"},{"location":"getting-started/user-interface/navigation/#window-structure","title":"Window structure","text":"<p>The Toolbar contains action buttons and process buttons. Action buttons are generic and can be applied to almost all selected records.\u00a0 Process buttons are record specific and depend on the record status and the active level (header or lines or lower).</p> <p></p> 1 Action buttons 2 Process buttons"},{"location":"getting-started/user-interface/navigation/#buttons","title":"Buttons","text":"<p>The action buttons perform the following actions:\u00a0 </p> Create a new record in a form Insert a new row in grid view Save your changes in the database Close the current record and return to grid view Cancel changes and return to last saved state Delete the current selected record(s) from the database Refresh the current data from the database Export to spreadsheet Upload new attachment Copy record Print record Email Show audit trail Get a direct link to this view or record Form personalization Save view Show table and form <p>This work is a derivative of \"User Interface Introduction\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>"},{"location":"getting-started/user-interface/workspace/","title":"Workspace","text":"","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#login","title":"Login","text":"<p>Access Etendo through a Web browser by entering Etendo URL into the address bar of the browser.</p> <p>The login window opens up:</p> <p></p> <p>Info</p> <p>In case the login page is not being displayed, please verify the correctness of the URL, or contact your system administrator.</p> <p>Enter your user name and password. The user name and password are assigned by the system administrator.</p> <p>Tip</p> <p>If you do not know your user name and password contact your system administrator.</p> <p>Click Let\u2019s Continue and the Etendo Home Page shows up.</p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#welcome-page","title":"Welcome Page","text":"<p>The first tab contains Etendo workspace, a customized portal-style home page. Here you will find:\u00a0</p> <p></p> <p>1. Left bar: In this section, the user\u2019s recent view content and documents are shown. In the Manage Workspace subsection at the bottom of this bar, the user can also add and administrate widgets.</p> <p>2. Widgets:\u00a0 This section is for the user to customize by adding direct access to resourceful information Widgets in the user\u2019s workspace tab. Widgets are customizable and the available set will be dependent on role and instance activation status. See how to embed a Widget into a window tab:</p> <p>Info</p> <p>To add widgets, click the Add Widget link in the left column in the workspace and select from the library.</p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#top-navigation","title":"Top Navigation","text":"<p>The top navigation bar offers the following menus or functionalities:</p> <p></p> 1 Quick Menu 2 Quick Launch 3 Application Menu 4 Alerts 5 Help 6 User section 7 End session <p>From the top navigation bar, the user can launch new documents via the Quick Menu functionalities or jump to existing documents via the Application menu.</p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#quick-menu","title":"Quick Menu","text":"<p>Create New:\u00a0 Through faster navigation, the user can access the creation of a new document, saving time and increasing the user experience. By using this functionality, a new document of a specific type is created on a new tab in form view.</p> <p></p> <p>Quick Launch: It is a browser.\u00a0 By entering the first couple of letters of the name of the document type, suggestions are offered for the type of document you are looking for. The browser shows the user\u2019s last three searches.</p> <p></p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#application","title":"Application","text":"<p>Read more in the Application areas section.</p> <p>Info</p> <p>The contents of the Application Menu depend on the user's role. For example, one user can have various roles and see different things with each one.</p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#alerts","title":"Alerts","text":"<p>An alert is a notification that informs or warns the user about a critical or important situation. In this section, you can see and edit all your active alerts.</p> <p>The number of new alerts is shown in the top navigation as Alerts (n). This link takes you to the Alerts Management tab. This tab shows four sections, each one representing a status or stage in the alert life cycle:</p> <ul> <li>New alerts: Alerts that you have not marked as read/acknowledged and that are not ignored nor solved.</li> <li>Pending alerts: Alerts the user has marked as read/pending because they do not want to see them in the new section anymore. The user would do this, for example, when they have taken care of the problem but this has not been updated in the system. A typical example is: Stock of product x dropped below critical level. The user just placed a new order by phone**,** but it will still take a day to receive the orders.</li> <li>Ignored alerts: Alerts that the user does not want to see again. By placing them in the Ignored section, it means that they are now exceptions to the alert rule.</li> <li>Solved alerts: Alerts are automatically moved to the solved section when the system notices that the alert threshold ceased to be violated. Note that you cannot mark alerts as \u201cSolved\u201d yourself.</li> </ul>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#help","title":"Help","text":"<p>Context-sensitive help can be accessed by clicking the item Help in the top navigation bar. This action opens a new tab to provide the user with specific information about any selected window.  In this section, the user can also find information about the ERP.</p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#user-section","title":"User Section","text":"<p>The name of this section varies according to the name set up by the client.</p> <p>The User section is split in two tabs: Profile and Change Password.</p> <p></p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#profile","title":"Profile","text":"<p>In this section, you can:</p> <ul> <li>See the current role information.</li> <li>Change the session options such as role, client, organization, warehouse and language you want to work with.</li> <li>Set your default session options. Tick the \u201cset as default\u201d option to keep the same role every log in.</li> </ul> <p>Info</p> <p>Role: The profile of security for the user, defining what windows and tabs they can see. Client: Client for this installation. Organization: The client\u2019s organizational entity. Warehouse: A logistical unit with the purpose of storage and manipulation of goods. Language: The language in which the system information is shown.</p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#password","title":"Password","text":"<p>In this section, the user is able to change the password through this tab by writing the current password first and then, introducing the new password. Then, click Confirm password.</p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"getting-started/user-interface/workspace/#end-session","title":"End Session","text":"This button logs you out of the application. A confirmation dialog lets you confirm. <p>This work is a derivative of \"User Interface Introduction\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["User Login","Etendo Workspace","Navigation Bar","User Alerts","User Profile"]},{"location":"help-and-support/how-to-report-bugs/","title":"How to Report Bugs","text":"","tags":["Bug Reporting","Etendo","Error Description","Reporting Template"]},{"location":"help-and-support/how-to-report-bugs/#template-to-report-bugs","title":"Template to report bugs","text":"<p>Warning</p> <p>This structure should always be respected to report a bug in Etendo Help Center .</p> <p>Sucess</p> <p>Remember to reproduce the error beforehand in a clean environment. Etendo version must be supported  Etendo Versions</p> <p>To report a bug, a standard structure is meant to be followed. This structure is represented in the following template:</p> <ul> <li> <p>Error's description      Short description of the bug.</p> </li> <li> <p>Steps to reproduce the error     Detailed description of settings and steps to be followed to reproduce the error. It can include screen videos and/or screenshots.</p> </li> <li> <p>Expected behavior      Description of the expected behaviour without the bug.</p> </li> <li> <p>Affected Version     Version of Etendo in which the error occurs.     (Browser &amp; Version - SO &amp; Version)</p> </li> <li> <p>Solution Design (optional)     After analyzing the bug, describe how it will be solved and also if necessary, the details of implementation.</p> </li> <li> <p>Other test cases     If necessary, add more test cases.</p> </li> </ul> <pre><code> # Error's description\n\n # Steps to reproduce the error\n\n ### Required Configurations (if necessary)\n\n 1. &lt;step&gt;\n 2. &lt;step&gt;\n ...\n\n # Expected behavior\n\n # Affected Version\n \u00bfLatest/Specific?\n Version number:\n\n # Solution Design (optional)\n\n # Other test cases\n **Given:**\n **When:**\n **Then:**\n</code></pre>","tags":["Bug Reporting","Etendo","Error Description","Reporting Template"]},{"location":"help-and-support/overview/","title":"Help and Support","text":"","tags":["Help and Support","Etendo","Bug Reporting","User Assistance","Support Portal"]},{"location":"help-and-support/overview/#_1","title":"Help and Support","text":"","tags":["Help and Support","Etendo","Bug Reporting","User Assistance","Support Portal"]},{"location":"help-and-support/overview/#welcome-to-our-help-and-support-portal","title":"Welcome to our Help and Support Portal!","text":"<p>We understand that your journey with Etendo might sometimes raise questions or require assistance. That's why we've created this space as your go-to resource for all your inquiries and needs.</p> <p>You also have a standard structure for you to report bugs if needed.</p> <p> Support Service  How to Report Bugs</p>","tags":["Help and Support","Etendo","Bug Reporting","User Assistance","Support Portal"]},{"location":"help-and-support/support-service/","title":"Support Service","text":"","tags":["Etendo Support","Help Center","Technical Support","User Assistance","Contact Information"]},{"location":"help-and-support/support-service/#help-center","title":"Help Center","text":"<p>Etendo provides support to partners and users through our Etendo Help Center </p> <p>Here, the user can ask questions or send information in these sections:</p> <ul> <li> Training</li> <li> Technical Support </li> <li> Licensing and Billing Questions </li> <li> Product Trial Questions</li> <li> Other Questions</li> <li> Report a Bug</li> <li> Suggest a New Feature</li> <li> Suggest Improvement</li> </ul>","tags":["Etendo Support","Help Center","Technical Support","User Assistance","Contact Information"]},{"location":"help-and-support/support-service/#get-in-touch","title":"Get In Touch","text":"<p>If you have commercial inquiries, or if you are not yet a partner or client, you can visit the Contact Us section on the Etendo website.</p>","tags":["Etendo Support","Help Center","Technical Support","User Assistance","Contact Information"]},{"location":"live-builds/overview/","title":"Live Builds","text":"","tags":["Builds","Livebuilds","Etendo","Real-time Testing","Postgres","Oracle","Environments"]},{"location":"live-builds/overview/#_1","title":"Live Builds","text":"","tags":["Builds","Livebuilds","Etendo","Real-time Testing","Postgres","Oracle","Environments"]},{"location":"live-builds/overview/#welcome-to-the-etendo-classic-live-development-builds-this-page-holds-live-testing-instances","title":"Welcome to the Etendo Classic live development builds. This page holds live testing instances.","text":"<p>Etendo Classic with Supported Bundles  For detailed information about the installed bundles, please visit the Etendo Marketplace.</p> <p>Etendo 24.X + Bundles Etendo 25.X + Bundles </p> <p>Etendo Classic</p> <p>Etendo 24.X Etendo 25.X </p> <p>Credentials</p> <p>The default access credentials are:  Username: admin  Password: admin </p> <p>Note</p> <p>These live builds are refreshed and reset every day at 8:00 PM UTC.</p> <p>Oracle</p> <p>If your testing requirements include the Oracle database, please reach out to our support team for further assistance and access to Oracle-based environments.</p>","tags":["Builds","Livebuilds","Etendo","Real-time Testing","Postgres","Oracle","Environments"]},{"location":"user-guide/overview/","title":"User Guide - Overview","text":""},{"location":"user-guide/overview/#_1","title":"User Guide - Overview","text":""},{"location":"user-guide/overview/#welcome-to-user-software-documentation","title":"Welcome to User Software Documentation","text":"<p>In this section, we welcome you to a complete user guide to facilitate your experience working with each of our products.</p>"},{"location":"user-guide/overview/#are-you-ready-to-dive-into-the-world-of-our-software","title":"Are you ready to dive into the world of our software?","text":"<p>Whether you're looking to master the basics or explore advanced features, our guides are designed to fit your needs. If you are a developer, we suggest you visit our section created especially for you: Developer Guide.</p> <p> </p> <p> </p> <p> </p>"},{"location":"user-guide/overview/#here-you-will-find-user-guides-on-how-to-use-our-platform-with-all-etendo-classic-windows-as-well-as-guides-for-all-our-bundles-in-the-optional-features-section","title":"Here you will find user guides on how to use our platform with all Etendo Classic windows, as well as guides for all our bundles in the optional features section.","text":""},{"location":"user-guide/overview/#you-will-find-information-on-how-to-use-the-etendo-mobile-application-from-downloading-it-from-the-play-store-and-app-store-as-well-as-the-complete-user-interface","title":"You will find information on how to use the Etendo mobile application, from downloading it from the Play Store and App Store as well as the complete user interface.","text":""},{"location":"user-guide/overview/#in-this-section-you-will-find-everything-about-our-copilot-project-currently-you-have-information-about-bastian-our-artificial-intelligence-based-chatbot-that-can-answer-you-all-about-etendo","title":"In this section, you will find everything about our Copilot project. Currently you have information about Bastian, our artificial intelligence based chatbot that can answer you all about Etendo.","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/","title":"Financial Management - Getting Started","text":"","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#financial-management-getting-started","title":"Financial Management - Getting Started","text":"","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#overview","title":"Overview","text":"<p>Etendo automatically generates an accounting representation of all the transactions within the enterprise that have an economic relevance.</p> <p>Accounting is the system of tracking the assets, the debts, the income and the expenses of a business. In Etendo, most of the accounting entries are automatically created while posting documents. </p> <ul> <li>Goods Receipts and Purchase Invoices in the Procurement Management business area</li> <li>Goods Shipments and Sales Invoices in the Sales Management business area.</li> </ul> <p>Accounting entries not directly related to documents managed within a given application area can be created and posted in a G/L Journal. For instance a provision for stock depreciation accounting entry.</p> <p>There are three ways of accounting in Etendo:</p> <ul> <li> <p>To manually post each document by using the process button Post. The process button Post can be found in the window used to create a given document. For instance a purchase invoice is created and therefore could be posted in the Purchase Invoice window. This button is shown for accounting users if the Attribute ShowAcct is visible for them. This configuration is enabled through a Preference.</p> </li> <li> <p>To manually post all the documents/transactions related to a given database table for instance the table Invoices, by using the process GL posting by DB Tables</p> </li> <li> <p>or to automatically post accounting transactions of any type by scheduling the Accounting Server Process in the Process Request window.</p> </li> </ul> <p>Accounting activities such as:</p> <ul> <li>creating and opening of the accounting periods</li> <li>entering and posting accounting transactions</li> <li>managing payables and receivables accounts as well as the asset depreciation</li> <li>reviewing and submitting financial and tax reports to the official authorities</li> <li>and closing the accounting year</li> </ul> <p>are performed within the Financial Management application area.</p> <p>Finally Etendo has an integrated accounting system that combines general accounting and analytical accounting:</p> <ul> <li>General accounting aims to primary exploit dimensions such as Account (or Subaccount in Etendo terms)</li> <li>Analytical accounting aims to exploit other dimensions such as Cost Center or Campaign to get a slightly different but also rich financial information.</li> </ul> <p>In other words, Etendo allows to post transactions to the ledger which can include different dimensions:</p> <ul> <li>Those dimensions can be centrally maintained in the Client therefore are available to all the organizations within that Client. Moreover Organizations of that Client can also have additional dimensions configured separately in its General Ledger Configuration.</li> </ul> <p>Those dimensions are then available just for that Organization.</p> <ul> <li>On the other hand, those dimensions can not be centrally maintained in the Client but independently maintained in the Organization's General Ledger Configuration.</li> </ul> <p>This application area covers the Period End Close to Financial Report business flow and the Payables and Receivables Management business flow.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#payables-and-receivables-management","title":"Payables and Receivables Management","text":"<p>Payables and Receivables Management addresses customer collections and supplier payments as well as other payments not related to invoices but to orders (prepayments) or G/L Items.</p> <p></p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#configuration","title":"Configuration","text":"<p>The following setup needs to be done before performing the process:</p> <ul> <li>Payables and Receivables Document Types.</li> <li>Payment Methods.</li> <li>Financial Accounts.</li> <li>Business Partners to use above configured Payment Methods and Financial Accounts.</li> </ul> <p>Note</p> <p>It is not required to perform any additional setup for the Payables and Receivables Management business process if Food &amp; Beverage (F&amp;B) sample client shipped with Etendo by default is going to be used to explore it. The sample data set already contains the roles, warehouses, business partners, products and prices pre-configured.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#execution","title":"Execution","text":"<p>Overall the Payables and Receivables Management business process can be split into the following steps:</p> <ul> <li>the creation of the orders and invoices to be paid</li> <li>the creation of payments do not related to orders/invoices</li> <li>the review of the status of the pending payments</li> <li>the receipt of the payments made by the customers</li> <li>the payment of the supplier's invoices</li> <li>the recording of the financial account transactions</li> <li>and the reconciliation of the financial account transactions</li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#creation-of-the-ordersinvoices-to-be-paid","title":"Creation of the orders/invoices to be paid","text":"<p>In the Procure to Pay and Order to Cash business process we have seen how the orders and invoices have been generated.</p> <p>Every time that a Purchase or Sales Order is booked or a Purchase or Sales Invoice is completed a Payment Plan is created for that Order / Invoice.</p> <p>A payment plan contains the payment amount/s expected for the document and its fulfillment. At the same time the invoice  Payment Monitor section gets activated that allows tracking the invoice payment status directly from the invoice window.</p> <p>Note</p> <p>The Payment Monitor section allows to track the purchase &amp; sales invoice payment status directly from the invoice window. In this section it is possible to know whether an invoice is fully paid or not. If the invoice has not been fully paid then the Payment Monitor informs the user how much has been received, how much is pending, the due date of the next payment and the amount that is expected to be received on that date. The status is updated automatically when any payment action happens and by a background process. The date when the payment status was last time calculated is displayed in the form. Grid filtering allows to filter invoices based on fully paid or not criteria.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#creation-of-payments-do-not-related-to-ordersinvoices","title":"Creation of payments do not related to orders/invoices","text":"<p>In the Period End Close to Financial Report business process we have seen how a payment can be made or received by using a GL Journal therefore it is not related to an order/invoice but to a G/L Item.</p> <p>A G/L Item payment created in a G/L Journals implies:</p> <ul> <li>the creation of a Payment Made if the payment information is entered in the Credit line of the G/L Journal.</li> </ul> <p>The status of this payment would either be Payment Made or Awaiting Execution or Withdrawn not Cleared depending on the configuration of the payment method used and linked to the financial account where the money is taken from.</p> <ul> <li>Or the creation of a Payment Received if the payment information is entered in the Debit line of the G/L Journal.</li> </ul> <p>The status of this payment would either be Payment Received or Awaiting Execution or Deposited not Cleared depending on the configuration of the payment method used and linked to the financial account where the money is going to be deposited in.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#review-of-the-status-of-the-pending-payments","title":"Review of the status of the pending payments","text":"<p>On a periodic basis the Finance Staff reviews the status of the payments pending to be collected / to be paid by looking:</p> <ul> <li> <p>At the Payment Report and filtering by the status Awaiting Payment which means that no payment has been either received or made against the order or invoice yet.</p> <p>Overdue check-box allows to narrow down the search and to show only overdue payments.  Payment Type displays Receivables, Payables or both.</p> </li> <li> <p>In addition to this Sales and Purchase Invoice windows in grid view are available to search open invoices by setting Payment Complete field to No.</p> </li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#receipt-of-the-customers-payments","title":"Receipt of the customer's payments","text":"<p>When a Payment is Received the Finance staff can register it in different ways:</p> <ul> <li>In the Payment In window by selecting the Sales Invoices and/or Orders payment is received against.</li> </ul> <p>Note</p> <p>Many businesses do not wish to extend credit to specific customers and may therefore have a payment term that requires payment against an order. In effect this is a prepayment of an invoice. Later when an invoice is created from an order that already has a payment received against it the invoice automatically inherits the payment received against the order.</p> <ul> <li> <p>Using the Add Payment button directly within the corresponding Sales Invoice. It can be when the user has received a single payment for a particular invoice and prefers to browse for that invoice in order to allocate the payment to it.</p> </li> <li> <p>It is also possible to automate receiving of a payment on completion of a Sales Invoice through the configuration of the Payment Method.</p> </li> </ul> <p>If collection does not happen on time:</p> <ul> <li> <p>The Expected Date of the Payment Plan can be modified, preventing the debt from being overdue.</p> </li> <li> <p>The Amount due of the Payment Plan can be:      split in two or more amounts due at a later expected date.     or grouped in just one amount due at a later expected date.</p> </li> <li> <p>The outstanding balance for a customer can be totally or partially written off.</p> </li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#payment-of-the-suppliers-invoices","title":"Payment of the supplier's invoices","text":"<p>There are 3 ways to pay vendor bills:</p> <ul> <li> <p>Using the Payment Proposal process. This process supports the automatic payment of a large number of invoices based on the due dates of the lines of the Payment Plan associated with the open Purchase Invoices. The finance staff can request a proposal of all invoices to be paid based on a number of criteria, review that proposal, and then automatically make the payment.</p> </li> <li> <p>In the Payment Out window by selecting the Purchase Invoices and/or Orders payment is made against.</p> </li> </ul> <p>Note</p> <p>Many businesses do not have credit extended to them and may therefore be required to make a payment against a purchase order. In effect this is a prepayment of a purchase invoice. Later when an invoice is created from an order that already has a payment made against it the invoice automatically inherits the payment made against the order.</p> <ul> <li> <p>Using the Add Payment button directly within the corresponding Purchase Invoice. It can be when the user needs to make a single payment for a particular invoice and prefers to browse for that invoice in order to allocate the payment to it.</p> </li> <li> <p>It is also possible to automate making of a payment on completion of a Purchase Invoice through the configuration of the Payment Method.</p> </li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#recording-of-the-financial-account-transactions","title":"Recording of the financial account transactions","text":"<p>Finance Staff records Withdrawals and Deposits as transactions in the Financial Account window by pressing the Add Transaction button and selecting either the received or made payments. This step in the process can also be completely automated through the configuration of the Payment Method so that the payments are automatically withdrawn or deposited when they are completed.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#reconciliation-of-the-financial-account-transactions","title":"Reconciliation of the financial account transactions","text":"<p>Finance Staff receives a bank statement (a paper or electronic bank statement) and reconciles the transactions in the Financial Account marked as Deposited / Withdrawn not Cleared with the actual transactions on the bank statement. This process can be done</p> <ul> <li> <p>Manually (one by one reconciling the transactions in the Etendo Financial Account with the bank statement lines) by using the Reconcile button of the Financial Account window.</p> </li> <li> <p>Automatically by Importing Statement first and then Matching Statement using a matching algorithm.</p> </li> </ul> <p>Additionally, any transactions (receipts and payments) shown on the bank statement and not reflected in the Financial Account should also be entered into Etendo to get them reconciled.</p> <p>Finally Finance Staff prints the Reconciliation reports (Reconciliation Details, Reconciliations Summary) that explain any difference in the end balance shown for the Financial Account in Etendo and the end balance shown on the bank statement.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#accounting","title":"Accounting","text":"","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#period-end-close-to-financial-report","title":"Period End Close to Financial Report","text":"<p>Period End Close to Financial Report business flow manages the open and close of periods.</p> <p></p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#configuration_1","title":"Configuration","text":"<p>This section details the basic and not that basic accounting configuration needed prior to the execution of the Period End Close to Financial Report business flow.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#basic-configuration","title":"Basic Configuration","text":"<p>There are three Etendo accounting concepts which need to be explained before describing the basic accounting configuration:</p> <ul> <li>Fiscal Calendar</li> </ul> <p>A fiscal calendar in Etendo is the year and the periods, normally months, when financial transactions and journal entries are posted to the ledger.</p> <ul> <li>Account Tree</li> </ul> <p>An account tree is the way Etendo captures the Chart of Accounts (CoA) of an Organization.</p> <p>The Chart of Accounts is a list of all the accounts used in an organization's general ledger.</p> <p>Accounts such as balance sheet accounts (assets, liabilities and owner's equity) and income statement accounts (revenues, expenses, gains and losses).</p> <p>Note</p> <p>It is important to remark that in Etendo , the financial reports such as the Balance Sheet and the Income Statement are produced based upon the Chart of Accounts structure.</p> <ul> <li>General Ledger configuration</li> </ul> <p>The general ledger configuration captures the accounting rules to use while posting the organization's financial transactions to the ledger. Accounting rules such as the Currency and the Chart of Accounts among others.</p> <p>Having said that, the accounting configuration detailed in this section is the one required for legal entities with accounting, including the business units, because these organization types are the only ones which can have assigned:</p> <ul> <li>a Chart of Accounts</li> <li>a General Ledger configuration</li> <li>and a Fiscal Calendar</li> </ul> <p>Obviously these organization types allow posting transactions to the ledger. Rest of the Organization types behave as explained in the Initial Organization Setup and in the Organization section.</p> <p>Very briefly:</p> <ul> <li>Legal without accounting organizations do not require accounting therefore do not require any basic nor advanced accounting configuration.</li> <li>Generic organizations however can have their own General Ledger configuration and Chart of Accounts but the accounting periods can not be opened and closed independently at its level. This type of organization inherits the Fiscal Calendar of the legal with accounting organization they belong to.</li> <li>and finally Organization ones can have as well a general ledger configuration and a Chart of Accounts but with the aim of being shared among all the organizations underneath. This organization type can not have a fiscal calendar assigned and besides the transactions within it are not allowed.</li> </ul> <p>Additionally, some countries such as Spain or France require that a specific Chart of Accounts is used in the statutory books, therefore the authorities can see the same list of accounts and the same level of detail in the Income statement and in the Balance Sheet.</p> <p>On the other hand, there are countries such as the USA where a specific Chart of Accounts is not required.</p> <p>For those cases Etendo provides a Generic Chart of Accounts module which includes a sample Chart of Accounts which can be modified as required. It is recommended to start from a sample chart of accounts like the generic one and evolve it for the organization's needs rather than starting from scratch.</p> <p>In-country taxes setup is another key element of the basic accounting configuration. There can be Localization Packs which include the setup of the taxes for the country while there can be others which do not include the setup of the taxes for the country. The Generic CoA module does not include any taxes setup.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#execution_1","title":"Execution","text":"<p>Overall the Period End Close to Financial Report business flow can be split into the following steps once the accounting period has been opened:</p> <ul> <li>the opening of the accounting</li> <li>the review of the accounting transactions</li> <li>the creation of accounting transactions and G/L item payments</li> <li>the printing of the Trial Balance</li> <li>the adjustments required prior to the income calculation</li> <li>the adjustments require prior to the closing of the accounting year</li> <li>the printing of the preliminary Income Statement and Balance Sheet</li> <li>the closing of the accounting year</li> <li>and the printing of the final Income Statement and Balance Sheet</li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#opening-of-the-accounting","title":"Opening of the accounting","text":"<p>This very first step implies to initialize the balance of the ledger accounts and the financial accounts or banks. The way to do that in Etendo is:</p> <ul> <li>The ledger accounts balance can be initialized by using a G/L Journal set as Opening, therefore that ledger entry is set as the Opening Ledger Entry. A journal line can be created for each account and its opening balance, once done the G/L Journal will validate that the Total Debit of all the entries equals to the Total Credit.</li> <li>The financial accounts balance can be initialized in the Financial Account window, in the Initial Balance field, therefore the corresponding financial account/s or banks need to be previously created.</li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#review-of-the-accounting-transactions","title":"Review of the accounting transactions","text":"<p>As already mentioned in Etendo most of the accounting entries are automatically created while posting documents such as a purchase invoice or a sales invoice. For instance the accounting of a purchase invoice will take:</p> <ul> <li>the expense account setup for the product being purchased in the Accounting tab of the Product window</li> <li>the vendor liability account setup for the vendor in the Vendor Accounting tab of the Business Partner window</li> <li>and the tax credit account setup in the Accounting tab of the Tax Rate window.</li> </ul> <p>Etendo allows reviewing and correcting if needed the accounting entries of transactional documents such as the invoices. Same way Etendo allows unposting wrongly posted transactional documents one by one to get them corrected and properly posted once more.</p> <p>Additionally, the Accounting Transactions Details report shows all the transactions posted in the ledger with all the details and the Not Posted Transactions report shows the transactions which need to be accounted for but have not been accounted yet.</p> <p>Finally Etendo allows to massively fix accounting errors if any, for instance a vendor liability account wrongly assigned to a vendor or to a set of vendors. The way to do that is:</p> <ul> <li>run the Reset Accounting process for the table being affected for instance the C_Invoice table (Purchase Invoice and Sales Invoice table).</li> <li>correct the accounting configuration</li> <li>get the transactions posted once again by using the GL Posting by DB Tables feature. This feature performs a massive posting of all the accounting or just the accounting of a table for instance the C_Invoice table (Purchase Invoice and Sales Invoice table).</li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#creation-of-accounting-transactions-and-gl-item-payments","title":"Creation of accounting transactions and G/L item payments","text":"<p>As already mentioned, accounting entries not related to documents managed within a given application area can be created and posted to the ledger by using a G/L Journal. A G/L Journal can also be used to make and/or receive payments do not related to orders/invoices but to G/L items. G/L items payments are also managed within the Payables and Receivables management area.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#printing-of-the-trial-balance-to-check-that-debitcredit","title":"Printing of the Trial Balance to check that Debit=Credit","text":"<p>The Trial Balance is a list indicating the balances of every single general ledger account at a given point in time.</p> <p>The purpose of the trial balance is to check that debits are equal to credits. If debits do not equal credits that means that an erroneous journal entry must have been posted.</p> <p>Etendo does not allow posting journal entries which do not balance. A G/L Journal can only be posted if Debit equals Credit, however there could be situations where while posting an invoice rounding differences drive that debit does not exactly equal credit. </p> <p>In these situations the difference is posted in a specific suspense account. Suspense accounts are configured in the General Ledger configuration.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#adjustments-required-prior-to-the-income-calculation","title":"Adjustments required prior to the income calculation","text":"<p>An organization's income statement shows the organization's financial performance over a period of time (usually one year) as the difference between:</p> <ul> <li>the organization's revenue</li> <li>and the organization's expenses</li> </ul> <p>In order to get an accurate income calculation, there are some adjustments required to be done first:</p> <ul> <li> <p>the organization needs to review the revenues and the expenses to be sure that the ones accounted within the period which are going to be closed are the ones which should be accounted regardless whether they are paid or not. This kind of adjustment is not required if the organization follows the accrual method of accounting that is Etendo method of accounting. Under the accrual method of accounting, revenue is recorded as soon as services are provided or goods are delivered and therefore invoiced, regardless of when cash is received. Similarly, expenses are recognized as soon as the company receives goods or services and therefore gets invoiced, regardless of when it actually pays for them.</p> </li> <li> <p>the organization needs to calculate the Cost of Goods Sold (CoGS). The CoGS is the amount that the company paid for the goods that it sold over the course of the period. This calculation depends on the method of keeping track of inventory. There are two primary methods, the perpetual method and the periodic method:</p> </li> </ul> <p>the perpetual method is used by any business that keeps real-time information on inventory levels and that tracks inventory on an item-by-item basis.    This method allows very accurate recordkeeping as to the Cost of Goods Sold which is the sum of the cost of all the items sold over the period.</p> <p>The periodic method is used by any business that counts inventory at regular intervals.    When using this method Cost of Goods Sold is calculated using the following equation:    (Beginning Inventory + Inventory purchases - Ending Inventory = Cost of Goods Sold)    Besides if a business is dealing with changing per-unit inventory costs, a specific method of calculating the CoGS needs to be used, that could either be FIFO, LIFO or Average Cost.</p> <p>Finally an income statement can separate Operating Expenses such as salaries and rent from Non-Operating Expenses such as a lawsuit.</p> <p>Operating Expenses are the expenses related to the normal operation of the business and are likely to be incurred in future periods as well.</p> <p>This way allows the calculation of the Operating Income as the difference between the Gross Profit and the Total Operating Expenses.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#adjustments-required-prior-to-the-closing-of-the-accounting-year","title":"Adjustments required prior to the closing of the accounting year","text":"<p>Other adjustments required can be:</p> <ul> <li>Long term amounts must be reclassified to short term amounts. The long term amount reclassified to short term amount is the amount due in the next year. This process is usually done for long term doubts for instance. In Etendo this kind of transaction can be manually created by using a GL Journal.</li> <li>Taxes such as the VAT needs to be settled periodically. It is important to remark that VAT accounts balance has to be equal to 0 in the last period of the year, as either the organization has to pay to the tax authorities or the other way around.</li> <li>Assets depreciation needs to be properly accounted within the period being closed as this adjustment will affect:</li> </ul> <p>the income statement as depreciation is an expense    and the debit side of the balance sheet as assets will be decreased by the depreciation amount of the period.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#the-printing-of-the-preliminary-income-statement-and-balance-sheet","title":"The printing of the preliminary Income Statement and Balance Sheet","text":"<p>Once configured, Etendo allows getting and printing the Income Statement and the Balance Sheet whenever it is required as the structure of these reports is based on the chart of accounts tree.</p> <p>It is very useful to print these financial reports prior to the closing of the year as it allows getting a sense of whether there are some missing adjustments required to be done prior to the closing of the year or not.</p> <p>During the accounting cycle there are other reports which can also be printed:</p> <ul> <li>the General Ledger Report list all the debits entries and all the credits entries of every T-Account within a given period of time</li> <li>the Journal Entries Report lists in a chronological order every journal entry posted in the ledger.</li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#the-closing-of-the-fiscal-year","title":"The closing of the fiscal year","text":"<p>Etendo allows to perform below detailed checks prior to the closing of the fiscal year:</p> <ul> <li>Run the Not Posted Transaction report to verify that there are no transactions and/or documents in status Complete not posted yet.</li> <li>Check that there are no documents still having a Draft status, specially those which require to be accounted.</li> <li>Unscheduled the Accounting Server Process therefore an stable scene can be assured.</li> <li>Check the Financial Account/s current balance in Etendo and compare it with the information provided by the banks. It is possible to adjust financial account balance by using G/L Items or how to transfer funds between financial accounts.</li> </ul> <p>Before running the close year process the accounting periods can be closed not to allow any further posting within those periods, but the 13th period. The 13th period is an adjustment period which can be used to post the adjustments required to the ledger through G/L Journals prior to closing the year.</p> <p>The Close Year process can be executed from the End Year Close window.</p> <p>The end-year close process can be executed for Legal with Accounting organization types as that organization's type has a Fiscal Calendar and General Ledger configured.</p> <p>There is a check-box in the General Accounts tab of the General Ledger Configuration window which shows how the end-year closing outcome is going to be for the organizations' General Ledger. That check-box is named Reverse Permanent Account Balances. </p> <ul> <li>If it is checked the closing of the year process includes an entry to reverse the balance sheet accounts besides the P&amp;L closing entry.</li> <li>If it does not check the closing of the year process includes just the P&amp;L closing entry.</li> </ul> <p>Etendo uses the adjustment period (i.e. December 31st) for accounting the closing transactions if any, and the next period's first date (i.e. January 1st) for accounting the opening transactions if any.</p> <p>Info</p> <p>For more information, visit the End Year Close window.</p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#the-printing-of-the-final-income-statement-and-balance-sheet","title":"The printing of the final Income Statement and Balance Sheet","text":"<p>Once a year has been closed every financial report contains the corresponding closing and opening transactions:</p> <ul> <li>the Balance Sheet will show the financial situation of the organization as of the end of the closed accounting period. Etendo allows to get a two columns balance sheet:           One column shows the balances as of the end of the most recent accounting period           and the other column shows the balances as of the prior period end.</li> </ul> <p>This balance allows seeing how the financial position of the organization has changed over time.</p> <ul> <li>the Income Statement will show the organization performance over the year closed</li> </ul> <p>And besides: </p> <ul> <li>the General ledger Journal allows to show for a given accounting period below entries posted by the Close Year process:     the opening balance entry     the closing balance entry     and the P&amp;L closing entry</li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#assets","title":"Assets","text":"","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#asset-acquisition-to-dispose","title":"Asset Acquisition to Dispose","text":"<p>Manages global assets life cycle from acquisition to disposition, including depreciation and other write-downs.</p> <p></p>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/getting-started/#relationship-with-other-areas","title":"Relationship with other areas","text":"<p>Financial Management has a connection with other application areas, as there are documents or transactions in those areas which can be posted and therefore be part of a ledger journal to be finally managed within the Financial Management application area.</p> <ul> <li>Procurement Management as Purchase Invoices are posted there and Goods Shipments as well as Supplier's Payments or Payments Out can be posted there.</li> <li>Sales Management as Sales Invoices are posted there and Goods Shipment as well as customers's Payments or Payments In can be posted there.</li> <li>Warehouse Management as Physical Inventory is posted there.</li> <li>Production Management as for the processing of the Work Effort raw materials are consumed and posted there at cost price as well as Products manufactured.</li> </ul>","tags":["Etendo Classic","Financial Management","Accounting Automation","Payables and Receivables Management","Year-End Closing"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/","title":"Reports - Accounting","text":"","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview","title":"Overview","text":"<p>This section describes the windows related to accounting financial reports in Etendo. These are:</p> <p> Accounting Transaction Details </p> <p> Balance Sheet and P/L Structure </p> <p> Balance Sheet and P/L Structure Advanced </p> <p> Trial Balance </p> <p> General Ledger Report </p> <p> General Ledger Report Advanced </p> <p> Journal Entries Report </p> <p> Journal Entries Report Advanced </p> <p> Create Tax Report </p> <p> Customer Statement </p> <p> Tax Report Setup </p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#accounting-transaction-details","title":"Accounting Transaction Details","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Accounting Transaction Details</code></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview_1","title":"Overview","text":"<p>The accounting transaction details window is a detailed list of every ledger entry of a general ledger.</p> <p>Etendo has an integrated accounting system that combines financial and analytical accounting.</p> <ul> <li>Financial accounting allows the user to exploit accounting dimensions such as \"Organization\", the \"Account\" and the \"Accounting Date\":<ul> <li>These dimensions are always mandatory, that means they need to be specified every time that a document is posted to the ledger.</li> </ul> </li> <li>Analytical accounting allows the user to exploit other dimensions such as \"Product\", \"Business Partner\" and \"Sales Region\".<ul> <li>These dimensions can be configured mandatory or optional in the organization's general ledger configuration if the client the organization belongs to does not \"centrally maintain\" the accounting dimensions.</li> <li>Otherwise, if the client \"centrally maintains\" the accounting dimensions, some\u00a0 analytical dimensions above can be configured in the Client window (i.e \"Product\", \"Project\", \"Cost Center\") while some others need to be configured in the organization's general ledger configuration (i.e. \"Sales Region\", \"Campaign\").</li> </ul> </li> </ul> <p>Etendo allows the user to post transactions to the ledger only if the financial dimensions and the mandatory analytical dimensions are specified, while there is always the option to specify the optional analytical ones.</p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#header","title":"Header","text":"<p>This report lists every transaction posted to the ledger by showing every accounting dimension specified.</p> <p></p> <p>Column Filters allow the user to filter the information to be shown by any of the accounting dimensions.</p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#balance-sheet-and-pl-structure","title":"Balance Sheet and P&amp;L Structure","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Balance Sheet and P&amp;L Structure</code></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview_2","title":"Overview","text":"<p>The Balance sheet and P&amp;L structure report engine allows the user to launch the Balance Sheet and P&amp;L which need to be previously configured.</p> <p>The Balance Sheet report is a quantitative summary of an organization's financial condition at a specific point in time. This report shows a summary of the assets and liabilities &amp; Owner's Equity balances.</p> <p>Profit and Loss report shows earnings, expenses and the net profit of an organization</p> <p>These reports need to be configured prior to be launched in the Balance Sheet and P&amp;L Structure setup window.</p> <p></p> <p>As shown in the image above, data to fill in is:</p> <ul> <li>the \"General Ledger\" from which the accounting information needs to be obtained</li> <li>the \"Accounting Report\" to launch.     This field lists the reports created and configured in the Balance Sheet and P&amp;L structure setup window</li> <li>the \"Organization\".     This field lists the organization for which the report has been configured in the Balance Sheet and P&amp;L structure setup window<ul> <li>if the report is configured for a \"Legal with Accounting\" organization type, only that one is shown in this field. The account's balances shown in the report will be a roll-up of the organizations which belong to it, if any.</li> <li>if the report is configured for a \"Generic\" organization type, the organizations shown in this field are at least the generic organization and the legal with accounting organization type it belongs to, all of them linked to the general ledger selected.</li> </ul> </li> <li>the \"Account Level\" which defines up to which detail level is going to be shown in the report, the options available are the same as the account tree element levels:<ul> <li>Heading, only \"heading\" elements are shown including summarized accounting information up to that level<ul> <li>Account, in this case \"heading\" and \"account\" elements are shown including summarized accounting information up to each of those levels<ul> <li>Breakdown, in this case \"heading\", \"account\" and \"breakdown\" elements are shown including summarized accounting information up to each of those levels<ul> <li>Subaccount, in this case \"heading\", \"account\", \"breakdown\" and \"subaccount\" elements are shown including summarized accounting information up to each of those levels.     It is important to recall that accounting entries are booked at subaccount level.</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>\"Show only accounts with value\" flag allows the user to see that the report does not show account elements having a zero amount balance, but elements defined as Title which are always shown regardless of its balance amount.</li> <li>Show Account codes flag allows the user to make the report show the Element Level Search Key or not.</li> </ul> <p>Under the \"Primary Filters\" section, it is possible to specify:</p> <ul> <li>an Initial page number for the report, in case the report needs to be integrated.     This one is useful in case the report must be integrated as a part of a bigger report or document.</li> <li>a \"Year\" and a \"Reference Year\" in order to get a comparative report normally between the current \"Year\" and the previous one entered as \"Reference Year\". The report has a filter \"Compare To\", so it can be launched just for a concrete year, without forcing to compare it with another year.</li> <li>and finally \"As of Date\" (Date To) and \"As of Reference Date\" (Date From filters can be entered, these filters behave differently depending on the report:<ul> <li>In the case of Balance Sheet report, a \"Date To\" value can be entered to get that the report shows account balance information up to that date to.</li> <li>In the case of P&amp;L report a \"Date To\" and a \"Date From\" can be entered to make the report show accounting information within that period of time (a year, a quarter, a month, etc).</li> </ul> </li> </ul>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#balance-sheet-report-example","title":"Balance Sheet Report Example","text":"<p>Info</p> <p>Please note that the word \"Provisional\" (en_US) [or \"Provisional\" (es_ES)] is shown whenever at least one of the periods for which the report has been launched for it is not closed yet.</p> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#pl-report-example","title":"P&amp;L Report Example","text":"","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#balance-sheet-and-pl-structure-advanced","title":"Balance Sheet and P&amp;L Structure Advanced","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Balance Sheet and P&amp;L Structure Advanced</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Balance Sheet and P&amp;L Structure Advanced report is an enhanced version of the previous \u201cBalance Sheet and P&amp;L Structure\u201d. Its purpose is to expand the filtering criteria, including all the existing accounting dimensions in the table Accounting Transaction Details.</p> <p></p> <p>In addition to the previous basic filters: </p> <ul> <li>General Ledger</li> <li>Accounting Report</li> <li>Organization</li> <li>Account level</li> <li>Year</li> <li>As of Date</li> <li>Compare to (check)</li> <li>Reference Year</li> <li>As of Reference Date</li> </ul> <p>the following were added:    </p> <ul> <li>Business Partner  </li> <li>Product   </li> <li>1st Dimension</li> <li>2nd Dimension </li> <li>Project </li> <li>Activity    </li> <li>Sales Region    </li> <li>Sales Campaign  </li> </ul> <p>In basic filters, in the section of the current year, the fields Date From and Date to were added to select a specific period from the selected year.</p> <p>In the comparative year section, the fields From Reference Date, To Reference Date were added to select a specific period from the selected year apart from the Select Template field. </p> <p>In each filter, more than one option can be selected:</p> <p></p> <p>Another difference to take into account is that, in this case, the buttons View, Export to PDF and Export to Excel are located in the same section of the upper bar.</p> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#trial-balance","title":"Trial Balance","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Trial Balance</code></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview_3","title":"Overview","text":"<p>The trial balance helps to check that the total amount of debits is equal to the total amount of credits.</p> <p>This report is commonly launched at the end of the period prior to the preparation of the Balance Sheet and the Income Statement. However, Etendo allows the user to launch it at any point in time to check that debits equal credits.</p> <p>In Etendo terms, the \"Trial Balance\" shows for a given Organization and General Ledger:</p> <ul> <li>the account balance as of a given date from</li> <li>the account total sum of debits within a given period of time</li> <li>the account total sum of credits within a given period of time</li> <li>and finally the account balance as of a given date to</li> </ul> <p>At the end of the report, the total sum of debits must be equal to the total sum of credits.</p> <p></p> <p>As shown in the screen above, it is possible to enter below data before launching the Trial Balance.</p> <p>Under the Primary Filters section, it is possible to specify: - the \"From\" date when the account balance is going to be taken - the \"To\" date when the account balance is going to be calculated by following the formula below:     - Balance as of to date = Balance as of from date + Sum of the Debit amounts - Sum of the Credit amounts - the \"Organization\" for which the Trial Balance is required. It is important to remark that a Trial Balance can be launched for:     - \"Legal with Accounting\" type organizations     - \"Generic\" type organizations which must belong to a \"Legal Entity with Accounting\" organization.         - It is possible to enter and post transactions in this organization type as they inherit the general ledger of the legal entity with accounting they belong to.     - \"Organization\" type organizations, as this type can be linked to a general ledger to be shared by a set of organizations which belong to it.         - Regardless this organization type does not allow transaction posting, the Trial Balance obtained at this level summarizes the accounting information of all the organizations which belong to an organization of this type which share the same general ledger. - and finally the \"General Ledger\".</p> <p>Advanced filters is a collapsible section which can be shown by clicking on it. Under this section, it is possible to specify:</p> <ul> <li>the Account Level to show. The options available are from top to bottom:<ul> <li>Heading</li> <li>Account</li> <li>Breakdown</li> <li>and Subaccount.</li> </ul> </li> </ul> <p>These are the Account Tree Elements.</p> <p>\"Subaccount\" is the value set by default, regardless it can be changed if required.</p> <p>This is due to the fact that a subaccount is the element which helps to check that the total amount of debits is equal to the total amount of credits for every subaccount of the account tree.</p> <p>Also, the selection of this value allows the user to:</p> <p>1. select other \"Dimensions\", such as the \"Business Partner\", the \"Product\" and the \"Project\". These dimensions are recorded while posting transaction to the ledger and the transactions can be posted to the ledger through the subaccounts.</p> <p>2. Select \u201cGroup By\u201d value to have more information about that option. Values are \"Business Partner\", \"Product\", \"Project\" and \u201cCost Center\u201d</p> <p>3. select \"Include Zero Figures\" flag which allows the user to display all subaccounts even those which hold zero figures.</p> <ul> <li>It is possible to enter the initial page number of the trial report if required</li> <li>Also, the \"Opening Entry Amount to Initial Balance\" flag is marked by default.     This checkbox allows the user to configure if the \"Opening\" account balance (dated i.e. 1st January 2021) is shown separately in the first column \"Balance As Of\" or either in the \"Debit\" or in the \"Credit\" column.     In other words:<ul> <li>the negative \"Opening\" balance of a liability type account can be shown in the \"Balance As Of\" column or in the \"Credit\" column</li> <li>the positive \"Opening\" balance of an asset type account can be shown in the \"Balance As Of\" column or in the \"Debit\" column.     This check only applies if the \"From\" date entered while launching the report is the same as the \"Opening\" Accounting date (i.e. 1st January 2021), otherwise the \"Opening\" account balance is always shown in the \"Balance As Of\" column.</li> </ul> </li> </ul> <p>Once all the data above has been properly filled in, the \"Search\" process button shows the results in the same window.</p> <p>An example of the output of the report is:</p> <p></p> <p>This report can also be shown in:</p> <ul> <li>a PDF format by pressing the \"Print\" action icon of the Toolbar.<ul> <li>the PDF file can be printed or archived for later reviews.</li> <li>the PDF file has the same grouping rules as the search button.</li> </ul> </li> <li>and in excel format:</li> <li>the excel file has the same grouping rules as the search button. When the Trial Balance Report is launched at \"Subaccount\" level, this format shows the dimension selected in the combo group by, but when no grouping is selected in the combo, the report shows all dimensions.</li> </ul>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#general-ledger-report","title":"General Ledger Report","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>General Ledger Report</code></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview_4","title":"Overview","text":"<p>The General Ledger report lists every ledger \"subaccount\" and its debit and credit ledger entries within a given period of time.</p> <p></p> <p>As shown in the image above, the fields to fill in for launching this report are:</p> <ul> <li>the \"Organization\" for which the accounting information is required.     Once more, the accounting information provided by this report relies on the organization type selected as:<ul> <li>accounting information shown might be just related to a \"Generic\" organization belonging to a \"legal Entity with Accounting\"</li> <li>or could be a roll-up in case of selecting either a \"Legal Entity with Accounting\" or an \"Organization\" having other organizations underneath.</li> </ul> </li> <li>\"Show Open Balances\" option which will hide those entries for which the balance is zero. (Ex. removing receivables/payables entries from invoices once those have been paid.)</li> <li>and the corresponding \"General Ledger\" which will also rely on the Organization previously selected.</li> </ul> <p>It is possible to narrow down the accounting information to be shown in the report by:</p> <ul> <li>a range of \"amounts\"</li> <li>a set of \"subaccounts\"</li> <li>and a set of \"accounting dimensions\" such as business partner, product and project</li> </ul> <p>Finally, it is also possible to:</p> <ul> <li>\"group\" the information by any of the accounting dimensions</li> <li>and enter a \"Initial Page Number\" for the report</li> </ul> <p>Once all data have been properly entered, the \"Search\" button shows the outcome of the report in the same window:</p> <ul> <li>the ledger entries displayed for each subaccount are ordered by accounting date and besides the subaccount balance is shown for each ledger entry.</li> </ul> <p>The arrows in the toolbar allows the user to navigate through the report outcome shown in the window.</p> <p>The General Ledger Report can also be viewed and saved in Excel format and PDF format:</p> <ul> <li>Excel format by pressing on the \"Export to Excel\" action button of the Toolbar:<ul> <li>This format contains a list of all the ledger entries per each subaccount not grouped, therefore it is possible to group them as desired.</li> <li>It also lists the corresponding accounting dimensions of each ledger entry.</li> </ul> </li> <li>PDF format by pressing on the \"Print Record\" action button of the Toolbar:<ul> <li>This format includes an \"Initial\" balance of each subaccount, the \"Subtotal\" balance of each subaccount for the given period and calculates the \"Total\" balance of each subaccount.</li> </ul> </li> </ul> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#general-ledger-report-advanced","title":"General Ledger Report Advanced","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>General Ledger Report Advanced</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This General Ledger Advanced report is an enhanced version of the previous General Ledger Report. Its purpose is to expand the filtering criteria, including all the existing accounting dimensions in the table Accounting Transaction Details.</p> <p></p> <p>In addition to the previous basic filters: Date from, Date to, From amount, To amount, Organization, General Ledger, From Account, To account, and the previous dimension filters: Business partner, Product and Project, the following were added:</p> <ul> <li>1st Dimension</li> <li>2nd Dimension</li> <li>Activity</li> <li>Sales Region</li> <li>Sales Campaign</li> <li>Cost Center</li> </ul> <p>Moreover, the Organization filter was added, a filter that combines the original Organization field with the Show Related Operations check, to show intercompany transactions. In each filter, more than one option can be selected.</p> <p>The new Show Dimensional Entities field enables the selection of accounting dimensions to be included in the report.</p> <p></p> <p>In the Group By menu, the following options are added:</p> <ul> <li>Activity</li> <li>1st Dimension</li> <li>2nd Dimension</li> <li>Sales Region</li> <li>Sales Campaign</li> <li>Cost Center</li> </ul> <p>It is possible to select the desired accounting dimension for the grouping. When generating the report, the selected dimension appears in the header, indicating the grouping criteria used.</p> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#buttons","title":"Buttons","text":"<p>In the toolbar, you can find the buttons View, Export to PDF and Export to Excel to generate the report. In the case of the View option, a new window is opened with the corresponding report. In the other cases, the report is exported in PDF or Excel format.</p> <p></p> <p>Warning</p> <p>If the View or Export to PDF options are chosen, the limit of dimensions to be included is 4 to avoid visualization issues. This is not the case with Export to Excel, in which case you can choose any number of dimensions.</p> <p>Also, with this functionality you can navigate to the related journal entry directly from the report. This allows easier and more efficient access to information. By clicking on a journal entry, the user can navigate to the Journal Entries Report window, applying all selected filters.</p> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#journal-entries-report","title":"Journal Entries Report","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Journal Entries Report</code></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview_5","title":"Overview","text":"<p>The Journal Entries Report is a list of all the journal vouchers of an organization and general ledger shown in a chronological order.</p> <p>A journal entry is the recording of financial data in a journal voucher such that the debit equals credit and the debits are entered before the credits.</p> <p></p> <p>As shown in the image above, the \"Primary Filters\" section allows the user to specify:</p> <ul> <li>the \"Organization\" and the \"General Ledger\" for which the financial data taken from the journal entries is required.</li> </ul> <p>The \"Advanced Filters\" is now a collapsible section. Under this section, it is possible to specify:</p> <ul> <li>a From/To Account to display journal entries with at least one line using an account defined in the range.</li> <li>a Document Type to narrow down the financial data to be shown in the report to just the one related to that particular document type.<ul> <li>If the document type selected has a document number associated, for instance an invoice document type, it will be possible to narrow down the data shown to a specific \"Document Number\".</li> </ul> </li> <li>the \"Initial Page Number\" to be shown in the PDF format of the report</li> <li>the \"Initial Entry Number\" to be shown in the PDF format of the report</li> <li>the \"Entry Description\" to be shown in the PDF format of the report</li> </ul> <p>The rest of the checkboxes are selected by default in order to show:</p> <ul> <li>the \"regular\" journal entries:<ul> <li>these entries are the ones generated while posting either any of the Etendo document types or while posting a General Ledger Journal do not flag as \"Opening\".</li> </ul> </li> <li>the \"opening\" journal entries:<ul> <li>these entries are automatically generated by Etendo after the closing of a given fiscal year</li> <li>these entries can also be manually generated while posting a General Ledger Journal whenever its journal entries are flagged as \"Opening\".</li> </ul> </li> <li>the \"closing\" journal entries:<ul> <li>these entries are automatically generated by Etendo after the closing a given fiscal year</li> </ul> </li> <li>and finally the \"P&amp;L closing\" journal entries:<ul> <li>these entries are automatically generated by Etendo after the closing of a given fiscal year</li> </ul> </li> </ul> <p>Finally, and same way as for the rest of financial reports, the Journal Entries Report can be launched in:</p> <ul> <li>HTML format. An example of the HTML output:</li> </ul> <p></p> <ul> <li>PDF format by using the \"Print Record\" action button of the Toolbar</li> <li>or XML format by using the \"Export to Excel\" action button of the Toolbar.</li> </ul>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#journal-entries-report-advanced","title":"Journal Entries Report Advanced","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Journal Entries Report Advanced</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This Journal Entries Advanced report is an enhanced version of the previous Journal Entries Report. Its purpose is to expand the filtering criteria, including all the existing accounting dimensions in the table Accounting Transaction Details.</p> <p></p> <p>In addition to the previous basic filters: Date from, Date to, Organization, General Ledger and the previous advanced filters: From account, To account, Document, Document N\u00b0, the following were added:</p> <ul> <li>Business Partner</li> <li>Product</li> <li>1st Dimension</li> <li>2nd Dimension</li> <li>Project</li> <li>Activity</li> <li>Sales Region</li> <li>Sales campaign</li> <li>Cost Center</li> </ul> <p>The new Show Dimensional Entities field enables the selection of accounting dimensions to be included in the report.</p> <p></p> <p>After using the available fields and checkboxes, the report filters the transactions included in the selected dimensions, for the selected organization and general ledger and for a determined period, if necessary. In each filter, more than one option can be selected.</p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#buttons_1","title":"Buttons","text":"<p>In the upper bar, you can find the buttons View, Export to PDF and Export to Excel to generate the report. In the case of the View option, a new window is opened with the corresponding report. In the other cases, the report is exported in PDF or Excel format.</p> <p></p> <p>Warning</p> <p>If the View or Export to PDF options are chosen, the limit of dimensions to be included is 4 to avoid visualization issues. This is not the case with Export to Excel, in which case you can choose any number of dimensions.</p> <p>Also, with this functionality you can navigate to the related transaction directly from the entry number of reports. This improves traceability and streamlines accounting analysis. </p> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#create-tax-report","title":"Create Tax Report","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Create Tax Report</code></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview_6","title":"Overview","text":"<p>This Form allows the user to create different Tax Reports according to the user's specific needs.</p> <p>In order to explain the use of this process, it is necessary to understand the window Tax Report Setup.</p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#tax-report-setup","title":"Tax Report Setup","text":"<p>This window allows the user to create or modify different Tax Report for the different existing taxes. In the following lines, it will be explained how to create a new Tax Report:</p> <p></p> <p>The window has some parameters to indicate the Tax Report created:</p> <ul> <li>Name: The name of the Report.</li> <li>Tax: The tax that will be shown in the report.</li> <li>Sales Transaction: Checked if it\u2019s a Sales Tax Report, unchecked if it\u2019s a Purchase Tax Report.</li> <li>Report: If checked, it will appear in the Create Tax Report form to be chosen.</li> <li>Shown: If checked, it will appear in the Create Tax Report form to be chosen.</li> <li>Summary Level: If it is checked, the tax rate is defined as a parent tax that has dependent taxes: the child taxes. If a tax is not going to have any \u201cchildren,\u201d it should not be checked as summary.</li> <li>Negative: If checked, the report will be printed in negative values, otherwise, it will be printed in positive values.</li> <li>Active: If it\u2019s an active Tax Report.</li> </ul> <p>Once, the Tax Report has been set up, it will appear in the Create Tax Report form:</p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#create-tax-report_1","title":"Create Tax Report","text":"<p>This window allows printing Reports previously defined by the user. In order to print the Report, it is necessary to fill a few fields:</p> <p></p> <ul> <li>From Date: Starting Date of the Report.</li> <li>To Date: Last Date of the Report.</li> <li>Tax Report: In this list, all the Tax Reports created will appear to be chosen-</li> <li>Organization: Organization for which the Report will be printed.</li> </ul> <p>Once these fields have been introduced, it will be possible to print the Report that will show the amount during those dates.</p> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#customer-statement","title":"Customer Statement","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Customer Statement</code></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview_7","title":"Overview","text":"<p>Customer statement is a consolidated statement of every transaction of a customer posted to the ledger over a given period.</p> <p>Transactions aggregated from various sources like:</p> <ul> <li>Sales Invoices</li> <li>Payment In</li> <li>Financial Transactions</li> <li>Reconciliations</li> </ul> <p>Warning</p> <p>Note that Completed but not posted transactions are not taken into consideration.</p> <p>In case that a business partner is a customer as well as a vendor, the Customer Statement shows only customer related transactions and does not take into account vendor related transactions.</p> <p>The Multicurrency parameter of the report, in case of checked, will group records based on the currency records and display original currency amounts. If unchecked, it will not group records, and it will display ledger currency amounts.</p> <p>The Customer Statement provides the following details:</p> <ul> <li>The credit/debit information including the document number of the transaction</li> <li>The accounting date</li> <li>The document type of the transaction. (i.e. AR Invoice, Financial Account Transaction, etc)</li> <li>The net financial value of each transaction as [Debit - Credit], this column represents the accumulated value of the net financial value transaction by transaction, therefore an accumulated net financial value for the end of the given period is the end balance of the customer statement.     Note that negative amounts are highlighted by using brackets ().</li> </ul>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#customer-statement-report","title":"Customer Statement Report","text":"<p>An example of the customer statement filter is shown in the image below:</p> <p></p> <p>Note about some filters:</p> <ul> <li>Multicurrency. If there are transactions in multiple currencies for the selected Business Partner, it is possible to use them to split the report. By default, this report converts all currency values into the currency of the General Ledger. If this flag is checked, then the report will be split by each different currency (each one with its initial and ending balance isolated from the rest).</li> <li>Sum Initial Balance. By default, the report starts with an Initial Balance, then there are the transactions that have happened with the Business Partner, and for each one there is a Net Balance. The Ending Balance is the Initial Balance plus the final Net Balance. However, if this check is enabled, the Initial Balance is aggregated into each one of the Net Balances, in this case the final Balance is the same one as the last Net Balance.</li> </ul> <p>An example of the Customer Statement output:</p> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#tax-report-setup_1","title":"Tax Report Setup","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Analysis Tools</code> &gt; <code>Tax Report Setup</code></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#overview_8","title":"Overview","text":"<p>Etendo allows the user to create different Tax Reports according to the user\u2019s specific needs.</p> <p>In order to explain the use of this process, it is necessary to understand the window Tax Report Setup.</p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#tax-report-setup_2","title":"Tax Report Setup","text":"<p>This window allows the user to create or modify different Tax Reports for the different existing taxes. In the following lines, it will be explained how to create a new Tax Report:</p> <p></p> <p>The window has some parameters to indicate the Tax Report created:</p> <ul> <li>Name: The name of the Report.</li> <li>Tax: The tax that will be shown in the report.</li> <li>Sales Transaction: Checked if it\u2019s a Sales Tax Report, unchecked if it\u2019s a Purchase Tax Report.</li> <li>Report: If checked, it will appear in the Create Tax Report form to be chosen.</li> <li>Shown: If checked, it will appear in the Create Tax Report form to be chosen.</li> <li>Summary Level: If it is checked, the tax rate is defined as a parent tax that has dependent taxes: the child taxes. If a tax is not going to have any \u201cchildren,\u201d it should not be checked as summary.</li> <li>Negative: If checked, the report will be printed in negative values, otherwise, it will be printed in positive values.</li> <li>Active: If it is an active Tax Report.</li> </ul> <p>Once, the Tax Report has been set up, it will appear in the Create Tax Report form:</p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/analysis-tools/#create-tax-report_2","title":"Create Tax Report","text":"<p>This window allows to print Reports previously defined by the user. In order to print the Report, it is necessary to fill a few fields:</p> <p></p> <ul> <li>From Date: Starting Date of the Report</li> <li>To Date: Last Date of the Report</li> <li>Tax Report: In this list, all the Tax Reports created will appear to be chosen.</li> <li>Organization: Organization for which the Report will be printed.</li> </ul> <p>Once these fields have been introduced, it will be possible to print the Report that will show the amount during those dates.</p> <p></p>","tags":["Etendo Classic","Financial Reports","Accounting Analysis","Balance Sheet","General Ledger"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/","title":"Set Up - Accounting","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview","title":"Overview","text":"<p>This section describes the windows that are necessary to configure the accounting functionalities of Etendo. The corresponding windows are:</p> <p> Accounting Transaction Details </p> <p> Open/Close Period Control </p> <p> Financial Type </p> <p> Period Control Log </p> <p> Account Tree </p> <p> General Ledger Configuration </p> <p> Fiscal Calendar </p> <p> Account Combination </p> <p> Accounting Process </p> <p> G/L Item </p> <p> G/L Category </p> <p> Document Type </p> <p> Document Sequence </p> <p> Tax Category </p> <p> Business Partner Tax Category </p> <p> Tax Rate </p> <p> Cost Center </p> <p> ABC Activity </p> <p> Accounting Templates </p> <p> Balance Sheet and P/L Structure Setup </p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#openclose-period-control","title":"Open/Close Period Control","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Open/Close Period Control</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_1","title":"Overview","text":"<p>Open/Close Period Control feature manages the periods of an organization. This feature applies to organizations for which the \"Period Control\" feature is enabled.</p> <p>The Period Control feature allows the user to assign a Fiscal Calendar containing years and periods (normally months) to an organization.</p> <p>Overall, the \"Period Control\" and the \"End Year Close\" processes can be executed in Etendo by following the steps recommended below:</p> <ul> <li>The creation of the Years and the Periods (i.e. monthly periods) in the \"Fiscal Calendar\" window</li> <li>The opening of all the period/s, that means including the \"13th Period\" or adjustment period, in this window</li> <li>The closing of the standard period/s, that means excluding the \"13th Period\" or adjustment period, in this window.</li> </ul> <p>This step can be done once the corresponding transactions have been posted to the ledger within a \"standard\" period.</p> <p>Info</p> <p>It is not mandatory to close the standard periods of a given year before running the Close Year process.</p> <p>Closing the standard periods helps to track the periods which have been already reviewed and adjusted if required, and therefore closed in order not to allow any further posting within those periods.</p> <ul> <li>The posting of the accounting adjustments to the ledger if any, in the \"13th Period\" by using a G/L Journal/s.</li> <li>The execution of the Close Year process in the \"End Year Close\" window.     This process generates the closing accounting entries such as the P&amp;L closing entry, and also closes the standard and adjustment periods if those are still open. After the Closing of the Year, all its Periods will be in Permanently Closed status. A Period in Permanently Closed can not be reopened, it is necessary to Undo the Closing of the Year first.</li> </ul> <p>Additionally, the Undo Close Year process undoes all what has been done and therefore accounted for by the close year process. Besides, this process opens all the periods which were closed.</p> <p>This is done to allow that the corresponding changes can be posted to the ledger as required in a standard period.</p> <p>Once the corresponding changes have been accounted for, the \"Close Year\" process can be run once again. This process generates the closing accounting entries and closes all the periods again.</p> <p>As already mentioned:</p> <p>It is not possible to create years and periods directly on this window, use the Fiscal Calendar window to create new years and periods.</p> <p>It is not possible to generate the closing accounting entries directly on this window, use the Close Year process which can be found in the End Year Close Window.</p> <p>Finally, it is also possible to check the \"Status\" of a given period is to navigate to the Period Control tab of the Organization window.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#period-control","title":"Period Control","text":"<p>In Open/Close Period Control window all the Periods previously created in the Fiscal Calendar window are shown.</p> <p>However, the records are filtered by their \"Status\" and \"Organization\", by showing only the Periods which are not in Closed Status and belong to the Organization in which the User is logged in. These filters can be removed by clicking on the funnel icon.</p> <p>This window shows two Tabs. The first Tab shows all the existing Periods. Once selected a record in this Tab, the lower one shows all the Document Types and their Status in that Period. With this layout, it is possible to easily manage the status of a Period as a whole as well as the status of a particular Document Type inside a specific Period.</p> <p>The way to manage the Opening/Closing of a Period is:</p> <ul> <li>Use the filters of the grid to show the desired Periods.</li> <li>Select the Periods for which the action is going to be performed.</li> <li>Click on the Open/Close Period, select the action to perform, and click OK.</li> </ul> <p>Once done, Etendo informs that the process has been completed successfully.</p> <p>The way to manage the Opening/Closing of a particular Document Type for a specific Period is similar:</p> <ul> <li>Use the filters of the grid to show the desired Document Type.</li> <li>Select the Document Types for which the action is going to be performed.</li> <li>Click on the Open/Close Period, select the action to perform, and click OK.</li> </ul> <p>Once done, Etendo informs that the process has been completed successfully.</p> <p></p> <p>As shown in the image above the main fields in this window are:</p> <ul> <li>the Status. It is split in two columns. One that represents the Status with a color code, making it easier to understand the situation at a quick glance. The other one represents the Status by its name, making it possible to filter the records shown. The possible Status values are:<ul> <li>All Never Opened, colored in gray. Recently created Periods.</li> <li>All Opened, colored in green. All the Document Types are open for this Period.</li> <li>All Closed, colored in red. All the Document Types are closed for this Period.</li> <li>Mixed, colored in orange. Not all the Document Types have the same Status value in this Period. For more information, refer to the Documents Tab below.</li> <li>All Permanently Closed, colored in red. All the Document Types are Permanently Closed for this Period.</li> </ul> </li> <li>the Calendar<ul> <li>Etendo automatically displays the calendar of the organization, as an organization can only have one calendar assigned. In fact, this field is a read-only field</li> </ul> </li> <li>the Organization</li> <li>the Year</li> <li>the Period No.</li> <li>the Name of the Period</li> <li>the Starting Date of the Period</li> <li>the Ending Date of the Period</li> </ul> <p>These fields can be used as filters to show the desired records. For example, filtering by a Calendar, and Organization and a Year it is an easy way to show all the Periods of a particular Year.</p> <p>Then it is possible to select all records shown and Open or Close all of them at once.</p> <ul> <li>The Period Actions available are:<ul> <li>Open Period<ul> <li>This action opens the period/s.</li> </ul> </li> <li>Close Period<ul> <li>This action closes the period/s.     Once a period is closed, it is not possible to post or to undo the posting of any transaction in such period/s. A closed period/s can always be re-opened by just selecting it and executing the action \"Open Period\" for the period/s.</li> </ul> </li> <li>It is only possible to open and close the accounting periods of \"Legal with Accounting\" Organization types for which Allow Period Control check is enabled</li> </ul> </li> <li>If a period is open for all document types, but it is closed for a given document type, for instance AP Invoice, it will be possible to post transactions of any type within that given period but AP Invoice transactions.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#period-control-example","title":"Period Control Example","text":"<p>The organization in this example has created three consecutive years and has open all the periods including the \"13th Period\" as shown in the image below:</p> <p></p> <p>The configuration above means that the organization in this example can post any document to the ledger at any period within those 4 years. If the organization tried to post a sales invoice in Dec 2018, Etendo will show an error as that year/period does not exist.</p> <p>The organization in this example needs to close the year 2019.</p> <p>Before running the \"Close Year\" process for 2019, the organization in this example closes all the 2019 standard periods until Dec-19 in order not to allow any further accounting on any 2019 standard period. The process to do that is:</p> <ul> <li>Move to Open/Close Period Control Window.</li> <li>Use the filters of the grid to show the desired Periods. In this example, filter by Calendar, Organization and Year (i.e. 2019)</li> <li>As the Year has all its Periods Open, including the Adjustment Period, the Window should show thirteen records.</li> <li>Select all the periods except the 13th Period and click on the Close Period button and select the action \"Close Period\" (as this one allows the user to reopen the year/period if needed)</li> </ul> <p></p> <p>Above action closes all the 2021 standard periods until Dec-2021, therefore it is not possible to post any transaction to the ledger in any 2021 standard period anymore but:</p> <ul> <li> <p>to post \"G/L Journals\" to the ledger in the \"13th Period\"</p> </li> <li> <p>and to post the \"Closing\" entries automatically created by the Close Year process to the ledger</p> </li> </ul> <p>unless:</p> <ul> <li>the corresponding 2019 standard period/s is/are re-opened. That is only possible if the 2019 year is not closed, otherwise the Undo Close Year needs to be run.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#documents","title":"Documents","text":"<p>When a Period is created in the Fiscal Calendar Window, it is possible to Open or Close it in this Window. Performing these actions directly for that Period affects all the associated Document Types at once.</p> <p>For example, opening a Period results in opening all the Document Types for that Period, making it possible to post transactions of any type within that given Period.</p> <p>But it is also possible to Open or Close each Document Type in the same Period.</p> <p>Once a Period is selected in the Periods Tab of this Window, all the available Document Types are shown in the Documents Tab, making it possible to select any of them and Open or Close it.</p> <p>The way to manage the Opening/Closing of a particular Document Type for a specific Period is:</p> <ul> <li>Use the filters of the grid to show the desired Document Type.</li> <li>Select the Document Types for which the action is going to be performed.</li> <li>Click on the Open/Close Period, select the action to perform, and click OK.</li> </ul> <p>Once done, Etendo informs that the process has been completed successfully.</p> <p></p> <ul> <li>As in the Periods tab, the Status is split in two columns. One that represents the Status with a color code, and one that represents it by its name. The possible Status values are:<ul> <li>Never Opened, colored in gray. It belongs to a recently created Period.</li> <li>Open, colored in green.</li> <li>Closed, colored in red.</li> <li>Permanently Closed, colored in red. Document Permanently closed. Only by reopening a Year, it is possible to Open it again.</li> </ul> </li> </ul> <p>Notice that:</p> <ul> <li>13th Period has only one Document Type, GL Journal, since in the Adjustment Period only GL Journal Transactions can be posted.</li> <li>If a period is open for all document types but it is closed for a given document type, for instance AP Invoice, it will be possible to post transactions of any type within that given period but AP Invoice transactions.</li> <li>If not all the Document Types of that Period have the same value, for example some are Closed and some are Open, then the Status of the Period is Mixed.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#financial-type","title":"Financial Type","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Financial Type</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_2","title":"Overview","text":"<p>In this window, the user can configure the different options to use in the Financial Type Configuration window.</p> <p>Info</p> <p>For more information, visit Financial Type Configuration.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#how-to-install-the-financial-type-dataset","title":"How to install the Financial Type dataset","text":"<p>Go to the Enterprise Module Management window and select the organization needed to import the date by default. Then, check the dataset called \"Banking Pool\" and click the OK button. </p> <p></p> <p>The information imported from the Financial Type window is shown. </p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#period-control-log","title":"Period Control Log","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Period Control Log</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_3","title":"Overview","text":"<p>This window shows the log for period control.</p> <p>The periods of a year can be opened, closed and permanently closed. The Period Control Log Window shows all the Openings and Closings of the Periods that had taken place in the application, therefore it can be used to understand how the Status of a Period has changed over time.</p> <p>When a Period is Open or Closed through the Open/Close Period Control Window, or has been permanently Closed as a result of the closing of a Year through the End Year Close Window, a record is created in the Period Control Log.</p> <p>For example, this screenshot shows the Period Control Log for an Organization that has opened all of its Periods for the Year 2019:</p> <p></p> <p>As shown in the image above, the main fields in this Window are:</p> <ul> <li>Organization.</li> <li>Calendar.</li> <li>Year.</li> <li>Period. The starting Period from which the Period Action is going to be performed (usually matches the Until Period)</li> <li>Until Period. The ending Period to which the Period Action is going to be performed (usually matches the Period)</li> <li>Period Action. The action that has taken place. It can be Open Period, Close Period or Permanently Close Period.</li> <li>Document Category. If the Period Action has been done only for Document Type, it will be shown here. This means that the Period Action has affected only the shown Document Type for that Period, not all the other Document Types, which remains in the same status as before.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#account-tree","title":"Account Tree","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Account Tree</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_4","title":"Overview","text":"<p>An account tree is the way Etendo captures the chart of accounts of an Organization. The chart of accounts is a list of the accounts used in an organization's general ledger.</p> <p>Some countries such as Spain or France require that a specific chart of accounts is used in the statutory books, therefore the authorities can see the same list of accounts and the same level of detail in the P&amp;L and Balance Sheet. In that case, Etendo provides a \"Localization Bundle\" which includes the Statutory Chart of Accounts.</p> <p>For instance, the Spanish Localization Bundle includes</p> <ul> <li>the General Spanish CoA</li> <li>the PYMES Spanish CoA.</li> <li>and the Abreviado Spanish CoA.</li> </ul> <p>After installation, the Charts of Accounts are available for selection during the Initial Client Setup and the Initial Organization setup.</p> <p>On the other hand, some countries such as the USA do not require that specific level of detail.</p> <p>Info</p> <p>Each organization can define the chart of accounts that best suits their practices.</p> <p>In that case, Etendo provides a Generic Chart of Accounts module which delivers a standard list of accounts which can be evolved for the organization's needs. After installation, the generic Chart of Accounts is available for selection during the Initial Client Setup and the Initial Organization setup.</p> <p>As explained in the Chart of Accounts Module article, a chart of accounts module basically includes a CSV file which contains the account tree structure.</p> <p>In Etendo, that creates:</p> <ul> <li>the organization's Account Tree or Chart of Accounts</li> <li>and besides a defaulted General Ledger configuration.</li> </ul> <p>It is important to remark that it is not possible to apply a Chart of Accounts in the Enterprise Module Management window because a Chart of Account is not a dataset but a CSV file.</p> <p>If the legal entity has already been created, the chart of accounts can be imported by using the Import Data module, this module allows importing products, business partners and accounts among others.</p> <p>Additionally, a CSV file can be imported while running the Initial Client Setup or while running the Initial Organization Setup if the checkbox \"Include Accounting\" is checked, therefore the CSV file or accounting file can be selected.</p> <p>Finally, a chart of accounts can also be created manually, regardless it is recommended to start from a sample chart of accounts like the generic one and evolve it for the company\u2019s needs rather than starting from scratch.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#element","title":"Element","text":"<p>The account tree window allows the user to review and maintain the chart of accounts imported through a chart of accounts module, as well as to create new ones from scratch.</p> <p>If a Chart of Accounts module or an accounting CSV file is installed and selected at client level through the Initial Client Setup process:</p> <ul> <li>the chart of accounts automatically created can be shared by any organization available in the client, as it is assigned to the organization (*)</li> </ul> <p>As a side note, this is not the preferred method but to install it at organization level, see next paragraph.</p> <p>If a Chart of Accounts module is installed and then selected at organization level through the Initial Organization Setup process, the chart of accounts automatically created is linked to the organization being created.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#element-value","title":"Element Value","text":"<p>Element value tab lists every chart of account elements from the chart of accounts headings to the subaccounts.</p> <p>Every Chart of Accounts in Etendo contains different types of elements. There are four types of elements:</p> <ul> <li>\"Heading\", \"Breakdown\" and \"Account\" elements help to structure the chart of accounts in a way that the financial reports can be produced based upon that structure</li> <li>\"Subaccount\" element allows the user to post the transactions to the ledger</li> </ul> <p>Besides, it is well-known that every account, subaccount in Etendo terms, needs to be included in a financial statement:</p> <ul> <li>\"Asset\", \"Liability\" and \"Owner's Equity\" account types need to be included in the Balance Sheet</li> <li>while \"Expense\" and \"Revenue\" account types need to be included in the Profit &amp; Loss.</li> </ul> <p>The best way to understand how a chart of accounts is captured in Etendo is by pressing the \"Tree\" icon\u00a0  which can be found in the toolbar.</p> <p>Tree icon opens a new window which shows one tree branch per financial statement:</p> <ul> <li>Balance Sheet</li> <li>Profit &amp; Loss</li> <li>and Temporary default accounts. This branch of the account tree gathers temporary defaults accounts which are not ledger accounts.</li> </ul> <p></p> <p>Besides, each tree branch contains several elements inside structured in a hierarchical way, for instance:</p> <ul> <li>Balance Sheet branch is split into:<ul> <li>Assets</li> <li>Liabilities and Owner's Equity</li> </ul> </li> </ul> <p></p> <p>As shown in the image above \"Assets\" is also split into:</p> <ul> <li>Current Assets</li> <li>Long term Assets</li> <li>and Accumulated Depreciation</li> </ul> <p>Same way \"Equity\" is also split into several accounts, in Etendo terms \"subaccounts\", such as \"Capital Stock\" or \"Retained Earnings\".</p> <p>Back to the \"Element Value\" tab, there are several basic fields which help to define each chart of account element:</p> <p></p> <ul> <li>the \"Search Key\" and the \"Name\" identifies the chart of account element.<ul> <li>The search key can either be a single letter, a word or a number, however it is important to be aware that the \"Search key\" field is the field that Etendo uses while helping the user to create an account tree element.</li> </ul> </li> <li>the Account Sign field is only shown and therefore editable if the general ledger configuration linked to the account tree is \"NOT\" set as \"Centrally Maintained\".     In that case, the account sign of each account tree element defines how the balance of that account is going to be shown in the financial statements:<ul> <li>if the account sign of an account tree element is \"Debit\", the balance of that account will then be shown as (Debit - Credit).<ul> <li>\"Asset\" accounts type are normally set as Debit, therefore its debit balance is shown as positive in the Balance Sheet.     In the same way, its credit balance is then shown as negative in the Balance Sheet.</li> </ul> </li> <li>if the account sign of an account tree element is \"Credit\", the balance of that account will then be shown as (Credit - Debit).<ul> <li>\"Liability\" account types are normally set as Credit, therefore its credit balance is shown as positive in the Balance Sheet. Same applies to the \"Owner's Equity\" account type.</li> <li>\"Revenue\" account types are set as Credit, therefore its Credit balance is shown as positive in the P&amp;L report.</li> <li>\"Expense\" account types are set as Credit, therefore its Debit balance is shown as negative in the P&amp;L report.</li> </ul> </li> </ul> </li> <li>\"Element Level\". As already mentioned, there are four types of elements which help to structure a chart of accounts in a way that the financial reports can be produced right away based upon the chart of accounts structure.     It is important to remark that it is not mandatory to use the four elements but just the ones which help us to properly structure the Chart of Accounts,     having into account that the lowest one \"Subaccount\" is the only mandatory one because ledger entries are posted to the ledger through the subaccounts.     The four element types are:<ul> <li>Heading - the elements \"B - Balance Sheet\" and \"1000-Assets\" are heading type elements because those are at the top ones having other elements underneath.</li> <li>Breakdown - the element \"1100 - Current Assets\" and \"1500 - Long-term Assets\" are a breakdown of the heading \"1000-Assets\".     Often, the assets and liabilities on a balance sheet are broken down into current assets and long-term assets. Breakdown element type helps us to define this kind of situations.</li> <li>Account - this level would help to split the element \"1100 - Current Assets\" into \"1110 - Cash\", \"1200 - Accounts Receivable\", etc, as a way to distinguish between the different types of current assets.</li> <li>Subaccount - this level is the lowest level of detail. For instance, the account element \"1110 - Cash\" can be split into the subaccounts \"1120 - Checking Account\" and \"1140 - Petty Cash\" subaccount to distinguish while posting to the ledger the transactions paid by check from the ones paid by petty cash.</li> </ul> </li> <li>\"Account Type\". The options available are Asset, Liability, Owner's equity, Revenue and Expense. Asset, Liability and Owner's equity account types are included in the Balance Sheet as well as in the \"balance sheet closing entry\" as described in the Close Year article. Revenue and Expense account types are included in the Income Statement as well as in the \"P&amp;L closing entry\" as described in the Close Year article.</li> <li>\"Summary Level\" defines if an account tree element groups other levels underneath or not, therefore heading, account and breakdown levels can be marked as summary levels while subaccount should not. There can be heading elements which group other elements underneath, for instance the element \"1000-Assets\" while there can be heading elements which do not need to group other elements underneath but Customize Elements, for instance the element \"1900-Total Assets\". The first type needs to be configured as \"Summary Level\", the second type does not need to. Moreover:<ul> <li>the amounts displayed in financial reports such as the Balance Sheet and the Income statement for a non-summary element is the sum of the debit and credit amounts posted to that account (subaccount).     The balance of that particular subaccount will then be shown as either positive or negative depending on its account sign or depending on what is centrally configured in the General Ledger Configuration</li> <li>the amounts displayed in financial reports such as the Balance Sheet and the Income statement for a summary element is the sum of the amounts of the elements underneath.     The balance of that summary element will then be shown as either positive or negative depending on its account sign or depending on what is centrally configured in the General Ledger Configuration.</li> </ul> </li> </ul> <p>Additionally, there are other advanced fields which also help to configure more unusual scenarios. Those fields are:</p> <ul> <li>the \"Show Value Condition\" field defines if a chart of account element balance is going to be shown and taken into account in financial reports or not. The options available are:<ul> <li>Algebraic, the chart of account element will be shown anyway regardless of the sign of its balance. This is the most commonly used.</li> <li>Negative Only, it will be shown only in case its balance is negative</li> <li>Positive Only, same as the previous one but just in case its balance is positive.</li> </ul> </li> <li>\"Element Shown\" defines if an account tree element is going to be shown in the financial reports or not. This one can be used for elements used to execute calculations which do not need to be shown in a report.</li> <li>\"Title Node\" defines if an account tree element is going to be shown in the financial reports just as a \"Title\" without including its balance. This option works for heading account tree elements which balance is not 100% accurate for whatever kind of reason as there is another element which gets the correct balance value by using operations or customized elements between a set of given elements.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#customized-elements","title":"Customized Elements","text":"<p>The customized elements tab allows the user to get an account tree element as a combination of a given list of existing elements.</p> <p>Once the account tree elements have been selected in a new record and in the correct sequence order, it is not required to specify a sign but just the elements which are going to be included. The customized elements need to be elements located at the same level within the account tree, otherwise a \"recursive\" calculation may happen.</p> <p>For instance, the element \"1900-Total Assets\" is the sum up of three customized elements:</p> <ul> <li>current assets</li> <li>long-term assets</li> <li>and accumulated depreciation</li> </ul> <p>as shown in the image below.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#translation","title":"Translation","text":"<p>Account elements can be translated to any language required.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#account-tree-creation","title":"Account Tree creation","text":"<p>A chart of accounts creation from scratch implies to create each chart of accounts element one by one:</p> <ul> <li>Once created, the elements can be arranged in a hierarchical way according to the corresponding financial statement structure by using the \"Drag &amp; Drop\" function of the Tree Structure feature.</li> <li>Moreover, Etendo considers the elements created in an alphanumerical order as a sorted list and finds the position in that sorted list where the new element needs to be positioned.</li> </ul> <p>The steps to follow for the creation of a chart of accounts (CoA) are:</p> <ul> <li>select the \"Organization\" for which the CoA is going to be used while posting to ledger, for example \"F&amp;B US Inc.\"</li> <li>enter the \"Name\" of the Chart of Accounts, for example \"Test CoA\"</li> <li>set it up as \"User Defined Type\" to distinguish it from the imported Chart of Accounts</li> <li>select the Tree as \"B&amp;F International Group Element Value (Account, etc.).</li> </ul> <p>Move to \"Element Value\" tab.</p> <p>The first thing to do in this tab is to create all the \"Heading\" elements one per each financial statement, for instance \"Balance Sheet\" and \"Income Statement\".</p> <p>Balance Sheet Node:</p> <ul> <li>create a new record</li> <li>enter \"B\" value in the field \"Search Key\"</li> <li>enter \"Balance Sheet\" value in the field \"Name\"</li> <li>select \"Heading\" in the Element Level field</li> <li>select \"Memo\" in the Account Type field</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Profit and Loss Node:</p> <ul> <li>create a new record</li> <li>enter \"P&amp;L\" value in the field \"Search Key\"</li> <li>enter \"Profit and Loss\" value in the field \"Name\"</li> <li>select \"Heading\" in the Element Level field</li> <li>select \"Memo\" in the Account Type field</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>The next thing to do in this tab is to create one element value per each financial statement node:</p> <ul> <li>Balance Sheet nodes are \"Assets\", \"Liabilities\" and \"Owner's Equity\"</li> <li>Profit and Loss nodes are \"Revenue\" and \"Cost of Goods Sold\" among others</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#balance-sheet-elements","title":"Balance Sheet Elements","text":"<p>Let us focus first on explaining the creation of the nodes/elements of a Balance Sheet financial statement.</p> <p>An organization's balance sheet shows its financial situation at a given point in time, the three sections of a balance sheet are:</p> <ul> <li>Assets</li> <li>Liabilities</li> <li>and Owner's equity</li> </ul> <p>therefore the next step to take is to create one chart of account element per each balance sheet node:</p> <p>Assets Node:</p> <p>To create a new record, enter a value in the field \"Search Key\", this value could be a number for instance (\"1000\") or a name (\"Assets\").</p> <p>Info</p> <p>It is recommended to use a number as that helps while creating a new chart of accounts elements. The following rule is considered while creating new chart of accounts elements:       Etendo first considers the elements in an alphanumerical order as a sorted list, finds the position in that sorted list where the new element needs to be positioned, looks at the element that precedes it and if that element is a summary element and the current element is not a summary one, adds the element as a children of that node otherwise add the element as a sibling of that node.</p> <ul> <li>enter \"Assets\" value in the field \"Name\"</li> <li>select \"Heading\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Once done, this node is dragged and dropped under the Balance Sheet node.</p> <p>Liabilities Node:</p> <ul> <li>create a new record</li> <li>enter the value (\"2000\") in the field \"Search Key\"</li> <li>enter \"Liabilities\" value in the field \"Name\"</li> <li>select \"Heading\" in the Element Level field</li> <li>select the value \"Liability\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Owners Equity Node:</p> <ul> <li>create a new record</li> <li>enter the value (\"3000\") in the field \"Search Key\"</li> <li>enter \"Owner's Equity\" value in the field \"Name\"</li> <li>select \"Heading\" in the Element Level field</li> <li>select the value \"Owner's Equity\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Info</p> <p>This time there is no need to drag and drop these two last nodes as Etendo does it according to the rule explained above.</p> <p>Both the Liabilities Node and the Owner's Equity Node are summary nodes, therefore they are added as a sibling of the Asset Node (element that precedes them).</p> <p>It is very common to break down assets and liabilities into current assets (or liabilities) and long-term assets (or liabilities).</p> <p>Moreover, \"Assets\" can be split into \"Cash\", \"Inventory\" and \"Accounts Receivable\", \"Liabilities\" can be split into \"Accounts Payable\" and \"Note Payable\" and finally \"Owner's Equity\" can be split into \"Common Stock\" and \"Retained Earnings\" among others.</p> <p>All of the above guides the creation of the following sub-nodes at a lower level underneath the heading nodes.</p> <p>Current Assets Node:</p> <ul> <li>create a new record</li> <li>enter the value (\"1100\") in the field \"Search Key\"</li> <li>enter \"Current Assets\" value in the field \"Name\"</li> <li>select \"Breakdown\" in the Element Level field</li> <li>select the value \"Assets\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Once done, drag this node under the \"1000-Assets\" node.</p> <p>Long-Term Assets Node:</p> <ul> <li>create a new record</li> <li>enter the value (\"1500\") in the field \"Search Key\"</li> <li>enter \"Long-term Assets\" value in the field \"Name\"</li> <li>select \"Breakdown\" in the Element Level field</li> <li>select the value \"Assets\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Info</p> <p>This time, there is no need to drag and drop this last node as Etendo does it according to the rule explained above.</p> <p>The Long-term Asset Node is a summary node, therefore it is added as a sibling of the Current Asset Node (element that precedes it).</p> <p>Current Liabilities Node:</p> <ul> <li>create a new record</li> <li>enter the value (\"2100\") in the field \"Search Key\"</li> <li>enter \"Current Liabilities\" value in the field \"Name\"</li> <li>select \"Breakdown\" in the Element Level field</li> <li>select the value \"Liability\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Once done, drag this node under the \"2000-Liabilities\" node.</p> <p>Long-Term Liabilities Node:</p> <ul> <li>create a new record</li> <li>enter the value (\"2500\") in the field \"Search Key\"</li> <li>enter \"Long-term Liabilities\" value in the field \"Name\"</li> <li>select \"Breakdown\" in the Element Level field</li> <li>select the value \"Liability\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Info</p> <p>This time, there is no need to drag and drop this last node as Etendo does it according to the rule explained above.</p> <p>The Long-term Liabilities Node is a summary node, therefore it is added as a sibling of the Current Liabilities Node (element that precedes it).</p> <p>Cash Node:</p> <ul> <li>create a new record</li> <li>enter the value (\"1110\") in the field \"Search Key\"</li> <li>enter \"Cash\" value in the field \"Name\"</li> <li>select \"Account\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Once done, drag this node under the \"1100-Current Assets\" node.</p> <p>Accounts Receivable Node:</p> <ul> <li>create a new record</li> <li>enter the value (\"1120\") in the field \"Search Key\"</li> <li>enter \"Accounts Receivable\" value in the field \"Name\"</li> <li>select \"Account\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>and set the field \"Summary Level\" to \"Yes\"</li> </ul> <p>Info</p> <p>This time, there is no need to drag and drop this last node as Etendo does it according to the rule explained above.</p> <p>The Accounts Receivable Node is a summary node, therefore it is added as a sibling of the Cash Node Node (element that precedes it).</p> <p>Cash Node needs to have subaccounts elements underneath, for instance:</p> <p>111200 Checking Account</p> <ul> <li>create a new record</li> <li>enter 111200 in the field \"Search Key\"</li> <li>enter \"Checking Account\" value in the field \"Name\"</li> <li>select \"Subaccount\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>and select the value \"Algebraic\" in the field \"Show Value Condition\"</li> </ul> <p>111300 Checking In-Transfer</p> <ul> <li>create a new record</li> <li>enter 111300 in the field \"Search Key\"</li> <li>enter \"Checking In-Transfer\" value in the field \"Name\"</li> <li>select \"Subaccount\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>and select the value \"Algebraic\" in the field \"Show Value Condition\"</li> </ul> <p>111400 Petty Cash</p> <ul> <li>create a new record</li> <li>enter 111400 in the field \"Search Key\"</li> <li>enter \"Petty Cash\" value in the field \"Name\"</li> <li>select \"Subaccount\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>and select the value \"Algebraic\" in the field \"Show Value Condition\"</li> </ul> <p>Above subaccounts are the ones used while posting ledger entries into the ledger.</p> <p>Info</p> <p>There is no need to drag and drop the three subaccounts above into the corresponding node as Etendo does it.</p> <p>Accounts Receivable Node needs to have subaccounts elements underneath, for instance:</p> <p>112100 Trade Receivable</p> <ul> <li>create a new record</li> <li>enter 112100 in the field \"Search Key\"</li> <li>enter \"Trade Receivable\" value in the field \"Name\"</li> <li>select \"Subaccount\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>and select the value \"Algebraic\" in the field \"Show Value Condition\"</li> </ul> <p>112200 Tax Receivables</p> <ul> <li>create a new record</li> <li>enter 112200 in the field \"Search Key\"</li> <li>enter \"Tax Receivables\" value in the field \"Name\"</li> <li>select \"Subaccount\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>and select the value \"Algebraic\" in the field \"Show Value Condition\"</li> </ul> <p>Above subaccounts are the ones used while posting ledger entries into the ledger.</p> <p>There is no need to drag and drop the two subaccounts above into the corresponding node as Etendo does it as explained above.</p> <p>The same steps need to be followed for the creation of other \"Account\" and \"Subaccount\" node types under the nodes:</p> <ul> <li>Long-term Assets</li> <li>Current Liabilities</li> <li>Long-term Liabilities</li> <li>and Owner's Equity</li> </ul> <p>Last but not least, it is required to create a node which summarizes assets, another one which summarizes liabilities and the last one which summarized owner's equity.</p> <p>Let's take the creation of total assets node, for instance:</p> <p>Total Assets Node</p> <ul> <li>create a new record</li> <li>enter 1900 in the field \"Search Key\"</li> <li>enter \"Total Assets\" value in the field \"Name\"</li> <li>enter \"1100+1500\" in the field \"Description\" as a way to describe that this node sums up current assets and long-term assets.</li> <li>select \"Heading\" in the Element Level field</li> <li>select the value \"Asset\" in the field \"Account Type\"</li> <li>and select the value \"Algebraic\" in the field \"Show Value Condition\"</li> <li>navigate to Customized Element tab</li> <li>create a new record</li> <li>enter \"1\" in the field \"Sign\"</li> <li>select the Account \"1100 - Current Assets\"</li> <li>create a new record</li> <li>enter \"1\" in the field \"Sign\"</li> <li>select the Account \"1500 - Long-term Assets\"</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#income-statement-elements","title":"Income Statement Elements","text":"<p>Now, let us briefly explain the creation of the nodes/elements of an Income Statement.</p> <p>An organization's income statement shows the company's financial performance over a period of time (usually one year), therefore it has two main sections:</p> <ul> <li>the first section details the organization revenues</li> <li>the second section details the organization expenses</li> </ul> <p>The income statement also takes into account the cost of the goods sold, therefore the gross profit refers to the sum of an organization's revenues minus the cost of goods sold.</p> <p>Besides, it is very common to separate the \"Operating Expenses\" from the \"Non-Operating Expenses\", therefore it is possible to calculate the operating income as the difference between the gross profit and the operating expenses while the net income is the difference between the operating income and the non-operating expenses.</p> <p>All of the above drives the creation of the nodes/ elements which once arranged will represent the structure of the organization's income statement.</p> <p>The nodes to create for instance can be:</p> <ul> <li>The \"Revenue\" node:<ul> <li>this \"Heading\" and \"Revenue\" account type node can include all the revenue subaccounts.</li> </ul> </li> <li>The \"Total Revenue\" node:<ul> <li>this \"Heading\" and \"Revenue\" account type node can include a customized element of the \"Revenue\" node above.</li> </ul> </li> <li>The \"Cost of the Goods Sold\" node:<ul> <li>this \"Heading\" and \"Expense\" account type node needs can include all the cost of the goods sold related subaccounts.</li> </ul> </li> <li>The \"Total Cost of the Goods Sold\" node:<ul> <li>this \"Heading\" and \"Expense\" account type node can include a customized element of the \"Cost of the Goods Sold\" node above.</li> </ul> </li> <li>The \"Gross Margin\" node:<ul> <li>this \"Heading\" and \"Revenue\" account type node is a customized element of the \"Revenue\" node and the \"Cost of the Goods Sold\" node above.</li> </ul> </li> <li>the \"Operating Expenses\" node:<ul> <li>this \"Heading\" and \"Expense\" account type node can include all the operating expense related subaccounts.</li> </ul> </li> <li>The \"Total Operating Expense\" node:<ul> <li>this \"Heading\" and \"Expense\" account type node can include a customized element of the \"Operating Expenses\" node above.</li> </ul> </li> <li>The \"Operating Income\" node:<ul> <li>this \"Heading\" and \"Revenue\" account type node can include a customized element of the \"Revenue\" node, the \"Cost of the Goods Sold\" node and the \"Operating Expenses\" node.</li> </ul> </li> <li>The \"Non Operating Expense\" node:<ul> <li>this \"Heading\" and \"Expense\" account type node can include all the non operating expense related subaccounts.</li> </ul> </li> <li>The \"Total Non Operating Expenses\" node:<ul> <li>this \"Heading\" and \"Expense\" account type node can include a customized element of the \"Non Operating Expense\" node above.</li> </ul> </li> <li>and finally the \"Net Income\" node:<ul> <li>this \"Heading\" and \"Revenue\" account type node can include a customized element of the \"Operating Income\" node above and the \"Total Non Operating Expense\" node above.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#temporary-elements","title":"Temporary Elements","text":"<p>As already explained, there is a close relationship between an account tree and the General Ledger configuration in Etendo, as the Account Tree is a Dimension of the General Ledger.</p> <p>The General Ledger configuration also includes a set of default accounts (or subaccounts in Etendo terms) to use while posting certain type of transactions. Those accounts need to be created in the account tree first and then be configured in the General Ledger Configuration tabs listed below:</p> <ul> <li>General Accounts</li> <li>Defaults</li> </ul> <p>Most of those defaults accounts are ledger accounts such as:</p> <ul> <li>the \"Income Summary\" account</li> <li>the \"Retained Earnings\" account</li> <li>the \"Vendor Liability\" account</li> <li>or the \"Customer Receivables\" account</li> </ul> <p>However, there are a few of these accounts which are not ledger accounts but what we can call \"Temporary\" accounts such as the \"Suspense Balancing\" account.</p> <p>Info</p> <p>It is not necessary to create a default ledger account as those are created as part of the account tree.</p> <p>However, temporary default accounts need to be created in the account tree under a specific tree branch or node, in order to get that the balance of those temporary accounts is not taken while launching either the Balance Sheet or the Income Statement.</p> <p>Therefore, a new \"Heading\" and \"Summary\" element needs to be created in the \"Element Level\" tab, that element can be named \"Temporary Accounts\".</p> <p></p> <p>Once created, the accounts below (subaccounts) can be created and move underneath it:</p> <ul> <li>Suspense Balancing account</li> <li>Suspense Error account</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#general-ledger-configuration","title":"General Ledger Configuration","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>General Ledger Configuration</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_5","title":"Overview","text":"<p>The general ledger configuration indicates the way that the organization's financial transactions are going to be posted to the ledger.</p> <p>A general ledger configuration is created whenever an accounting CSV file or \"Chart of Accounts\" module reference data is selected while running the Initial Client Setup process or the Initial Organization Setup process.</p> <p>The general ledger configuration created by default can afterwards be customized to meet the organization's needs.</p> <p>If the accounting CSV file or reference data is selected at client level, the general ledger configuration is assigned to the organization(*) therefore it is available to any organization within the client.</p> <p>If the accounting CSV file or reference data is selected at organization level, the general ledger configuration is assigned to the organization making it available to that organization and any of its descendants.</p> <p>Besides a general ledger configuration, those accounting files also create:</p> <ul> <li>the organization's Account Tree or Chart of Accounts</li> <li>and the general ledger default accounts</li> </ul> <p>Etendo delivers accounting files through:</p> <ul> <li>the \"Chart of Accounts\" modules contained in a Localization Bundle if available for your country</li> <li>and the Generic Chart of Accounts module</li> </ul> <p>Additionally, a general ledger configuration can also be created manually, but once the corresponding Account Tree has been created.</p> <p>Finally, it is important to remark that the organization's general ledger configuration and the organization's account tree (or chart of accounts) are linked to each other because \"Account\" is a mandatory dimension of the general ledger configuration.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#general-ledger-configuration_1","title":"General Ledger Configuration","text":"<p>The General Ledger Configuration window allows the user to review and maintain defaulted general ledger configurations and to create new ones if needed.</p> <p></p> <p>A general ledger configuration created by default can be changed to meet the organization's needs by changing the features below:</p> <p>1. The Currency to use while posting transactions or journal entries to the ledger.</p> <ul> <li>The currency shown at first is taken from the currency entered either in the Initial Client Setup process or in the Initial Organization Setup process. This currency can be changed if needed before doing any posting.</li> </ul> <p>An organization can have two general ledgers assigned, one inherited from its parent in a given currency (i.e. USD) and its own one which can be defined in a different currency (i.e. EUR). That is, for instance, the configuration of the F&amp;B Espa\u00f1a organization of the F&amp;B sample client. This means that every time that an F&amp;B Espa\u00f1a transaction is posted to the ledger Etendo will show two \"Journal Entries Report\" windows one for each general ledger, as shown in the images below:</p> <p>2. The Allow Negative checkbox defines if negative posting is allowed or not while posting transactions to the general ledger.</p> <p>Negative posting not allowed implies that a negative debit posting would turn into a credit posting and a negative credit posting would turn into a debit posting.</p> <p>For instance, a purchase invoice generates the posting below:</p> Account Debit Credit Comments Product Expense Line Net Amount One per invoice line Tax Credit Tax Amount One per tax line Vendor Liability Total Gross Amount One per invoice <p>If that purchase invoice needs to be totally or partially voided or reversed, the posting will look like:</p> <ul> <li>in case of \"Allow Negative\" checkbox enabled</li> </ul> Account Debit Credit Comments Product Expense (-) Line Net Amount One per invoice line Tax Credit (-) Tax Amount One per tax line Vendor Liability (-) Total Gross Amount One per invoice <ul> <li>in case of \"Allow Negative\" checkbox disabled</li> </ul> Account Debit Credit Credit Product Expense Line Net Amount One per invoice line Tax Credit Tax Amount One per tax line Vendor Liability Total Gross Amount One per invoice <p>3. The general ledger can be set as \"Centrally Maintained\" or not in relation to the way that the Account Tree elements are going to be shown in the Balance Sheet and in the Income Statement</p> <ul> <li>If a general ledger is set as \"Centrally Maintained\":<ul> <li>The field \"Account Sign\" is hidden in the Element Value tab of the Account Tree window</li> <li>It is possible to define at general ledger level whether the balances of any account type are going to be shown as \"Positive\" or \"Negative\" in the financial statements.     If the checkbox \"Central Maintenance\" is selected :<ul> <li>The Debit balances of the \"Asset\" account type will be shown as \"Positive\" in the Balance Sheet.     As a consequence of that, if an \"Asset\" account type has a credit balance that will then be shown as \"Negative\" in the Balance Sheet.</li> <li>The Credit balances of the \"Liabilities\" account type will be shown as \"Positive\" in the Balance Sheet. The same applies to \"Owner's Equity\" account types.</li> <li>The Debit balances of the \"Expense\" account type will be shown as \"Positive\" in the Income Statement.</li> <li>Finally, the Credit balances of the \"Revenue\" account type will be shown as \"Positive\" in the Income Statement.</li> </ul> </li> </ul> </li> </ul> <p>It is possible to uncheck any of the checkboxes listed above. For instance, an organization might want to show the Debit balances of the \"Expense\" account type as \"Negative\" in the Income Statement.</p> <ul> <li>If the general ledger is NOT set as \"Centrally Maintained\":<ul> <li>The field \"Account Sign\" is not hidden in the Element Value tab of the Account Tree window.</li> <li>Therefore, the account sign of each account tree element defines how the balance of that account is going to be shown in the financial statements.</li> </ul> </li> </ul> <p>Finally, it is important to remark that the \"Central Maintenance\" checkbox is not selected by default for the general ledgers created by default, as the corresponding accounting CSV files or reference data imported have their own configuration through the \"Account Sign\".</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#dimension","title":"Dimension","text":"<p>Dimension tab allows the user to configure the organization's general ledger dimensions or to add additional accounting dimensions not centrally maintained in the client.</p> <p>Etendo allows the user to manage mandatory and not mandatory accounting dimensions to be entered in the Dimensions section of the documents, which can be posted to the ledger.</p> <p>Mandatory dimensions can be filled in or not depending on the document category being created. For instance, \"Business Partner\" and \"Product\" are mandatory dimensions that need to be filled in a purchase invoice but can be filled or not in a G/L Journal.</p> <p>There are two \"mandatory\" dimensions at the organization's general ledger configuration level, which are:</p> <ul> <li>The \"Account\" as any document/transaction posted to the ledger needs to be posted in a ledger account (or subaccount in Etendo terms) of a given account tree or chart of accounts.</li> <li>The \"Organization\", as any document/transaction posted to the ledger, needs to be posted in an organization's general ledger.</li> </ul> <p>Besides, if an organization belongs to a Client which centrally maintains the accounting dimensions, it is possible to add in this tab other dimensions such as the ones listed below which can even set as \"mandatory\" for the organization:</p> <ul> <li>Activity</li> <li>Asset</li> <li>Campaign</li> <li>Location From</li> <li>Location To</li> <li>Sales Region</li> </ul> <p>On the other hand, let us take for instance an organization's general ledger for which the dimensions below have been selected in this tab because the organization belongs to a client which does not centrally maintain the accounting dimensions:</p> <ul> <li>Mandatory dimensions:<ul> <li>Organization</li> <li>and Account</li> </ul> </li> <li>Non mandatory dimensions which are set as \"mandatory\" in here:<ul> <li>Business Partner, Product and Project</li> </ul> </li> <li>Non mandatory dimension:<ul> <li>Sales Region</li> </ul> </li> </ul> <p>The configuration above means that every time that a transaction of any kind (purchase invoice, sales invoice, G/L Journal) is posted to the ledger, all the mandatory dimensions above must be entered while there is an option to enter sales region information if any.</p> <p>Moreover:</p> <ul> <li>some dimensions appear on some transactions and some do not. That depends on the document being created. For instance:<ul> <li>The Account dimension always appears in the Lines tab of a G/L Journal, however it does not appear in the Lines tab of a purchase invoice as that data is automatically taken from the accounts (subaccounts) setup for the product, for the business partner and for the taxes, if any.</li> </ul> </li> <li>Some dimensions appear either in the header and/or in the lines of the documents. That defaulted configuration can be changed only in the clients which centrally maintain the accounting dimensions and for the centrally maintained dimensions.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#active-tables","title":"Active Tables","text":"<p>Active Tables tab allows the user to define which tables and therefore transactions are going to be posted to the ledger and which ones not.</p> <p>The tables listed below are the tables suitable to be posted:</p> Table name\u00a0 Window\u00a0 FinancialMgmtAmortization Amortization Invoice Purchase Invoice\u00a0   Sales Invoice Order Purchase Order\u00a0   Sales Order FIN_BankStatement Financial Account - Bank Statement FIN_Finacc_Transaction Financial Account - Transactions FIN_Payment Payment In\u00a0   Payment Out FIN_Reconciliation Financial Account - Reconciliation FinancialMgmtGLJournal General Ledger Journal MaterialMgmtShipmentInOut Goods Receipt\u00a0   Goods Shipment MaterialMgmtInternalConsumption Internal Consumption MaterialMgmtInventoryCount Physical Inventory ProcurementReceiptInvoiceMatch Matched Invoices ProcurementPOInvoiceMatch Matched Purchase Orders MaterialMgmtInternalMovement Goods Movement MaterialMgmtProductionTransaction Work Effort\u00a0   Bill of Materials Production FinancialMgmtBankStatement Old payment flow - Bank Statement\u00a0   Set to Active = No FinancialMgmtCashJournal Old payment flow - Cash Journal\u00a0   Set to Active = No FinancialMgmtDPManagement Old payment flow - Debt-payment management\u00a0   Set to Active = No FinancialMgmtSettlement Old payment flow - Settlements\u00a0   Set to Active = No <p>For instance, the records of the table \"FinancialMgmtAmortization\" are the amortization transactions which can be posted.</p> <p>Info</p> <p>The records of the tables above can be posted when the \"Active\" checkbox of these tables is set as \"Yes\".</p> <p>There is a flag named \"Disable for Background\" next to each table above, which allows that a given table is not taken by the Accounting Background Process.</p> <p>In other words, it is possible to configure that the transactions related to a given \"Table\", for instance the \"Invoice\" table, are not taken by that process, therefore, they will not be automatically posted.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#documents_1","title":"Documents","text":"<p>Documents tab allows the user to define which document types of a table allow negative posting and if they use a different accounting process than the default one based on a given accounting template.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#general-accounts","title":"General Accounts","text":"<p>General accounts tab allows the user to define the accounts to be used in balancing entries and in the end-year closing process.</p> <p>The mandatory \"Income Summary\" account is populated by default as part of the general ledger configuration. That account is obviously part of the organization's chart of accounts.</p> <p>If an accounting CSV or reference data is not selected while running the Initial Client Setup process or the Initial Organization Setup process, this mandatory account needs to be manually entered here once the account tree and therefore the corresponding income summary (or net income) subaccount has been created.</p> <p></p> <p>The Income Summary account is used by the Close Year process as the P&amp;L closing entry resets all revenue and expense account type and posts the difference in this account.</p> <p>This tab also contains a set of \"Suspense\" accounts which needs to be created under a specific account tree branch as explained in the Account Tree creation article.</p> <p>Those accounts can also be provided by the accounting files, in fact the Generic CoA provides these accounts.</p> <p>The Suspense Balancing account is shown if the checkbox \"Suspense Balancing Use\" is selected. This account is used in those cases where an accounting entry can not be balanced while being posted. If there is no account in this field, Etendo shows an error.</p> <p>The Suspense Error account is shown if the checkbox \"Suspense Error Use\" is selected. This account is used in those cases where an exception or error happens, preventing an accounting entry to be posted. If there is not an account in this field, Etendo will show an error.</p> <p>Other accounts are:</p> <p>The Retained Earning account if any automatically gets the P&amp;L closing balance of a given year. If there is no account in this field, nothing will be automatically moved from the Income Summary account to the Retained Earning account.</p> <p>The Currency Balance account is shown if the checkbox \"Currency Balance Use\" is selected. This account is used in those cases where there are currency rounding differences while posting a transaction. For instance, it could happen that the total invoice exchanged into a given currency does not 100% match with the sum of each invoice line exchanged into the same currency.</p> <p>Finally, the Reverse Permanent Account Balances checkbox allows the user to include or not an entry to reverse the balance sheet accounts balances during the end year closing process.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#defaults","title":"Defaults","text":"<p>Defaults tab allows the user to maintain or to add a set of default accounts to use while posting a certain type of transactions.</p> <p>The mandatory \"Default\" accounts are populated by default as part of the general ledger configuration. Those accounts are obviously part of the organization's chart of accounts.</p> <p>If an accounting csv or reference data is not selected while running the Initial Client Setup process or the Initial Organization Setup process, these mandatory accounts need to be manually entered here once the account tree and therefore the corresponding subaccounts have been created.</p> <p>The accounts selected here are defaulted to every Business Partner Category or Product Category, for instance, by using the action button \"Copy Accounts\".</p> <p>The accounts defaulted to every business partner category, for instance, can be as well defaulted to every vendor or customer by using the action button \"Copy Accounts\", this time from the Business Partner Category window.</p> <p>Finally, it is possible to override these defaults at business partner category level allowing vendor liabilities and customer receivables for different business partners to be posted to different accounts.</p> <p>This last configuration change needs to be done in the vendor and/or customer windows.</p> <p></p> <p>As shown in the image above, \"default\" accounts are:</p> <ul> <li>Customer Receivables</li> <li>Customer Prepayments</li> <li>Write Off</li> <li>Write Off Revenue</li> <li>Vendor Liability</li> <li>Vendor Prepayment</li> <li>Non-Invoiced Receipts</li> <li>Bad Debt Expense Account</li> <li>Bad Debt Revenue Account</li> <li>Allowance for Doubtful Debt Account</li> <li>Doubtful Debt Account</li> <li>Product Asset</li> <li>Product Expense</li> <li>Product Deferred Expense</li> <li>Product Revenue</li> <li>Product Deferred Revenue</li> <li>Product COGS</li> <li>Product Revenue Return</li> <li>Product COGS Return</li> <li>Invoice Price Variance</li> <li>Warehouse Differences</li> <li>Inventory Revaluation</li> <li>Work in Progress</li> <li>The \"Bank Asset\" default account is populated as:<ul> <li>the Deposit Account</li> <li>the Withdrawal Account</li> <li>the Cleared Payment Account (Payment In)</li> <li>the Cleared Payment Account (Payment Out)</li> </ul> </li> <li>The \"Bank In Transit\" default account is populated as:<ul> <li>the In Transit Payment IN Account</li> <li>the In Transit Payment OUT Account</li> </ul> </li> <li>The \"Bank Expense\" default account is populated as:<ul> <li>the Bank Fee Account</li> </ul> </li> <li>Bank Revaluation Gain Account</li> <li>Bank Revaluation Loss Account</li> <li>Tax Due</li> <li>Tax Credit</li> <li>Depreciation</li> <li>Accumulated Depreciation</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#creation-of-a-general-ledger-configuration","title":"Creation of a General Ledger Configuration","text":"<p>An Organization might have as many different General Ledgers as required.</p> <p>By default, an organization can have only one general ledger assigned for simplicity reasons, unless:</p> <ul> <li>The organization has its own general ledger and another one inherited from its parent, that is, for instance, the case of \"F&amp;B Espa\u00f1a\" sample organization.</li> <li>The advanced general ledger configuration is enabled at system level, as explained in the Organization article.</li> </ul> <p>Info</p> <p>It is recommended to create a new general ledger configuration and link it to an organization once it has been created the Account Tree to use while posting transactions to that new general ledger.</p> <p>It is possible that an organization might require the same account tree but different general ledgers, one of them in USD and the other one in EUR.</p> <p>The steps to follow to configure a general ledger are:</p> <ul> <li>Select the \"Organization\" for which the general ledger is going to be available, for instance \"F&amp;B US Inc.\".</li> <li>Enter the \"Name\" of the General Ledger configuration, for instance \"EUR General Ledger\".</li> <li>Select the \"Accounting Standard\" for instance \"US GAAP\".     In the United States, \"Generally Accepted Accounting Principles\" (GAAP) is the name for the framework of accounting rules used in the preparation of financial statements.     This data is just informative without any business logic behind it.</li> <li>Select the \"Currency\" to use for posting transactions to the ledger.     In the case of the F&amp;B US Inc organization, the currency can be \"EUR\" therefore the F&amp;B US Inc organization can get a double posting one in \"USD\" and the other one in \"EUR\".</li> <li>Select the check \"Allow Negative\" in case negative posting is allowed as already described or not.</li> </ul> <p>Once done, the newly created general ledger needs to be linked to F&amp;B US Inc organization in the General Ledgers tab.</p> <p>The organization of the example has now two general ledgers assigned:</p> <ul> <li>The inherited one (owned by its parent organization \"F&amp;B International Group\") in \"USD\" currency.</li> <li>The newly created one in \"EUR\" currency.</li> </ul> <p>Back to the General Ledger configuration window, the remaining steps to take to properly configure the general ledger are:</p> <p>Navigate to the Dimension tab to add below listed mandatory dimensions:</p> <ul> <li>Create a new record and enter Organization in the field \"Name\".</li> <li>Select \"Organization\" in the field \"Type\".</li> <li>Select \"F&amp;B US Inc\" in the field \"Trx Organization\".</li> <li>Select the checkbox \"Balanced\" and the checkbox \"Mandatory\".</li> <li>Create a new record and enter Account in the field \"Name\".</li> <li>Select \"Account\" in the field \"Type\".</li> <li>Select the already existing \"Account Tree\" in the field \"Account Tree\".</li> <li>Select the checkbox \"Mandatory\".</li> </ul> <p>Non-mandatory dimensions can also be created as described below in case it is required to save additional information such as the business partner or the project while posting journal entries or any transaction type:</p> <p>- create a new record and enter \"Business Partner\" in the field \"Name\"</p> <p>- select \"Business Partner\" in the field \"Type\"</p> <p>- create a new record and enter \"Project\" in the field \"Name\"</p> <p>- select \"Project\" in the field \"Type\"</p> <p>Navigate to the Active Tables tab to review the tables which are going to generate accounting. It is possible to enable accounting for the ones do not active for accounting.</p> <p>Navigate to the General Accounts tab to configure the mandatory general account (Income Summary) as well as the accounts to use in case of suspense balancing or suspense error among others. Those accounts need to be previously created as described in the Account Tree creation article.</p> <p>Finally, navigate to the Defaults tab to configure the default accounts which needs to be copied to other accounting configuration tab such as:</p> <ul> <li>the Product Accounting tab</li> <li>the Financial Account Accounting Configuration tab</li> <li>the Tax Rate Accounting tab</li> <li>etc.</li> </ul> <p>Info</p> <p>As every time that a transaction of any type is posted to the ledger, it is posted to the two general ledgers configured for the Organization.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#fiscal-calendar","title":"Fiscal Calendar","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Fiscal Calendar</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_6","title":"Overview","text":"<p>\"Legal entities with accounting\" organization types must have a fiscal calendar assigned, while the rest of organization types can inherit it from its parent.</p> <p>A calendar contains years and the periods of each year required to get an accurate organization's accounting practice.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#calendar","title":"Calendar","text":"<p>The fiscal calendar window allows the user to create and maintain the organization's fiscal calendar.</p> <p></p> <p>A fiscal calendar is a collection of years to be created on demand as time goes by.</p> <p>Each organization requiring a calendar needs to have one calendar assigned to it and only one therefore it is clearly known which calendar is going to be used while posting transactions and while opening and closing the accounting cycle. The procedure to do that is:</p> <ul> <li>Once the calendar is properly created in this window, it needs to be linked to the \"legal with accounting organization\" type by selecting it after enabling the checkbox \"Allow Period Control\".     All of the above is done in the Organization window.</li> </ul> <p>Etendo automatically proposes the organization as * while creating a fiscal calendar:</p> <ul> <li>Accepting this default means that this calendar will be maintained at the client level and will therefore be available to all another organizations created within this client.</li> <li>Changing this default to other organization means that this calendar will only be available to that organization.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#year","title":"Year","text":"<p>Year tab allows the user to create as many fiscal years as required within a fiscal calendar.</p> <p>A Fiscal Year is an accounting year which normally includes the twelve consecutive months over which a company determines earnings and profits.</p> <p>The button \"Create Periods\" allows the user to create the twelve consecutive months starting from \"January, 1st\" to \"December, 31st\" as \"Standard Calendar Period\" Types.</p> <p>This process also allows the user to create the \"13th Period\" which is a period that can be used to make accounting adjustments and get them posted to the ledger by using G/L Journals.</p> <p>The \"13th Period\" is an \"Adjustment Period\" that is the last date of the last standard calendar period (i.e 31-12-2012).</p> <p></p> <p>Once created, all the periods need to be opened in the Open/Close Period Control window.</p> <p>The periods of an organization's fiscal calendar can be reviewed in the Period Control tab of the Organization windows. Note that:</p> <ul> <li>\"Standard Calendar Periods\" are opened for every \"Document Category\", which means that Etendo obviously allows the user to post any document type to the ledger within a standard calendar period open.</li> <li>while the \"Adjustment Period\" is only open for G/L Journal document category, which means that Etendo allows to post only G/L journals within the adjustment period.</li> </ul> <p>Additionally, it is possible to manually create the accounting periods of a year. That action requires to enter the data below:</p> <ul> <li>A consecutive period number: this number will be later on used to open/close consequent accounting periods at a time.</li> <li>A period name.</li> <li>The starting date of the period.</li> <li>The ending date of the period.</li> <li>The period type as \"Standard Calendar Period Type\" or \"Adjustment Period\" as required.</li> </ul> <p>The values of a Period can be manually modified also, but only while this Period is in a Never Opened Status, once it has been open it will no longer be possible.</p> <p>Etendo checks if another period with the same starting and ending date is already registered in the system, and it also checks if the date of a period overlaps the date of another period.</p> <p>Finally, a year can be:</p> <ul> <li>\"closed\"</li> <li>and re-opened</li> </ul> <p>Both actions are performed in the End Year Close window.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#period","title":"Period","text":"<p>The period tab lists all the periods of a year.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#account-combination","title":"Account Combination","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Account Combination</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_7","title":"Overview","text":"<p>An account combination is an Organization's General Ledger account.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#combination","title":"Combination","text":"<p>The Account Combination window allows the user to review the Organization's General Ledger accounts.</p> <p></p> <p>The accounts can not be created manually in this window, but in the Account Tree window.</p> <p>Every time that an account (or subaccount in Etendo terms) is created in an account tree of a General Ledger, the corresponding account combination is also created in this window.</p> <p>The account combination window shows the data below:</p> <ul> <li>the General Ledger</li> <li>the Organization</li> <li>and the Account</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#accounting-process","title":"Accounting Process","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Accounting Process</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_8","title":"Overview","text":"<p>In this window, the user can configure necessary accounting processes.</p> <p></p> <p>Info</p> <p>For more information, visit the developer guide on How to Create a Module that Adds an Accounting Process.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#gl-item","title":"G/L Item","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>G/L Item</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_9","title":"Overview","text":"<p>A G/L item is an account item to be used for direct account posting.</p> <p>Direct account posting refers to:</p> <ul> <li>entering and posting accounting entries in a G/L Journal by using the corresponding GL items and therefore their debit/credit accounts defined.</li> <li>creating and posting financial invoices such as Purchase Financial invoices, same applies to sales.</li> <li>or creating and posting G/L item payments in a GL Journal.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#gl-item_1","title":"G/L Item","text":"<p>G/L Item window allows the user to create as many account items as required for an organization and general ledger.</p> <p></p> <p>As shown in the image above, a G/L item or accounting item can be created by entering below listed basic information:</p> <ul> <li>the Organization, as always if a G/L item is created at (*) organization level will be shared across all the organization of the client.</li> <li>the Name of the item</li> <li>the flag \"Enable in Financial Invoices\" define if the item can be used as an account while creating and posting financial sales and purchase invoices, if that is the case:<ul> <li>a Tax Category will have to be selected to get that purchase or sales taxes are properly calculated.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#accounting","title":"Accounting","text":"<p>Account items are directly related to the debit and credit accounts to be used while posting them.</p> <p></p> <p>As shown in the image above, the accounting tab allows the user to enter debit and credit accounts for the G/L item. It is possible to enter a debit and a credit account for each organization's general ledger configuration.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#gl-category","title":"G/L Category","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>G/L Category</code></p> <p>In this window, the user can define G/L Categories to be used in the General Ledger.</p> <p>The G/L Category Tab defines optional identifiers for a document or journal. Each Category may be used on a document, import or manual journal. </p> <p>The fields to note are: - \u00a8G/L Category: A classification used to group lines in the general ledger. - Client: Client for this installation. - Organization: Organizational entity within client - Name: A non-unique identifier for a record/document often used as a search tool. - Description : A space to write additional related information.** - Active: A flag indicating whether this record is available for use or deactivated. - Category Type: Source of the Journal with this category - Document Category: A classification of document types that are shown and processed in the same window. - Default: A value that is shown whenever a record is created.</p> <p></p> <p>Once the needed information is complete, the categories are defined as in the following example: </p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#document-type","title":"Document Type","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Document Type</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_10","title":"Overview","text":"<p>Each document type in Etendo refers to a business transaction such as purchase orders, shipments or sales invoices, among others.</p> <p>Etendo includes a complete set of standard Document Types needed for the application to work properly.</p> <p>This set is bundled into two reference datasets:</p> <ul> <li>Standard document types for orders, invoices, etc. and settings - Core - English (USA)</li> <li>Document types and default algorithm for bank statement auto matching - Advanced Payables</li> </ul> <p>These datasets can be imported into the application during its initial setup using Initial Client Setup or Initial Organization Setup processes. Or if the application is already up and running, these datasets or their updates can be installed using Enterprise Module Management window.</p> <p>The complete list of standard document types is the following:</p> Document Type Name\u00a0 Document Category\u00a0 Business Transaction\u00a0 AP CreditMemo AP Credit Memo Purchase Credit Memo AP Invoice AP Invoice Purchase Invoice AR CreditMemo AR Credit Memo Sales Credit Memo AR Invoice AR Invoice Sales Invoice Return Material Sales Invoice AR Return Material Invoice Return Material Sales Invoice Reversed Sales Invoice AR Invoice Reversed Sales Invoice MM Receipt Material Receipt Goods Receipt RTV Shipment Material Receipt Return to Vendor Shipment MM Shipment Material Delivery Goods Shipment RFC Receipt Material Delivery Return from Customer receipt Purchase Order Purchase Order Purchase Order RTV Order Purchase Order Return to Vendor Quotation Sales Order Sales Quotation RFC Order Sales Order Return from Customer Sales Order POS Order Sales Order Point of Sales Order Warehouse Order Sales Order Warehouse Order Standard Order Sales Order Sales Order AP Payment AP Payment Payment Out AR Receipt AR Receipt Payment In Financial Account Transaction Financial Account Transaction Financial Account Transaction Bank Statement File Bank Statement File Bank Statement Payment Proposal AP Payment Proposal Payment Proposal Reconciliation Reconciliation Reconciliation Doubtful Debts Doubtful Debt Doubtful Debt Cost Adjustment Cost Adjustment Cost Adjustment Landed Cost Landed Cost Landed Cost Landed Cost Cost Landed Cost Cost Landed Cost Cost Inventory Amount Update Inventory Amount Update Inventory Amount Update <p>It is also important to remark that new document types could be added to the list above, if that is the case an updated version of the \"Reference Data\" containing the new document types will be provided by Etendo. That newly created \"Reference Data\" will have to be applied to the corresponding Organization in the Enterprise Module Management.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#document-definition","title":"Document Definition","text":"<p>Document type window allows the user to configure how each document type is going to behave in terms of accounting and sequencing among others.</p> <p></p> <p>\"Standard\" Document Types can be customized as required by having into account that:</p> <p>There are a few fields whose values should not be changed. Those are:</p> <ul> <li>the Organization</li> <li>the Document Category</li> <li>and the Table</li> </ul> <p>The rest of the fields can be changed, for instance:</p> <ul> <li>the Name of the document</li> <li>the Print Text which is the name of the document to be printed while printing the document.</li> <li>the Sequenced Document flag could be disabled or enabled if it is required to either<ul> <li>manually number a document type</li> <li>or automatically number a document type according to a given document sequence.</li> </ul> </li> <li>Document Cancelled, if any, is the document to use for voiding a given document type. For instance, a \"Reversed Sales Invoice\" document type can be set as the document canceled of an \"AR Invoice\", therefore that one will be the one to use while voiding an \"AR Invoice\"(or sales invoice).<ul> <li>A \"Reversed Sales Invoice\" document type is also an \"AR Invoice\" document type, but it can have a different sequencing by just linking it to a difference document sequence</li> <li>besides, it is set as a \"Return\" document type, which means that:<ul> <li>it generates a \"negative\" sales invoices with a negative invoiced quantity/ies</li> <li>therefore, the posting will be opposite to the sales invoice one, as described below, in case Allow Negative checkbox is enabled and in case it is not:</li> </ul> </li> </ul> </li> </ul> Account Debit Credit Comments Customer Receivables (-) Line Net Amount One per invoice line Tax Debit (-) Tax Amount One per tax line Product Revenue (-) Total Gross Amount One per invoice Account Debit Credit Comments Customer Receivables Line Net Amount One per invoice line Tax Debit Tax Amount One per tax line Product Revenue Total Gross Amount One per invoice <ul> <li>the checkbox named \"Credit Memo\" is enabled by default for \"Credit Memo\" document types such as \"AR Credit Memo\" and \"AP Credit Memo\":<ul> <li>\"Credit Memo\" document types are also \"reverse\" or \"cancelled\" documents type however, those behave differently than \"return\" document types, for instance:<ul> <li>they generate invoices with \"positive\" invoiced quantity/ies</li> <li>therefore, the posting is always opposite to the invoices one, regardless the Allow Negative checkbox setup:</li> </ul> </li> </ul> </li> </ul> Account Debit Credit Comments Customer Receivables Line Net Amount One per invoice line Tax Debit Tax Amount One per tax line Product Revenue Total Gross Amount One per invoice <ul> <li>The field \"Document Type for Order\" allows the user to define for the Quotation \"Document Type\" the document (i.e Standard Order) to use while creating a sales order from a sales quotation.</li> <li>The field \"Document Type for Invoice\" allows the user to define the document (i.e. Return Material Sales Invoice) to use while creating a Sales Order from a Return Material Document Type, like Return From Customer.</li> </ul> <p>Report Templates</p> <p>The report template tab allows the user to configure a different look and feel for the document types by setting up Jasper JRXML templates for each document type.</p> <p>It is possible to print document types such as Goods Shipments or Sales Invoices by using the \"Print\" action button, which can be found in the Toolbar.</p> <p>In Etendo, every document suitable to be printed is linked to a \"standard\" report template.</p> <p>If necessary, report templates can be customized and even new ones can be created and therefore linked to a given document type.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#email-definitions","title":"Email Definitions","text":"<p>Emails definition tab supports the creation of as many email templates as required depending on the language to be used for sending the documents by email.</p> <p>Documents can be sent by e-mail by using the action button Email which can be found in the Toolbar.</p> <p></p> <p>As shown in the image above, it is possible to define:</p> <ul> <li>a Subject template to be populated with \"real\" data every time a given document is sent by email.<ul> <li>For instance \"New Invoice (@our_ref@)\" will turn into \"New Invoice (SI/2589)\" where SI/2589 is the number of the invoice sent by email.</li> </ul> </li> <li>a Body template to be populated with \"real\" data every time a given document is sent by email.<ul> <li>For instance:<ul> <li>\"Dear @cus_nam@, Find attached the invoice @our_ref@ corresponding to the products you received from F&amp;B International Group.\"     will turn into</li> <li>\"Dear Healthly Food Supermarkets Co., Find attached the invoice SI/2589 corresponding to the products you received from F&amp;B International Group.\"</li> </ul> </li> </ul> </li> </ul> <p>Here is the list of possible tags:</p> <ul> <li>@cus_ref@: The document reference of the customer</li> <li>@our_ref@: The reference of the document</li> <li>@cus_nam@: The name of the customer</li> <li>@sal_nam@: The name of the sales rep.</li> <li>@bp_nam@: The Business Partner name [since 3.0MP27]</li> <li>@doc_date@: The document date [since 3.0MP27]</li> <li>@doc_desc@: The document description [since 3.0MP27]</li> <li>@doc_nextduedate@: The next due date (if document has associated any payment plan) [since 3.0MP27]</li> <li>@doc_lastduedate@: The last due date (if document has associated any payment plan) [since 3.0MP27]</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#translation_1","title":"Translation","text":"<p>Document types can be translated to any language required.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#document-sequence","title":"Document Sequence","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Document Sequence</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_11","title":"Overview","text":"<p>Every document in Etendo can be numbered and therefore linked to a document sequence.</p> <p>Etendo \"reference data\" including the standard list of document types also includes a standard list of document sequence linked to those documents which make sense to number.</p> <p>\"Standard\" document sequences are listed in the document sequence window.</p> <p>It is important to remark that:</p> <ul> <li>it is possible to change \"standard\" document sequences, for instance:<ul> <li>the \"AP Invoice\" document type is created by default linked to a document sequence which is setup as Auto Numbering</li> <li>that sequence can be changed by removing the Auto Numbering checkbox, which would imply that \"AP Invoice\" numbers will have to be manually entered according to the supplier's invoice number.</li> </ul> </li> <li>The most common scenario is that different document types have different document sequences, however it is also possible that a set of different document types share the same document sequence in order to get the same consecutive numbering.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#sequences","title":"Sequences","text":"<p>Document sequence window allows the user to define how document sequences are going to behave.</p> <p></p> <p>As shown in the image above, a document number sequence can be set as \"Auto Numbering\" which means that the document linked to that sequence will get a document number automatically generated by the sequence.</p> <p>It is also possible to define how the \"Auto Numbering\" type document sequence are going to behave in terms of:</p> <ul> <li>how numbering is going to be incremented by</li> <li>what is going to be the next number assigned</li> <li>if it requires a given prefix or suffix</li> </ul> <p>Info</p> <p>The number logic is applied when saving the document.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#masked-sequences","title":"Masked Sequences","text":"<p>Transactional and Non-transactional Sequences can be used in any document and any field. In this new sequences, the masks can be added with dynamic dates or strings.</p> <p>The user can filter the new sequence according to the organization, document type and mask, the mask is  <code>#######</code> by default. This sequences could be created with the <code>Create sequences</code> process in <code>General Setup &gt; Aplication &gt; Create Sequences</code> window.</p> <p></p> <ul> <li>Mask: It is a string to define a parse format, with the possibility of creating a dynamic date or literal substring in addition to the formatted incremental number.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#sequence-masking","title":"Sequence Masking","text":"<p>Sequence masking always uses numeric key to parse the input. Therefore, the mask must have at least the same number of '#' or '*' chars as the length of the <code>Next Assigned Number</code> field. (Seven is the length of this field by default)</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#data-time-formatting","title":"Data Time Formatting","text":"Letter Type Presentation Examples G Era designator Text AD y Year Year 1996; 96 Y Week year Year 2009; 09 M Month in year Month July; Jul; 07 w Week in year Number 27 W Week in month Number 2 D Day in year Number 189 d Day in month Number 10 F Day of week in month Number 2 E Day name in week Tuesday; Tue u Day number of week (1 = Monday) Number 1 a Am/pm marker Text PM H Hour in day (0-23) Number 0 k Hour in day (1-24) Number 24 K Hour in am/pm (0-11) Number 0 h Hour in am/pm (1-12) Number 12 m Minute in hour Number 30 s Second in minute Number 55 S Millisecond Number 978 z Time zone General time zone Pacific Standard Time; PST; GMT-08:00 Z Time zone RFC 822 time zone -0800 X Time zone ISO 8601 time zone -08; -0800; -08:00 \u2018 \u2019 Literal Text"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#parse-formatting","title":"Parse Formatting","text":"Letter Type Presentation Examples ## Digit Key Digit 9 ! Literal Key Literal l Lower Case Char a x Hexadecimal Number 10F U Upper Case char A A Alpha Numeric Number h0l4 ? Character Char h * Anything * * <p>Info</p> <p>The parse is resolved in two steps, first dates and then types. For this reason if the parse formatting characters like \u2018l\u2019, \u2018x\u2019 \u2018U\u2019 or \u2018A\u2019 are used,\u00a0 the character \u2018!\u2019 should be used to escape each character.\u00a0</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#examples","title":"Examples","text":"Mask Input Result ##-### 1 00-01 #!### 12 1#2 ##-'YE!AR'-### 21 00-YEAR-21 yy-MM-dd/### 1 21-08-31/01 y-#### 25 2021-025"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#tax-category","title":"Tax Category","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Tax Category</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_12","title":"Overview","text":"<p>A tax category allows the user to group and manage similar product or services tax rates.</p> <p>Not all the products and services have the same tax rate.</p> <p>There are tax-exempt products and there are products or services to which a higher tax rate applies just due to the type of product or service.</p> <p>Tax categories allow the user to group similar tax rates by having into account that:</p> <ul> <li>the same tax category can be assigned to more than one product or service, by taking into account that it is recommended to split the tax categories by item type.</li> <li>every product and service must be linked to one tax category same as each tax rate.     Therefore when that product or service is entered in an invoice only the tax rate/s which belong to that tax category will be used to get the applicable tax rate.</li> <li>there are other variables which can reduce up to just \"one\" the correct tax rate to use while entering a product and a business partner in an invoice.     Those variables are related to the business partner tax category as well as the way each tax rate is configured.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#tax-category_1","title":"Tax Category","text":"<p>It is possible to create as many tax categories as required to be later on linked to the corresponding tax rates and products.</p> <p></p> <p>As shown in the image above, a tax category can be created by just entering:</p> <ul> <li>a Name</li> <li>and a Description</li> </ul> <p>of the Tax Category.</p> <p>Once created, the tax categories must be assigned to the corresponding products and services in the Product window.</p> <p>If the tax category is flagged as As per BOM, it indicates that products with this category will use the products included in its Bill of Materials list to calculate proportionally the taxes. In this case, only one Tax_Rate has to be configured for this tax category flagged as Summary level.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#translation_2","title":"Translation","text":"<p>Tax categories can be translated to any language required.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#business-partner-tax-category","title":"Business Partner Tax Category","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Business Partner Tax Category</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_13","title":"Overview","text":"<p>A business partner tax category allows the user to group and manage similar business partners tax rates.</p> <p>Not all the business partners are subject to the same type of tax, that depends on the business partner activity type, for instance:</p> <ul> <li>there could be business partners subject just to VAT (Value Added Tax)</li> <li>and there could be business partners subject to VAT and to Income Tax</li> </ul> <p>and even business partners subject to the same tax type could be tax-exempt or not depending on the type of activity they perform.</p> <p>Business Partner tax categories allow the user to group similar taxes, and the same business partner tax category can be assigned to more than one business partner.</p> <p>A business partner may or may not be linked to a business partner tax category:</p> <ul> <li>if a business partner is linked to a business partner tax category, only the tax rate/s which belongs to that business partner tax category will be used to automatically populate the applicable tax rate in an order/invoice line.</li> </ul> <p>There are other variables which can reduce up to just \"one\" the tax rate automatically populated in an order/invoice line, while entering a business partner and a product in an order/invoice.</p> <p>Those variables are related to the tax category as well as the way each tax rate is configured.</p> <p>Info</p> <p>It is important to notice that all available tax rates are available for manual selection in an order/invoice line regardless a tax rate is automatically populated by Etendo for that given order/invoice line.</p> <p>The end-user could need to select a particular tax rate under a given business scenario that is not the common one.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#business-partner-tax-category_1","title":"Business Partner Tax Category","text":"<p>It is possible to create as many business partners categories as required to be later on linked to the corresponding tax rates and business partners, if applicable.</p> <p>Once created, the business partner tax categories must be linked to the corresponding business partners, if applicable, in either:</p> <ul> <li>the Customer tab of the Business Partner window.</li> <li>and/or the Vendor/Creditor tab of the Business Partner window.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#tax-rate","title":"Tax Rate","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Tax Rate</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_14","title":"Overview","text":"<p>Each tax rate in Etendo is a combination of different variables such as the tax category, the rate and the business partner tax category among others. If all those variables are properly set up, the correct tax rate is automatically filled in every business transaction.</p> <p>It is possible to create tax rates which are a combination of more than one tax rate. That scenario can apply to a business partner who is subject to VAT and Income tax at the same time while renting an office to a third party out of its \"normal\" business activities.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#applying-taxes","title":"Applying Taxes","text":"<p>Taxes are applied to orders and invoices. In this process, there are two steps: associate the desired tax to the line and process the document that will apply the tax and calculate the actual amount.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#obtaining-default-tax","title":"Obtaining Default Tax","text":"<p>When in a document line (order or invoice) a product is selected, a default tax is associated to this line. Keep in mind that we can select the tax we want for this line. The selection of the default tax is achieved by the C_GetTax DB stored procedure. The rules followed by this procedure are as follows:</p> <p>For sale transactions with an associated project, if a project has a tax rate, this tax rate is taken. This works when an order is generated by a Project (Order). In this case, the tax is taken directly from the project line tax. For sale transactions, if a partner is marked as tax-exempt, the selected tax will be the one checked as exempt with the most recent date relative to the ordered or invoiced date.</p> <p>Otherwise, the tax is selected from the ones defined in the same tax category as the product on the line. Taxes with defined business partner tax category can only be applied to those business partners with the same tax category (for vendor or customer). If the tax does not have a business partner tax category, it can be applied to any partner (with or without an associated tax category). If a tax with business partner tax category and another one without it can both be applied, the one with business partner tax category will be selected. In addition to this, the \u201cto\u201d and \u201cfrom\u201d locations are taken into account. At first, those taxes defined for closer regions are selected (if a tax is for region and another one for country, the region one will be selected). This information is associated to the tax rate, through the \u201cTax Zone\u201d tab. Taxes are applied taking into account if they are defined as Sales, Purchases or Both.</p> <p>Apart from these rules, and only in the case of Purchase/Sales Orders and Invoices, the system filters the tax rates taking into account the Cash VAT flag defined at the document's header too, which is automatically set based on the organization's and the business partner's configuration for sales and purchase documents respectively (although it can be manually overridden afterwards). Thus, in case the document is enabled for the Cash VAT regime, the system will get a Cash VAT tax rate and the other way around.</p> <p>Once the tax is selected (the default one, or another one selected by the user), an approximated amount is calculated by the SL_Order_Tax or SL_Invoice_Tax callouts. If the tax is checked as summary, the calculation will be done using the rate defined in the parent, not exploding it and taking the real values from its children. In addition, information c_order_tax and c_invoice_tax tables are populated with taxes at this point. The actual amount is calculated when the document is processed.</p> <p>When creating a new invoice, it is possible to write down taxes manually and check them as \u201cno recalculate\u201d. In this case, the tax is applied with the amount written down in the tax tab of the invoice, so no recalculation will be done while processing the invoice. When a tax in an invoice is marked as recalculated, if the tax is edited manually all changes will be lost when processing the invoice. This is because the tax amount of the invoice is recalculated. \u201cNo recalculate\u201d taxes are not associated to any invoice line, whereas the recalculated ones are. So when a tax comes from a line, it will be checked as recalculate. If it is manually created, it will not be checked, and this value will be not updatable.</p> <p>Not recalculating taxes is useful for invoices that include tax lines without a product. For example, it can be used for imported products: these products usually have an invoice that is tax-exempt and another invoice that is created by the custom broker without any product, but a tax amount for the imported products.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#calculating-actual-amount","title":"Calculating actual amount","text":"<p>When these documents are processed (c_order_post and c_invoice_post), the actual taxes and amounts are calculated from the selected taxes (unless they are defined as \u201cno recalculate\u201d for invoices) following these steps:</p> <p>Every tax at C_OrderTax or C_InvoiceTax tables is deleted. This is done because the taxes in these tables before the process of the document are for information only and can be inaccurate.</p> <p>A new line is created in C_OrderTax or C_InvoiceTax tables for every different tax applied to the lines of the document (each line will have only one tax). The amount paid to the tax is calculated from the base amount of the lines that are associated to this tax.</p> <p>For taxes defined as summary, a new line is inserted for each of its children and the amount is calculated taking into account whether or not the children are cascade.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#tax","title":"Tax","text":"<p>Tax rate window allows the user to create as many tax rates as required.</p> <p></p> <p>The fields to fill in to properly set up a tax rate are:</p> <ul> <li>\"Valid From Date\", which is the date when a tax rate becomes valid.     For instance, an existing tax rate increases its rate, in this case:<ul> <li>it is recommended to create a new tax rate configured with the new requirements, rather than changing the original tax rate which can be still in use if required.     That way, there will be two tax rates which are exactly the same for a given organization but the rate (%) and the valid from date.</li> </ul> </li> <li>\"Tax Category\", as every tax rate must be linked to a given tax category as the way of grouping similar tax rates.</li> <li>\"Rate\", which is the % or rate of the tax</li> <li>\"Sales/Purchase Type\" as the way to distinguish between sales and purchase taxes.     The tax type is another variable which Etendo takes into account while retrieving the correct tax rate in either sales and purchase transactions. It is also a very valuable variable to take into account while reporting taxes as there are tax reports which require to submit purchase and sales tax information separately.     There is an additional option which is \"Both\", this option allows using the same tax rate for both purchase and sales transactions.</li> <li>\"Country/Region\" and \"Destination Country/Region\".     Tax such as VAT and US Sales Tax take into account from where/to where a transaction takes place in order to get it subject to the tax or not.     These two fields allow the user to enter that information by taking into account if the tax is a \"purchase\" or a \"sales\" tax type, therefore, when issuing a sales invoice from F&amp;B US Inc (USA Country and New York Region) to a customer also located in Destination Country USA and Destination Region New York, only the sales tax rates created within that specified Tax Zone would be applied.</li> <li>\"Summary Level\", a tax rate can be defined as summary which means it will have some tax rates underneath.     Summary tax rates are also set as \"Parent Tax Rate\" therefore its child tax rates can be linked to it.     For instance, a sales invoice is issued to a business partner under a specific VAT regime which includes an additional tax rate besides the VAT rate.     For this scenario, it is required to create three tax rates, the parent one as summary, and two more for the VAT rate and for the other rate, both of them linked to the parent. \"It is important to remark that when issuing the sales invoice for that business partner, the tax rate shown/selected is the summary or parent one.\"</li> <li>\"Base Amount\", which is the tax base amount to take into account in the tax amount calculation. The options available are:<ul> <li>Line Net Amount</li> <li>Line Net Amount + Tax Amount</li> <li>Alternate Tax Base Amount</li> <li>Alternate Tax Base Amount + Tax Amount</li> </ul> </li> <li>\"Document Tax Amount Calculation\" which is the way how the tax amount is going to be calculated per each tax rate (or %). The options available are:<ul> <li>\"Document based amount by rate\", this option implies that the tax amount is going to be calculated as tax amount = (tax base amounts sum at the same rate * tax rate)</li> <li>\"Line base amount by rate\", this option implies that the tax amount is going to be calculated by line as tax amount = (tax base amount line 1 * tax rate) + (tax base amount line 2 * tax rate) + ....+ (tax base amount line n + tax rate).</li> </ul> </li> </ul> <p>Under \"More Information\" section, there are also few relevant fields:</p> <ul> <li>\"Parent Tax Rate\", tax rates belonging to a summary tax rate should be linked to them in this field therefore the tax rate tree is properly structured.</li> <li>\"Business Partner Tax Category\", a tax rate can be linked to a specific business partner tax category, therefore it will only apply to the business partners belonging to that category.</li> <li>\"Withholding\", a tax rate can be set as \"Withholding\" therefore it is properly managed as a separated tax type in the fiscal reports.<ul> <li>Withholding tax rates are \"negative\" tax rates.</li> </ul> </li> <li>Tax Exempt. A tax rate can be set as exempt therefore it is the one automatically shown in the order/invoice lines created for a given Customer set as tax-exempt as well.</li> <li>Cash VAT. This kind of tax rates are used to support the Cash VAT regime, which allows companies to settle the VAT amount when they have collected/paid the invoices instead of in the invoice creation. When using cash VAT tax rates, the Tax Due and Tax Credit Transitory accounts must be declared into the Accounting tab.</li> <li>Tax rates can also be setup as \"Not Taxable\". A not taxable tax rate can be linked to transactions subject to tax which become not taxable under a given situation. There are fiscal reports which require information about both type of taxes, exempt and not taxable.</li> <li>Specific tax rates can be setup as \"Deductible\" (for those Organizations for which tax deduction is NOT allowed).</li> <li>Specific tax rates can be setup as \"Not Deductible\" (for those Organizations for which tax deduction is allowed).</li> </ul> <p>The way Deductible and Not Deductible tax rates behave in terms of accounting is explained below:</p> <ul> <li>Purchase invoice which includes a 100% deductible tax amount.     The VAT amount needs to be posted to the ledger in a Tax Credit account, therefore purchase invoice posting looks like:</li> </ul> Account Debit Credit Comments Product Expense Line Net Amount One per invoice line Tax Credit Tax Amount One per tax line Vendor Liability Total Gross Amount One per invoice"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#purchase-invoice-which-includes-not-deductible-tax-amount","title":"Purchase invoice which includes NOT deductible tax amount","text":"<p>The VAT amount can not be posted to the ledger in a Tax Credit account as it means an expense, therefore purchase invoice posting looks like:</p> Account Debit Credit Comments Product Expense Line Net Amount + Tax Amount One per invoice line and tax rate Vendor Liability Total Gross Amount One per invoice <p>Info</p> <p>To be able to use the functionality described below, the Financial Extensions Bundle must be installed. To do so, follow the instructions in marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes. \u00a0\u00a0</p> <p>The same behavior can be applied for the non-deductible tax.\u00a0</p> <p>By default, the accounting amount that is generated in the supplier invoices when a non-deductible tax range is used, is assigned to the accounting expense account configured in the \"Accounting\" tab of the product. With this improvement, the amount of that non-deductible tax can be assigned to a specific account, the one configured in the accounting of the tax range itself. To do this, check the \"Use the configured account\" checkbox located inside the \"Accounting\" tab in the \"Tax rate\" window.\u00a0</p> <p></p> <p>As system administrator user, activate the accounting template field in the Active Table tab of the General Ledger Configuration window and then, set the template called Purchase Invoice Not Deductible.\u00a0</p> <p></p> <p>This checkbox, \"Use the configured account\", will only be visible if the checkbox under the heading \"Non-deductible tax\" was previously checked. The default value of this checkbox will be NO.</p> <p></p> <p></p> <p>The VAT amount needs to be posted to the ledger in a Tax Credit account, therefore purchase invoice posting looks like:</p> Account Debit Credit Comments Product Expense Line Net Amount One per invoice line Tax Credit Tax Amount One per tax line Vendor Liability Total Gross Amount One per invoice <p>Tax rates examples:</p> <ul> <li>Simple tax rate<ul> <li>\"Purchase VAT Tax Rate at 18%\" belonging to the tax category \"Normal VAT for Products\", Country/Region set to Spain and Destination Country/Region set to Spain.</li> </ul> </li> <li>Summary tax rate<ul> <li>\"Service Sales VAT Tax Rate at 18.00% + Withholding (-15.00%)\" belonging to the tax category \"Normal VAT for Services\" and to the business partner tax category \"Business Partners subject to VAT and Income Tax\".     This one must be setup as Summary type having two tax rates underneath which must belong to the same tax category and business partner tax category:<ul> <li>\"Service Sales VAT Tax Rate at 18.00% + Withholding (-15.00%) (VAT 18%)\", rate = 18,00</li> <li>\"Service Sales VAT Tax Rate at 18.00% + Withholding (-15.00%)\" (W -15%)\", rate = -15,00</li> </ul> </li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#tax-zone","title":"Tax Zone","text":"<p>Tax zone defines the origin country/region and destination country/region where a given tax rate applies, for those cases where it is not enough to define only one \"Origin\" Country/Region and only one \"Destination\" Country/Region at header level.</p> <p>For instance, an \"Export\" tax rate must detail as Origin Country/Region the location of the warehouse organization and as Destination Country/Region the rest of countries and regions where it is possible to export the goods. This tax rate would apply to sales transactions between the \"local\" organization and its customers located abroad.</p> <p>The same would apply to an \"Import\" tax rate, in this case Origin Country/Region would be all the country from where goods can be imported and the Destination Country/Region would be Organization one.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#translation_3","title":"Translation","text":"<p>Tax rates can be translated to any language required.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#accounting_1","title":"Accounting","text":"<p>Accounting tab allows the user to configure the account to be used while posting tax rate transactions to the general ledger.</p> <ul> <li>\"Tax Due\" account is the account used while posting sales tax amounts</li> <li>\"Tax Credit\" account is the account used while posting purchase tax amounts.</li> <li>\"Tax Due Transitory\" account is the transitory account used while posting sales tax amounts under the Cash VAT regime.</li> <li>\"Tax Credit Transitory\" account is the transitory account used while posting purchase tax amounts under the Cash VAT regime.</li> </ul> <p></p> <p>A purchase invoice posting looks like:</p> Account Debit Credit Comments Product Expense Line Net Amount One per invoice line Tax Credit Tax Amount One per tax line. For Cash VAT regime the Tax Credit Transitory account is used instead. Vendor Liability Total Gross Amount One per invoice <p>And a sales invoice posting looks like:</p> Account Debit Credit Comments Customer Receivable Total Gross Amount One per invoice Product Revenue Line Net Amount One per Invoice Line Tax Due Tax Amount One per Tax Line. For Cash VAT regime the Tax Due Transitory account is used instead. <p>\"Negative\" Withholding tax rates need to have specific accounting information in this tab in order to get that withholding tax amounts are posted in a different account.</p> <p>Below posting applies in the case that the \"Allow Negative\" feature is not enabled either for the General Ledger configuration used while posting or for the Document Type which in this case is an \"AP Invoice\"</p> <p>In other words, a negative withholding posting means a negative debit posting which will turn into a positive credit posting if a negative feature is not enabled.</p> Account Debit Credit Comments Product Expense Line Net Amount One per Invoice Line Tax Credit Tax Amount One per tax line. For Cash VAT regime the Tax Credit Transitory account is used instead. Tax Credit Withholding Amount One per withholding line Vendor Liability Total Gross Amount (Line Net Amount+Tax Amount-Withholding Amount)"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#cost-center","title":"Cost Center","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Cost Center</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_15","title":"Overview","text":"<p>Cost Center is an accounting dimension which can be used while posting documents to the ledger.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#cost-center_1","title":"Cost Center","text":"<p>The Cost Center window allows the user to create organization's cost centers. It is used as a master of the cost centers of an organization.</p> <p>A cost center can be created by just entering the name and the description of the organization's cost center. If a cost center is created for the (*) organization that cost center will then be available to all the organizations of the client. A cost center can be created as summary which helps to get a tree structure of cost centers.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#abc-activity","title":"ABC Activity","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>ABC Activity</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_16","title":"Overview","text":"<p>Activity based costing (ABC) is a special costing model that identifies activities in an organization for which managing cost is required.</p> <p>\"Activity\" is one of the dimensions which can be set up for a given general ledger configuration.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#activity","title":"Activity","text":"<p>ABC Activity window allows the user to create as many activities as required per each organization.</p> <p></p> <p>As shown in the screen above, it is possible to define summary activities which support a hierarchical structure or activities within an organization.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#accounting-templates","title":"Accounting Templates","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Accounting Templates</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_17","title":"Overview","text":"<p>Accounting templates in Etendo overwrite default accounting behavior. Each template is related to a specific table.</p> <p>The accounting entries generated by Etendo usually need to be generated in a different way to fulfill the legal requirements for a concrete country. To support this kind of requirements, Etendo allows overriding the code that generates the accounting entries through what is called Accounting Templates. Each time a document is posted, the accounting engine checks whether any Accounting Template is defined for the associated table or for the concrete document and executes it instead of the default Core's code.</p> <p>Warning</p> <p>This is a powerful feature that must be used with caution. The code that generates the accounting entries must be deeply tested before deploying it in a real instance.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#creating-the-accounting-template-configuration","title":"Creating the Accounting Template Configuration","text":"<p>The Java class that implements the generation of the new accounting entries is defined into the Accounting Templates window. The definition is quite simple and only requires a name, the Java class name, which must be inside the java package of the module, and the table for which the user wants to override its accounting entries (for example, C_Invoice for Invoices, M_InOut for goods shipments/receipts, etc.).</p> <p></p> <p>This Accounting Template will be later on associated with the Active Tables or a Document. So in this step it is important to define as many Java classes as Active Tables or Document to override their accounting behavior. For example, we can define an unique java class for overriding the accounting behavior of all the invoices (sales invoices, purchase invoices, purchase/sales credit memo, etc.), or alternatively define a class for overriding only the accounting entries for Purchase Invoices (AP Invoice) and keep the default behavior to the rest of the invoices.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#dataset-definition","title":"Dataset Definition","text":"<p>Dataset definition is a key step in this process. A wrong dataset definition can waste all previous work, so it is important to follow all these considerations:</p> <ul> <li>The dataset must belong to the accounting template module</li> <li>Try avoiding strange characters in the dataset's name. This string is used for generating the XML file name that stores the dataset.</li> <li>The Data Access Level must be set to System/Client, which means we allow users to apply the configuration only at Client level (Organization *).</li> <li>The Export allowed flag must be set.</li> <li>Inside the Table tab, include the AD_CreateFact_template table, which is the one that stores the Accounting Template configuration.</li> <li>The HQL/SQL Where clause is an important field, because it allows filtering the records the user wants to include into the dataset. In the example all the records that are inside the module java package name have been filtered. </li> </ul> <p></p> <p>The dataset definition is ready, so the user just needs to export it to a file pressing the Export Reference Data button. This process queries the previous tables and gets all the records that fulfill the HQL/SQL Where clause, generating a XML file inside the module's referencedata/standard directory. As a fast check, this file can be opened using any plain text editor and the user can verify that it contains several lines. In case the file is empty, the user should double check the dataset definition, specially the HQL/SQL Where clause used for each table.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#testing-the-dataset","title":"Testing the Dataset","text":"<p>The real test to ensure the taxes dataset is OK can be done inside the development instance. The test consists on creating a new client running the Initial Client Setup and selecting the new dummy accounting template dataset.</p> <p></p> <p>Info</p> <p>If the data inside the dataset are consistent, the Initial Client Setup Process should be completed successfully, otherwise it will fail giving a description about the error.</p> <p>After a successful Initial Client Setup, login into the new client, go to the Accounting Templates window and check the record is there.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#functional-specification","title":"Functional Specification","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_18","title":"Overview","text":"<p>Nowadays, Etendo  builds entries associated with documents following a hard-coded behavior. In order to modify the generated entry, code must be modified. The current code has become a module called core. If a module wants to modify accounting entries generated by documents, core must be modified, and this is not desired at all. With this new development in core, modules will be able to easily modify the entries generated by each document.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#scope","title":"Scope","text":"<p>The aim of this project is to allow modules to modify the way entries are generated when posting documents.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#design-considerations","title":"Design Considerations","text":"<p>A new layer will be included between the document, and the logic that posts that document. In a new window each document is mapped to the servlet that implements the logic to post it. This way, just modifying the values on this window, accounting behavior is changed. If a new module wants to change the entry generated when posting an invoice, a new servlet is developed following the desired behavior. At the same time, the mapping of the invoices to the servlet that posts will be changed to the servlet developed in the module. This way, the whole application behavior is changed.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#functional-requirements","title":"Functional Requirements","text":"<p>Info</p> <p>Application is not affected by these developments, because all changes to the way the documents are posted are transparent to the user. Only a new window is necessary, that is configured automatically for the user when updating.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#balance-sheet-and-pl-structure-setup","title":"Balance Sheet and P/L Structure Setup","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Balance Sheet and P/L Structure Setup</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#overview_19","title":"Overview","text":"<p>Balance Sheet and P&amp;L structure setup allows the user to configure the two main financial reports which are the Balance Sheet and the P&amp;L.</p> <p>Once configured, these two reports can be launched from the Balance Sheet and P&amp;L window.</p> <p>It is important to remark that the source of both reports structure is the organization Account Tree which therefore needs to be structured in a way to obtain a meaningful Balance Sheet and P&amp;L reports.</p> <p>Moreover, and as already described, an Account Tree or chart of accounts can be imported or can be manually created:</p> <ul> <li>in the case of imported account trees as a CSV file or as a reference data set:<ul> <li>Etendo provides the localized account tree structure required to get localized balance sheet and P&amp;L reports for a given country, for instance, the Spanish Chart of Accounts</li> </ul> </li> <li>in the case of manually created account trees:<ul> <li>it is key to take into account that financial reports structure relies on the account tree structure.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#setup","title":"Setup","text":"<p>Each new record in the Balance Sheet and P&amp;L structure setup window is a report.</p> <p>It is really important the level up to which either a Balance Sheet or P&amp;L report is defined. That level relies on the organization type selected because:</p> <ul> <li>If the organization selected is a Legal with Accounting which has other organizations underneath, the financial information provided by the reports will be a roll-up of the financial information of the organizations which belong to it. Roll-up means it produces an aggregated Balance Sheet. To get a consolidated Balance Sheet, transactions between organizations (intercompany transactions) need to be removed from the resulting report.</li> <li>The same applies in the case of organizations which are Organization type which have other organizations underneath sharing the same general ledger configuration and, therefore, account tree.</li> <li>If the organization selected is a Generic organization which belongs to a Legal with Accounting one, the financial information provided by the reports will be just the financial information of that organization.</li> </ul> <p></p> <p>The fields to fill in this window are:</p> <ul> <li>the Report Name</li> <li>the General Ledger from which accounting information is required</li> <li>the Report Type. The options available are:<ul> <li>Point in Time, this type is used for reports such the Balance Sheet as account's balance needs to be referred to a specific date.</li> <li>and Periodic, this type is used for reports such the P&amp;L as used account's balance needs to be referred to a specific period of time, for instance a month, a quarter, a year, etc.</li> </ul> </li> <li>finally the Balanced flag which must be activated whenever the report need to be launched just for \"Legal with Accounting\" organization types as that is the enterprise level where accounting balance is ensured.     This flag needs to be checked as active for the Balance Sheet report.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#grouping-category","title":"Grouping Category","text":"<p>Grouping category tab allows the user to define categories which groups report node/s. Each grouping category implies a page break in the report showing the defined report node/s.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#node","title":"Node","text":"<p>A node defines the information shown in the report.</p> <p></p> <p>A report node is defined by:</p> <ul> <li>the Name of the node</li> <li>and the Account Element which is going to be shown in the report.<ul> <li>The account elements selected here are usually \"Heading\" element level types,     therefore the calculated balance of the node will take into account and will show the balance of all the account elements of other types which are underneath it.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#balance-sheet-structure-setup-example","title":"Balance Sheet Structure Setup Example","text":"<p>One example of a Balance Sheet structure can be:</p> <ul> <li>Report Name: Balance Sheet Report Type: Point in Time Balanced: Yes<ul> <li>Grouping Category: Balance Sheet<ul> <li>Node: Assets linked to the Account Element of the Account Tree which collects all the \"Asset\" accounts.</li> <li>Node: Liabilities and Owner's Equity linked to the Account Tree element which collects all the \"Liabilities and Owner's Equity\" account tree elements.</li> </ul> </li> </ul> </li> </ul> <p>Above nodes must be an Account Tree element properly configured.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/setup/#pl-setup-example","title":"P&amp;L Setup Example","text":"<p>An example for a Profit and Loss report would be:</p> <ul> <li>Report Name: Profit and Loss Report Type: Periodic Balanced: No<ul> <li>Grouping Category: Profit and Loss<ul> <li>Node: Profit and Loss linked to the \"Heading\" Account Tree element which collects all the \"Expenses\" and \"Revenue\" account tree elements.</li> </ul> </li> </ul> </li> </ul> <p>Above node must be an Account Tree element properly configured.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/","title":"Accounting","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview","title":"Overview","text":"<p>This section describes the windows related to the accounting transactions that are part of the Financial Management in Etendo. The corresponding windows are:</p> <p> Financial Type Configuration </p> <p> Simple G/L Journal </p> <p> G/L Journal </p> <p> End Year Close </p> <p> GL Posting by DB Tables  </p> <p> Budget </p> <p> Create Budget Reports in Excel </p> <p> Not Posted Transaction Report </p> <p> Not Posted Documents </p> <p> Reset Accounting </p> <p> VAT Regularization </p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#financial-type-configuration","title":"Financial Type Configuration","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>Financial Type Configuration</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_1","title":"Overview","text":"<p>This feature allows entering in the system all the financings the company has. It is possible  to exploit the information through the bank pool report.  Depending on the financial product used in this new Financing window, Etendo generates financing plans automatically (Leasing, Renting and Loans) and also manages the invoices and payments from this same window. </p> <p>The usual financing products are: </p> <ul> <li>Invoice Advance</li> <li>Bank Guarantee </li> <li>Confirming</li> <li>Foreign Trade</li> <li>Credit Account</li> <li>Factoring</li> <li>Leasing</li> <li>Loans</li> <li>Renting </li> <li>Credit Cards. </li> </ul> <p>These financing methods are loaded into the system using a dataset.</p> <p>Info</p> <p>For more information, visit Financial Type.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#header","title":"Header","text":"<p>The main header has the following fields:</p> <ul> <li>Organization: drop-down list of organizations.    </li> <li>Financial Type: drop-down list of methods  Invoice Advance, Bank Guarantee, Confirming, Foreign Trade, Credit Account, Factoring, Leasing, Loans, Renting and Credit Cards.   </li> <li>Financial Bank/Entity: drop-down list of the business partner window.  </li> <li>Financial Account: drop-down list of the Financial Account window.    </li> <li>Payment Method: drop-down list of the payment methods indicated in the selected financial account.    </li> <li>Name: free field to add information.  </li> <li>Date: date field (contract signature date).   </li> <li>Due Date: date field. </li> <li>Lack (Month): numeric field (Integers)    </li> <li>Currency: drop-down list of the currency window.   </li> <li>Amount Granted: numeric field with 2 decimals.    </li> <li>Amount Drawn: numeric field with 2 decimals.  </li> <li>Amount Available: numeric field with 2 decimals.  </li> <li>Residual Value: numeric field with 2 decimals.    </li> <li>Installment No: integer numeric field.    </li> <li>% Annual Interest: % numeric field with 2 decimals.   </li> <li>Periodic commission: numeric field with 2 decimals.   </li> <li>Opening Financial Expenses: numeric field with 2 decimals.    </li> <li>Frequency: drop-down list (Monthly, Bimonthly, Quarterly, Quarterly, Semiannual, Annual)  </li> <li>Payment Date: numeric field. Integer (limit of 31)    </li> <li>Purpose: free field to add information.   </li> <li>Warranty: free field to add information.  </li> <li>% Early Cancellation Fee: % numeric field with 2 decimals.    </li> <li>% Early Amortization Commission: % numeric field with 2 decimals. </li> <li>Ledger account at long term: informative field to indicate the accounting account of the  account tree.   </li> <li>Ledger account at short term: informative field to indicate the accounting account of the account tree.   </li> <li>Ledger account at purchase option: informative field to indicate the accounting account of the account tree.  </li> <li>Project: drop-down list of the \u201cMultiphase Project\u201c window.   </li> <li>Cost Center: drop-down list of the \u201cCost Center\u201d window.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#lines","title":"Lines","text":"<p>Lines contain the following fields:</p> <ul> <li>Installment No: numeric field. Integer. </li> <li>Amortization/ Expiration date: date field.</li> <li>Installment: numeric field with 2 decimals.</li> <li>Amortization/Renting: numeric field with 2 decimals.</li> <li>Interest: numeric field with 2 decimals.</li> <li>Commission: numeric field with 2 decimals.</li> <li>Total Amortization: numeric field with 2 decimals.</li> <li>Pending Amortization: numeric field with 2 decimals.</li> <li>Invoice: the linkage to the generated invoice is shown (Leasing/Renting).</li> <li>Payment: the linkage to the generated payment is shown (Loan). </li> <li>Business Partner Finance: business partners \u2018 drop-down list (this is used as an informative field to know about advance invoices, Confirming, Comex, how much has each been financed).</li> <li>Date: date field. </li> <li>Project: drop-down list of the \u201cMultiphase Project\u201c window.</li> <li>Cost Center: drop-down list of the \u201cCost Center\u201d window.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#accounting","title":"Accounting","text":"<p>There are three sections: \u201cAmortization/Renting\u201d, \u201cInterest\u201d and \u201cCommission\u201d. There are six fields in total where three of them represent the product and the other three, the accounting concept. The 2 fields (product and accounting concept) cannot be filled in the same section. In each of these related fields, the product must be indicated from the Products window or Accounting Concept if the Available in Financial Invoices check box needed to assign to each column is activated. In the case of the type of financing Loan, it is obligatory to fill in the part of accounting concepts.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#loan-leasing-or-renting-calculation-in-the-lines-tab","title":"Loan, Leasing or Renting calculation in the lines tab","text":"<p>Fill the necessary fields of the header according to the description of each of them indicated at the top of the document. Such information allows the automatic creation of the finance plan, which is created by clicking the \u201cUpdate Finance plan\u201d button at the upper right margin of the window.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#loan","title":"Loan:","text":"<ul> <li>Installment No: It starts with the installment number 0 and the \u201cpending amortization\u201d field has the value indicated in the \u201cgranted amount\u201d field, and the \u201cdate\u201d field has the indicated date in the header field \u201cdate\u201d. The rest of the installments are correlative, adding 1 by 1.</li> <li>Amortization/Expiration date: To see the date of the installment number 1 of the finance plan, it is indicated when clicking the new button \u201cCreate finance plan\u201d. A pop up is shown to indicate the date. Click \u201cOK\u201d. The rest of the lines are created with the frequency indicated in the \u201cFrequency\u201d field, with the date of the last installment created and the date indicated in the \u201cpayment date\u201d field. If lack is indicated, the indicated date when clicking \u201cCreate finance plan\u201d is the first lack installment, the rest of the installments, lack and amortization ones, are created according to the indicated frequency. The lack installments are indicated with the installment number 0.</li> <li>Installment: At first, the same installment is calculated for the entire loan. If the interest rate changes during the loan period, the installment is changed. To do this, change the 1% interest rate of the header and click the new button of the header \u201cUpdate Finance Plan\u201d. The information is updated from the following line to the last line with an associated payment.</li> <li>Amortization/Renting: Redeemed amount in the installment.</li> <li>Interest: Interest to pay in the installment.</li> <li>Commission: filled with the information entered in the \u201cPeriodic Commission\u201d field of the header, if any. If not, the value is 0.</li> <li>Total Amortization: Addition of the values in the previous column \u201camortization/renting\u201d and regarding the same calculated line. Read-only field.</li> <li>Pending amortization: Difference between the \u201cgranted amount\u201d indicated in the header and the \u201ctotal amortization\u201d of the same calculated line. Read-only field.</li> <li>Payment: The related payment is shown.</li> <li>Business Partner: If indicated in the header, the business partner is shown in this field. If not, it can be manually indicated.</li> <li>Project: If indicated in the header, the project information is shown in this field. If not, it can be manually indicated.</li> <li>Cost Center: If indicated in the header, the cost center is shown in this field. If not, it can be manually indicated.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#leasing","title":"Leasing:","text":"<ul> <li>Installment No: It starts with the installment number 0 and the \u201cpending amortization\u201d field has the value indicated in the \u201cgranted amount\u201d field, and the \u201cdate\u201d field has the indicated date in the \u2026 The rest of the installments are correlative, adding 1 by 1.</li> <li>Amortization/Expiration date: To see the date of the installment number 1 of the finance plan, it is indicated when clicking the new button \u201cCreate finance plan\u201d. A pop up is shown to indicate the date. Click \u201cOK\u201d. The rest of the lines are created with the frequency indicated in the \u201cFrequency\u201d field, with the date of the last installment created and the date indicated in the \u201cpayment date\u201d field. If lack is indicated, the indicated date when clicking \u201cCreate finance plan\u201d is the first lack installment, the rest of the installments lack and amortization ones, are created according to the indicated frequency. The lack installments are indicated with the installment number 0.</li> <li>Installment: At first, the same installment is calculated for the entire leasing. If the interest rate changes during the leasing period, the installment is changed. To do this, change the 1% interest rate of the header and click the new button of the header \u201cUpdate Finance Plan\u201d. The information is updated from the following line to the last line with an associated invoice. Lastly, one last line with the residual value is included, if any, in the same date of the last calculated line.</li> <li>Amortization/Renting: Redeemed amount in the installment.</li> <li>Interest: Interest to pay in the installment.</li> <li>Commission: filled with the information entered in the \u201cPeriodic Commission\u201d field of the header, if any. If not, the value is 0.</li> <li>Total Amortization: Addition of the values in the previous column \u201camortization/renting\u201d and regarding the same calculated line. Read-only field.</li> <li>Pending amortization: Difference between the \u201cgranted amount\u201d indicated in the header and the \u201ctotal amortization\u201d of the same calculated line. Read-only field.</li> <li>Invoice: The related invoice is shown.</li> <li>Payment: The related payment is shown.</li> <li>Business Partner: If indicated in the header, the business partner is shown in this field. If not, it can be manually indicated.</li> <li>Project: If indicated in the header, the project information is shown in this field. If not, it can be manually indicated.</li> <li>Cost Center: If indicated in the header, the cost center is shown in this field. If not, it can be manually indicated.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#renting","title":"Renting","text":"<ul> <li>Installment No: It starts with the installment number 0 and the rest of the installments are correlative, adding 1 by 1.</li> <li>Amortization/Expiration date: To see the date of the installment number 1 of the finance plan, it is indicated when clicking the new button \u201cCreate finance plan\u201d. A pop up is shown to indicate the date. Click \u201cOK\u201d. The rest of the lines are created with the frequency indicated in the \u201cFrequency\u201d field, with the date of the last installment created and the date indicated in the \u201cpayment date\u201d field.</li> <li>Installment: The result of the \u201cGranted amount\u201d divided the installments number.</li> <li>Amortization/Renting: Redeemed amount in the installment.</li> <li>Interest: Interest to pay in the installment.</li> <li>Commission: filled with the information entered in the \u201cPeriodic Commission\u201d field of the header, if any. If not, the value is 0.</li> <li>Invoice: The related invoice is shown.</li> <li>Business Partner: If indicated in the header, the business partner is shown in this field. If not, it can be manually indicated.</li> <li>Project: If indicated in the header, the project information is shown in this field. If not, it can be manually indicated.</li> <li>Cost Center: If indicated in the header, the cost center is shown in this field. If not, it can be manually indicated.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#generating-payments-or-invoices","title":"Generating payments or invoices","text":"<p>Once the amortization plan is created, payments (loans) and invoices (leasing and renting) for each line can be generated. This is possible individually (line by line) or in groups (3 lines can be selected and 3 different payments/invoices are generated).</p> <p>In order to do this, select the required line/s and click the \u201cCreate payment\u201d (loans) or \u201cCreate invoice\u201d (leasing or renting) buttons shown in the upper right margin of the window.</p> <p>Loan:</p> <p></p> <p>Leasing:</p> <p></p> <p>Renting:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#credit-account-and-credit-cards-reported-in-financial-accounts","title":"Credit account and credit cards reported in financial accounts.","text":"<p>The Credit account and Credit card information is automatically entered. To do this, create a new header and indicate the finance method, \u201cCredit account\u201d or \u201cCredit card\u201d. Then, the button \u201cAdd Financial Account\u201d is enabled in the upper right margin. </p> <p></p> <p>When clicking the button, a pop up is shown and it is possible to select a financial account (only those with the \u201cAdd to bank pool\u201d flag checked are shown).</p> <p></p> <p></p> <p>Once this credit account/credit card is created in the financings and its information has to be updated, click the \u201cUpdate Financial Account\u201d button in the upper right margin.</p> <p></p> <p>The fields to be copied from the account or credit card are the equivalent ones in the \u201cFinancial Account\u201d field, the amount of residual value to be indicated in the \u201cAmount Available\u201d field and the \u201cCredit Limit\u201d amount to be indicated in the \u201cAmount Granted\u201d field. All other fields in the header are editable to include the rest of the information.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#simple-gl-journal","title":"Simple G/L Journal","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>Simple G/L Journal</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_2","title":"Overview","text":"<p>In Etendo there is a GL Journal window that allows the user to manually enter GL journals in the system. This window has three tabs (Batch, Header and Lines) and in some cases this can be difficult for the user since it might be enough with just two levels (Header and lines). Another issue that this window has is that only accounting schemas can be selected, so when posting the GL journal there is only one entry in the fact_Acct table.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#benefits-of-the-simple-gl-journal","title":"Benefits of the Simple G/L Journal","text":"<ul> <li>It is a simpler window since it is not necessary to enter a batch. There is one less level of data entry.</li> <li>It is simpler to search journal entries. Without the batch level, it is possible to directly search for specific journal entries.</li> <li>In this window, it is possible to see journal entries that have been created using the GL Journal window, so it is possible to search journal entries as well.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#header_1","title":"Header","text":"<p>A G/L journal header can include journals which can contain several journal lines.</p> <p>Important field to note:</p> <ul> <li>Multi-general ledger: A flag<ul> <li>If it is not marked, the General ledger field is shown from then on.</li> <li>If it is marked, the system will not show the General ledger field, and it will not be taken into account for next operations.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#lines_1","title":"Lines","text":"<p>The lines tab allows the user to enter the journal entries of a G/L journal as well as G/L item payment related information.</p> <p>One field to note:</p> <ul> <li>G/L Item: Combo where all G/L Items are shown. It has a logical display, and it is only shown when Multi-general ledger is flagged in the header.</li> </ul> <p>Info</p> <p>If Multi-general ledger is not flagged, then the Account field is shown instead.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#accounting_1","title":"Accounting","text":"<p>Accounting information related to the GL Journal</p> <p>When Posting the Header:</p> <ul> <li>All accounting entries are created either with account combinations (Account) or GL item. There cannot be mixed lines.</li> <li>If Multi-General Ledger is:<ul> <li>Not marked: It can only select accounts that belong to just one accounting schema (defined in the header) so when posting the document there will be just one journal entry. This behaviour will not change. Posting process exactly as GL Journal window</li> <li>Marked: the user selects G/L Items and since it can have different valid combinations when posting the document, it will have as many entries as in different accounts it is defined the GL item and the organization defined in the header.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#exchange-rates","title":"Exchange Rates","text":"<p>The exchange rate tab allows the user to enter an exchange rate between the organization's general ledger currency and the currency of the G/L Journal to be used while posting the G/L Journal to the ledger.</p> <p>Info</p> <p>This tab will only be displayed when Multi General Ledger is enabled.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#gl-journal-reverse","title":"GL Journal Reverse","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This functionality is specifically useful for companies that have a month close, instead of an end year close, but with pending payments (in or out). It allows the user to open or close the period without taking into account the payments until they are made.</p> <p>In order to use this functionality, in both \u201cGL journal\u201d and \u201cSimple GL journal\u201d windows, the user can click the button \u201cReverse Journal\u201d in the toolbar when selecting an entry.</p> <p></p> <p>In this way, Etendo automatically creates a reverse entry that compensates the amount in the credit and debit columns. </p> <p>Info</p> <p>It is important to note that, by default, the reverse document will be created as a draft. That is why Etendo shows the check \u201cprocess document\u201d when clicking the \u201cReverse Journal\u201d button. In this way, the user can complete the document.</p> <p>As seen below, Etendo shows a success notification in green with the new GL Journal number.</p> <p></p> <p>When comparing the original GL Journal to the reverse GL Journal, the debit and credit columns show the compensation, since the amounts are reversed.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#original-gl-journal","title":"Original GL journal","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#reverse-gl-journal","title":"Reverse GL Journal","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#changing-description-option-in-the-simple-gl-journal-window","title":"Changing description option in the Simple GL Journal window","text":"<p>If the GL Journal entry is created in the Simple GL Journal window, it is possible for the user to change the description of the GL journal, once it clicks on the \u201cReverse Journal\u201d button, in the corresponding pop up window. </p> <p></p> <p>This is useful to distinguish between the original GL journal and the reverse one. </p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#bulk-posting","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#gl-journal-clone","title":"G/L Journal Clone","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>With this functionality, the user is able to seamlessly clone a selected entry. This feature not only duplicates the entry but also creates a detailed description that includes the original order number.</p> <p>In order to do this, select the record to clone and click the copy record button in the toolbar.</p> <p></p> <p>In this way, a copy of the original record is generated, including a description and a copy number, as seen below.</p> <p></p> <p>This functionality enhances the efficiency of managing journal entries, making it easier to replicate and document transactions accurately.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#gl-journal","title":"G/L Journal","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>G/L Journal</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_3","title":"Overview","text":"<p>A G/L (General Ledger) journal allows the user to post journal entries to the ledger and create G/L item payments.</p> <p>As already explained, most of the accounting entries are created while posting documents such as purchase invoices, sales invoices, etc.</p> <p>The accounting entries which do not match with an existing Document Type need to be posted to the ledger by using a G/L Journal.</p> <p>Besides, a G/L Journal can be used to create G/L Item Payments or payments not related to orders or invoices.</p> <p>Info</p> <p>This feature is very useful while posting an employee payroll to the ledger as the payroll payment can be created at the same time.</p> <p>Finally, a G/L Journal can also be configured as a template.</p> <p>This feature allows the user to create the same journal entries as the ones contained in the G/L Journal set as a template.</p> <p>This feature is also very useful while posting employee payroll, for instance.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#batch","title":"Batch","text":"<p>A G/L journal batch allows the user to group G/L journals of similar characteristics which can all be processed at the same time.</p> <p></p> <p>As shown in the image above, a G/L Journal batch can contain below data:</p> <ul> <li>the accounting period</li> <li>the accounting date</li> <li>and the currency</li> </ul> <p>None of the data above is mandatory at this point because a G/L journal can contain several journals having different accounting periods and accounting dates. The same applies to the currency as a G/L journal can contain several journals of different general ledger configurations.</p> <p>Once a batch is created and saved, it is possible to create as many G/L Journals as required, which once ready can be completed and processed at the same time as a unique batch.</p> <p>A G/L journal and therefore its content can be set up as Template, that template can be later on used while creating a new G/L journal by using the process button Copy Lines as described in the next section.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#gl-journal-set-up-as-template","title":"G/L Journal set up as \u201cTemplate\u201d","text":"<p>As already mentioned, a G/L Journal and therefore its content can be configured as a Template. In order to do so,\u00a0 it is required to follow the steps below:</p> <p>1. create a G/L journal to account the employee payroll corresponding to the period of January 2022, for instance. That G/L Journal needs to be marked as Template.</p> <p>2. Create a new G/L journal to account the employee payroll corresponding to the period of January 2022. Enter an Accounting Date and a Period:</p> <p></p> <p>3. Press the Copy Details process button.</p> <p>A new window is shown containing all the templates available:</p> <p></p> <p>Info</p> <p>Note that it is possible to search for a template by using the G/L journal document number set as template and the description fields. </p> <p>4. Select a template and click OK. After that, Etendo populates the most recently created G/L Journal with the same journal entries, only the dates are different.</p> <p>It may be necessary to change the journal entries amounts. In order to do so, it is possible to edit the G/L Journal Lines and then change the amounts.</p> <p>The last step is to post the G/L Journal, therefore the corresponding journal entries are posted to the ledger.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#header_2","title":"Header","text":"<p>A G/L journal header can include journals, which can contain several journal lines.</p> <p></p> <p>A G/L Journal header contains the following data:</p> <ul> <li>The organization and the organization's General Ledger configuration which once selected defaulted the field Currency to the one of the general ledger configuration, for instance USD. The currency can however be changed to EUR for instance. Etendo will apply the corresponding EUR -&gt; USD conversion rate as the posting to the ledger must be in USD.</li> <li>The document date which does not have to be the same as the accounting date.     The document date is automatically populated with the current date by default, but can always be changed.</li> <li>The accounting period and the accounting date within that period. These dates can be automatically populated with the values entered in the Journal batch if any, however these dates can always be changed.</li> </ul> <p>There is a checkbox named Opening which can be flagged just to state that a journal contains opening balance accounts entries.</p> <p>There is a list of actions which can be executed from the G/L Journal header:</p> <ul> <li>Copy Details button allows the user to copy the journal entries of a journal configured as a Template into the current journal</li> <li>Complete button allows the user to complete the G/L Journal once the corresponding journal lines have been entered whenever the total debit amount matches the total credit amount</li> <li>Post/Unpost button allows the user to Post/Unpost a G/L Journal once completed</li> <li>Close button allows the user to close a G/L Journal for which no other action needs to take place or to reactivate it if it is not already posted</li> <li>Process Batch button completes the G/L Journal/s of the batch</li> </ul> <p>Info</p> <p>Note that upon G/L Journal completion a G/L Item payment will be created for each journal line that has the Open Items checkbox selected as explained in the G/L Item payments creation section.</p> <p>Info</p> <p>The Journal will be completed even if any of the Payment/s creation failed. In this case, an error message is shown indicating the Lines that tried to create a Payment but failed.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#lines_2","title":"Lines","text":"<p>The lines tab allows the user to enter the journal entries of a G/L journal as well as G/L item payment related information.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#accounting_2","title":"Accounting","text":"<p>Accounting information related to the GL Journal</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#deferred-gl-journal","title":"Deferred GL Journal","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#duplicate-journal-entries","title":"Duplicate Journal Entries","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This functionality allows the user to duplicate a journal entry as many times as required, indicating the regularity and the period in which the first copy must be made. Starting from the second copy, the duplication will take place with the corresponding regularity. The process to create a journal entry from the beginning and duplicate it later is shown below.</p> <p>1- Enter the \u201cG/L Journal\u201d window and create a header:</p> <p></p> <p>2- Create a new record:</p> <p></p> <p>3- Create the lines (to be recorded) and complete the entry. Once these three steps are done, the \u201cCreate Deferred Plan\u201d button will be shown in the upper right margin. </p> <p></p> <p>4 - Click the button and a pop-up with three fields will be shown: \u2022 Expense Plan Type: copies regularity.     \u2022 Period Number: required number of copies.     \u2022 Period: period in which the first copy will be made.</p> <p></p> <p>5 - Once this information is entered, click the \u201cDone\u201d button and as many records will be generated as the number of copies indicated.</p> <p></p> <p>By default, this functionality is only available for the \u201cGL Journal\u201d window, since the record copies are grouped under only one header. It is also possible to duplicate these entries in the \u201cSimple GL Journal\u201d only if there is a preference configured in the \u201cPreference\u201d window with the property \u201cDisplay Create Deferred Plan Button\u201d and the value \u201cY\u201d.</p> <p></p> <p>Once this preference is configured, the button will be enabled in \u201cSimple GL Journal\u201d. The flow is the same but the duplicated copies will not be created under a header. That is, this information will not be shown in the \u201cGL Journal\u201d window, except the information to be copied is already in it, in which case it will be shown.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#gl-journal-reverse_1","title":"GL Journal Reverse","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This functionality is specifically useful for companies that have a month close, instead of an end year close, but with pending payments (in or out). It allows the user to open or close the period without taking into account the payments until they are made.</p> <p>In order to use this functionality, in both \u201cGL journal\u201d and \u201cSimple GL journal\u201d windows, the user can click the button \u201cReverse Journal\u201d in the toolbar when selecting an entry.</p> <p></p> <p>In this way, Etendo automatically creates a reverse entry that compensates the amount in the credit and debit columns. </p> <p>Note</p> <p>By default, the reverse document is created as a draft. That is why Etendo shows the check \u201cprocess document\u201d when clicking the \u201cReverse Journal\u201d button. In this way, the user can complete the document.</p> <p>As seen below, Etendo shows a success notification in green with the new GL Journal number.</p> <p></p> <p>When comparing the original GL Journal to the reverse GL Journal, the debit and credit columns show the compensation, since the amounts are reverse.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#original-gl-journal_1","title":"Original GL journal","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#reverse-gl-journal_1","title":"Reverse GL Journal","text":"<p>This is useful to distinguish between the original GL journal and the reverse one. </p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#bulk-posting_1","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#end-year-close","title":"End Year Close","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>End Year Close</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_4","title":"Overview","text":"<p>The Close Year process allows the user to close a fiscal year. This process also permanently closes all the periods of the year (standard ones and adjustment ones).</p> <p>It is important to remark that it is not required to close the standard periods of a year prior to closing that year, however it can help to keep tracking of the periods of the year already reviewed and closed.</p> <p>The close year process requires that the next year is started, and its first period is opened.</p> <p>Info</p> <p>Once a year is closed, the status of that year and all its periods can be reviewed in the Open/Close Period Control window.</p> <p>As already mentioned, all the periods of the year are now shown as Period Status=Permanently Closed, that means that it is not possible to post any transaction within that year anymore, unless the Undo Close Year process is run for that year.</p> <p>Close Year process creates the following accounting entries:</p> <p>1. The Profit and Loss Closing entry.</p> <ul> <li>This accounting entry resets all Revenue and Expense Account Types and the difference is posted in the Income Summary account.<ul> <li>In other words, the Expense accounts are Credited and the Revenue accounts are Debited** and the difference, if any, is posted in the Income Summary account.     Let us take an expense account with a debit balance of 500,00. The P&amp;L Closing entry creates a credit accounting entry of 500,00 in the Expense account of the example, therefore it gets a balance equal to zero.     If the revenue accounts total balance is higher than the expense accounts total balance that difference is credited in the Income Summary account, that means a positive result or a profit.     If the revenue accounts total balance is lower than the expense accounts total balance that difference is debited in the Income Summary account, that means a negative result or a loss.</li> </ul> </li> <li>This accounting entry is posted the last day of the last period of the year being closed, that is the Adjustment Period or 13th Period of the year.</li> <li>Etendo does not create a G/L Journal for this accounting entry but just the accounting entry.</li> </ul> <p>2. The Closing entry or Balance Sheet Closing entry.</p> <ul> <li>This accounting entry credits all the accounts which have a debit balance and debits all the accounts which have a credit balance. The aim of this accounting entry is to get that Asset and Liability accounts get a zero balance.<ul> <li>In order words, let us take an Asset account with a debit balance of 8.000,00. The closing entry creates a credit accounting entry of 8.000,00 in the Asset account of the example.</li> </ul> </li> <li>This account entry is posted the last day of the last period of the year being closed, that is the Adjustment Period or 13th Period of the year.</li> <li>Etendo does not create a G/L Journal for this accounting entry but just the accounting entry.</li> <li>This entry is created only if the Reverse Permanent Account Balances checkbox is set to yes.</li> </ul> <p>Finally, if a Retained Earnings account is specified for the general ledger configuration, an additional entry dated on the last day of the year is created.</p> <p>This entry moves the Income Summary account balance to the Retained Earnings account.</p> <p>3. And the Opening or Balance Sheet Opening entry.</p> <ul> <li>This accounting entry is the reversal entry of the closing entry.<ul> <li>Following the example of point 2 above, the opening entry creates a debit accounting entry of 8.000,000 in the Asset account of the example. That amount is the opening balance of the asset account for the new year.</li> </ul> </li> <li>This accounting entry is posted the first day of the first period of the next year.</li> <li>This entry is created only if the Reverse Permanent Account Balances checkbox is set to yes.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#end-year-close-process-example","title":"End-year close process example","text":"<p>This example describes the 2019 end-year closing process of a sample legal with an accounting organization.</p> <p>This article describes the end-year closing process intentionally keeping the organization's activity as simple as possible.</p> <p>The company in this example started its activity prior to 2019, therefore a G/L Journal set as Opening can be created to record the 2019 opening entry and get it posted to the ledger.</p> <p></p> <p>To make it simple, the company in this example executed detailed regular activities which created the corresponding regular journal entries in the general ledger:</p> <p></p> <p>Let us imagine that F&amp;B Espa\u00f1a closes the standard periods as soon as each period is over and that is done even for the last standard period which is December 2019.</p> <p>The accountants can use the 13th Period to post accounting adjustment to the ledger through the posting of G/L Journal/s, prior running the Year Close process.</p> <p>Once 2019 is over and ready to be closed, the company in this example can execute the 2019 Close Year process from the End Year Close window.</p> <p>The process button Year Close runs the end-year close process for this sample organization.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#reverse-permanent-account-balances-set-to-yes","title":"Reverse Permanent Account Balances set to Yes","text":"<p>Etendo creates closing entries detailed below if the Reverse Permanent Account Balances checkbox of the Organization's general ledger is set to Yes before running the Close Year process.</p> <p>Info</p> <p>Note that below accounting entries can also be reviewed in the End Year Close window in the Accounting Tab.</p> <ul> <li>Dated on the latest day of the year below P&amp;L Closing Entry.     This entry resets all Revenue and Expense account which is posted in the account defined as Income Summary. </li> <li>Dated on the latest day of the year below Closing Entry.     This entry resets all Asset, Liability and Owner's Equity accounts.x Besides, an additional entry is created to move the Income Summary account balance to the Retained Earning account:      </li> <li>Dated on the day of the following year (01-01-2022) below Opening Entry. This entry is the reversal entry of the above closing entry:          The organization in this example can launch the 2020 Balance Sheet and the 2021 Profit and Loss reports from the Balance Sheet and P&amp;L structure window:</li> </ul> <p>2020 Balance Sheet:</p> <p></p> <p>2021 Profit and Loss:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#reverse-permanent-account-balances-set-to-no","title":"Reverse Permanent Account Balances set to No","text":"<p>Etendo creates below closing entries if the Reverse Permanent Account Balances checkbox of the Organization's general ledger is set to No before running the Close Year process.</p> <p>Info</p> <p>Note that below accounting entries can also be reviewed in the End Year Close window in the Accounting Tab.</p> <ul> <li>Dated on the latest day of the year (31-12-2019) below P&amp;L Closing Entry:   </li> <li>and dated on the latest day of the year (31-12-2019) below entry as a Retained Earnings account is defined for the organization's general ledger:   </li> </ul> <p>The organization in this example can launch the 2019 Balance Sheet and the 2019 Income Statement reports from the Balance Sheet and P&amp;L structure window. It will get the same Balance Sheet and Income Statement as the ones shown for the Reverse Permanent Account Balances set to Yes** scenario.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#end-year-close_1","title":"End Year Close","text":"<p>In the End Year Close window, all the Years previously created in the Fiscal Calendar window are shown. Those years can be closed in this window.</p> <p>The records shown in this window are filtered by their Status and the Organization, by showing only the Years which are not closed yet and belongs to the Organization in which the User is logged. These filters can be removed by clicking in the funnel icon.</p> <p>This window shows two Tabs. The first Tab shows all the existing Years. Once selected a record in this Tab, the lower tab shows the related Accounting entries, meaning the closing entries generated by the Close Year process as well as the corresponding opening entries of the next year.</p> <p>This way, it is easier and quicker to see the Accounting generated when a Year is closed. More information can be found in the Accounting Tab below.</p> <p>The way to Close a Year is:</p> <ul> <li>Use the filters of the grid to show the Year to close.</li> <li>Select the Year.</li> <li>Click on the Year Close button and click OK.</li> </ul> <p>Once done, Etendo informs that the process has been completed successfully.</p> <p>All the Periods for that Year and that Organization will be permanently Closed. The way to Undo the Close of the Year is the same, but clicking Undo Close Year.</p> <p></p> <p>As shown in the image above, the main fields in this window are:</p> <ul> <li>Organization.</li> <li>Calendar.</li> <li>Year.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#undo-close-year","title":"Undo Close Year","text":"<p>If a year (i.e 2019) is closed, it will not be possible to do any posting within that year unless the Undo Close Year process is run for that year.</p> <p>This process opens the year and all the periods of the year. It also reverts all the ledger entries posted by the end-year close process; therefore closing/opening entries are not shown in the Journal Entries Report anymore, unless the end-year close process is run once again for the year.</p> <ul> <li>Status: It can be Year Not Closed or Year Closed</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#accounting_3","title":"Accounting","text":"<p>In the Accounting Tab of the End Year Close Window, all the Accounting entries generated when a Year is Closed or when it is Opened are shown, grouped by Account. This Account entries can be:</p> <ul> <li>Opening Entries</li> <li>Income Statements</li> <li>Closing Entries</li> <li>Regular Entries</li> <li>Divide Up</li> </ul> <p>This way, it is easier to review the Accounting entries made in the Closing Year Process.</p> <p></p> <p>As shown in the image above, the main fields in this window are:</p> <ul> <li>General Ledger.</li> <li>Type. It can be an Opening Entry, Closing Entry, Income Statement, Regular Entry or Divide Up.</li> <li>Account. Notice that the account entries are grouped by Account, showing only one record.</li> <li>Debit.</li> <li>Credit.</li> </ul> <p>For explaining this Tab, it is better to follow the same example as in the Introduction section and show how this Tab presents the results.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#reverse-permanent-account-balances-set-to-yes_1","title":"Reverse Permanent Account Balances set to Yes","text":"<p>Etendo creates below closing entries if the Reverse Permanent Account Balances checkbox of the Organization's general ledger is set to Yes:</p> <ul> <li>Dated on the latest day of the year (31-12-2019) below P&amp;L Closing Entry.     This entry resets all Revenue and Expense accounts.</li> </ul> <p>     \u00a0 -   Dated on the latest day of the year (31-12-2019) below Closing Entry.     This entry resets all Asset, Liability and Owner's Equity accounts.       \u00a0 -   Dated on the day of the following year (01-01-2020) below Opening Entry.     This entry is the reversal entry of the above closing entry:   </p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#reverse-permanent-account-balances-set-to-no_1","title":"Reverse Permanent Account Balances set to No","text":"<p>Etendo creates below closing entries if the Reverse Permanent Account Balances checkbox of the Organization's general ledger is set to No:</p> <ul> <li>Dated on the latest day of the year (31-12-2019) below P&amp;L Closing Entry:   </li> <li>and dated on the latest day of the year (31-12-2019) below entry as a Retained Earnings account is defined for the organization's general ledger:  </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#gl-posting-by-db-tables","title":"GL Posting by DB Tables","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>GL Posting by DB Tables</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_5","title":"Overview","text":"<p>The G/L Posting by DB Table allows the user to massively post the transactions related to a given transactional table or to all of them.</p> <p></p> <p>As shown in the image above, the G/L Posting by DB Tables feature allows the user to:</p> <ul> <li>select an Organization or all of them if a particular organization is not selected</li> <li>select a Table or all of them if a particular table is not selected.</li> <li>and select a From date and To date, if no dates are selected all the transactions available will be posted.</li> </ul> <p>After running the process, Etendo informs about the number of ledger entries posted to the ledger for each table in order to post once again the transactional table/s to the ledger.</p> <p></p> <p>This process can be launched whenever it is required:</p> <ul> <li>It can be run if there are pending transactions to be massively posted whenever the Accounting Sever Process is not enabled or if it is not enabled for a given set of tables.</li> <li>It can also be run after running the process Reset Accounting as a way of regenerate the ledger entries.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#budget","title":"Budget","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>Budget</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_6","title":"Overview","text":"<p>Etendo creates and edits budgets to be used for informative purposes allowing the user to access the data about budget versus actual. </p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#header_3","title":"Header","text":"<p>These are the actions which can be executed from the header in order to create budgets for a selected year to be used for informative purposes: </p> <p>Export Budget to Excel:  exports budget to an Excel document. Copy Budget: copy budget already created.  Check Export Actual Data: when checked, actual quantities will be exported to Excel in addition to the budgeted quantities. </p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#lines_3","title":"Lines","text":"<p>The user is able to add budget lines. Each line may refer to a specified period, business partner, product, etc.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#create-budget-reports-in-excel","title":"Create Budget Reports in Excel","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>Create Budget Reports in Excel</code></p> <p>By using the necessary filters such as business partner, product, partner group, product category, etc, the user is able to generate budget reports in Excel to be used for specific purposes.  </p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#not-posted-transaction-report","title":"Not Posted Transaction Report","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>Not Posted Transaction Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_7","title":"Overview","text":"<p>Not Posted Transaction Report lists the transactions and/or documents in status Complete which are not already posted.</p> <p>This report can be used to make sure that there are no documents pending to be post:</p> <ul> <li>while closing an accounting period or a fiscal year as once a period is closed it is not possible to post within that period</li> <li>while running financial reports, as not posted transaction or document will not be taken into account in the financial reports</li> </ul> <p></p> <p>Not posted transactions and/or documents shown are split by type, for instance:</p> <ul> <li>Journal</li> <li>Vendor Invoice</li> <li>Invoice or customer invoice</li> <li>Vendor Payment</li> <li>Financial Transaction</li> <li>Receipt or payment in</li> <li>etc</li> </ul> <p>and it is possible to navigate to the document not posted and therefore get it posted by clicking on the Date field next to the document or transaction.</p> <p>Finally, it is important to remark that:</p> <ul> <li>Date From and Date To filters allows the user to narrow down the not posted transactions to be shown in the report by taking into account their transaction or document date.</li> <li>It is not required to enter a general ledger configuration to narrow down the accounting information because:<ul> <li>if a document is not posted, it is not posted for any of the general ledgers for which it should be posted</li> <li>and if a document is posted, it is posted for all the general ledgers for which it should be posted.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#vat-regularization","title":"VAT Regularization","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>VAT Regularization Process</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_8","title":"Overview","text":"<p>The VAT Regularization module allows you to automatically adjust the accounts to ensure that the VAT balance is correct. This means, checking the accounts in which this process is necessary and creating the corresponding GL journal to regularize the VAT. This process is essential for maintaining accurate financial records and compliance with tax regulations.</p> <p>The following are the required steps to carry this out for a specific period of time.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#vat-regularization-process","title":"VAT Regularization Process","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#account-setup","title":"Account Setup","text":"<p>In order to enable an account to be part of the VAT regularization process, it is necessary to enter the Account tree window, select the organization to which the account belongs, and, in the Element Value tab, select the corresponding account and check the VAT Regularization box as active.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#vat-regularization-process_1","title":"VAT Regularization Process","text":"<ol> <li>Go to <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>VAT Regularization Process</code> window.</li> <li>Complete the following required fields:<ul> <li>General Ledger: Select the general ledger to which the account to be regularized belongs.</li> <li>Organization: Select the organization to which the account belongs.</li> <li>Date From: Start date of the regularization.</li> <li>Date To: End date of the regularization.</li> <li>VAT Regularization Date: Date on which the regularization will take place.</li> <li>Description: Description identifying the periods being regularized. </li> </ul> </li> <li>Click the Search button. This will display a grid with the accounts marked with the VAT Regularization checkbox, as explained in Account Setup. </li> <li>The Amount field shows us the value to be regularized. In addition, the Amount field in the header gives us a sum of all the amounts of the accounts that were chosen to regularize. In this case, it is the same value as the amount of the line because there is only one account to regularize.</li> <li>Select an account in the VAT debtor/creditor account field to balance the accounts once the VAT accounts once the simple GL journal entry is generated.</li> </ol>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#gl-journal-entry-generation","title":"GL Journal Entry Generation","text":"<ol> <li> <p>Click the Process button to generate the simple GL journal entry. </p> <p>Important</p> <p>Remember this process affects all the accounts resulting from the search, so selecting the corresponding accounts must be done when marking the VAT regulularization checkbox in the setup step.</p> </li> <li> <p>Go to the Simple G/L Journal window and filter the Document No. field by the number generated in the process (e.g. 1000123). </p> </li> <li>Here, verify that the header has been created with the corresponding lines.</li> </ol>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#entry-review-and-posting","title":"Entry Review and Posting","text":"<ol> <li>Check that a line has been created per account to be regularized (in this case, account 40000) and that the amount to be regularized (-1,377,222.00) has been added in the Debit field in positive. </li> <li>Verify that another line has been created with the account selected in the VAT debtor/creditor account field with the corresponding amount in the Credit field. </li> <li>Post the manual journal entry with the Post process.</li> <li>Generate the GL journal report again and verify that the Balance for account 40000 is zero, which indicates that the VAT has been regularized correctly. </li> </ol> <p>Info</p> <p>With this module, from Etendo Classic, version 24.2.0, and Financial Extensions Bundle, version 1.15.0, the field sorting has been modified so that GL journal entries are always sorted at the end of the day. This change ensures that, in the General Ledger report and in General Ledger Report Advanced, the manual journal entries of the day are displayed correctly sorted.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#not-posted-documents","title":"Not Posted Documents","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>Not Posted Documents</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_9","title":"Overview","text":"<p>With the Not Posted Documents functionality, part of the Bulk Posting module, the user can find all the not posted documents in the same window and can post them massively from there.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#search-button","title":"Search button","text":"<p>With the Search button, the following fields are used to specify the documents to search. </p> <ul> <li>Organization: The corresponding organization of the search.</li> <li> <p>Document: Type of document that the user is searching. This is the only field that is optional. The listed options are:</p> <ul> <li>Amortization</li> <li>Bank Statements </li> <li>Bill of Materials Production</li> <li>Cost Adjustment</li> <li>Doubtful Debt</li> <li>GL Journal</li> <li>Goods Receipt</li> <li>Goods Shipment</li> <li>Internal Consumption</li> <li>Inventory</li> <li>Landed Cost</li> <li>Landed Cost Cost</li> <li>Matched Invoices</li> <li>Movements</li> <li>Payment In</li> <li>Payment Out</li> <li>Purchase Invoice</li> <li>Reconciliation</li> <li>Return Material Receipt</li> <li>Return to Vendor Shipment</li> <li>Sales Invoice</li> <li>Transaction</li> <li>Work Effort</li> </ul> </li> <li> <p>Accounting Status: the corresponding accounting status of the search. This is useful in cases where the document has already tried to be posted but failed, and its status is not Unposted but another, such as Disabled for Accounting. </p> </li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#grid-filtering","title":"Grid filtering","text":"<p>In the grid where documents are displayed after the search, users can filter the documents using the following criteria:</p> <ul> <li>Organization</li> <li>Type of document</li> <li>Document Description</li> <li>Accounting Date</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#bulk-posting-button","title":"Bulk Posting button","text":"<p>Once the fields are used to search for not posted documents, the user can massively select the necessary documents and use the Bulk Posting button to post multiple documents at once, as shown below. </p> <p> </p> <p>As you can see, this development greatly facilitates the management of documents to be posted, allowing users not only to identify them quickly, but also to post them in a massive and organized manner directly from a single interface.</p> <p>Info</p> <p>For more information about the Bulk posting functionality, visit the Bulk Posting user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#reset-accounting","title":"Reset Accounting","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Transactions</code> &gt; <code>Reset Accounting</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/accounting/transactions/#overview_10","title":"Overview","text":"<p>The reset accounting process allows the user to totally or partially remove the ledger entries of an organization. The ledger entries can be massively re-created again by using the Accounting Server Process or the G/L Posting by DB Tables process. The manual changes done for the accounting entries description will obviously be lost after running this process.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/","title":"Financial Management - Assets","text":"","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#overview","title":"Overview","text":"<p>This section describes the windows related to assets, part of the Financial Management in Etendo. These are:</p> <p> Assets </p> <p> Asset Group </p> <p> Amortization </p> <p> Asset Amortization Report (Excel) </p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#assets","title":"Assets","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Assets</code> &gt; <code>Assets</code></p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#overview_1","title":"Overview","text":"<p>The user can define company-owned assets and configure their amortization characteristics. </p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#assets-window","title":"Assets window","text":"<p>Fields to note:</p> <ul> <li>Organization : Organizational entity within client.</li> <li>Search Key : A fast method for finding a particular record.</li> <li>Name : A non-unique identifier for a record/document often used as a search tool.</li> <li>Asset Category : A classification of assets based on similar characteristics defined in the Asset Group window. Configuration fields will be completed automatically according to the characteristics defined in this window. </li> <li>Document No. : An automatically generated identifier for all documents.</li> <li>Description : A space to write additional related information.</li> <li>Currency : An accepted medium of monetary exchange that may vary across countries.</li> <li>Product : An item produced by a process.</li> <li>Summary Level : When checked, it groups other assets and displays them in tree view. </li> <li>Static : Prevents from moving the record into the tree view.</li> <li>Depreciate : The asset is used internally and will be depreciated.</li> <li>Depreciation Type : Linear. It indicates the method used to depreciate this asset.</li> <li>Calculate Type : It indicates how amortization will be calculated: Time (monthly or yearly) or Percentage (yearly).</li> <li>Annual Depreciation % : Depreciation annual %</li> <li>Amortize : Asset schedule.</li> <li>Usable Life - Years : Years of the usable life of the asset.</li> <li>Usable Life - Months : Months of the usable life of the asset.</li> <li>Every Month Is 30 Day : If checked, it calculates the amortization plan every month to be considered as a 30 day month and years of 365 days. If it is not checked, it considers real month days and leap-years.</li> <li>Purchase Date : Purchase date.</li> <li>Cancellation Date : life-utility date.</li> <li>Depreciation Start Date : Depreciation Start Date. The amortization plan will be calculated starting from this date.</li> <li>Depreciation End Date : Depreciation end date.</li> <li>Asset Value : Asset value.</li> <li>Residual Asset Value : Residual asset value amount.</li> <li>Depreciation Amt. : Depreciation Amount.</li> <li>Previously Depreciated Amt. : This amount is subtracted to the Depreciation amount when calculating the amortization plan. Total amount to be depreciated = Depreciation Amount - Previously Depreciated Amount</li> <li>Depreciated Value : Depreciated value.</li> <li>Project : Identifier of a project defined within the Project &amp; Service Management module.</li> </ul>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#buttons","title":"Buttons","text":"<ul> <li> <p>Create Amortization: The Create Amortization button populates the Asset Amortization tab. It creates the amortization plan based on the asset definition.</p> </li> <li> <p>Recalculate Amortization: The Recalculate Amortization button allows the user to update information when needed. </p> </li> </ul>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#asset-amortization-tab","title":"Asset Amortization tab","text":"<p>Asset amortizations for a selected asset are added to this tab. </p> <p></p> <ul> <li>Line No. : A line stating the position of this request in the document.</li> <li>Amortization : The depreciation or reduction of a product value over time.</li> <li>Amortization Percentage : Amortization Percentage</li> <li>Amortization Amount : Amortization Amount</li> <li>Currency : An accepted medium of monetary exchange that may vary across countries.</li> </ul> <p>The Asset Amortization tab shows the depreciation plan of the asset based on its usable life-time and its value that is the amount to be depreciated. The asset value is split within its usable life (months or years), therefore each depreciation plan line represents a percentage of the total depreciation amount of the asset.</p> <p>Note</p> <p>It is important to remark that the proposed depreciation plan lines can be manually removed whenever they are not processed and posted. In that case, the create amortization process can be executed once again, therefore the depreciation plan is recalculated. This is very useful in those cases where the value of an asset changes or the usable life-time of an asset changes once its depreciation has started.</p> <p>There is a restriction though, when removing lines, if the user plans to click the Recalculate Amortization button afterwards. The lines must be removed always starting from the latest one and without leaving undeleted lines in between. For example, having amortization lines such as:</p> <ul> <li>Line 10 - January depreciation plan line</li> <li>Line 20 - February depreciation plan line</li> <li>Line 30 - March depreciation plan line</li> </ul> <p>The depreciation line of February cannot be removed until the depreciation line of March is removed.</p> <p>The process assumes that if the March depreciation line exists, then the February depreciation line exists.</p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#accounting-tab","title":"Accounting tab","text":"<p>The user can create and edit G/L accounts to be used in transactions which include a selected asset.</p> <p></p> <ul> <li>General Ledger: The book containing all financial transactions recorded for the legal entity.</li> <li>Accumulated Depreciation: Accumulated Depreciation Account. </li> <li>Depreciation: Depreciation account.</li> </ul> <p>The shown accounts are configured by default and can be changed. </p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#accounting-dimensions-assets","title":"Accounting Dimensions Assets","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed.  To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>In addition to the existing Product dimensions for assets, this module allows users to select additional accounting dimensions which  will be automatically transferred to the amortization lines, allowing better integration with accounting processes. </p> <p>The dimensions the user can apply to the asset creation process are the following: </p> <ul> <li>Business Partner</li> <li>Activity</li> <li>1st Dimension</li> <li>2nd Dimension </li> <li>Sales Region</li> <li>Campaign</li> <li>Cost Center</li> </ul> <p>Info</p> <p>When creating or recalculating the amortization schedule for an asset, the specified accounting dimensions are transferred to the lines of the amortization schedule.</p> <p></p> <p>Info</p> <p>For more information about Dimensions configuration visit Dimensions.</p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#buttons_1","title":"Buttons","text":"<ul> <li>Create Amortization: The Create Amortization button generates the amortization lines in the Asset Amortization tab related to the selected asset.  In addition, these same lines are added in the Amortization window, grouping them only according to the depreciation period, (monthly or yearly) in case of calculated type (time) and even yearly for calculated type (percentage).</li> </ul>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#asset-group","title":"Asset Group","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Assets</code> &gt; <code>Asset Group</code></p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#overview_2","title":"Overview","text":"<p>Assets can be grouped into different categories with the aim of helping their depreciation management and analysis.</p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#asset-group-window","title":"Asset Group window","text":"<p>Asset Group window allows the user to create and configure every asset category your organization may need.</p> <p></p> <p>As shown in the image above, the creation of an asset category requires the user to enter below listed information for each category:</p> <ul> <li>Name or short name which helps to easily find a category.</li> <li>Description a space to write additional related information.</li> <li>Depreciate indicates if the assets of this group will be depreciated.</li> <li>Depreciation Type Linear. It indicates the method used to depreciate this asset.</li> <li>Calculate Type it indicates how the depreciation will be calculated: Time (monthly or yearly) or Percentage (yearly).</li> <li>Annual Depreciation Annual percentage used to depreciate this asset.</li> <li>Amortize it refers to the periods chosen between depreciation entries (monthly, yearly).</li> <li>Usable Life - Months Years of the usable life of the asset.</li> <li>Usable Life - Years Months of the usable life of the asset.</li> </ul> <p>Depreciation configuration will be inherited from the asset category when creating a new asset from the Asset window.</p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#accounting-tab_1","title":"Accounting tab","text":"<p>Each asset category allows the user to configure a different set of accounts to use to post asset depreciation.</p> <p></p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#amortization","title":"Amortization","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Assets</code> &gt; <code>Amortization</code></p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#overview_3","title":"Overview","text":"<p>In the  Amortization window, assets depreciations are recorded, grouped by date. In addition, from this window, these records are processed and posted to the general ledger.</p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#amortization-window","title":"Amortization window","text":"<p>From the header, amortizations are created for particular periods.</p> <p></p> <p>Fields to note: </p> <ul> <li>Organization: Organizational entity within client.</li> <li>Name: A non-unique identifier for a record/document often used as a search tool.</li> <li>Description: A space to write additional related information.</li> <li>Accounting Date: The date on which the asset is to be booked.</li> <li>Starting Date: Date from which amortization begins. </li> <li>Total Amortization: amortization amount. </li> <li>Currency: An accepted medium of monetary exchange that may vary across countries.</li> <li>Project: Identifier of a project defined within the Project &amp; Service Management module.</li> </ul>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#lines-tab","title":"Lines tab","text":"<p>Each line shows the amortized assets and details of amortization.</p> <p></p> <p>Fields to note: </p> <ul> <li>Line No.: Indicates the unique line for a document. </li> <li>Asset: the asset to be amortized.</li> <li>Amortization Percentage: Amortization Percentage (either calculated in Time or Percentage).</li> <li>Amortization Amount: Amortization Amount.</li> <li>Currency: Indicates the currency to be used when processing this document.</li> <li>Project: Identifier of a project defined within the Project &amp; Service Management module.</li> </ul>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#accounting-tab_2","title":"Accounting tab","text":"<p>Accounting information related to the amortization once the document is posted.</p> <p>Fields to note: </p> <ul> <li>Accounting Date: The date this transaction is recorded on in the general ledger. This date also indicates which accounting period within the fiscal year this transaction will be part of.</li> <li>Account: The account used. </li> <li>Debit: The Account Debit Amount indicates the transaction amount converted to this organization's accounting currency.</li> <li>Credit: The Account Credit Amount indicates the transaction amount converted to this organization's accounting currency.</li> </ul> <p></p> <p>Info</p> <p>For more information about Financial Account functionality visit Financial Account.</p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#accounting-dimensions-assets_1","title":"Accounting Dimensions Assets","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This module allows that in the Amortization window, unlike the standard operation in which asset depreciations were grouped according to specific dates, to group the depreciation records only per periods (monthly or yearly) in case of calculated type (time) and even yearly for calculated type (percentage). Also in the grouping the dimensions are not considered. In addition, the accounting dimensions are maintained in the amortization lines to be used in the generation of accounting entries.</p> <p></p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#bulk-posting","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#how-to-reactivate-amortizations","title":"How to Reactivate Amortizations","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>Etendo allows multiple amortizations to be processed and unprocessed. This process is available for amortizations which share the same status. The status of the amortization can be seen in the status bar.  </p> <p></p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/assets/overview/#asset-amortization-report-excel","title":"Asset Amortization Report (Excel)","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Assets</code> &gt; <code>Asset Amortization Report (Excel)</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Amortization report allows downloading excel reports. The report can be found in Financial Management &gt; Assets &gt; Analysis Tools &gt; Asset Amortization Report.\u00a0</p> <p></p> <p>This report allows filtering by organization, date, asset or any particular description, category and general ledger configuration. \u00a0</p> <p></p> <p>Once the information is filtered, an excel sheet is downloaded as shown in the following image:</p> <p></p> <p>This report takes into account the amortization lines of each Asset. That is to say, the report will still be generated even if the amortization lines are not processed or posted. </p> <p>It is necessary to filter by date since the information comes out over this filtering. That is, the accumulated period, net value and subsequent report fields will depend on this filtering.</p> <p>For example: Period date filtered 01-01-2022 and 31-12-2022</p> <p>Period: The total of the amortization lines between 01/01/2022 and 12/31/2022 will be shown.  Accumulated: The sum of the amortization lines between 01/01/2022 and 12/31/2022 and the total amortization lines prior to 01/01/2022 will be shown.  Net Value: The Asset value minus the Accumulated field will be shown.   After: The amortization lines after 31-12-2022 will be shown.  </p> <p>Info</p> <p>When the end date within the Assets window is filled in, that Asset will not appear in the report if the filtered date is after the end date of the Asset.</p>","tags":["Assets","Amortization","Asset Group","Accounting Dimensions Assets"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/","title":"Financial Management - Analysis Tools","text":"","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#overview","title":"Overview","text":"<p>This section describes the windows related to financial reports in Etendo. These are:</p> <p> Cashflow Forecast Report </p> <p> Receivables Aging Schedule </p> <p> Payables Aging Schedule </p> <p> Payment Report </p> <p> Payment Run </p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#cashflow-forecast-report","title":"Cashflow Forecast Report","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Analysis Tools</code> &gt; <code>Cashflow Forecast Report</code></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#overview_1","title":"Overview","text":"<p>The report displays the position of a financial account in a future date, taking into account items planned to collect or pay in the given financial account.</p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#receivables-aging-schedule","title":"Receivables Aging Schedule","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Analysis Tools</code> &gt; <code>Receivables Aging Schedule</code></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#overview_2","title":"Overview","text":"<p>The report shows the past due receivables as of the date the user selects.</p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#source-of-information","title":"Source of Information","text":"<p>The source of the information for this report is invoices as the origin of the receivables and the payables.</p> <ul> <li>Invoices<ul> <li>The due date of an invoice depends on the payment terms, and it is calculated based on the invoice date.</li> <li>If invoice has multiple payment plan lines, each line has its own due date.</li> <li>If there exists payments against the invoice, only those which are in a not confirmed status as of the date of the date filter are considered for this report.</li> </ul> </li> </ul>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#multi-currency","title":"Multi-currency","text":"<p>This report supports multi-currency.</p> <ul> <li>Invoices: If the exchange rate exists at document level, then the amount is calculated based on this value, if it does not exist, then the rate is taken at client level (Conversion Rates window).</li> </ul>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#filters","title":"Filters","text":"<ul> <li>Organization (Mandatory).</li> <li>General Ledger (Mandatory). The user can filter the results by organization's general ledger. All the amounts will be converted to the currency of the general ledger.</li> <li>As of Date (Mandatory). This is the date as of which the report will be processed. Past due dates and payment dates will be calculated based on this date.</li> <li>Business Partners (Optional). The user can select multiple Business Partners to filter the results.</li> <li>Number of Days Overdue: Group One/Two/Three/Four (Mandatory). The results shown are grouped according to the day ranges the user must enter. The user can enter the ending day for each range, and then, the application will automatically modify the beginning day for the next ranges. For example: in group One the user enters 30, so the range is now 0 - 30, in group Two the user enters 60 so the second range is 31 - 60, and so on and so forth.</li> <li>Show Details (Optional). This checkbox offers the user the option to either show the detailed version of the report or the summarized one. It is also used when printing and exporting to an xls file.</li> <li>Show Doubtful Debt (Optional). This checkbox offers the user the option to show information about Doubtful Debts in the report.</li> <li>Voided invoices need to be included (Only available if Preference \"Enable void documents filter in Aging Reports\" is set to Y). This checkbox offers the user the option to include/exclude voided documents from the report.</li> <li>Reversed payments need to be included (Only available if Preference \"Enable reversed payment documents filter in Aging Reports\" is set to Y). This checkbox offers the user the option to include/exclude reversed payment documents from the report.</li> </ul>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#htmlpdfexcel-output","title":"HTML/PDF/Excel output","text":"<p>The report can be generated in HTML, PDF and Excel Spreadsheet format.</p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#receivables-aging-schedule_1","title":"Receivables Aging Schedule","text":"<p>It should display a table showing the following data:</p> <ul> <li>Business partner. A business partner with pending receivables. This is also a link to the detailed version of the report for this Business Partner.</li> <li>Current. A sum of all the current debts the business partner has with the organization that are not due as of the date selected.</li> <li>First day range. The amount the business partner owes the organization that is due, and its due date is between the range.</li> <li>Second day range. Same as above.</li> <li>Third day range. Same as above.</li> <li>Fourth day range. Same as above.</li> <li>Fifth day range. Same as above.</li> <li>Total. Current + All the amounts of the day ranges</li> <li>Credits. Amount of money that the business partner has left as credit, to be used later. The amount is between brackets because it must be subtracted when calculating the totals.</li> <li>Net. Total - Credit of the Business Partner.</li> </ul> <p>If the credits are posted in the same account as the Receivables, then the Net would match the balance of the Business Partner. If the credits are posted in a different account, such as prepayments, then the balance of the Business Partner would match with the Total.</p> <p>If the Show Doubtful Debt check is selected, two more fields are shown.</p> <ul> <li>Doubtful Debt. The amount classified as Doubtful Debt for that particular Business Partner.</li> <li>Percentage. The percentage that represents the Doubtful Debt over the Net Debt of that particular Business Partner.</li> </ul> <p>Also, when Show Doubtful Debt is selected, the Total amount is the sum of all the debts that are not doubtful. Therefore, the Net is Total + Doubtful - Credits</p> <p></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#receivables-aging-schedule-details","title":"Receivables Aging Schedule Details","text":"<p>It should display a table showing the following data: By clicking on the PDF or the XLS link, either a PDF or a spreadsheet file are generated.</p> <p>The information is grouped by Business Partner, in case the report is run for more than one. For each Business Partner, the information shown is:</p> <ul> <li>Document No.. The number of the document and also a link to it.</li> <li>Document Date. The accounting date of the document.</li> <li>Past due date buckets. The pending amount of the Invoice. It is shown in one column or another depending on the due date and the as of date filter.</li> <li>Net Due. The outstanding amount of the Invoice as of date. It is the sum of the amounts in the past due date buckets.</li> <li>Credits. Each line represents a Payment that has generated credit, and the amount is the credit left to be used as of date. The amount is between brackets because it must be subtracted when calculating the totals.</li> <li>A summary line for the Past due date buckets and Credits.</li> </ul> <p>If the credits are posted in the same account as the Receivables, then the total Net Due would match the balance of the Business Partner. If the credits are posted in a different account, such as prepayments, then the balance of the Business Partner would match with the total Net Due plus the Credits (undoing the subtraction of the credits to the total).</p> <p>Plus, there is a summary line for all the Business Partners.</p> <p>If the Show Doubtful Debt check is selected, two more fields are shown.</p> <ul> <li>Doubtful Debt. The amount classified as Doubtful Debt for that particular Invoice.</li> <li>Percentage. The percentage that represents the Doubtful Debt over the Net Due of that particular Invoice.</li> </ul> <p>Also, when Show Doubtful Debt is selected, the Total amount is the sum of all the debts that are not doubtful. Therefore, the Net Due is Total + Doubtful - Credits</p> <p></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#payables-aging-schedule","title":"Payables Aging Schedule","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Analysis Tools</code> &gt; <code>Payables Aging Schedule</code></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#overview_3","title":"Overview","text":"<p>The report shows the past due payables as of the date the user selects.</p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#source-of-information_1","title":"Source of Information","text":"<p>The source of the information for this report is invoices as the origin of the receivables and the payables.</p> <ul> <li>Invoices<ul> <li>The due date of an invoice depends on the payment terms and iit s calculated based on the invoice date.</li> <li>If the invoice has multiple payment plan lines, each line has its own due date.</li> <li>If there exist payments against the invoice, only those which are in a not confirmed status as of the date of the date filter are considered for this report.</li> </ul> </li> </ul>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#multi-currency_1","title":"Multi-currency","text":"<p>This report supports multi-currency.</p> <ul> <li>Invoices: If the exchange rate exists at document level, then the amount is calculated based on this value, if it doesn't exist then the rate is taken at client level (Conversion Rates window).</li> </ul>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#filters_1","title":"Filters","text":"<ul> <li>Organization (Mandatory).</li> <li>General Ledger (Mandatory). The user can filter the results by organization's general ledger. All the amounts will be converted to the currency of the general ledger.</li> <li>As of Date (Mandatory). This is the date as of which the report will be processed. Past due dates and payment dates will be calculated based on this date.</li> <li>Business Partners (Optional). The user can select multiple Business Partners to filter the results.</li> <li>Number of Days Overdue: Group One/Two/Three/Four (Mandatory). The results shown are grouped according to the day ranges the user must enter. The user can enter the ending day for each range, and then, the application will automatically modify the beginning day for the next ranges. For example: in the group One, the user enters 30 so the range is now 0 - 30, in the group Two, the user enters 60 so the second range is 31 - 60, and so on.</li> <li>Show Details (Optional). This checkbox offers the user the option to either show the detailed version of the report or the summarized one. It is also used when printing and exporting to an XLS file.</li> <li>Voided invoices need to be included (Only available if Preference \"Enable void documents filter in Aging Reports\" is set to Y). This checkbox offers the user the option to include/exclude voided documents from the report</li> <li>Reversed payments need to be included (Only available if Preference \"Enable reversed payment documents filter in Aging Reports\" is set to Y). This checkbox offers the user the option to include/exclude reversed payment documents from the report</li> </ul>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#htmlpdfexcel-output_1","title":"HTML/PDF/Excel output","text":"<p>The report can be generated in HTML, PDF and Spreadsheet format.</p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#payables-aging-schedule_1","title":"Payables Aging Schedule","text":"<p>It should Display a table showing the following data:</p> <ul> <li>Business partner. A business partner with pending payables. This is also a link to the detailed version of the report for this Business Partner.</li> <li>Current. A sum of all the current debts the business partner has with the organization that are not due as of the date selected.</li> <li>First day range. The amount owed to the business partner, and it's due date is between the range.</li> <li>Second day range. Same as above.</li> <li>Third day range. Same as above.</li> <li>Fourth day range. Same as above.</li> <li>Fifht day range. Same as above.</li> <li>Total. Current + All the amounts of the day ranges</li> <li>Credits. Amount of money left as credit to the business partner to be used later. The amount is between brackets because it must be subtracted when calculating the totals.</li> <li>Net. Total - - Credit of the Business Partner.</li> </ul> <p>If the credits are posted in the same account as the Payables, then the Net would match the balance of the Business Partner. If the credits are posted in a different account, such as prepayments, then the balance of the Business Partner would match with the Total.</p> <p></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#payables-aging-schedule-details","title":"Payables Aging Schedule Details","text":"<p>It displays a table showing the following data: By clicking on the PDF or the XLS link, either a PDF or a spreadsheet file are generated.</p> <p>The information is grouped by Business Partner, in case the report is run for more than one. For each Business Partner, the information shown is:</p> <ul> <li>Document No.. The number of the document and also a link to it.</li> <li>Document Date. The accounting date of the document.</li> <li>Past due date buckets. The pending amount of the Invoice. It is shown in one column or another depending on the due date and the as of date filter.</li> <li>Net Due. The outstanding amount of the Invoice as of date. It is the sum of the amounts in the past due date buckets.</li> <li>Credits. Each line represents a Payment that has generated credit, and the amount is the credit left to be used as of date. The amount is between brackets because it must be subtracted when calculating the totals.</li> <li>A summary line for the Past due date buckets and Credits.</li> </ul> <p>If the credits are posted in the same account as the Payables, then the total Net Due would match the balance of the Business Partner. If the credits are posted in a different account, such as prepayments, then the balance of the Business Partner would match with the total Net Due plus the Credits (undoing the subtraction of the credits to the total).</p> <p>Plus, there is a summary line for all the Business Partners.</p> <p></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#payment-report","title":"Payment Report","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Analysis Tools</code> &gt; <code>Payment Report</code></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#overview_4","title":"Overview","text":"<p>The Payment Report displays Receivables and/or Payables information, which can be filtered by an extensive set of available filters.</p> <p>Receivables and/or Payables information is shown grouped by the payment status, besides additional grouping and ordering criteria can also be defined.</p> <p>The Payment Report is an Etendo dimensional report which contains below specific filtering options:</p> <p></p> <ul> <li>Dates: enter a Date From and a Date To to be used while retrieving the payment's data, in relation to:<ul> <li>the payment due date</li> <li>the document paid date</li> <li>and the payment date</li> </ul> </li> <li>Amounts: enter an Amount From and an Amount To to be used while retrieving the payment's data</li> <li>Empty Business Partner: select whether it is required or not to include in the report payments not related to a business partner but to a G/L item or a Fee. The options available are:<ul> <li>Include Empty Business Partner: if this selection is made, the report includes also payments not related to a business partner.</li> <li>Exclude Empty Business Partner: if this selection is made, the report excludes any payment not related to a single business partner.</li> <li>Only Empty Business Partner: if this selection is made, the report only includes payments not related to a single business partner.</li> </ul> </li> <li>the Payment Status: the options available are:<ul> <li>Awaiting Payment</li> <li>Awaiting Execution</li> <li>Voided</li> <li>Payment Made</li> <li>Payment Received</li> <li>Deposited not Cleared</li> <li>Withdrawn not Cleared</li> <li>Payment Cleared</li> </ul> </li> <li>the Sales Representative. It will show only Payments related to Invoices that have been invoiced for this Sales Representative.</li> <li>the Payment Method and the Financial Account of the payment</li> <li>the checkbox \"Include Payments Using Credit\" allows to</li> <li>the \"Convert to Currency\" field allows the user to select a currency, therefore the \"Transaction Amounts\" in other currency than the one chosen are converted to the chosen currency and displayed in the field \"Base Amount\".</li> <li>the \"Conversion date\" field allows the user to define a date to select the system conversion rate to exchange transaction amounts.</li> <li>the Payment Type: the options available are:<ul> <li>Receivables</li> <li>Payables</li> <li>Receivables &amp; Payables</li> </ul> </li> <li>the checkbox \"Overdue\" allows the user to include in the report just overdue payments.</li> <li>Finally, it is also possible to define an additional Grouping Criteria and Ordering Criteria to be used while showing the payment data output.<ul> <li>Grouping criteria such as:<ul> <li>Business Partner</li> <li>Project</li> <li>Business Partner Category</li> <li>Currency</li> <li>Account (Financial Account)</li> </ul> </li> <li>Ordering criteria such as:<ul> <li>Date (Payment Date)</li> <li>Project</li> <li>Business Partner Category</li> <li>Currency</li> <li>Due date (Payment due date)</li> <li>Account (Financial Account)</li> <li>Business Partner</li> </ul> </li> </ul> </li> </ul> <p>Warning</p> <p>Note that if \"Business Partner\" for instance is selected as grouping criteria, it will be removed from the ordering criteria list, as grouping implies ordering.</p> <p>The Payment Report is launched by pressing the process button \"Search\". An example of the output of the report is shown in the image below:</p> <p></p> <p>Some relevant fields to note are:</p> <ul> <li>Invoice Number: the green arrow allows the user to navigate to the payment plan of the sales/purchase invoice if there is only one invoice number shown in this field.</li> <li>Payment: the green arrow allows the user to navigate to the invoice/document's payment</li> <li>PlannedDSO (Planned Days Sales Outstanding): the number of days between the date of the invoice and the date it was due to be paid, calculated with the formula (Invoice) Due date - Invoice Date.</li> <li>CurrentDSO (Current Days Sales Outstanding):<ul> <li>if there is a payment, this field shows the number of days between the date of the invoice and the date of the payment, calculated with the formula Payment Date - Invoice Date.</li> <li>if there is not a payment, this field shows the number of days the invoice is pending to be paid, calculated with the formula Current Date - Invoice Date.</li> </ul> </li> <li>Overdue this fields indicates whether a payment was received on time (overdue number is set to zero), early (overdue number is a negative number) or late (overdue number is a positive number)</li> </ul> <p>An invoice marked with an (*) means that the invoice has been paid by using a credit payment.</p> <p>Several invoices marked with (**) means that the invoices have been paid by using the same credit payment.</p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#payment-run","title":"Payment Run","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Analysis Tools</code> &gt; <code>Payment Run</code></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#overview_5","title":"Overview","text":"<p>The payment run window is a read-only window which shows relevant information of each payment run executed within an organization.</p> <p>A payment run can contain only one payment or several payments grouped and executed together.</p> <p>It is possible to check the status and result of the payment run as well as the result and message of every single payment inside each payment run.</p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#payment-run_1","title":"Payment Run","text":"<p>The execution date and the execution status of each payment run is shown in this window among other relevant data such as the source of the execution.</p> <p></p> <p>The Payment Run window only shows the payments received or made which required an additional execution step, therefore an Automatic Execution Type is configured for the payment method used while making/receiving those payments.</p> <p>The source of the payment execution can be:</p> <ul> <li>Automatically from Invoice process - which means that the payment is automatically executed upon invoice completion.<ul> <li>To get this option, the payment method needs to be configured as described below:<ul> <li>the Automatic Receipt check-box is selected for the payments received</li> <li>and/or the Automatic Deposit check-box is selected for the payments received</li> <li>and the Deferred checkbox is not selected.</li> </ul> </li> </ul> </li> <li>Automatically from Payment process - which means that the payment is automatically executed upon payment creation.<ul> <li>To get this option the Deferred checkbox needs to be selected.</li> </ul> </li> <li>Execute Payment Form - which means that the payment has been executed from the Payment Execution form.<ul> <li>To get this option the Deferred checkbox needs to be selected, therefore the deferred payment can be later on executed in the payment execution form.</li> </ul> </li> <li>Payment Proposal Window - which means that the payment has been executed from the Payment Proposal window.<ul> <li>To get this option the Deferred checkbox needs to be selected, therefore the deferred payment can be later on executed from the payment proposal window.</li> </ul> </li> <li>Payments Window - which means that the payment has been executed either in the payment out or in the payment in window.<ul> <li>To get this option the Deferred checkbox needs to be selected, therefore the deferred payment can be executed later on in the corresponding payment window.</li> </ul> </li> </ul> <p>There are three \"Status\" available:</p> <ul> <li>Executed, which means that the payment run has been executed. The automatic execution processes currently delivered by Etendo will all get an \"Executed\" status.</li> <li>and \"Partially Executed\" and \"Pending\" which are status that can be used by modules such as the Check Printing module to manage those cases where a payment was not successfully executed due to any problem occurring due to a connection failure.</li> </ul>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#payments","title":"Payments","text":"<p>The payment tab lists the payments executed in a payment run.</p> <p></p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/analysis-tools/#parameters","title":"Parameters","text":"<p>The parameters tab shows the value of the payment execution process parameter/s.</p> <p>An Execution Process can have a set of parameters defined.</p> <p>For instance, the \"Print Check simple process\" execution process delivered by Etendo only requires the check number upon execution of the payment.</p> <p></p> <p>This work is a derivative of \"Financial Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Financial Analysis","Receivables Management","Payables Management","Reporting Tools","Etendo Financials"]},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/","title":"Financial Management Setup","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#overview","title":"Overview","text":"<p>This section describes the windows that are necessary to configure the financial management transactions as regards receivables and payables in Etendo. The corresponding windows are:</p> <p> Tax Register Type </p> <p> Payment Method </p> <p> Matching Algorithm </p> <p> Bank File Format </p> <p> Execution Process </p> <p> Remittance Type </p> <p> Doubtful Debt Method </p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#tax-register-type","title":"Tax Register Type","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Setup</code> &gt; <code>Tax Register Type</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#overview_1","title":"Overview","text":"<p>A tax register type is used to collect all the tax rates of a type to take into account while calculating the total tax amount of a given tax register type within a period of time.</p> <p>Tax register types are a key variable of the Tax Payment process as that is the process which calculates the total tax amount of each tax register type created and configured.</p> <p>In other words, the \"Tax Payment\" process helps to calculate the amount of taxes to be paid to or to be received from the corresponding tax authority as the difference between:</p> <ul> <li>the \"Sales\" tax register types or the total tax amount that is charged by an organization and paid by its customers</li> <li>and the \"Purchase\" tax register types or the total tax amount that is paid by an organization to other businesses on the supplies that it receives.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#header","title":"Header","text":"<p>The tax register type window allows the user to create tax register types.</p> <p></p> <p>As shown in the image above, it is possible to create:</p> <ul> <li>\"Sales\" related tax register types which will therefore include sales related \"Tax Rates\" in the \"Lines\" tab</li> <li>as well \"Purchase\" related tax register types which will therefore include purchase related \"Tax Rates\" in the \"Lines\" tab</li> </ul> <p>Besides, every tax register type needs to be linked to a G/L Item.</p> <p>The ledger accounts defined for that G/L Item will be the ones to use while posting the tax payment calculated as the difference between the \"Sales\" tax register type and the \"Purchase\" tax register type.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#lines","title":"Lines","text":"<p>The lines tab allows the user to associate tax rates to the tax register type.</p> <p></p> <p>As shown in the image above, each tax rate selected needs also to be linked to a document type.</p> <p>Therefore, it is not only possible to configure the tax rates which will be taken by the tax payment process as part of a tax register type but also the document types which will be taken into account.</p> <p>Sales document types which can be linked to the corresponding sales tax are:</p> <ul> <li>AR Invoice</li> <li>AR Credit Note</li> <li>Reversed Sales Invoice</li> <li>ES Return Material Sales Invoice</li> </ul> <p>Purchase document types which can be linked to the corresponding sales tax are:</p> <ul> <li>AP Invoice</li> <li>AP Credit Note</li> <li>Reversed Purchase Invoice</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#payment-method","title":"Payment Method","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Setup</code> &gt; <code>Payment Method</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#overview_2","title":"Overview","text":"<p>Payment Methods represent means of payment employed by your enterprise or by a business partner, such as:</p> <ul> <li>Cash</li> <li>Credit Card</li> <li>PayPal</li> <li>Cheque</li> <li>Direct Debit</li> <li>Standing Order</li> <li>Bank Transfer</li> <li>Note Payable</li> </ul> <p>Each payment transaction is associated with a Payment Method. A payment method defines how a payment in/out is going to be managed within the receivables and payables Payment Cycle, and besides how it is going to be accounted.</p> <p>Payment Methods are associated with Financial Accounts, so that payments can be registered in a bank or cashbook.</p> <p>The payment methods which can be used within the payables and receivables management are the ones assigned to a Financial Account, therefore if any payment method configuration needs to be modified, it has to be done in the Payment Method tab of the financial account.</p> <p>It is possible to associate multiple Payment Methods to a single Financial Account.</p> <p>For instance, both checking and electronic payments may be associated with a single Financial Account as each payment method has its own configuration.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#payment-cycle","title":"Payment Cycle","text":"<p>To better understand the configuration of a Payment Method, it is necessary to understand the flow of events within the payment cycle:</p> <ul> <li>Order: the sales order or purchase order is used in this process of payables and receivables management in the case of an advance payment:<ul> <li>when the sales invoice or purchase invoice gets booked, the payment information can be generated for the order from either the Payment In window or the Payment Out window.</li> </ul> </li> <li>Invoice: the purchase invoice generates a debt to a vendor and the sales invoice a debt-claim for a customer.</li> <li>Receipt or Payment: the registration of the transfer of money in or out before the transaction is confirmed in our bank account or cashbook.</li> <li>Financial Account update: the addition of the transaction in the Financial Account as a \"Deposit\" or as a \"Withdrawal\", related to the movement of the money in or out of our bank account or cashbook.</li> <li>Reconciliation: the confirmation of the movement of the money after receiving the bank statement or cash balance.</li> </ul> <p>In the image below, a Simple Payment Workflow is shown:</p> <p></p> <p>The way to create each payment stage in Etendo is described below:</p> <p>First Stage:</p> <p>A \"Receipt\" can be registered in:</p> <ul> <li>the Sales Invoice window by using the process button \"Add Payment\".</li> <li>and in the Payment In window by using the process button \"Add details\".</li> </ul> <p>A \"Payment\" can be registered in:</p> <ul> <li>the Purchase Invoice window by using the process button \"Add Payment\".</li> <li>and in the Payment Out window by using the process button \"Add Details\".</li> </ul> <p>Above payment stages can create an accounting event depending on the payment method accounting configuration.</p> <ul> <li>If it is configured to account at this stage, Receipts and Payments can be accounted in the Payment In / Payment Out window by using the process button \"Post\" or by running the accounting background process.</li> </ul> <p>Second Stage:</p> <p>A \"Deposit\" can be registered in:</p> <ul> <li>the Financial Account by using the process button \"Add Transaction\".</li> <li>and in the Payment In window by using the process button \"Add details\" and then the Action: \"Process Received Payment(s) and Deposit\"</li> </ul> <p>A \"Withdrawal\" can be registered in:</p> <ul> <li>the Financial Account by using the process button \"Add Transaction\".</li> <li>and in the Payment Out window by using the process button \"Add details\" and then the action: \"Process Made Payment(s) and Withdrawal\"</li> </ul> <p>Above payment stages can create an accounting event depending on the payment method accounting configuration.</p> <ul> <li>If it is configured to account at this stage, Deposits and Withdrawals can be accounted in the Financial Account window by using the process button \"Post\" or by running the accounting background process.</li> </ul> <p>Third and final stage:</p> <p>A \"Reconciliation\" can be registered in:</p> <ul> <li>the Reconciliation tab of the Financial Account window.</li> </ul> <p>Above payment stage can create an accounting event depending on the payment method accounting configuration.</p> <ul> <li>If it is configured to account at this stage, Reconciliations can be accounted in the Reconciliation tab of the Financial Account window by using the process button \"Post\" or by running the accounting background process.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#payment-status","title":"Payment Status","text":"<p>To better understand the configuration of the payment method, it is also necessary to understand the payment status related to the process steps.</p> <p>During the whole Payment Cycle, the payment is defined by one status so the user knows the last step of the process that took place and the following step that should take place.</p> <p>In the following explanation and diagram below, the different Payment Statuses are explained.</p> <ul> <li>Awaiting Payment: This status appears when a Receipt/Payment has been created in either the Payment In window or in the Payment Out window, but it has no details of what it is going to be received or paid.</li> <li>Awaiting Execution: This status appears when the Receipt/Payment has been created and processed and there is an automated execution process to be executed.     This is an optional status which will be skipped if:<ul> <li>the Payment Method is Manual</li> <li>or if the Payment Method is Automatic and it is not set as \"Deferred\".</li> </ul> </li> <li>Payment Received/Made: This status appears when the Receipt/Payment has been completed and processed.</li> <li>Deposited/Withdrawn not Cleared: This status appears when the Receipt/Payment has been added to the Financial Account screen, therefore the corresponding Deposit/Withdrawal transaction has been created in the Financial Account.</li> <li>Payment Cleared: This status appears when the Deposit/Withdrawal reconciliation has been executed.</li> </ul> <p></p> <p>In more detail, the way those payment status change within the payables and receivables payment cycle is:</p> <p>1. The Receipt of the money in or the Payment of the money out, before the transaction is confirmed on the bank account, changes the payment status to either:</p> <ul> <li>Awaiting Execution, if there is an execution process set up in the payment method used for the financial account</li> <li>or Payment Received in the case of a receipt of the money in</li> <li>or Payment Made in the case of a payment of money out.</li> </ul> <p>If there is an execution process set up in the payment method, the extra action of executing that process changes the status from \"Awaiting Execution\" to either \"Payment Received\" or \"Payment Made\".</p> <p>2. The Deposit of the payment in the financial account changes the payment status from \"Payment Received\" to \"Deposited not Cleared\"</p> <p>and the Withdrawal of the payment from the financial account changes the payment status from \"Payment Made\" to \"Withdrawn not Cleared\".</p> <p>3. The Clearing or reconciliation of the payments changes the payment status from either \"Deposited not Cleared\" or \"Withdrawn not Cleared\" to \"Payment Cleared\"</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#payment-method_1","title":"Payment Method","text":"<p>The image below shows the Payment Method window. That is the window where payment methods are configured.</p> <p>However, payment methods are assigned to financial accounts, therefore, a different configuration of a given payment method can also be defined in the payment method tab of the financial account window.</p> <p></p> <p>As a consequence, the same method of payment can have different configuration \"versions\" depending on the financial account it has been assigned to.</p> <p>It is very important to remark that:</p> <ul> <li>the configuration of a payment method created in a financial account overwrites the \"generic\" configuration of that payment method while managing payments associated to that payment method in that financial account.</li> <li>even more, the payment methods which can be use:<ul> <li>while issuing a sales invoice for instance</li> <li>or while assigning a by default payment method to a vendor</li> </ul> </li> </ul> <p>are the ones which are already assigned to a financial account.</p> <p>In other words, it is not possible to use a payment method if it is not assigned to a financial account.</p> <p>Finally, if reviewing the payment method assigned to a business partner is required,\u00a0 the steps to follow are:</p> <ul> <li>navigate to the financial account assigned to that business partner if any</li> <li>and then to the payment method tab of the financial account.</li> </ul> <p>Payment Method configuration includes the features below:</p> <ul> <li>if it is going to be used for receiving payments and/or making payments</li> <li>if it implies a manual execution, for instance \"Cash\" or an automatic execution, for instance \"Check\"</li> <li>if it is going to automatically create the registration of the transfer of money before the transaction is confirmed on our bank account or cashbook.<ul> <li>that is a \"Receipt\" in case of receiving a payment</li> <li>that is a \"Payment\" in case of making a payment</li> </ul> </li> <li>if it is going to automatically add the transaction in the financial account related to the movement of the money in or out of our bank account or cashbook.<ul> <li>that is a \"Deposit\" in case of receiving a payment</li> <li>that is a \"Withdrawn\" in case of making a payment</li> </ul> </li> <li>if it allows the user to receive or make payments in other currencies than the financial account currency</li> <li>and finally, how the payment is going to be accounted.</li> </ul> <p>Info</p> <p>To learn more, visit the section Accounting Payment Workflow.</p> <p>Payment Methods can be configured as explained below in detail:</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#payment-method-configuration","title":"Payment Method configuration","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#payment-in-configuration","title":"Payment In Configuration:","text":"<ul> <li>Payment In Allowed: If checked, the Payment Method is enabled to receive payments.</li> <li>Automatic Receipt: If checked, on completion of a Sales Invoice the payment is automatically received.     In order to use this option, the corresponding customer needs to have a \"Financial Account\" defined by default in the customer tab of the Business Partner window. The reason why is:<ul> <li>this check automatically creates a \"Receipt\" transaction in the Payment In window. A payment in requires a financial account.</li> </ul> </li> <li>Automatic Deposit: If checked, on completion of the Receipt the payment is automatically deposited in the financial account.     In order to use this option, the corresponding customer needs to have a \"Financial Account\" defined by default in the customer tab of the Business Partner window. The reason why is:<ul> <li>this check automatically creates a \"Deposit\" transaction in the transaction tab of the financial account window. A deposit requires a financial account.</li> </ul> </li> <li>Receive Payments in Multiple Currencies: If checked, it is possible to receive payments in other currencies than the Financial Account default currency.<ul> <li>Above means that a sales invoice in USD can be deposited in a Financial Account configured in EUROS, for instance. For getting that working the corresponding customers need to have a Sales Price List in USD assigned.</li> <li>It will be possible to enter a given exchange rate while creating the payment in the Sales Invoice window, by using the \"Add Payment\" button.</li> <li>It will be possible to select both USD currency and a given exchange rate, while \"manually\" receiving the payment in the Payment In window, or while \"manually\" creating the deposit of the payment in the transaction tab of the financial account window, by using the \"Add Transaction\" button and then the \"Add Payment In/Out\" button.</li> </ul> </li> <li>Execution Type. There are payments which might or might not require an additional step to be executed. Therefore, there are two execution types:<ul> <li>Manual: this is the execution type by default, unless it is changed to \"Automatic\". This type implies the \"Reception\" of the payment as a manual event without the need of any additional system step. For example, payment by cash.</li> <li>Automatic: if the execution type is changed to \"Automatic\" Etendo allows the user to choose an \"Execution Process, in other words the \"Reception\" of the payment requires to execute an additional step for instance the recording of a \"Check Number\".     There are three execution process available:<ul> <li>Simple Execution Process - this process does not require any action as it automatically changes the payment status from Awaiting Execution to Payment Received.</li> <li>Print Check simple process - this process shows a window which allows the user to enter a check number while processing the payment in the Payment In window, and changes the payment status from Awaiting Execution to Payment Made. The check number entered is saved as the \"Reference Number\" of the Payment.<ul> <li>In case there are more than one payment and a given check number is entered, the process automatically saves as many consecutive check numbers as payments. Those numbers are also saved as \"Reference Number\" of the Payments.</li> </ul> </li> <li>Leave as Credit - this process is just use Return Materials functionality as it allows the user to change a negative payment in/out into a positive credit for the business partner (customer/vendor).</li> </ul> </li> <li>Deferred:<ul> <li>If not checked the payment once processed is also automatically executed, this applies to \"Simple Execution Process\" where no additional action is needed.</li> <li>If checked, the payment is processed but it is not executed. It has to be manually executed once the payment gets an \"Awaiting Execution\" Payment Status in the Payment In window by using the button \"Execute Payment\". That applies to \"Print Check simple process\" where a check number needs to be entered for instance.</li> </ul> </li> </ul> </li> <li>Upon Receipt Use: Account to be used to account the payment Receipt.<ul> <li>Would normally be either left blank if the financial transaction is going to be created later in the workflow or if it is not required any posting at this stage in the cycle, otherwise the \"In Transit Payment Account\" can be assigned to get that:<ul> <li>the payment Receipt is posted in the \"In Transit Payment IN Account\" defined in the Accounting Configuration tab of the financial account window.</li> </ul> </li> </ul> </li> <li>Upon Deposit Use: Account to be used to account the payment Deposit.<ul> <li>Would normally be left blank if no financial transaction required for the Deposit event or if it is not required any posting at this stage, otherwise the \"Deposited Payment Account\" can be assigned to get that:<ul> <li>the payment Deposit is posted in the \"Deposit Account\" defined in the Accounting Configuration tab of the financial account window.</li> </ul> </li> </ul> </li> <li>Upon Reconciliation Use: Account to be used to account payment Reconciliation.<ul> <li>Would normally be set to the \"Cleared Payment Account\", but could be left blank if the payment Receipt or if the payment Deposit have already been posted earlier in the process. If it is set to \"Cleared Payment Account\":<ul> <li>the payment Reconciliation is posted in the \"Cleared Payment Account\" defined in the Accounting Configuration tab of the financial account window.</li> </ul> </li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#payment-out-configuration","title":"Payment Out Configuration:","text":"<ul> <li>Payment Out Allowed: If checked the Payment Method is enabled to make payments.</li> <li>Automatic Payment: If checked, on completion of a Purchase Invoice the payment is automatically received.     In order to use this option,\u00a0 the corresponding vendor needs to have a \"Financial Account\" defined by default in the vendor tab of the Business Partner window. The reason why is:<ul> <li>this check automatically creates a \"Payment\" transaction in the Payment Out window. A payment out requires a financial account.</li> </ul> </li> <li>Automatic Withdrawn: If checked, on completion of the payment, the payment is automatically withdrawn from the financial account.     In order to use this option, the corresponding vendor needs to have a \"Financial Account\" defined by default in the vendor tab of the Business Partner window. The reason why is:<ul> <li>this check automatically creates a \"Withdrawal\" transaction in the transaction tab of the financial account window. A withdrawn requires a financial account.</li> </ul> </li> <li>Make Payments in Multiple Currencies: If checked, it is possible to make payments in other currencies than the Financial Account default currency.<ul> <li>The information above means that a purchase invoice in USD can be withdrawn in a Financial Account configured in EUROS, for instance. In order to use this option, the corresponding vendor needs to have a Purchase Price List in USD assigned.</li> <li>It will be possible to enter a given exchange rate while creating the payment out in the Purchase Invoice window, by using the \"Add Payment\" button.</li> <li>It will be possible to select both USD currency and a given exchange rate, while \"manually\" making the payment out in the Payment Out window, or while \"manually\" creating the withdrawn of the payment out in the transaction tab of the financial account window, by using the \"Add Transaction\" button and then the \"Add Payment In/Out\" button.</li> </ul> </li> <li>Execution Type. Same as above but for the payments made.</li> <li>Upon Payment Use: Account to be used to account the payment.<ul> <li>Would normally be either left blank if the financial transaction is going to be created later in the workflow or if it is not required any posting at this stage in the cycle, otherwise the \"In Transit Payment Account\" can be assigned to get that:<ul> <li>the payment is posted in the \"In Transit Payment OUT Account\" defined in the Accounting Configuration tab of the financial account window.</li> </ul> </li> </ul> </li> <li>Upon Withdrawal Use: Account to be used to account the payment Withdrawal.<ul> <li>Would normally be left blank if no financial transaction required for the Withdrawal event or if it is not required any posting at this stage, otherwise the \"Withdrawal Payment Account\" can be assigned to get that:<ul> <li>the payment Withdrawal is posted in the \"Withdrawal Account\" defined in the Accounting Configuration tab of the financial account window.</li> </ul> </li> </ul> </li> <li>Upon Reconciliation Use: Account to be used to account payment Reconciliation.<ul> <li>Would normally be set to the \"Cleared Payment Account\", but could be left blank if the payment or if the withdrawal have already been posted earlier in the process. If it is set to \"Cleared Payment Account\":<ul> <li>the payment Reconciliation is posted in the \"Cleared Payment Account\" defined in the Accounting Configuration tab of the financial account window.</li> </ul> </li> </ul> </li> </ul> <p>One of the key features allowed by the payment method configuration is to get that two of the three payment cycle stages can be automated:</p> <p></p> <p>As shown in the image above, if the Automatic Receipt/Payment and Automatic Deposit/Withdrawn are selected, the manual actions to execute are:</p> <ul> <li>the creation and booking of the sales/purchase invoice</li> <li>the payment in/out reconciliation in the financial account</li> </ul> <p>because, the Payment In/Out as well as the Deposit/Withdrawn transactions are automatically created.</p> <p>If the Automatic Receipt/Payment and Automatic Deposit/Withdrawn are NOT selected, the manual actions to execute are:</p> <ul> <li>the creation and booking of the sales/purchase invoice</li> <li>the creation of the Payment In/Out</li> <li>and the creation of the Deposit/Withdrawal transaction in the financial account, unless the action \"Process Made Payment(s) and Withdrawal\" or \"Process Received Payment(s) and Deposit\" are selected while processing the payment.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#accounting-payment-workflow","title":"Accounting Payment Workflow","text":"<p>Etendo allows a flexible payment accounting process, that means that a payment associated with a given payment method can be posted or not in any of its Payment Cycle stages.</p> <p>As already described a payment received from a customer goes through below stages:</p> <ul> <li>Step 1 - the \"Receipt\" of the payment</li> <li>Step 2 - the \"Deposit\" of the Receipt in the Financial Account</li> <li>Step 3 - and finally the \"Reconciliation\" of the Deposit once the bank statement has been received.</li> </ul> <p>Analogue situation happens while making a payment to a vendor:</p> <ul> <li>Step 1 - the \"Payment\"</li> <li>Step 2 - the \"Withdrawal\" of the payment from the Financial Account</li> <li>Step 3 - and finally the \"Reconciliation\" of the Withdrawal once the bank statement has been received.</li> </ul> <p></p> <p>For each step, it is possible to specify the default account for the receivables and payables cycles independently.</p> <p>Each financial account needs to have at least one default account for both the receivables and payables cycle at either step 1, step 2 or step 3.</p> <p>Both on the payables and receivables side, the first step containing an account represents the moment in which the supplier liability or customer receivables are cancelled.</p> <p>For instance, if the Receive Payment Account is empty and you specify a Deposit Account, the customer receivables is cancelled at the moment of the deposit, not at the time of recording of the payment.</p> <p>Any subsequent step having an account would offset the account in the previous step with the account in that step to represent the diminishing of the risk.</p> <p>In other words, each of the stages can be posted in the windows/tabs where those are created if there is a value defined in the \"Upon...Use\" fields.</p> <p>For instance:</p> <ul> <li>if for a payment method the value \"In Transit Payment Account\" is selected in the field \"Upon Receipt Use\" that means that:<ul> <li>the receipt of the payment can be posted in the Payment In window by using the process button \"Post\".</li> <li>the customer receivable is going to be cancelled by the \"In Transit Payment IN Account\" defined in the accounting configuration tab of the financial account window.</li> </ul> </li> <li>if for a payment method the value \"Deposited Payment Account\" is selected in the field \"Upon Deposit Use\" that means that:<ul> <li>the deposit of the payment can be posted in the Transaction tab of the financial account window by using the process button \"Post\".</li> <li>the payment receipt is going to be cancelled by the \"Deposit Account\" defined in the accounting configuration tab of the financial account window.</li> </ul> </li> <li>if for a payment method the value \"Cleared Payment Account\" is selected in the field \"Upon Clearing use\"<ul> <li>that means that the reconciliation of the deposit can be posted in the Reconciliation tab of the financial account window by using the process button \"Post\".</li> <li>the deposit of the payment is going to be cancelled by the \"Cleared Payment Account\" defined in the accounting configuration tab of the financial account window.</li> </ul> </li> </ul> <p>Note</p> <p>If any account is left empty, it implies that the process button \"Post\" is shown as \"Post: Disable for accounting\" in the corresponding window.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#matching-algorithm","title":"Matching Algorithm","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Setup</code> &gt; <code>Matching Algorithm</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#overview_3","title":"Overview","text":"<p>Etendo allows the user to reconcile deposit and withdrawal transactions of a financial account in two ways:</p> <ol> <li>Automatically by matching up the bank statement lines (imported or not) with the financial account transactions.     In this case, a matching algorithm is necessary to drive the matching process.</li> <li>Manually by using the Reconcile process button of the financial account window.     This way of reconciliation does not require a matching algorithm.</li> </ol> <p>Etendo delivers out of the box the \"Standard\" matching algorithm, which can be found and configured in the Matching Algorithm window.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#matching-algorithm_1","title":"Matching Algorithm","text":"<p>The matching algorithm window lists and allows the user to configure the algorithm/s to use while matching up bank statement lines with financial account transactions.</p> <p>As shown in the image above, the \"Standard\" matching algorithm has three checkboxes which allow the user to configure the financial account transactions matching process:</p> <ul> <li>Match BP Name: This option gets a strong match if the business partner name of the bank statement line matches the business partner name of the financial account transaction.</li> <li>Match Reference: This option gets a strong match if the reference of the bank statement line matches the reference of the financial account transaction.</li> <li>Match Transaction Date: This option gets a strong match if the business partner name of the bank statement line matches the business partner name of the financial account transaction.</li> </ul> <p>Info</p> <p>It is possible to select all the above checks at once or just some of them in order to configure how to get a strong match.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#bank-file-format","title":"Bank File Format","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Setup</code> &gt; <code>Bank File Format</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#overview_4","title":"Overview","text":"<p>Etendo allows the user to import a bank statement file to an organization's financial account if a bank file format is configured for the organization.</p> <p>Etendo delivers some modules which, once installed, allow the user to import bank statement files into Etendo in different formats:</p> <ul> <li>OFX Bank Statement Format</li> <li>CSV Generic Bank Statement Importer</li> <li>WePay CSV Importer</li> <li>and the Spanish one Cuaderno 43</li> </ul> <p>Once a bank statement file is imported to an organization's financial account:</p> <ul> <li>the overall information such as the file name and the import date are saved in the Imported Bank Statements tab of the financial account</li> <li>and the content of the bank statement file is saved line by line in the corresponding Bank Statement Lines tab.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#bank-file-format_1","title":"Bank File Format","text":"<p>The bank file format window lists the bank file format modules installed for an organization.</p> <p></p> <p>As shown in the image above, a bank file format can be applied to the organization in the Enterprise Module Management window after being installed, therefore it is available for any organization of the client.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#exceptions","title":"Exceptions","text":"<p>Exceptions can be added to a bank file import format, therefore they are not taken by the import process. It is possible to define the text to exclude while matching transactions and bank statement lines on a given financial account or in all of them.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#execution-process","title":"Execution Process","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Setup</code> &gt; <code>Execution Process</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#overview_5","title":"Overview","text":"<p>Some payment types require an additional activity to be executed upon completion of the payment.</p> <p>For instance, a payment with a check might require the recording of the check number and the printing of the check.</p> <p>Overall, the execution process is a definition of the activity/ies that the system or the user has to execute to get that a payment is finally recorded as:</p> <ul> <li>made/withdrawn from the financial account</li> <li>or received/deposited in the financial account.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#process","title":"Process","text":"<p>The execution process window lists the available execution processes.</p> <p>Etendo delivers by default execution processes described below:</p> <ul> <li>Simple Execution Process - this process runs a system activity which changes the payment status from \"Awaiting Execution\" to \"Payment Received\"/\"Payment Made\" (or \"Deposited not Cleared\"/\"Withdrawn not Cleared\")</li> <li>Print Check simple process - this process opens a window which allows the user to enter a check number while processing the payment.</li> <li>Leave as Credit - this process is just use Return Materials functionality as it allows the user to change a negative payment in/out into a positive credit for the business partner (customer/vendor).</li> </ul> <p>The payments that require a separate activity to be executed need to be configured to make them work, that implies the selection of the \"Automatic\" option in the field \"Execution Process\", therefore an execution process of the ones listed above can be selected while configuring the payment method.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#parameter","title":"Parameter","text":"<p>The parameter tab allows the user to configure the additional activity to execute upon completion of a payment. For instance, to record a check number.</p> <p></p> <p>As shown in the image above, the \"Print Check Simple Process\" has one parameter named \"Check Number\". That parameter is an \"In\" \"Parameter Type\" which \"Input Type\" is \"Text\".</p> <p>Above configuration means that the check number needs to be entered as a text by the user.</p> <p>An \"In\" parameter type can also be a checkbox, therefore instead of entering a text, the user needs to select a checkbox or not. It is also possible to define whether the default value of the checkbox is going to be \"Yes\" or \"No\".</p> <p>Besides, the parameter types can also be a \"Constant\", therefore the \"Default Text Value\" of the constant can be specified.</p> <p>Info</p> <p>The value register for any of the above defined parameter's types is saved in the Parameters tab of the corresponding payment run.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#remittance-type","title":"Remittance Type","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Setup</code> &gt; <code>Remittance Type</code></p> <p>To configure the remittance payment method it is necessary to previously execute a dataset that has created this payment method and the execution process. </p> <p>Info</p> <p>The \"Deferred\" field should always be checked for payment methods that apply to remittances.</p> <p></p> <p>Info</p> <p>No accounting will be defined for any of the transactions associated with the remittance payment method, so that no double accounting is generated. Remittance accounting is configured from the remittance types window.</p> <p>The next step is the configuration of the type of remittance and the assignment of the accounting accounts for its posting. It is possible to create as many remittance types as financial accounts available so that the appropriate accounting accounts can be assigned to each of them. </p> <p>The following accounts are defined: Sent account: the account to be used in the remittance posting. Settlement account: account to be used for the remittance settlement posting, which refers to the amount having been collected or paid.</p> <p></p> <p>To finish the process, the payment methods applicable to each financial account should be associated. </p> <p>Info</p> <p>It is important that those banks from which remittance transactions are to be made have a third party partner.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#non-discount-remittances","title":"Non-Discount Remittances","text":"<p>To configure Non-Discount Remittances, define this payment method from the Payment Method window.  </p> <p></p> <p></p> <p>Info</p> <p>To create a Non-Discount remittance go to the Remittance window. </p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#remit-for-discount","title":"Remit for Discount","text":"<p>To configure Remittances for Discount, define the type from the Remit for Discount check box as shown in the image below: </p> <p></p> <p></p> <p>Info</p> <p>To create a Remit for Discount remittance go to the Remittance window.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#doubtful-debt-method","title":"Doubtful Debt Method","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Setup</code> &gt; <code>Doubtful Debt Method</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#overview_6","title":"Overview","text":"<p>Through this window, it is possible to define a Doubtful Debt Method, which will be available to use as a template when creating a new Doubtful Debt Run.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/setup/#doubtful-debt-method_1","title":"Doubtful Debt Method","text":"<p>Fields to note:</p> <ul> <li>Days Overdue: This field is used as a filter when selecting the existing debts. It can be removed afterwards.</li> <li>Percentage: This field is used when selecting the existing debts as the default percentage of the debt that is going to be considered as doubtful. It can be changed afterwards.</li> </ul> <p>This work is a derivative of \"Financial Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/","title":"Financial Management","text":""},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview","title":"Overview","text":"<p>Financial Management functional documentation provides a detailed description of all windows of the Financial Management application area.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#purchase-invoice-payment-plan","title":"Purchase Invoice Payment Plan","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Purchase Invoice Payment Plan</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_1","title":"Overview","text":"<p>The purchase invoice payment plan window displays all the purchase invoice payment plans which are not fully paid.</p> <p>This window offers another possibility of managing the same information found in the Payment Plan tab of the Purchase Invoice window for a given invoice.</p> <p>The advantage of this window is that it offers a more immediate view of all the purchase invoice payment plans which still have an outstanding amount to be paid.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-plan","title":"Payment Plan","text":"<p>Purchase invoice payment plan information is shown grouped in two sections.</p> <p>Invoice section shows the information detailed below:</p> <ul> <li>Invoice. There is a link to the Purchase Invoice.</li> <li>Document No.. This is the Document Number of the Invoice.</li> <li>Business Partner. This is the Business Partner against whom the Invoice is issued.</li> <li>Invoice Date. That is the Creation date of the Invoice.</li> <li>Total Gross Amount. This is the Total amount of the Invoice.</li> <li>Outstanding Amount. This is the Outstanding amount of this Payment Plan.</li> <li>Currency. That is the Currency of the Invoice.</li> </ul> <p>Payment Plan section shows the information detailed below:</p> <ul> <li>Payment Method. This is the payment method of the purchase invoice.</li> <li>Due Date. This is the original \"Due Date\" agreed with the vendor. This date is used as the \"Reference Date\" in some Financial Reports.</li> <li>Expected Date. This is the Date when the payment is expected to be made. When the Payment Plan is created, this date is the same date as the \"Due Date\", but it can be changed afterwards.   This date reflects a revision of the original Payment Plan in which the \"Due Date\" has changed.   This date is used as the \"Reference Date\" in some Reports, such as the Payment Report.</li> </ul> <p>Info</p> <p>This field is the only one that can be changed in this window. If changed, that change will be also reflected in the payment plan tab of the corresponding purchase invoice.</p> <ul> <li>Days Overdue. This is the number of days from the expected date until the current day.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-out","title":"Payment Out","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Payment Out</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_2","title":"Overview","text":"<p>Supplier's payments and prepayments can be made and managed in the payment out window. G/L item payments not related to orders/invoices can also be managed in this window.</p> <p>Payments can be made against different types of documents:</p> <ul> <li>Purchase Orders, in effect this is a prepayment.   Later on, when an invoice is created from the order that already has a payment received against it, the invoice automatically inherits the payment received against the order.</li> <li>Purchase Invoices, in effect this is a payment of a vendor invoice.   Payments prior to the accounting date of the invoice are also considered a prepayment.</li> <li>And G/L Items, in effect this is a payment of any other expense to a vendor, for instance a fine or other types of fee not included in an invoice.   This type of payments can be created in this window by adding the corresponding G/L Item as well as the \"Paid Out\" amount, or can be automatically populated as a GL item if created as a GL Item payment in a G/L Journal.   Regardless the way they are created, both cases are managed in the same way depending on the Payment Method used.</li> </ul> <p>Payments can be created to pay to a single vendor or to pay to several vendors at the same time.</p> <p>At the end of the process a \"Payment Out\" transaction will imply the creation of a \"Withdrawal\" transaction in the corresponding Financial Account.</p> <p>The creation of the withdrawal transaction in the financial account can be done:</p> <ul> <li>manually by using the Add Transaction process of the financial account.</li> <li>or automatically, if the payment method used is configured to do so, that implies the selection of the checkbox \"Automatic Withdrawal\".</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#header","title":"Header","text":"<p>The Payment Out window allows the user to make and manage supplier's payments done to settle different types of documents such as orders and invoices. This window also allows the user to manage the supplier's payments already made in the purchase invoice window, the same way as the G/L item payments made in a G/L Journal.</p> <p></p> <p>There are just a few mandatory fields to fill in while making a payment in this window:</p> <ul> <li>the Organization which is paying</li> <li>the Payment Number which follows the corresponding document sequence.</li> <li>the Payment Method to use for making the payment. There is a check-box in the \"Add Payment\" window which later on allows to select documents linked to alternative payment methods</li> <li>and the Financial Account from where the money is going to be taken in the field \"Paying From\".</li> </ul> <p>Other relevant fields to note are:</p> <ul> <li>Paying To field, that is, the vendor we are making a payment to, it does not need to be entered upon creating a new record.</li> <li>If a vendor is not selected, it implies the creation of a payment to pay different documents of different vendors.</li> <li>If a vendor is selected, it implies the creation of a payment to pay different documents of the same vendor. In this case, the value of the fields \"Payment Method\" and \"Paying From\" change if the vendor has assigned a specific payment method and financial account to be used while paying its bills.</li> <li>Reference No., this field is used to reflect the number associated with the payment in the Vendor documentation system, if any.</li> <li>Currency. It is possible to select a different currency than the financial account currency while making a payment. In order to do this, the payment method used and assigned to the financial account of the payment needs to be configured to make payments in multiple currencies.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#add-payment-window","title":"Add Payment Window","text":"<p>The Add Details button opens the Add Payment window, where outstanding documents to be paid can be selected.</p> <p></p> <p>The Add Payment window is already explained in the Purchase Invoice payment article.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-of-several-document-types-from-different-vendors","title":"Payment of Several Document Types from Different Vendors","text":"<p>If no vendor has been selected in the field \"Paying To\", it is possible to pay different transaction types of different vendors by just selecting them.</p> <p>Info</p> <p>Etendo allows the user to filter once more by a given business partner if it was not entered in the \"Paying To\" field by mistake.</p> <p>The \"Actual Payment Out\" field will then show the sum up value of all the transactions being selected to be paid.</p> <p></p> <p>Once the payment is processed, the lines tab lists all the orders and invoices and even G/L items included in the payment, same as the \"Description\" field of the payment header.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reactivating-a-payment","title":"Reactivating a payment","text":"<p>An already processed payment with status \"Payment Made\" or \"Awaiting Execution\" can be Reactivated. This option allows users to edit wrong payment data or to delete a wrongly created payment.</p> <p>\"Reactivate\" button allows the user to do what is explained above as two different actions can be selected:</p> <ul> <li>Reactivate: This option reactivates the payment, keeping the payment lines.   Once the payment is reactivated, the user can easily modify the payment information by using the button \"Add Details\" and process it once again.</li> <li>Reactivate and Delete lines: This option reactivates the payment and removes all the payment lines.   This option is the one to use if the payment was wrongly created and therefore needs to be removed completely.   Once the payment is reactivated, the user can delete the payment header without the need of deleting the payment lines first.</li> </ul> <p>An already processed and withdrawn payment with status \"Withdrawn not Cleared\" can be as well \"Reactivated\" as described above, but once the corresponding withdrawal transaction has been deleted from the financial account.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#posting-a-payment","title":"Posting a payment","text":"<p>A payment made and processed from the Payment Out window can be posted if the payment method used while creating the payment allows the user to do so once assigned to the financial account through which the payment is made. If that is not the case, Etendo shows a warning: \"Document disabled for accounting\".</p> <p>A payment made posting looks like:</p> Account Debit Credit Vendor Liability Payment amount Upon Payment Use the \"In Transit Payment OUT Account\" i.e Payment amount"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#voiding-a-payment","title":"Voiding a payment","text":"<p>An already processed payment with status \"Awaiting Execution\" can be \"Voided\". The process button \"Reactivate\" allows the user to do that but only for payments in status \"Awaiting Execution\".</p> <p>Info</p> <p>Remember that a payment can get an awaiting execution status if the payment method used and assigned to the financial account is set up to have an automatic \"Execution Type\" and also the checkbox \"Deferred\" is selected.</p> <p>Void action sets the payment line/s as \"Canceled\" which means that the document (order or invoice) is actually not paid therefore, a new payment can be created or added.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#credit-payments","title":"Credit payments","text":"<p>The field \"Generated Credit\" which can be found in the \"Payment Out\" header, allows the user to generate credit (or a credit payment in Etendo terms) for a business partner by just entering the credit amount in that field.</p> <p>It is not possible to generate credit on a payment which is not related to a single vendor or creditor, therefore, the generated credit feature requires the user to select a business partner in the field \"Paying To\".</p> <p>The creation of a credit payment requires not to select any document to pay in the \"Add Payment\" window which is shown after pressing the process button \"Add Details\", but to leave the credit amount to be used later.</p> <p></p> <p>A credit payment is created after processing. This credit payment specifies the amount left as credit in the \"Description\" field of the credit payment header.</p> <p>Later on, the available credit generated for that vendor can be used to pay the vendor:</p> <ul> <li>in the \"Add Payment\" window once a new Payment Out is created for that vendor by just selecting the credit in the section \"Credit to Use\".</li> </ul> <p></p> <ul> <li>or in the \"Select Credit Payments\" window which is automatically shown upon completion of a new vendor\u2019s invoice.</li> </ul> <p>Info</p> <p>In both cases, the \"Description\" field of the credit payment header will also specify the transactions/documents where the credit was used.</p> <p>The Use Credit Source tab of the payment out window shows the credit payment used to pay a vendor's document (order, invoice or G/L item) payment.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payments-in-multiple-currencies","title":"Payments in multiple currencies","text":"<p>Etendo allows the user to make payments in a different currency than the financial account currency.</p> <p>To use this option, the payment method assigned to the financial account used to make the payment needs to be configured to allow so, that implies to select the check-box \"Make Payments in Multiple Currencies\".</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#prepayments-exceeding-the-invoice-amount-to-pay","title":"Prepayments exceeding the invoice amount to pay","text":"<p>Etendo allows to prepay by adding payments to the orders. The purchase invoice created from the order will inherit the payment done for the order.</p> <p>When the actual prepaid amount exceeds the invoice amount to pay, the purchase invoice remains as \"Payment Complete\" = \"No\" until</p> <ul> <li>either a \"negative\" payment out is created to reflect that the supplier is paying back to the organization the difference, so final payment balance equals the purchase invoice amount</li> <li>or a credit payment is created to be later on used while paying another invoice to the same supplier.   This credit payment needs to be created as a new payment out related to the purchase prepaid invoice, that way the prepaid invoice is set as \"Payment Complete\" = \"Yes\".</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#lines","title":"Lines","text":"<p>Lines tab contains a list of the documents to be paid or already paid by the payment.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#execution-history","title":"Execution history","text":"<p>The execution history tab shows information about the history of the payment execution attempts.</p> <p>For some payment types, some additional steps are needed. For example, a payment with a check that needs to be filled in with a check number.</p> <p>In that case, the payment method linked to the payment needs to be configured to require an \"Automatic\" Execution Type process.</p> <p>All of the above implies an additional step to take in the Payment Out window, which is to execute the payment by using the process button \"Execute Payment\".</p> <p>This process button is only shown in case of payment/s linked to an automation execution process for which the check-box \"Deferred\" is selected.</p> <p>If the checkbox \"Deferred\" is not selected, the additional step is still required, but it will be automatically executed without any end-user action.</p> <p>The Execution History tab is a read-only tab which shows information about the execution of the payment such as the execution date, just once the payment has been executed.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#exchange-rates","title":"Exchange rates","text":"<p>The exchange rate tab allows the user to enter an exchange rate between the organization's general ledger currency and the currency of the payment made to be used while posting the payment to the ledger.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#used-credit-source","title":"Used credit source","text":"<p>A credit payment can be used to settle more than one document payment. This table tracks the documents where a credit payment has been used.</p> <p>The creation of a \"Credit\" payment is already explained in the Credit Payments section of this article, same as how a \"Credit\" payment or available credit can be used later on to pay a vendor.</p> <p>This read-only tab shows the credit payment used to pay a vendor document (order, invoice or G/L item) payment.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-removal","title":"Payment Removal","text":"<p>The aim of this functionality is to delete and reactivate payments in an agile and easy way. Also, it allows eliminating and reactivating bank transactions and reconciliations.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>From this window, it is possible to delete payments by selecting the corresponding record and then clicking on the Remove Payment button. On the other hand, it is possible to reactivate payments from the same window with the \"Advanced Reactivation\" button. This functionality allows the user to reactivate the payment without deleting manually its associated transactions, which is necessary if using the core button \"Reactivate\". This will return the payment to \u201cAwaiting Payment\u201d status and new payment details can be added.</p> <p>In both cases:</p> <ul> <li> <p>If the payment is included in the financial account, i.e., if it is in Deposited/Withdrawn not cleared status, the transaction in it will also be deleted (Financial Account window &gt; Transaction tab).</p> </li> <li> <p>If the payment is reconciled through an automatic method, then in addition to the transaction in the financial account, the line of the bank statement to which it was linked (Financial Account window &gt; Imported Bank Statements) and the corresponding line of the bank reconciliation (Financial Account &gt; Reconciliations) will be deleted.</p> </li> </ul> <p>Info</p> <p>If the payment is posted, the accounting entry will be deleted.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#bulk-posting","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#advanced-business-partner-settlement","title":"Advanced Business Partner Settlement","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>From the Payment Out window, it is possible to create a settlement by clicking on the Add Details button. In the pop-up window, Etendo shows a list of invoices to be settled each one with its corresponding invoice number, here the user is able to select the corresponding invoice or invoices to net. The Actual Payment amount to pay is set, then select the invoice/s to create a settlement and define the corresponding amount to be paid from the/each invoice.</p> <p></p> <p>From the Invoice From Compensation tab, select the sales invoice/s that will be used to pay and set the needed amount from the invoice/s to be netted.</p> <p>Below that, in the Totals tab, Etendo shows the total reference amounts to be netted.</p> <p></p> <p>After clicking the button Done, the system nets the invoices and credits for the corresponding business partner and creates a settlement record.</p> <p></p> <p>The settlement record is registered in the Business Partner Settlement window where the lines for the invoice/s (sales and purchase) used to net will be shown.</p> <p></p> <p>Info</p> <p>For more information, visit the Business Partner Settlement module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#advanced-bank-account-management","title":"Advanced Bank Account Management","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Bank Account Management module of the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This module includes the Bank account column to the Add details pop-up window to be able to filter possible payments by bank account.</p> <p>Info</p> <p>For more information, visit the Advanced Bank Account Management user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-proposal","title":"Payment Proposal","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Payment Proposal</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_3","title":"Overview","text":"<p>The payment proposal is a tool that helps the user to make payments by selecting the documents related to a given payment method or scheduled to be paid before a given due date. The system proposes what should be paid based on the selection criteria provided by the user.</p> <p>The steps to follow are:</p> <ul> <li>Enter the selection criteria, that could be:</li> <li>to enter a given business partner whose invoices we want to pay</li> <li>to enter a given payment method, for instance \"Wire Transfer\" if we want to generate at once all the wire transfer of the month</li> <li>or to enter a given date in the field \"Incl.documents up to this date\" if we want to pay all the invoices having a due date before that date</li> <li>etc</li> <li>Run the process \"Select Expected Payments\".   This process selects the scheduled payment events of the orders/invoices, that match the selection criteria entered and makes a payment proposal.</li> <li>Select those documents (orders and/or invoices) of the proposal that the organizations wants to pay.</li> <li>Submit the proposal.   This action populates the Lines tab of the payment proposal window.</li> <li>Run the process \"Generate Payments\".   This process generates the payment or payments by having into account that:</li> <li>a payment can group separate orders/invoices to be paid for the same vendor into one payment</li> <li>or group separate orders/invoices to be paid regardless the vendor into one payment.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#header_1","title":"Header","text":"<p>The payment proposal window allows the user to enter a set of selection criteria that help the user to make payments massively.</p> <p></p> <p>The fields to note are:</p> <ul> <li>Business Partner: if a business partner is entered only the documents due to that business partner will be proposed.</li> <li>Payment Method: if a payment method is entered, only the documents having that payment method assigned will be proposed, however pending invoices or orders linked to different payment methods can also be selected by clearing the implicit filters applied (by clicking the funnel icon.).</li> <li>Paying From: it is possible to select the Financial Account which has the above payment method configured from where we need to extract money.</li> <li>Currency: it is possible to select a currency if the payment method selected is configured to allow making payments in multiple currencies. If that is the case, a field is shown which allows the user to enter the \"Exchange Rate\" between the document's currency and the financial account's currency.</li> <li>Incl. documents up to this date: This field allows the user to enter a date, therefore the documents of the proposal will have a due date on or before the given date.</li> </ul> <p>The Select Expected Payments header button displays the documents that match the selection criteria entered above.</p> <p>Info</p> <p>Notice that the data shown in the grid is filtered using the previous criteria (implicit filter). In order to see pending invoices or orders of a different Payment Method for instance, it is necessary to clear the filters by clicking the funnel icon.</p> <p></p> <p>Besides, the \"Select Expected Payments\" window allows the user to:</p> <ul> <li>enter a \"Supplier Reference\", if any</li> <li>modify the \"Payment\" amount if the amount to pay is less than the outstanding amount</li> <li>and select the \"Write-off\" checkbox to write off the difference between the outstanding amount and the payment amount entered per each document/raw selected.</li> </ul> <p>The \"Submit\" button finishes the process and gets that the selection is populated in the Lines tab.</p> <p>Finally, the Generate Payments header button allows the user to take two actions:</p> <ul> <li>either to group separate payments for the same vendor into one payment,   this option allows the user to group pending orders/invoice of the same vendor to be paid in one payment transaction.</li> <li>or group all orders/invoices into one payment,   this option allows the user to group pending orders/invoice to be paid in one payment transaction, regardless the vendor.</li> </ul> <p>Once executed:</p> <ul> <li>A system message displays the created payment's number/s.</li> <li>The payment summary information is reflected in the Status Bar of the Payment Proposal window.</li> <li>The Payment Out Plan and the Payment Monitor information of all the documents involved is updated.</li> <li>Finally, the Payment Status changes to Awaiting Execution when an Automatic Execution Type is defined or to Payment Made if the execution is Manual. If there is an execution process defined, it can be run by clicking the Execute Payment button.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#lines_1","title":"Lines","text":"<p>The lines tab shows the transactions (orders and/or invoices) included in the payment proposal.</p> <p></p> <p>A payment proposal can be \"Reactivated\" that means that the payment/s created are deleted and therefore removed from the Payment Out window.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#sales-invoice-payment-plan","title":"Sales Invoice Payment Plan","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Sales Invoice Payment Plan</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_4","title":"Overview","text":"<p>The sales invoice payment plan window displays all the sales invoice payment plans which are not fully paid.</p> <p>The window offers another possibility of managing the same information which can be found in the Payment Plan tab of the Sales Invoice window for a given invoice.</p> <p>The advantage of this window is that it offers a more immediate view of all the sales invoice payment plans which still have an outstanding amount to be paid.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-plan_1","title":"Payment Plan","text":"<p>Sales invoice payment plan information is shown grouped in two sections.</p> <p>Invoice section shows information detailed below:</p> <ul> <li>Invoice. There is a link to the Sales Invoice</li> <li>Document No.. This is the Document Number of the Invoice.</li> <li>Business Partner. This is the Business Partner against whom the Invoice is issued.</li> <li>Invoice Date. That is the creation date of the Invoice.</li> <li>Total Gross Amount. This is the Total amount of the Invoice.</li> <li>Outstanding Amount. This is the Outstanding amount of this Payment Plan.</li> <li>Currency. That is the Currency of the Invoice.</li> </ul> <p>Payment Plan section shows below detailed information:</p> <ul> <li>Payment Method. This is the payment method of the sales invoice.</li> <li>Due Date. This is the original \"Due Date\" agreed with the customer. This date is used as the \"Reference Date\" in some Financial Reports such as the [[Projects:Payment_Aging_Balance/User_Documentation|Receivables Aging Inquiry.</li> <li>Expected Date. This is the Date when the payment is expected to be collected. When the Payment Plan is created, it is the same date as the \"Due Date\", but it can be changed afterwards.   This date reflects a revision of the original Payment Plan in which the \"Due Date\" has changed.   This date is used as the \"Reference Date\u201d in some Reports, such as the Payment Report.   Moreover, this field is the only one which can be changed in this window. If changed, that change will be also reflected in the payment plan tab of the corresponding purchase invoice.</li> </ul> <p>Days Overdue</p> <p>This is the number of days from the expected date until the current day.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-in","title":"Payment In","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Payment In</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_5","title":"Overview","text":"<p>Customer's payments and prepayments received can be recorded and managed in the Payment In window. Besides, G/L item payments not related to orders/invoices can also be managed in this window.</p> <p>Customer's payments can be received against:</p> <ul> <li>Sales Orders, in effect this is a prepayment.   Later on, when an invoice is created from the order that already has a payment received against it, the invoice automatically inherits the payment received against the order.</li> <li>Sales Invoices, in effect this is an invoice payment received from a customer.   Payments prior to the accounting date of the invoice are also considered a prepayment.</li> <li>And a G/L Items, in effect this is a payment of any other revenue received from a customer, for instance a fine.   This type of payments can be created in this window when selecting the G/L Item \"Transaction Type\" or can be automatically populated as a payment in this window if created in a G/L Journal.   Regardless the way they are created, both cases are managed in the same way depending on the Payment Method used.</li> </ul> <p>Info</p> <p>Etendo allows the user to register payments received from a single customer or to register payments received from several customers at the same time.</p> <p>At the end of the process, a \"Payment In\" transaction will imply the creation of a \"Deposit\" transaction in the corresponding Financial Account.</p> <p>The creation of the deposit transaction in the financial account can be done:</p> <ul> <li>manually by using the Add Transaction process of the financial account.</li> <li>or automatically if the payment method used is configured to do so, that implies the selection of the check-box \"Automatic Deposit\".</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#header_2","title":"Header","text":"<p>The Payment In window allows the user to record and manage customer's payments received against different types of documents issued by the organization, such as orders and invoices. This window also allows the user to manage the customer's payments already recorded in the sales invoice window, in the same way as the G/L item payments received in a G/L Journal.</p> <p></p> <p>There are just a few mandatory fields to fill in while recording a payment in this window:</p> <ul> <li>the Organization which is receiving the payment</li> <li>the Payment Number which follows the corresponding document sequence</li> <li>the Payment Method used for receiving the payment. There is a check-box in the \"Add Payment\" window which later on allows the user to select documents linked to alternative payment methods</li> <li>and the Financial Account where the money is going to be deposited to.</li> </ul> <p>Other relevant fields to note are:</p> <ul> <li>the Amount received. It does not need to be entered upon creating a new record.</li> <li>the Received From field shows the customer the user is receiving the payment from. It does not need to be entered upon creating a new record.</li> <li>If a customer is not selected, it implies the creation of a payment which can collect the payment of different documents related to different customers.</li> <li>If a customer is selected, it implies the creation of a payment which can collect the payment of different documents of the same customer. In this case, the value of the fields \"Payment Method\" and \"Deposit To\" change if the customer has assigned a specific payment method and financial account to be used while collecting its bills.</li> <li>Reference No., this field is used to reflect the number printed on the payment justification document received from the customer.</li> <li>and the Currency. It is possible to select a different currency from the financial account currency while receiving a payment. In order to do so, the payment method used and assigned to the financial account of the payment needs to be configured to receive payments in multiple currencies.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#add-payment-window_1","title":"Add payment window","text":"<p>The Add Details button opens the Add Payment window, where the documents being paid can be selected.</p> <p></p> <p>Info</p> <p>The \"Add Payment\" window is already explained in the Sales Invoice Payment article.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-of-several-document-types-from-different-customers","title":"Payment of several document types from different customers","text":"<p>If no customer has been selected in the field \"Received From\", it is possible to record the payment of different customers at the same time by just selecting the transactions to be paid.</p> <p>Info</p> <p>Note that Etendo allows the user to filter once more by a given business partner if it was not entered in the \"Received From\" field by mistake. When this happens, payments must be done by executing them with the exact amount.</p> <p>The Actual Payment amount entered is automatically spread among the pending debts (invoices or orders pending to be paid). It is possible to avoid this automatic distribution by setting the Preference Add Payment: Automatically distribute amounts to 'N'</p> <p></p> <p>The user can check or uncheck the transactions as required, and can also modify the amounts shown in the \"Amount\" field.</p> <p>It is important to note that:</p> <ul> <li>In this scenario, it is not possible to generate credit or refund a remaining amount to the customer because both actions need to be related to one single customer.   Therefore, if the amount paid and reflected in the actual payment field is higher than the sum of the invoice's grand total amount selected, an error message is shown saying that \"There is an amount difference without any action selected\".   In that case, either the actual payment amount needs to be decreased or another order/invoice to be paid needs to be selected.</li> <li>If the Actual Payment is less than the Expected Payment, the amount remaining can be left as:</li> <li>an underpayment, that means registering a partial payment where the remaining debt will be paid afterwards by registering a new payment in</li> <li>or can be written off, if that is selected, it means registering a partial payment where the remaining debt is not going to be paid, in this last case:<ul> <li>the customer's invoice is set as fully paid</li> <li>the invoice posting to the ledger settles the total customer receivable amount</li> <li>while the payment posting to ledger uses the account Write-off amounts to post the amount written-off.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#processing-a-payment","title":"Processing a payment","text":"<p>There are two options available while processing a payment received created in this window:</p> <ul> <li>Process Received Payment(s)</li> <li>or Process Received Payment(s) and deposit.</li> </ul> <p>Both options above process the received payment in, but the second one also creates the corresponding \"Deposit\" transaction in the Financial Account used.</p> <p>This last option is the only one shown if the payment method used and assigned to the financial account where the money is going to be deposited to is configured as \"Automatic Deposit\" = Yes.</p> <p>Besides:</p> <ul> <li>A system message displays the created payment's number</li> <li>Payment summary information is reflected in the Status Bar of the Payment In window.</li> <li>The Description field is updated with paid Invoice and Order numbers and the amount left as credit</li> <li>Payment detail records are introduced in the Lines tab.</li> <li>This process also updates the Payment In Plan and Payment Monitor information of all the documents involved.</li> <li>The Payment Status changes to Awaiting Execution when an Automatic Execution Type is defined or to Payment Received if the execution is Manual.   If there is an execution process defined, it can be run by clicking the \"Execute Payment\" button. The information will appear in the Execution History tab.</li> </ul> <p>Note that there is no need to process:</p> <ul> <li>customer's payments received in the Sales Invoice window as those are already processed in there</li> <li>or G/L item's payments received in the G/L Journal window as those imply the automatic processing of the payment received.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reactivating-a-payment_1","title":"Reactivating a payment","text":"<p>An already processed payment with status \"Payment Received\" or \"Awaiting Execution\" can be Reactivated. This option allows the user to edit wrong payment data or to delete a wrongly created payment.</p> <p>\"Reactivate\" button allows the user to do what is explained above, as two different actions can be selected:</p> <ul> <li>Reactivate: This option reactivates the payment, keeping the payment lines.   Once the payment is reactivated this way, the user can easily modify the payment information by using the button \"Add Details\" and process it once again.</li> <li>Reactivate and Delete lines: This option reactivates the payment and removes all the payment lines.   This option is the one to use if the payment was wrongly created, therefore it has to be removed completely.   Once the payment is reactivated this way, the user can delete the payment header without the need of deleting the payment lines first.</li> </ul> <p>An already processed and deposited payment with status \"Deposited not Cleared\" can be as well \"Reactivated\" as described above, but once the corresponding deposit transaction has been deleted from the financial account.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#posting-a-payment_1","title":"Posting a payment","text":"<p>A payment received and processed in the Payment In window can be posted if the payment method used while creating the payment allows the user to do so once assigned to the financial account through which the payment is received. If that is not the case, Etendo shows a warning : \"Document disabled for accounting\".</p> <p>A payment received posting looks like:</p> Account Debit Credit Upon Receipt Use the \"In Transit Payment IN Account\" i.e. Payment amount Customer Receivables Payment amount <p>The posting will be different when the amount comes partially or totally from a debt classified as doubtful.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#voiding-a-payment_1","title":"Voiding a payment","text":"<p>An already processed payment with status \"Awaiting Execution\" can be \"Voided\". The process button \"Reactivate\" allows the user to do that but only for payments in status \"Awaiting Execution\".</p> <p>Info</p> <p>Remember that a payment can get an awaiting execution status if the payment method used and assigned to the financial account is set up to have an automatic \"Execution Type\" and also the checkbox \"Deferred\" is selected.</p> <p>Void action sets the payment line/s as \"Canceled\" which means that the document (order or invoice) is actually not paid therefore, a new payment can be created or added.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#credit-payments_1","title":"Credit payments","text":"<p>It is not possible to generate credit on a payment which is not related to a single customer, therefore generated credit feature requires:</p> <ul> <li>to select a business partner (or customer) in the field \"Received From\" of the Payment In window.</li> <li>and enter the amount to be left as credit in the field \"Amount\" of the Payment In window.</li> </ul> <p>The creation of a credit payment requires not to select any document to pay in the \"Add Payment\" window which is shown after pressing the process button \"Add Details\", but to leave the amount to be used later.</p> <p></p> <p>A credit payment is going to be available for the customer after processing a payment as above.</p> <p>This credit payment specifies the generated credit amount in the \"Description\" field of the credit payment header.</p> <p>Later on, the available credit generated for that customer can be used for further payments:</p> <ul> <li>in the \"Add Payment\" window, once a new payment is created for that customer in the payment in window by just selecting a line and setting the amount in credit to use grid.</li> </ul> <p></p> <ul> <li>or in the \"Select Credit Payments\" window which is automatically shown upon completion of a new customer's invoice.</li> </ul> <p>Then, the \"Description\" field of the credit payment header will also specify the transactions/documents where the credit was used.</p> <p>The Use Credit Source tab of the payment in window shows the credit payment used to pay a customer's document (order, invoice or G/L item) payment.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payments-in-multiple-currencies_1","title":"Payments in multiple currencies","text":"<p>Etendo allows the user to receive payments in a different currency than the financial account currency.</p> <p>In order to do so, the payment method assigned to the financial account used to receive the payment needs to be configured to allow so, that implies to select the check-box \"Receive Payments in Multiple Currencies\".</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#prepayments-exceeding-the-invoice-amount-to-pay_1","title":"Prepayments exceeding the invoice amount to pay","text":"<p>Etendo allows the user to prepay by adding payments to the orders. The sales invoice created from the order will inherit the payment done for the order.</p> <p>It can happen that the actual prepaid amount exceeds the invoice amount to pay, therefore the sales invoice remains as \"Payment Complete\" = \"No\" until</p> <ul> <li>either a \"negative\" payment in is created to reflect that the organization is paying back to the customer the difference, so final payment balance equals the sales invoice amount</li> <li>or a credit payment is created to be later on used while booking the payment of another sales invoice from the same customer.   This credit payment needs to be created as a new payment in for a 0.00 amount and related to the sales prepaid invoice, that way the prepaid invoice is set as \"Payment Complete\" = \"Yes\".</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#lines_2","title":"Lines","text":"<p>The lines tab contains a list of the documents paid by the payment.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#execution-history_1","title":"Execution history","text":"<p>The execution history tab shows information about the history of the payment execution attempts.</p> <p>For some payment types, some additional steps are needed. For example, a received payment with a check that needs to be filled in with the customer's check number.</p> <p>In that case, the payment method linked to the payment needs to be configured to require an \"Automatic\" Execution Type process.</p> <p>All of the above implies an additional step to take in the Payment In window, which is to execute the payment by using the process button \"Execute Payment\".</p> <p>This process button is only shown in case of payment/s linked to an automation execution process for which the check-box \"Deferred\" is selected.</p> <p>If the checkbox \"Deferred\" is not selected, the additional step is still required, but it will be automatically executed without any end-user action.</p> <p>The Execution History tab is a read-only tab which shows information about the execution of the payment such as the execution date, obviously once the payment has been executed.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#exchange-rates_1","title":"Exchange rates","text":"<p>The exchange rate tab allows the user to enter an exchange rate between the organization's general ledger currency and the currency of the payment received to be used while posting the payment to the ledger.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#used-credit-source_1","title":"Used credit source","text":"<p>A credit payment can be used to settle more than one document payment. This table tracks the documents where a credit payment has been used.</p> <p>The creation of a \"Credit\" payment is already explained in the Credit Payments section of this article, same as how a \"Credit\" payment or available customer's credit will appear on future customer's payments.</p> <p>This read-only tab shows the credit payment used to pay a customer's document (order, invoice or G/L item) payment.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-removal_1","title":"Payment Removal","text":"<p>The aim of this functionality is to delete and reactivate payments in an agile and easy way. Also, it allows eliminating and reactivating bank transactions and reconciliations.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>From this window, it is possible to delete payments by selecting the corresponding record and then clicking on the Remove Payment button. On the other hand, it is possible to reactivate payments from the same window with the \"Advanced Reactivation\" button. This functionality allows the user to reactivate the payment without deleting manually its associated transactions, which is necessary if using the core button \"Reactivate\". This will return the payment to \u201cAwaiting Payment\u201d status and new payment details can be added.</p> <p>In both cases:</p> <ul> <li> <p>If the payment is included in the financial account, i.e., if it is in Deposited/Withdrawn not cleared status, the transaction in it will also be deleted (Financial account window &gt; Transaction tab).</p> </li> <li> <p>If the payment is reconciled through an automatic method, then in addition to the transaction in the financial account, the line of the bank statement to which it was linked (Financial Account window &gt; Imported Bank Statements) and the corresponding line of the bank reconciliation (Financial Account &gt; Reconciliations) will be deleted.</p> </li> </ul> <p>Info</p> <p>If the payment is posted, the accounting entry will be deleted.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#bulk-posting_1","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#advanced-business-partner-settlement_1","title":"Advanced Business Partner Settlement","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>From the Payment In window, it is possible to create a settlement by clicking on the Add Details button. In the pop-up window, Etendo shows a list of invoices to be settled each one with its corresponding invoice number, here the user is able to select the corresponding invoice or invoices to net. First, set the Actual Payment amount to be paid and then, select the invoice/s to create a settlement and define the corresponding amount to be paid from the/each invoice.</p> <p></p> <p>From the Invoice From Compensation tab, select the purchase invoice/s that will be used to pay and set the needed amount from the invoice/s to be netted.</p> <p>Below that, in the Totals tab, Etendo shows the total reference amounts to be netted.</p> <p></p> <p>After clicking the button Done, the system nets the invoices and credits for the corresponding business partner and creates a settlement record.</p> <p></p> <p>The settlement record is registered in the Business Partner Settlement window where the lines for the invoice/s (sales and purchase) used to net will be shown.</p> <p></p> <p>Info</p> <p>For more information, visit the Business Partner Settlement module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#advanced-bank-account-management_1","title":"Advanced Bank Account Management","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Bank Account Management module of the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This module includes the Bank account column to the Add details pop-up window to be able to filter possible payments by bank account.</p> <p>Info</p> <p>For more information, visit the Advanced Bank Account Management user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#financial-account","title":"Financial Account","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Financial Account</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_6","title":"Overview","text":"<p>A Financial Account represents an account at a financial institution such as a bank account, a credit card issuer, an electronic payment service, as well as a cash or petty cash register.</p> <p>Etendo allows the user to create as many Financial Accounts as required by the organization in the financial account window which therefore is used to record monetary transactions such as invoice payments, bank fees, credit card charges, etc.</p> <p>Payment obligations and amounts due from customers are created in the Purchase and Sales invoice windows. Collections from customers and payments to suppliers for these invoices, however, are normally recorded in the Financial Account window or in the Payment In and Payment Out windows.</p> <p>Warning</p> <p>It is very important to properly define every parameter of each Financial Account. During your Financial Account setup process, you will need information like: the bank account information, the payment methods allowed, the bank account currency/ies, the accounting information, etc.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#account","title":"Account","text":"<p>The financial account window contains essential information such as the bank account number and allows the user to perform a set of processes such as to add deposit or withdrawal transactions to the financial account or to import and match a bank statement file.</p> <p></p> <p>The essential financial account information to be filled in the top section of the financial account window is:</p> <ul> <li>The Name and a Description of the account.</li> <li>The Currency of the account.</li> <li>The account Type: There are two account types: Bank and Cash.   Depending on the type selected, the required information to enter changes. There is no need to fill in the bank account information if the account type selected is \"Cash\".   It is possible to define additional account types by extending the List Financial Account Type.</li> <li>Whether this is the Default account to be used in transactions or not. When invoices, orders and other documents including a Financial Account are created, this will be the one shown by default.</li> <li>The Business Partner associated to this bank account. For example, the Financial Institution holding the account. This information is used for accounting purposes. Location address related to the business partner is just visual information, loaded when the business partner is selected.</li> <li>The Initial Balance: In most cases, the business is already up and running at the time Etendo is implemented. This field allows the user to initialize the initial balance of each Financial Account by providing the real balance of the cash / bank account as it was on a date of the last reconciliation. Later on, this field value is used as a Starting / Beginning Balance in the first reconciliation of this Financial Account in Etendo. This field is only editable when creating the Financial Account.</li> <li>The Current Balance: is the balance of the Financial Account as per Etendo records. It is calculated as the sum of the Initial Balance and every Financial Account transaction. This field is placed in the Status Bar.</li> <li>The Matching Algorithm to be used during the reconciliation process.</li> <li>If no matching algorithm is selected in that field, it is not possible to import and then match a bank statement file but to Reconcile the account transactions.</li> <li>If a matching algorithm such as the Standard matching algorithm is selected that allows the user to use the Import Statement process. This process allows the user to import data from a file to the Imported Bank Statements tab, and then use the Match Statement process to match the account transactions with the imported bank statement lines. This matching algorithm supports \"G/L item transactions\" recognition.</li> <li>There is another algorithm delivered as a module named Advanced Matching Algorithm. This module allows Imported Bank Statement lines to be matched not only with the existing financial account transactions but also with payments, invoices or orders. If no transaction document of that type is found, it registers a credit payment for the Business Partners to be used later on. This matching algorithm supports the automatic creation of payments and financial account transactions (deposits and withdrawals), including the creation of \"G/L item transactions\".</li> <li>The Funds Transfer Enabled is used to enable/show funds transfer button process. By default, every financial account is set as enabled.</li> </ul> <p>The next section Bank Account is visible only for accounts of the type Bank and are used to specify the bank account number. This section includes information such as:</p> <ul> <li>The Generic Account No - a generic account number to identify the bank account can be introduced here. This field must be mandatory set in case either the Use Generic Accoun No. or Use SWIFT + Generic Account No. is selected at the \"Bank Account Format\" field.</li> <li>The IBAN - The International Bank Account Number (IBAN) is an international standard for numbering bank accounts.   The IBAN consists of a two letter ISO 3166-1 country code, followed by two check digits, and up to thirty alphanumeric characters for the domestic bank account number, called the BBAN (Basic Bank Account Number). This field must be mandatory set in case the Use IBAN option is selected at the \"Bank Account Format\" field. The IBAN code will be automatically validated when inserting/updating the record, taking into account the rules for the country bank defined.</li> <li>The SWIFT Code - Corresponds to the ISO 9362 international bank code identifier. It must be mandatory set in case the Use SWIFT + Generic Account No. option is selected at the \"Bank Account Format\" field.</li> <li>Country - you can select a country from the list to specify if the bank account is a domestic bank account or a foreign bank account.</li> <li>Bank Account Format - List that contains all the possible values for generating the Displayed Account Number, which will be later on used by other reports or processes to get the account identifier. Possible values are:</li> <li>Use Generic Account No.</li> <li>Use IBAN</li> <li>or Use SWIFT + Generic Account No.</li> </ul> <p>Info</p> <p>Note that other options can be added by other modules that extend the supported Bank Account Format.</p> <p>More information section can include information such as:</p> <ul> <li>The Type Write-off Limit field, which allows the user to define different type of write-off limits for a financial account.\u00a0   This field is displayed when the \"Write-off limit\" property value is set to \"Y\" in the Preference window.</li> <li>The only option currently available is \"Amount\"</li> <li>And the Write-off Limit Value for the Write-off limit in a payment. When the type selected is Amount, the value holds the amount on financial account currency.   This field is displayed when the \"Write-off limit\" property value is set to \"Y\" in the Preference window.</li> </ul> <p>Let's take for instance the setup of a \"Write-off Limit\" amount of 1,00 $ for a given financial account.</p> <p>While registering a customer's payment in the Add Payment window, the system will not allow the user to write off an amount above the write-off limit amount defined.</p> <p>The same applies to supplier's payments created by using the Add Payment window or the Payment Proposal feature.</p> <p>The financial account window allows the user to perform the actions listed below:</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#transaction-tab","title":"Transaction Tab","text":"<p>The transactions of a financial account can be of two types:</p> <ul> <li>Deposit transactions in the case of receiving whatever document type (invoice, order, G/L item or fee) payment in</li> <li>or Withdrawal transactions in the case of making a payment out of whatever document type (invoice, order, G/L item or fee)</li> </ul> <p>Those two transaction types can be created in three ways:</p> <ul> <li>automatically, if the payment method used to pay a document (and assigned to a given financial account) is configured to get that:</li> <li>the supplier's payments once processed in the Payment Out window are automatically withdrawn from the financial account</li> <li>the customer's payments once processed in the Payment In window are automatically deposited in the financial account.</li> <li>or the \"G/L Item Payments\" once created in a G/L Journal are automatically either deposited to/withdrawn from the financial account.</li> <li>in a batch, by adding several payments as transactions through the Add Multiple Payments process window</li> </ul> <p>or manually, by creating a new record in the transaction tab of the financial account window.</p> <p></p> <ul> <li>Fields to note in transaction tab:</li> <li>Transaction Type: The Transaction Type indicates the type of transaction to be submitted. The transaction tab also allows the user to create a \"Deposit\" or a \"Withdrawal\" transactions based on a \"G/L Item\" transaction type or on a \"Payment\".<ul> <li>Bank fee</li> <li>BP Deposit</li> <li>BP Withdrawal</li> </ul> </li> <li>Transaction Date: The Transaction Date field defines the date of the transaction being processed.</li> <li>Accounting Date: The date this transaction is recorded for in the general ledger.</li> <li>Payment: Payment selector</li> <li>G/L Item: General ledger item selector</li> <li>Currency: Indicates the currency to be used when processing this document</li> <li>Deposit Amount: amount in the case of receiving a payment</li> <li>Withdrawal Amount: amount in the case of make a payment</li> <li>Accounting Dimensions</li> </ul> <p>If creating a \"Bank Fee\" is necessary, select \"Bank Fee\" in \"Transaction Type\" combo, enter a transaction and accounting date and the amount either received in or paid out.</p> <p>Then save and process the transaction.</p> <p></p> <p>To create a new G/L item transaction, select \"BP Deposit\" or \"BP Withdrawal\" in transaction type and select the \"G/L Item\" in the G/L item combo, enter a transaction and accounting date, select a G/L Item, enter the amount either received in or paid out and save and process the transaction.</p> <p></p> <p>If the user needs to create a new payment transaction, it is allowed to select a created payment or create a new payment from the payment selector.</p> <ul> <li>If the payment is created, the user should choose the payment in the payment selector.</li> </ul> <p></p> <p>Description and amount fields in the transaction tab will be automatically filled and to complete the transaction it is necessary to save and process.</p> <p>If creating a payment deposit transaction is necessary, the user should click '+' button' in the payment selector and an add payment popup will be opened. \"Received In\" needs to be selected in the field \"Document\". This window allows to:</p> <ul> <li>select already created and processed payments</li> <li>use the field \"Received From\" to narrow down the searching of documents to pay</li> <li>use the business partner's \"Available Credit\" if any, selecting the credit in credit grid</li> <li>enter the \"Actual Payment\" amount received</li> <li>enter a \"Payment Date\"</li> <li>select the \"Transaction Type\" to pay</li> <li>use some other filters such as the Order or Invoice \"Document No.\" or the \"Amount From/To\"</li> <li>and finally to enter a \"G/L Item Payment\" if needed, by adding \"GL Items\" in a GL item grid.   Last step is to process the just created payment and get it deposited in the financial account.</li> </ul> <p></p> <p>If creating a payment withdrawal transaction is necessary, the user should click '+' button' in the payment selector and an add payment popup will be opened. In the add payment popup, the option \"Paid Out\" needs to be selected in the field \"Document\". This window allows the user to:</p> <ul> <li>select already created and processed payments</li> <li>use the field \"To Be Paid To\" in order to narrow down the searching of documents to pay</li> <li>use the business partner's \"Available Credit\" if any, selecting the credit in credit grid</li> <li>enter a \"Payment Date\"</li> <li>select the \"Transaction Type\" to pay</li> <li>use some other filters such as the Order or Invoice \"Document No.\" or the \"Amount From/To\"</li> <li>and finally to enter a \"G/L Item Payment\" if needed, by adding \"GL Items\" in a GL item grid.   Last step is to process the just created payment and get it deposited in the financial account.</li> </ul> <p></p> <p>Payment selector has applied an explicit filter (current financial account)</p> <p></p> <p>It is possible to add payments for alternative financial accounts by clicking the funnel icon to clear the filters.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#add-multiple-payments","title":"Add Multiple Payments","text":"<p>The \"Add Multiple Payments\" process button allows the user to create and process financial account transactions by selecting several payments at the same time.</p> <p>The payments shown for selection are the ones having a payment status equal to \"Payment Made\" or \"Payment Received\", therefore payments having an \"Awaiting Execution\" payment status for instance will not be shown for selection.</p> <p>By default, the payments shown are the ones originally defined for this financial account. However, the user can remove this filter to show and select payments from other financial accounts.</p> <p></p> <p>Only actions to take are entering a \"Transaction Date\" and selecting as many payments as required at once.</p> <p>Payments selected are then listed as either:</p> <ul> <li>\"BP Deposit\" transactions, in the case of \"Payments Received\"</li> <li>or \"BP Withdrawal\" transactions, in the case of \"Payments Made\"</li> </ul> <p>in the \"Transaction\" tab of the Financial Account.</p> <p>All those new transactions are created as already \"processed\", therefore can either be \"reactivated\" if required or finally \"post\" to the ledger if applicable.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reconcile","title":"Reconcile","text":"<p>The header process button \"Reconcile\" is shown for those financial accounts which do not have a matching algorithm assigned.</p> <p>That button opens the \"Reconciliation\" window.</p> <p>The reconciliation window has three main parts:</p> <ul> <li>the top section which includes overall information such as the financial account being reconciled, the date of the statement to reconcile, the beginning balance (or financial account \"Initial Balance\") and the ending balance as a result of the reconciliation. The ending balance is the last reconciliation balance of the financial account.</li> <li>the middle section which includes a list of the transactions pending to be reconciled, therefore marked as \"Cleared\" \"No\" in the financial account, transaction tab.</li> <li>and the bottom section which includes overall balance information as well as three process buttons \"Save\", \"Reconcile\" and \"Cancel\".</li> </ul> <p>The \"Beginning Balance\" + the amounts \"Received In\" - the amounts \"Paid Out\" need to be equal to the \"Ending Balance\".</p> <p>You can either enter the ending balance or what the statement says and then select the transactions paid out/received in or the other way around.</p> <p>Info</p> <p>It is possible to create a \"G/L item\" transaction in case there are some minor differences between what the statements say and the recorded transactions pending to be reconciled.</p> <p></p> <p>The \"Save\" process button saves a \"Draft\" of the reconciliation in the Reconciliations tab of the financial account and marks the transaction/s selected as \"Cleared\" as also \"Cleared\" in the financial account, transaction tab.</p> <p>It is always possible to reopen a saved reconciliation and modify whatever it is needed.</p> <p>Info</p> <p>Note that there can only be one reconciliation in draft status in a financial account.</p> <p>The \"Reconcile\" process button reconciles the transactions marked as cleared, therefore the reconciliation is processed and its status changes to \"Completed\".</p> <p>Finally, the \"Cancel\" process button just closes the reconciliation window and removes the ending balance entered, if any.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#import-statement","title":"Import Statement","text":"<p>The header process button Import Statement is shown for those financial accounts which have a matching algorithm assigned. This process button allows the user to import a bank statement which therefore is saved in the Imported Bank Statements tab of the financial account, and in the Bank Statement Lines sub-tab.</p> <p>Info</p> <p>Etendo currently delivers the Standard matching algorithm. The behavior of the standard matching algorithm is explained in the next section \"Match Statement\".</p> <p>Info</p> <p>Etendo allows the user to import a bank statement if an Import Bank File Format module has been previously installed. </p> <p>Etendo currently delivers below listed import bank file modules:</p> <ul> <li>OFX Bank Statement Format</li> <li>CSV Generic Bank Statement Importer</li> <li>WePay CSV Importer</li> <li>and the Spanish one Cuaderno 43</li> </ul> <p>Depending on the module installed for this purpose, it will be possible to import bank statement files in OFX format or CSV format among others.</p> <p>The \"Import Statement\" process button opens the \"Import Bank File\" window.</p> <p></p> <p>This window allows to:</p> <ul> <li>select a bank statement file</li> <li>and select the file format of the selected bank statement file to import.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#match-statement","title":"Match Statement","text":"<p>Once a bank statement file has been imported, the button \"Match Statement\" opens a new window where the imported bank statement lines and the existing financial transactions are displayed. By default, there is an implicit filter which hides the bank statement lines that are already matched.</p> <p></p> <p>Before opening the window, a pop up is shown, asking whether the algorithm should run against unmatched bank statement lines or not. If so, the algorithm will try to find a match for all the unmatched bank statement lines. If not, the matching window will open and the user should do the matches manually.</p> <p></p> <p>This window has two column groups divided by the Match column.</p> <ul> <li>Imported Bank Statement Lines on the left side. This section list the bank statement deposits and the payments</li> <li>Date: that is the date of the movement made in the bank account.</li> <li>Business Partner: that is the business partner reported into the bank statement line.</li> <li>Reference No.: that is the reference of the bank statement, if any.</li> <li>Amount: that is the amount reported into the bank statement line, subtracting the Amount OUT from the Amount IN</li> <li>Transaction in Etendo on the right side. This section lists the financial account transactions which match the bank statement lines:</li> <li>Match: it provides 3 buttons to operate with the bank statement lines (explained later on). Besides, the column can be used to filter by the matching status (Yes to show cleared lines, No to show not cleared lines).</li> <li>Affinity: when the matching is automatically done by the Matching Algorithm, this field shows the affinity level of the match. If the user manually associates a transaction, this field is empty. The affinity is higher when the matching criteria are the same in both, the financial account transaction and the bank statement line.</li> <li>Matching Type: the type of matching</li> <li>Transaction Date: that is the date when the transaction was created in the financial account.</li> <li>Transaction Business Partner: that is the business partner of the transaction.</li> <li>Transaction Amount: that is the amount of the transaction, subtraction the Withdrawal Amount from the Deposit Amount</li> </ul> <p>As already mentioned, the matching algorithm available is the \"Standard matching algorithm\".</p> <p>The Standard matching algorithm can be configured to match by different set of criteria:</p> <ul> <li>Match BP Name: This option makes the matching strong if the business partner name of the bank statement line and the business partner of the transaction matches.</li> <li>Match Transaction Date: This option makes the matching strong if the transaction date of the bank statement line and date of the transaction matches.</li> <li>Match Reference: This option makes the matching strong if the reference of the bank statement line and the reference of the transaction matches.</li> </ul> <p>All the criteria above can be selected, or just some of them.</p> <p>Info</p> <p>Not matched transactions can be matched manually.\u00a0</p> <p>Let us take for instance the starting situation shown below where there are three bank statement lines which do not match:</p> <p></p> <ul> <li>the \"magnifying glass\" icon helps to search transactions to match as it opens a new window which shows the financial account transactions registered the same day as the bank statement line or before. Several transactions can be selected at the same time to match with a single bank statement line. In that case, the system automatically splits the original bank statement line as many times as transactions are selected.</li> </ul> <p></p> <p>Back to our example, there is no transaction which matches the second transaction of the bank statement file (the one with an amount equal to 1.500,00). If there was a match, it could be selected by using as well the \"magnifying glass\" icon.</p> <ul> <li>the \"+\" icon helps to add transactions to the financial account (and even create a payment to deposit or withdraw from the financial account) as it opens the \"Add Transaction\" window.</li> </ul> <p></p> <p>The image above shows that there was a \"Received In\" transaction pending to be created in the financial account. Once created it is matched.</p> <p>Back to our example the current situation is shown in the image below:</p> <p></p> <p>There is only one transaction pending to be matched. The \"magnifying glass\" icon helps again to search for transactions to match.</p> <p>If a transaction that almost matches is selected, Etendo shows a message which informs that the transactions do not fully match therefore a partial match can be performed. The user can set the 'Match Statement: hide partial match confirmation popup' to Y for the Financial Account window to hide this confirmation message in the future.</p> <p>Info</p> <p>This last option will require to log out and log in.</p> <p></p> <p>This action matches the bank statement line and creates a new line pending to be matched for the difference.</p> <ul> <li>the ICON \"unmatch\" icon unmatches the transaction linked to the individual record. The user can also select multiple records and unmatch all of them in a batch using the Unmatch Selected button.</li> </ul> <p>The user is able to force both reactivating and processing reconciliations in case some mistake was made, to permit reactivating old reconciliations to be able to correct that data.</p> <p>This should not be the standard procedure, as there should be an exercise of reviewing data before validating/processing a reconciliation. In any case, errors happen and to be able to solve the situation without a big impact for the user, there are now these two buttons as advanced features.</p> <p>Info</p> <p>This process will impact starting and ending balance of subsequent documents whenever ending balance changes for the reconciliation being edited.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#funds-transfer","title":"Funds transfer","text":"<p>Input fields:</p> <ul> <li>Transaction date:</li> <li>It is mandatory</li> <li>This date is used for the records that this process creates. Transaction and accounting date</li> <li>Deposit to: This combo box is displayed with all the financial accounts that belong to the organization tree of the financial account that is selected and that have the Funds Transfer flag enabled</li> <li>G/L item: Default value is set from Default G/L Item for Funds Transfer configured in Financial Account's organization or its parent organization. The user can overwrite this parameter. This combo box is displayed with all the G/L Items that belong to the org tree of the financial account that is selected.</li> <li>Deposit amount: Mandatory</li> <li>Currency from: Not editable. Currency of the financial account selected</li> <li>Currency to: Not editable. Currency of the financial account to</li> <li>Rate: The conversion rate from one currency to other</li> <li>It is null by default</li> <li>It is shown just when currencies are different</li> <li>In case the user leaves this value as null the system uses the conversion rate configured in the system for that date. If there is nothing defined then an error is raised</li> <li>Bank fee:</li> <li>Not marked by default</li> <li>When being checked two more fields are shown<ul> <li>Bank fee from and Bank free to</li> </ul> </li> <li>Description:</li> <li>Description is set as \"Funds Transfer Transaction\" by default. The user can overwrite the description if needed.</li> </ul> <p></p> <p>Process:</p> <p>Being in the account tab and selecting the corresponding financial account:</p> <ul> <li>It creates a new record in the transaction tab for that financial account:</li> <li>Transaction type: BP Withdrawal</li> <li>Transaction date: The one selected in the popup</li> <li>Accounting date: The one selected in the popup</li> <li>G/L items: The one selected in the button</li> <li>Description: G/L Item: the one selected in the popup</li> <li>Currency: The one of the financial account</li> <li>Withdrawal Amount: The amount entered in the button</li> <li>Processed: Y</li> <li>Organization: the same as the financial account</li> <li>Status: Withdrawn not cleared</li> <li>If Bank fee from is filled, it will create another record in the transaction tab for that financial account:</li> <li>Transaction type: Bank fee</li> <li>Transaction date: the one selected in the popup</li> <li>Accounting date: the one selected in the popup</li> <li>Currency: The one of the financial account</li> <li>Withdrawal Amount: The amount entered (Bank fee from)</li> <li>Processed: Y</li> <li>Organization: the same as the financial account</li> <li>Status: Withdrawn not cleared</li> <li>It creates a new record in the transaction tab for the deposit to financial account</li> <li>Transaction type: BP Deposit To</li> <li>Transaction date: The one selected in the button</li> <li>Accounting date: The one selected in the button</li> <li>G/L Items: The one selected in the button</li> <li>Description: G/L Item: the one selected in the button</li> <li>Currency: the one of the financial account</li> <li>Deposit Amount: The amount entered in the button</li> <li>Processed: Y</li> <li>Organization: The same as the financial account</li> <li>Status:Deposit not cleared</li> <li>Origin financial account: Point to the transaction created for the Financial Account selected to open the button</li> <li>If Bank fee to is filled, it creates another record in the transaction tab for that financial account</li> <li>Transaction type: Bank fee</li> <li>Transaction date: The one selected</li> <li>Accounting date: The one selected</li> <li>Currency: The one of the financial account</li> <li>Withdrawal amount: Bank fee to</li> <li>Processed:Y</li> <li>Organization: the same as the financial account</li> <li>Status: Withdrawn not cleared</li> <li>Origin financial account: It points to the financial transaction that triggered the transaction</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#transaction","title":"Transaction","text":"<p>This tab shows all the transactions of the financial account.</p> <p>As already explained, those transactions can either be:</p> <ul> <li>\"Deposits\" coming from payments received in</li> <li>or \"Withdrawals\" as a consequence of the payments made out</li> </ul> <p>The transactions shown in this tab can be:</p> <ul> <li>manually created by adding a new record in this tab</li> <li>created &amp; processed as a batch by selecting several payments at the same time through the Add Multiple Payments process window</li> <li>or automatically created whenever the actions listed below are taken while processing a payment in/out, either in the sales/purchase invoice windows or in the payment in/out windows.</li> <li>Process Made Payment(s) and Withdrawal</li> <li>Process Received Payment(s) and Deposit</li> </ul> <p>Some fields to note are:</p> <ul> <li>G/L item - this field/column is populated if the payment is related to a G/L item payment</li> <li>Foreign Amount - this field/column is populated if the payment was received or made in a currency different from the financial account currency.</li> </ul> <p>Info</p> <p>It is possible to allow the user either to receive or make payments in multiple currencies (foreign currency), while configuring the payment methods assigned to a given financial account.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#exchange-rates_2","title":"Exchange rates","text":"<p>This tab allows the user to define an exchange rate to use while posting the financial account transaction to the ledger whenever the currency of the financial account is not the same as the general ledger currency.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#accounting-history","title":"Accounting History","text":"<p>This tab shows the accounting history of a given transaction.</p> <p></p> <p>As shown in the image above, this tab shows the general ledger entries created while posting/unposting a given transaction to the ledger.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#accounting-configuration","title":"Accounting Configuration","text":"<p>The accounting configuration tab is used to define the accounts of a General Ledger to use while posting transactions such as a bank fee or a deposit.</p> <p></p> <p>As shown in the image above, the accounts listed below can be configured for a financial account and general ledger.</p> <p>General section:</p> <ul> <li>Bank Revaluation Gain Account, this account is used to credit/debit an exchange rate gain:</li> <li>The gain corresponding to an exchange rate decreased while making a payment is credited in this account.</li> <li>The gain corresponding to an exchange rate increase while receiving a payment is credited in this account.</li> </ul> <p>Info</p> <p>Remember that it is possible to receive payments and to make payments in a currency different to the financial account currency.</p> <p>In case of a \"Cash\" Financial Account type, the ledger account used to credit an exchange rate gain is the \"Bank Revaluation Gain\" account of the Defaults tab of the General Ledger Configuration.</p> <ul> <li>Bank Revaluation Loss Account used to debit/credit an exchange rate loss :</li> <li>The loss corresponding to an exchange rate increase while making a payment is debited in this account.</li> <li>The loss corresponding to an exchange rate decrease while receiving a payment is debited in this account.</li> </ul> <p>In case of a \"Cash\" Financial Account type, the ledger account used to credit an exchange rate gain is the \"Bank Revaluation Loss\" account of the Defaults tab of the General Ledger Configuration.</p> <ul> <li>Bank Fee Account used to debit/credit fee expenses/revenues</li> </ul> <p>The checkbox Enable Bank Statement allows the user to post Bank Statements. If selected, two additional fields are shown:</p> <ul> <li>Bank Asset Account</li> <li>Bank Transitory Account</li> </ul> <p>As a bank statement posting is a transitory posting until the transactions have been finally cleared, the \"Bank Transitory Account\" must be the same account as the one used upon clearing.</p> <p>As soon as a \"Bank Transitory Account\" is defined, the system shows a warning stating that \"When posting Bank Statements, the Bank Transitory Account should match the account used upon clearing for all payment methods in order to ensure properly balanced accounting. Do you want to propagate this value to all payment methods?\"</p> <ul> <li>If the end-user presses (YES), the system fills-in the Bank Transitory Account selected in the field \"Cleared Payment Account\" of the \"Payment IN\" and \"Payment OUT\" sections.</li> </ul> <p>Payment IN / Payment OUT sections:</p> <p>These sections of the accounting configuration tab are closely related to another tab of the financial account window, the Payment Method tab.</p> <p>The Payment Method tab allows the user to define which step of the payment workflow can be posted to the ledger. That can be defined for each payment method assigned to the financial account</p> <p>The \"Accounting Configuration\" tab allows the user to select the ledger accounts to use while posting in transit payments in/out, deposit/withdrawal transactions or reconciliations linked to a given payment method.</p> <p>It is important to remark that:</p> <ul> <li>None of the fields of the \"Payment In\" and \"Payment Out\" section are mandatory, as the accounting process can be different depending on the payment method configuration.</li> <li>However, if any of those fields is \"empty\" for instance the \"Deposit Account\", while it has been configured for a given payment method assigned to the financial account that the \"Deposit\" transaction needs to be posted, the posting process will generate an error.</li> </ul> <p>More in detail:</p> <p>Payment In section:</p> <ul> <li>In Transit Payment Account - This is the account which would be used in the first step, when the receipt of the payment is registered in the \"Payment In\" window.   The Payment Method used should have the value \"In Transit Payment Account\" defined in the field \"Upon Receipt use\".</li> <li>Deposited Payment Account - This is the account which would be used to post the second phase that is the \"Deposit\" of the receipt in the Financial Account. The Payment Method used should have the value \"Deposited Payment Account\" defined in the field \"Upon Deposit use\".</li> <li>Cleared Payment Account - This is the account which would be used to post the third step that is the reconciliation of the deposit. The payment method used should have the value \"\"Cleared Payment Account\" defined in the field \"Upon Reconciliation use\".</li> </ul> <p>Payment out section:</p> <ul> <li>In Transit Payment Account - This is the account which would be used in the first step, when the payment is made in the \"Payment Out\" window. The Payment Method used should have the value \"In Transit Payment Account\" defined in the field \"Upon Payment use\".</li> <li>Withdrawal Payment Account - This is the account which would be used to post the second phase that is the \"Withdrawal\" of the payment in the Financial Account. The Payment Method used should have the value \"Withdrawal Payment Account\" defined in the field \"Upon Withdrawal use\".</li> <li>Cleared Payment Account - This is the account which would be used to post the third step that is the reconciliation of the withdrawal. The Payment Method used should have the value \"Cleared Payment Account\" defined in the field \"Upon Reconciliation use\".</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-method","title":"Payment Method","text":"<p>This tab lists all the payment methods assigned to the financial account. A payment can either be deposited in or withdrawn from the financial account if the payment method used is assigned to the financial account.</p> <p>Every Financial Account can have more than one payment method assigned, payment methods such as \"Check\", \"Wire Transfer\", \"Cash\".</p> <p>The fact of assigning a payment method or a set of payment methods to a given financial account means that it is possible to manage through a given financial account only those payments linked to any of the payment methods assigned to that financial account.</p> <p>Payment Methods are created and configured in the Payment Method window. Once created and configured, there can be assigned to a financial account in this tab. The way to do that is:</p> <ul> <li>Click the 'Payment Method' tab of the financial account</li> <li>Create a new record</li> <li>From the 'Payment Method' drop down list, select a payment.</li> <li>This action automatically populates the default configuration of the payment method.</li> <li>Change the default configuration if required</li> <li>Any change to that configuration does not change the default configuration of the payment method because it only applies to the way that payment method is going to behave while being used for the financial account selected.</li> </ul> <p>In this tab, there is the advanced feature (hidden by default) called invoice paid status control, this functionality provides a configuration option to be able to decide which status for each payment determines whether an invoice is paid or not.</p> <ul> <li>Invoice paid status combo: Sets the state from which is considered an invoice as paid.</li> </ul> <p>This combo can be set at payment method level (payment in and payment out) in each financial account. By default this combo is set as payment received or payment made, therefore we get the usual behavior of Etendo.</p> <p>Info</p> <p>For additional information about payment method configuration, visit the Payment Method article.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#imported-bank-statements","title":"Imported Bank Statements","text":"<p>The tab lists the imported bank statement files as well as the bank statements created manually.</p> <p></p> <p>There are key fields to note:</p> <ul> <li>Document No.: that is the imported bank statement number which is provided by the corresponding document sequence.</li> <li>Document Type: that is the \"Bank Statement File\" document category (not \"Bank Statement\").</li> <li>Name: that is the name given by Etendo which is a combination of the transaction dates and the amount in/out difference.</li> <li>Import Date: that is the date when the file was imported.</li> <li>Transaction Date: that is the date to use while posting the bank statement to the ledger.</li> <li>File name: that is the name of the file imported</li> </ul> <p>An imported bank statement file can be \"Reactivated\" as once imported it gets processed automatically.</p> <p>Once reactivated, the bank statement header information as well as the bank statement lines can be changed as required.</p> <p>Once done, the bank statement can be Processed once again.</p> <p>A Bank statement can be posted if that is enabled in the accounting configuration tab of the financial account.</p> <p>Info</p> <p>If the user is not able to import a bank statement file, it is also possible to create bank statements and bank statement lines manually.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#bank-statement-lines","title":"Bank Statement Lines","text":"<p>This tab lists all the lines of a bank statement.</p> <p>There are key fields to note:</p> <ul> <li>Business Partner Name: this field shows the name of the business partner in the bank statement lines</li> <li>Business Partner: this field shows the business partner found in Etendo by the matching algorithm, if any</li> <li>G/L Item: this field allows to manually enter a G/L Item if it is well known that a bank statement line is related to a G/L transaction. Etendo will recall that a bank statement line text was related to a given G/L transaction next time that a bank statement file is imported.   The G/L item entered here will then be used by the matching algorithm while matching up the bank statement lines with the financial account transactions.</li> <li>Amount OUT: that is the charged amount of the bank statement line</li> <li>Amount IN: that is the received amount of the bank statement line</li> <li>Financial Account Transaction: that is the financial account transaction once matched with the bank statement line, it may be empty when no matching transaction has been found</li> <li>Matching type: that can be \"Manual\" or \"Automatic\" depending on who did the math, either the matching algorithm used or the user.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reconciliations","title":"Reconciliations","text":"<p>The reconciliation tab shows the reconciliations created manually if no matching algorithm is assigned to the financial account as well as the ones created while matching an imported bank statement file otherwise.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#manual-reconciliations","title":"Manual Reconciliations","text":"<ul> <li>As already explained, the process button Reconcile allows the user to manually reconcile existing financial account transactions in the \"Reconciliation\" window.</li> <li>Each reconciliation of that type once saved is also saved in this tab in \"Draft\" status until it is finally reconciled in the \"Reconciliation\" window therefore, its status changes to \"Completed\".</li> <li>It is possible to \"Reactivate\" a reconciliation of that type, therefore it can be changed in the \"Reconciliation\" window and be reconciled from that window once more.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#automatic-reconciliations","title":"Automatic Reconciliations","text":"<ul> <li>In the same way, once a bank statement file has been imported, the bank statement lines can be automatically reconciled in the \"Match using imported Bank Statement Lines\" window accessible from the process button Match Statement.</li> <li>Each reconciliation of that type once saved is also saved in this tab in \"Draft\" status until it is finally reconciled in the \"Match using imported Bank Statement Lines\" window therefore, its status changes to \"Completed\".</li> <li>It is possible to \"Reactivate\" a reconciliation of that type, therefore it can be changed in the \"Match using imported Bank Statement Lines\" window and be reconciled from that window once more.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reconciliations-posting","title":"Reconciliations Posting","text":"<p>A Reconciliation of any type can be posted if the Payment Method used while creating the payment to be reconciled allows the user to do so once assigned to the financial account. If that is not the case, Etendo shows a warning : \"Document disabled for accounting\".</p> <p>A \"Deposit Reconciliation\" posting looks like:</p> <p>a. if the Payment Received was NOT posted in the \"Payment In\" window and the Deposit Transaction was also NOT posted in the \"Financial Account\" window:</p> Account Debit Credit Upon Reconciliation Use the \"Cleared Payment Account\" (i.e) Payment amount Customer Receivables Payment amount <p>b. if the Payment Received was posted in the \"Payment In\" window and the Deposit Transaction was NOT posted in the \"Financial Account\" window:</p> Account Debit Credit Upon Reconciliation Use the \"Cleared Payment Account\" (i.e) Payment amount Upon Receipt Use the \"In Transit Payment IN Account\" (i.e) Payment amount <p>c. if the Payment Received was posted in the \"Payment In\" window or not and the Deposit Transaction was posted in the \"Financial Account\" window:</p> Account Debit Credit Upon Reconciliation Use the \"Cleared Payment Account\" (i.e) Payment amount Upon Deposit Use the \"Deposit Account\" (i.e) Payment amount <p>Info</p> <p>Each posting will be different when the amount comes partially or totally from a debt classified as doubtful. In that case, the posting will be as explained in the Doubtful Debt Run Window</p> <p>A \"Withdrawal Reconciliation\" posting looks like:</p> <p>a. if the Payment Made was NOT posted in the \"Payment Out\" window and the Withdrawal transactions was also NOT posted in the Financial Account window:</p> Account Debit Credit Vendor Liability Payment amount Upon Reconciliation Use the \"Cleared Payment Account\" (i.e) Payment amount <p>b. if the Payment Made was posted in the \"Payment Out\" window and the Withdrawal transactions was NOT posted in the Financial Account window:</p> Account Debit Credit Upon Payment Use the \"In Transit Payment OUT Account\" (i.e) Payment amount Upon Reconciliation Use the \"Cleared Payment Account\" (i.e) Payment amount <p>c. if the Payment Made was posted in the \"Payment Out\" window or not and the Withdrawal transactions was posted in the Financial Account window:</p> Account Debit Credit upon Withdrawal Use the \"Withdrawal Account\" (i.e) Payment amount Upon Reconciliation Use the \"Cleared Payment Account\" (i.e) Payment amount"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reconciliations-reporting","title":"Reconciliations Reporting","text":"<p>Additionally there are two reports which shows information about each reconciliation, those reports can be run from the process buttons:</p> <ul> <li>Reconciliations Details</li> <li>Reconciliation Summary</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#cleared-items","title":"Cleared items","text":"<p>This tab shows the transactions cleared or set as matched in a reconciliation.</p> <p>As soon as either a manual or an automatic reconciliation is \"Saved\" in \"Draft\" status in the Reconciliations tab, this sub-tab allows to see the transactions cleared in the Reconciliation window or match against a bank statement line in the Mach Using imported Bank Statement Lines window.</p> <p>It is not possible to remove the cleared items from this sub-tab but from either the \"Reconciliation\" window or the \"Mach Using imported Bank Statement Lines\" window whenever the reconciliation has been \"reactivated\".</p> <p>Cleared item sub-tab allows to see below information:</p> <ul> <li>the financial account transaction reconciled</li> <li>the payment reconciled</li> <li>the description of the transaction reconciled for instance \"Invoice No:...\"</li> <li>and either the Deposit Amount or the Withdrawal Amount of the cleared transaction.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#accounting","title":"Accounting","text":"<p>The accounting tab is a read-only tab which shows every financial account transaction posting.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-removal_2","title":"Payment Removal","text":"<p>The aim of this functionality is to delete and reactivate payments in an agile and easy way. Also, it allows eliminating and reactivating bank transactions and reconciliations.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#transactions","title":"Transactions","text":"<p>From this window, it is possible to delete and reactivate the transactions included in a financial account.</p> <p>Payments can be found in this instance in Withdrawn not cleared, Deposited not cleared and Payment cleared status, in the latter case the payment is already reconciled, and therefore related to a bank reconciliation and a bank statement.</p> <p>To remove a transaction, select the corresponding record in the Transaction tab and then click on the Remove Transaction button. If the payment is in Deposited not cleared or Withdrawn not cleared status, the process removes the transaction from the financial account, and the payment returns to its previous status. If the status is Payment cleared, the process also removes the related reconciliation line and also the related bank statement line.</p> <p>Note that:</p> <p>If the reconciliation is completed and the rest of the existing reconciliations are also completed, then the reconciliation in question is reopened to remove the matching reconciliation line and closed again. If the reconciliation is completed and there is a reconciliation in Draft status, the draft reconciliation will be closed, the corresponding reconciliation is reactivated, the corresponding reconciliation line is deleted, it will be closed again and the one in Draft status will be reactivated.</p> <p>To reactivate a transaction, select the corresponding record in the Transaction tab and then click on the Reactivate Transaction button. If the payment is in Deposited not cleared or Withdrawn not cleared status, the payment returns to its previous status but will remain associated to the financial account. If the status is Payment cleared, the process also deletes the related reconciliation line and also the related bank statement line.</p> <p>Consider the following cases:</p> <ul> <li>If the reconciliation is completed and the rest of the existing reconciliations are completed, then the reconciliation in question will be reopened to delete the relevant reconciliation line and closed again.</li> <li>If the reconciliation is completed and there is a reconciliation in Draft status, the draft reconciliation is closed, the corresponding reconciliation is reactivated, the corresponding reconciliation line is deleted, it will be closed again and the one in Draft status will be reactivated.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reconciliations_1","title":"Reconciliations","text":"<p>It is possible to delete and reactivate bank reconciliations.</p> <p>The following situations can be possible:</p> <ul> <li>Delete a reconciliation in Completed or Draft status: in this case the corresponding reconciliation is deleted, the bank statement lines associated with it and the payments reconciled in it change their status to Deposited not cleared or Withdrawn not cleared.</li> <li>Reactivate a reconciliation in Completed status. The other existing reconciliations are also in Completed status: in this case the reconciliation is reactivated and its status returned to Draft.</li> <li>Reactivate a reconciliation in Completed status. There is another reconciliation in Draft status: in this case, the reconciliation in Draft status is completed first and the selected reconciliation is reactivated and its new status will be : Draft.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#bulk-posting_2","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button. In the case of the \"Financial Account\" window, this option can be used in three tabs: Transaction, Imported Bank Statements and Reconciliations.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#advanced-business-partner-settlement_2","title":"Advanced Business Partner Settlement","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>Etendo allows performing a settlement from a bank reconciliation. From the Financial Account window, once the bank statements are already imported and processed, the user is able to select the bank statement from the financial account and match it with the invoice to be paid by clicking on the Match Statement button.</p> <p></p> <p>In the pop-up window, Etendo shows a list of invoices to be settled each one with its corresponding invoice number, here the user is able to select the corresponding invoice to net with its Actual Payment amount to be paid.</p> <p></p> <p>From the Invoice From Compensation tab, the user selects the invoice that will be used to pay (either sales or purchase, depending on the invoice previously chosen) and sets the needed amount from the invoice to be netted.</p> <p></p> <p>After clicking the Done button, Etendo opens another pop-up window to show the information for the new settlement to be created for the user to confirm the details by clicking Done.</p> <p></p> <p>The settlement record (payment in and payment out) is also registered in the Business Partner Settlement window where a line for the invoice (sales and purchase) used to net will be shown.</p> <p></p> <p>Info</p> <p>For more information, visit the the Business Partner Settlement module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#payment-execution","title":"Payment Execution","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Payment Execution</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_7","title":"Overview","text":"<p>Payment Execution form allows the user to massively execute deferred payments in an \"Awaiting Execution\" status.</p> <p>The same applies to payments that failed during the execution process due to a paper jam or any other problem occurred due to a connection failure.</p> <p>There are some mandatory filtering options:</p> <ul> <li>the organization</li> <li>the payment method</li> <li>and the financial account</li> </ul> <p>Info</p> <p>Note that the payment method/s used while receiving/making the corresponding payment/s requires a \"deferred\" automatic execution process configured while being assigned and configured for a given Financial Account.</p> <p>and some other available filters such as:</p> <ul> <li>Payment Dates From/To</li> <li>whether the payment is a \"Received In\" payment or a \"Paid Out\" payment</li> </ul> <p>Once the process button \"Search\" is pressed, the payments to execute are shown.</p> <p></p> <p>Once the process button \"Process\" is pressed, a new window is displayed to allow the user to enter the input parameters required such as the check number, for instance if the execution process selected in the payment method used was \"Print Check simple process\".</p> <p>Once the process button \"Execute\" is pressed, the payment changes its status to either \"Payment Made/Payment Received\" or \"Withdrawal not Cleared/Deposit not Cleared\", therefore the next payment can be processed and therefore executed.</p> <p>Note that several payments can be selected to be executed grouped in the same payment run.</p> <p>If that is the case, more than one payment for the same business partner can be paid by the same check number.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#business-partner-settlement","title":"Business Partner Settlement","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Business Partner Settlement</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_8","title":"Overview","text":"<p>This module provides a new document where it is possible to settle debts or credit of business partners that are both customers and providers. When a Business Partner is a Customer and a Provider, it is possible to have credit as both types. But it is not possible to consume a customer credit in a Payment Out document. In the same way, it is not possible to mix purchase or sales invoices on a single payment document. In some scenarios, when a business partner has sales and purchase invoices, it is desirable to cancel both debts without needing a financial transaction.</p> <p>In this document, you have to select the invoices or credit amount that is desired to settle. When the document is processed, a Payment In and a Payment Out are created. Both have a total amount of zero, so no financial transaction is created. The amount settled on each payment is compensated by a GL Item line. Both payments use the same GL Item, so the balance of it after the process is zero.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#configuration","title":"Configuration","text":"<p>It is not required any specific configuration to work on with this module. It is expected that business partners are already completely defined as Customers and Vendors with their corresponding Financial Accounts and Currency.</p> <p>It is also required to have at least one GL Item defined for the Organizations where these settlements are needed.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#business-partner-settlement_1","title":"Business Partner Settlement","text":"<p>In this window, all the settlements are registered. In a new one, you have to select:</p> <ul> <li>the type: Credit or Invoice</li> <li>the settlement date</li> <li>the Business Partner</li> <li>and the GL Item.   GL Item balance after the settlement process is not going to be affected, therefore a specific ledger account out of the account tree can be created and used for it.</li> </ul> <p>Depending on the settlement type, the selected process button on the top and child tabs below change accordingly to show either the credit payments or the invoices to be settled.</p> <p>\"Credit Settlement\" type:</p> <p></p> <p>\"Invoice Settlement\" type:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#credit-settlement","title":"Credit settlement","text":"<p>In credit settlements, you have to select the credit payments that are required to be settled.</p> <p>Clicking Add Credit Payments button, a popup is opened where you can select from 2 grids the Credit In and the Credit Out payments.</p> <p>In the Totals section, total amounts of the selected credit payments are calculated.</p> <p>Warning</p> <p>You cannot close and add the credit payments until the total amounts of each grid are the same.</p> <p>The information above means that Credit In Amount and Credit Out Amount should be the same, therefore Credit Payment is 0.00</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#invoice-settlement","title":"Invoice settlement","text":"<p>As in credit settlements, by clicking Add Not Paid Invoices a popup is opened with 2 grids. The grids in this case show not paid invoices.</p> <p>Once more, it is not possible to create settlement payments until \"Pending Amount\" is 0.00, as shown in the image below:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#process-settlement","title":"Process settlement","text":"<p>Depending on the status of the Settlement different actions are available:</p> <p>Draft In this status it is only possible to Process the settlement.</p> <p>Processed In this status it is possible to Cancel or Reactivate the settlement.</p> <p>Cancelled In this status it is not possible to perform any action.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#process","title":"Process","text":"<p>When the settlement is processed, a Payment In and a Payment Out are created. Each payment includes all the credit payments or invoices that were selected on the settlement.</p> <p>See images below in the case of settlement payments related to invoices.</p> <p>Payment In</p> <p></p> <p>Payment Out</p> <p></p> <p>The generated payments are set on the Business Partner Settlement header.</p> <p>The invoices are inserted as Payment Lines while the credit payments are added to the payment as Used Credit.</p> <p>As the total amount of the settlement payment must be zero, an additional payment line is added using the selected GL Item.</p> <p>The amount in the lines related to the GL Item is the same in both payments, therefore the net effect on the GL item balance is null. In other words, the balance of the GL Item is not altered by the settlement process.</p> <p>Settlement Payment In posting: 2722.50 GL Item ledger account (55500) DEBIT 2722.50 Account Receivables (43000) CREDIT</p> <p>Settlement Payment Out posting: 2722.50 Account Payables (40000) DEBIT 2722.50 GL Item ledger account (55500) CREDIT</p> <p>Finally, as the Settlement Payment amount is zero, no \"Transaction\" is created in the Financial Account of the payment, therefore it will not be required to include it in any Reconciliation.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reactivate","title":"Reactivate","text":"<p>When a Settlement is reactivated, the generated payments are canceled creating a Reverse Payment. This process will restore the debt or credit so it is again available and the invoices are again not paid. The generated payments are removed from the header but the selection of credit or invoices is kept, so it is possible to add new items, remove some items and/or edit the settled amounts.</p> <p>Info</p> <p>The settlement is left in Draft status so it is possible to process it again when needed.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#cancel","title":"Cancel","text":"<p>As in the Reactivate process, the settlement payments are canceled by creating a Reverse Payment and the settled credit or invoices are again available or not paid. But, in this case, these payments are not removed from the settlement header and the status is changed to Canceled.</p> <p>Info</p> <p>In this status, it is not possible to modify the settlement anymore.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#tax-payment","title":"Tax Payment","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Tax Payment</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_9","title":"Overview","text":"<p>The \"Tax Payment\" process helps to calculate the amount of taxes to be paid to or received from the tax authority.</p> <p>Taxes such as the VAT are settled as the difference between:</p> <ul> <li>the VAT that is charged by an organization and paid by its customers, that is the Output VAT or VAT collected on Sales</li> <li>and the VAT that is paid by an organization to other businesses on the supplies that it receives, that is the Input VAT or VAT paid on purchases</li> </ul> <p>Tax payment process can be run after below detailed configuration is done:</p> <ul> <li>A Tax Authority business partner needs to be created in the business partner window. This business partner needs to be setup as both \"Customer\" and \"Vendor\" because sometimes the organization will have to pay to the tax authority and the other way around.</li> <li>A G/L item needs to be created and then linked to each Tax Register Type. The G/L item is going to be used to post the corresponding tax payment to the ledger.</li> <li>The \"G/L item Debit Account\" of the G/L item is the account to use while posting a tax payment to be received from the tax authority.</li> <li>The \"G/L item Credit Account\" of the G/L item is the account to use while posting a tax payment to be made to the tax authority.</li> <li>As many Tax Register Type as required are linked to the tax rates of each type to take into account for the calculation of the tax payment.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#header_3","title":"Header","text":"<p>The tax payment window allows the user to calculate the amount of taxes to be paid to or received from the tax authority within a given period of time. It also allows the user to generate the corresponding payment to/from the tax authority.</p> <p></p> <p>As shown in the image above, the fields to fill in are:</p> <ul> <li>Organization: which is the organization for which the tax payment needs to be calculated</li> <li>Name: the name of the tax payment calculation</li> <li>Business Partner: that is the tax authority business partner who either receive the tax payment or make the tax payment.</li> <li>Currency: the currency of the tax payment</li> <li>Starting Date: that is the first date to take into account for the tax calculation.</li> <li>Taxes such as the VAT are settled on a monthly basis, therefore the starting date can be the first day of a given month.</li> <li>Ending Date: that is the last date to take into account for the tax calculation.</li> <li>Taxes such as the VAT are settled on a monthly basis, therefore the ending date can be the last day of a given month.</li> <li>Journal Entry: that is a read-only field which links to the journal entry created once the tax payment is processed and therefore included in a G/L Journal.</li> <li>Generate Payment checkbox: this checkbox allows the user to configure if a payment in/out is going to be created after processing the tax payment.</li> <li>This checkbox should not be selected in those cases where the tax authority needs to pay to the organization but instead of doing that, it compensates the amounts to be paid to it by the organization.</li> </ul> <p>The Create VAT Registers button run the tax payment process and gets the tax amount of each \"Tax Register Type\" automatically populated in the \"Tax Register Header\" tab.</p> <p>The Process button process the tax payment and includes the tax settlement posting in a G/L Journal accessible from the \"Journal Entry\" field of the Tax Payment window.</p> <p>The \"Unprocess\" button undoes the tax payment and deletes the G/L Journal created.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#tax-register-header","title":"Tax Register Header","text":"<p>Tax Register Header tab allows the user to see the calculated tax amount per each configured \"Tax Register Type\".</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#lines_3","title":"Lines","text":"<p>The lines tab is a read-only tab which lists all the tax transactions related to the tax rates configured as part of a \"Tax Register Type\".</p> <p></p> <p>Some relevant fields to note are:</p> <ul> <li>Tax: that is the tax rate included as part of the \"Tax Register Type\".</li> <li>Invoice Tax: that is the invoice linked to the tax rate.</li> <li>Invoice Date: that is the invoice date.</li> <li>Document No.: that is the document number for instance an invoice number.</li> <li>Exempt Amount: that is an exempt tax amount which will not be included in the tax payment. The set-up is in the customer tab of the business partner.</li> <li>No VAT Amount: amount that is not included in the tax calculation.</li> <li>Nondeductible Amount: amount that is non deductible.</li> <li>Taxable Amount: that is the taxable amount used for the calculation of the tax amount.</li> <li>Tax Amount: that is the tax amount.</li> <li>Total Amount: that is the total gross amount of the document/invoice.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#remittance","title":"Remittance","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Remittance</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_10","title":"Overview","text":"<p>In the Remittance window, the user is able to create remittances to manage payments in or out to customers or suppliers.</p> <p>A remittance is a group of payments (in/out) or orders/invoices which can be remitted to the bank for its payment. The bank will then manage either the collection of the money from the customers or the payment to the vendors/suppliers.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#configuration_1","title":"Configuration","text":"<p>To be able to use this functionality, it is necessary to configure some aspects first.</p> <ul> <li> <p>Remittance Dataset: it is necessary to install the Remittance dataset before using the Remittance window. </p> <p>For this, go to the Enterprise Module Management window and select the corresponding dataset as shown below.</p> <p></p> <p>Info</p> <p>For more information, visit Enterprise Module Management.</p> </li> <li> <p>Remittance Type: It is necessary to define a remittance type with a certain payment method in the Remittance Type window.</p> <p>Info</p> <p>For more information, visit Remittance Type window.</p> </li> <li> <p>Business Partner default bank account: For each business partner, it is possible to   define a bank account that is selected by default each time creating a remittance is necessary.</p> <p>Info</p> <p>To read more, visit Bank Account in the Business Partner section.</p> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#remittance-window","title":"Remittance window","text":"<p>As shown in the image above, it is necessary to fill in the fields in the window and different buttons appear so as to continue with the process.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#buttons","title":"Buttons","text":"<p>Select Payments</p> <p>Using this button, the user is able to select a payment to be included in the remittance.</p> <p>Process</p> <p>Using this button, the user processes the payments and groups lines according to the options shown in its corresponding pop-up window. </p> <p>Info</p> <p>If the Automated Remittance module in the Financial Extensions Bundle is installed, this process includes the date setting and the settlement of the remittance.  For more information, visit the Automated Remittance user guide.</p> <p>Select Invoices and Orders</p> <p>In the Remittance window, the select invoices and orders button is shown. With this button, the user is able to select not only invoices, but also orders to include in the remittance. In the pop-up window shown when this button is clicked, the user can order and filter each column, payments in and out are shown at the same time and, orders and invoices are shown together.</p> <p></p> <p>Protest Remittance</p> <p>Info</p> <p>This button is only available if the Automated Remittance module in the Financial Extensions Bundle is installed. To install it, follow the instructions from the marketplace: Financial Extensions Bundle.</p> <p>The Protest Remittance button allows the automatic protest of remittances. This function facilitates the management of protests and the re-settlement of future remittances.</p> <p>Info</p> <p>For more information, visit the Automated Remittance user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#types-of-remittances","title":"Types of Remittances","text":"<p>There are two types of remittances:</p> <p>Non-Discount Remittances: orders/invoices and purchases and/or payments (in/out) are grouped in a remittance that is sent to the bank to be managed.</p> <ul> <li>The remittance generates a series of payments according to the grouping required by the user (by business partner, due date, among others). The bank usually charges a certain amount for the management of each of these payments, hence the attempt to group them.</li> <li>The bank deducts the amount of the remittance from the financial account at the time the remittance is sent, taking care of managing the payments.</li> </ul> <p>Remittances for Discount: sales orders/invoices and/or payments are grouped in a remittance that is sent to the bank. The bank advances the amount of the remittance and then manages it itself.</p> <ul> <li>The remittance generates as many payments (in/out) as those incorporated in the remittance plus one for the global amount, which is the one that is taken to the financial account due to the advance of such amount.</li> <li>The bank informs of the payments (in/out) that have been settled (normally, if in one month the bank does not respond, these payments are considered settled) and of those that have been protested.</li> </ul> Non-Discount RemittanceRemittance for Discount <p>To create a Non-Discount remittance follow these steps:</p> <ol> <li> <p>Add a new remittance to the Remittance window and select \u201cprintable Remittance\u201d as remittance type since it indicates it is a non-discount remittance.</p> <p></p> </li> <li> <p>By clicking the \u201cSelect Invoices and Orders\u201d button, the system displays a pop up with, by default, the \"Show collections/payments for alternative payment methods\" selector unchecked, displaying only invoices that have Remittance payment method.     By checking this checkbox, the system shows all the invoices and orders pending to be taken to the bank. Select those operations needed to remit and process.</p> <p></p> <p>So the system inserts the selected lines:</p> <p></p> </li> <li> <p>If no further operations to the remittance are to be added, process the payment clicking the \"Process\" button.</p> <p>Warning</p> <p>When using the \"process\" button and grouping lines, it is necessary for the bank accounts of those lines of a remittance document to coincide. If they are different from one another, Etendo shows an error notification as seen below.</p> <p></p> <p>Info</p> <p>Bank accounts can be defined in the header of purchase and sales invoices as well as in purchase and sales orders.</p> </li> <li> <p>When processing, the system shows the following options:</p> <ul> <li>No grouping: generates a payment for each of the selected lines.</li> <li>Group by invoice: generates a payment for each invoice (in case there is more than one).</li> <li>Group by invoice and due date: generates a payment for each invoice and due date.</li> <li>Group by business partner: generates as many payments as there are business partners on the selected lines. It allocates the total amount of all lines that apply to each business partner.</li> <li>Group by business partner and due date: creates as many payments as there are business partners and payment dates on the selected lines.</li> <li>Group by order: generates a payment for each order (in case there is more than one).</li> <li>Group by order and due date: generates a payment for each order and due date.</li> </ul> <p></p> </li> </ol> <p>Example</p> <p>As an example, let us create the payment by selecting the Group by business partner option. When processing, the 3 payments have been created for the 3 lines included in the remittance due to the fact that all of them correspond to the same business partner.</p> <p></p> <p>When navigating to the payment, it can be observed that the status of the payments created is \"Remitted\".</p> <p></p> <p>When the remittance is posted, an accounting entry is obtained, according to the accounts defined.</p> <p>To create a remittance for discount follow these steps:</p> <ol> <li> <p>Create a remittance from the Remittances window. Select as type of remittance \"Remittances for Discount\". Once the header has been   created, add the lines, either invoices, orders or payments, that are to be included in this remittance.</p> <p></p> </li> <li> <p>By clicking \"Select Invoices and Orders\" the system displays a pop up with, by default, the \"Show collections/payments for alternative payment methods\" selector unchecked, displaying only invoices that have Remittance payment method.     By checking this check box, the system shows all the invoices and orders pending to be taken to the bank. Select those operations needed to remit and process.</p> <p></p> <p>The system inserts the selected lines:</p> <p></p> </li> <li> <p>If no further operations to the remittance are to be added, process the payment clicking the \"Process\" button.</p> <p>Warning</p> <p>When using the \"process\" button and grouping lines, it is necessary for the bank accounts of those lines of a remittance document to coincide. If they are different from one another, Etendo shows an error notification as seen below.</p> <p></p> <p>Info</p> <p>Bank accounts can be defined in the header of purchase and sales invoices as well as in purchase and sales orders.</p> </li> <li> <p>When processing, the system shows the following options:</p> <ul> <li>No grouping: generates a payment for each of the selected lines.</li> <li>Group by invoice: generates a payment for each invoice (in case there is more than one).</li> <li>Group by invoice and due date: generates a payment for each invoice and due date.</li> <li>Group by business partner: generates as many payments as there are third parties on the selected lines. It allocates the total amount of all lines that apply to each third party.</li> <li>Group by business partner and due date: creates as many payments as there are third parties and payment dates on the selected lines.</li> <li>Group by order: generates a payment for each order (in case there is more than one).</li> <li>Group by order and due date: generates a payment for each order and due date.</li> </ul> <p>In this case, it is recommended to select the option \"No grouping\", since as many payments as operations of the remittance will be generated and a payment sum of all the operations which is the one that the bank will advance. The rest of the payments will be settled as known.</p> <p></p> </li> <li> <p>The next step is to take to the bank the sum payment of the remittance transactions, as in these cases the bank advances the money. From the financial account window, add the payment to the transaction and reconcile it with the bank statement.   </p> </li> <li> <p>Finally, settle the executed payments and/or return the necessary ones.      The status of the settled collections changed to Settled in Remittance and the status of the total payments of the remittance operations changed to Payment cleared.</p> </li> </ol>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#settle-protest-remittance","title":"Settle/ Protest Remittance","text":"<p>Once the bank confirms the corresponding payments, access the \"Settle/Protest Remittances\" window and check the settled and protested remittances.</p> <p>Info</p> <p>The selected date is the posting date of the created document.</p> <p></p> <p>By settling the first line, it is observed that the line has been added to the settled tab of the corresponding remittance.</p> <p></p> <p>Once the remittance is posted, the accounting entry is obtained according to the indicated configuration. The posting should be line by line of the settled transactions. The returned remittance lines will appear in the returned tab.</p> <p>The accounting of returned operations are accounted for in the same way as settled operations, from the 401 of the remittance statement to the 400, leaving the outstanding debt again.</p> <p>Info</p> <p>The returned transactions may be managed again later in other remittances or directly in the financial accounts.</p> <p>The status of settled remittance transactions is changed to \"Withdrawn not Cleared\" and in the case of payment outs to \u201cDeposited not Cleared\u201d.</p> <p>If one of the payments has been returned, the status of the document is set to \"Awaiting Execution\".</p> <p></p> <p>Info</p> <p>It is possible to print the Non-discount remittances as well as the Remittances for Discount from the printer in the toolbar.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#settled-payments-to-the-financial-account","title":"Settled payments to the financial account","text":"<p>Info</p> <p>After the settlement, the system has automatically transferred these payments to the financial account indicated in the payments.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#reconcile-payments","title":"Reconcile Payments","text":"<p>The Reconcile Payments option in any remittance process refers to the action of comparing and adjusting financial records to ensure that payments are accurately and properly recorded. By using the reconcile button in the financial account window, it is possible to access the window shown below.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#doubtful-debt","title":"Doubtful Debt","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Doubtful Debt</code></p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#overview_11","title":"Overview","text":"<p>Doubtful debts are those debts which the company is unlikely to be able to collect. Moreover, a doubtful debt becomes a bad debt when there is no longer any doubt that the debt is uncollectible, therefore:</p> <ul> <li>Doubtful Debt: receivable that might become a bad debt at some point in the future.</li> <li>Bad debt: receivable that has been clearly identified as not being collectible.</li> </ul> <p>Doubtful debts are useful in order to make provisions for possible losses beforehand.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#user-story","title":"User Story","text":"<p>The following example illustrates how Etendo manages Doubtful Debts posting to the ledger.</p> <p>The Client Healthy Food Supermarkets, Co. who owes the company 1,000 EUR is going through a difficult situation, hence its debt is considered doubtful.</p> Account Debit Credit Doubtful Debt Account 1000 Customer Receivables 1000 Account Debit Credit Bad Debt Expense Account 1000 Allowance For Doubtful Debt Account 1000 <p>The Client Healthy Food Supermarkets, Co. makes a Payment of 350 EUR:</p> Account Debit Credit In Transit Payment IN Account 350 Doubtful Debt Account 350 Account Debit Credit Allowance For Doubtful Debt Account 350 Bad Debt Revenue Account 350 <p>Later, the client becomes bankrupt, so its debt is considered bad:</p> Account Debit Credit Write-off 650 Doubtful Debt Account 650 Account Debit Credit Allowance For Doubtful Debt Account 650 Bad Debt Revenue Account 650"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#configuration_2","title":"Configuration","text":"<p>Before starting working with Doubtful Debt, some previous configuration steps are required:</p> <ul> <li>To configure Accounting for Doubtful Debts. The accounts that need to be configured are:</li> <li>Doubtful Debt Account</li> <li>Bad Debt Expense Account</li> <li>Bad Debt Revenue Account</li> <li>and Allowance for Bad Debts Account.</li> <li>To create a Preference in order to be able to see the amount of a debt that has been classified as doubtful when receiving a Payment.   This preference must be defined for the Client and the Organization that needs to see it.   This preference is an Attribute 'Doubtful_Debt_Visibility' which Value needs to be 'Y'</li> <li>To create a Document Type for Doubtful Debts.   This step is not a must, since there is already a Standard Document Type defined for Doubtful Debts.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#doubtful-debt_1","title":"Doubtful Debt","text":"<p>Doubtful Debts are defined in the Doubtful Debt Run Window. After being created, a record will appear in the grid of this window.</p> <p>Fields to note:</p> <ul> <li>Doubtful Debt Run: A link to the Doubtful Debt Run that generated this Doubtful Debt</li> <li>Invoice Payment Schedule: A link to the Payment Plan of the Invoice to which this Doubtful Debt is related.</li> <li>Outstanding Doubtful Debt Amount: Doubtful Debt Amount which remains pending.</li> </ul> <p>Possible Actions:</p> <ul> <li>Reactivate: A Doubtful Debt can be Reactivated in order to be modified or deleted afterwards. Notice that, like every other document, it cannot be Reactivated if it is Posted. In that case, it is necessary to Unpost it first.</li> <li>Post: A Doubtful Debt can be posted, creating an entry in the Journal that should look like this:</li> </ul> Account Debit Credit Doubtful Debt Account Doubtful Debt Amount Customer Receivables Doubtful Debt Amount Account Debit Credit Bad Debt Expense Account Doubtful Debt Amount Allowance For Doubtful Debt Account Doubtful Debt Amount"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#accounting_1","title":"Accounting","text":"<p>Accounting information related to the doubtful debt.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#bulk-posting_3","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#doubtful-debt-run","title":"Doubtful Debt Run","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Doubtful Debt Run</code></p> <p>Doubtful Debt Run window is used to define which debts, and in what percentage, are considered doubtful. These Doubtful Debts are shown in the Doubtful Debt Window afterwards.</p> <p></p> <p>Some fields to note:</p> <ul> <li>Doubtful Debt Method: If there is a Doubtful Debt Method defined, it can be selected to automatically fill the needed fields with the provided values.</li> <li>Days Overdue: This field is used as a filter when selecting the existing debts. It can be removed afterwards.</li> <li>Percentage: This field is used when selecting the existing debts as the default percentage of the debt that is going to be considered doubtful. It can be changed afterwards.</li> </ul> <p>Select Doubtful Debt. After filling the necessary fields, the \"Select Doubtful Debt\" button is shown. By clicking it, a new pop-up is shown for selecting the debts that are going to be considered doubtful.</p> <p></p> <p>All the pending debts are shown in this window pre-filtered by the previously set parameters. These filters can be removed by clicking the funnel icon.</p> <p>Each row represents an Outstanding Debt, and it is possible to select as many as necessary to define them as doubtful.</p> <p>For each line, it is possible to edit the Doubtful Debt Amount field. This is the amount that is going to be considered as doubtful. Notice that it is not possible to define a Doubtful Debt amount larger than the Outstanding Amount.</p> <p>The field Run Date can also be modified per each row. When clicking the OK button, the selected records will be visible in the Doubtful Debt tab below.</p> <p>Process:</p> <p>It is necessary to click the Process button after selecting the records in order to generate the corresponding Doubtful Debt/s.</p> <p>Once created, it will be possible to post them or to reactivate them through the Doubtful Debt Window.</p>"},{"location":"user-guide/etendo-classic/basic-features/financial-management/receivables-and-payables/transactions/#doubtful-debt_2","title":"Doubtful Debt","text":"<p>In this tab, the previously selected records are shown. Afterwards, it will be necessary to Process the Doubtful Debt in order for it to be available in the Doubtful Debt Window.</p> <p></p> <p></p> <p>This work is a derivative of \"Financial Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/","title":"Application","text":"","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#create-sequences","title":"Create Sequences","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Create Sequences</code></p> <p>In this window, the Create Sequences process is executed.</p> <p>When selecting the organization and executing the process, Etendo creates the sequences for the type of fields \"Transactional Sequence\" or \"Non transactional Sequence\".</p> <p>The main advantage of these new sequences is dynamic masking, which makes it possible to add dates or dynamic strings.</p> <p></p> <p>Warning</p> <p>The user can run this process only after a developer configures the sequence fields using transactional or non-transactional sequences.</p> <p>Info</p> <p>For more information about this configuration, visit the technical documentation about Sequences.</p> <p>After that, in the <code>Financial Management</code>&gt;<code>Accounting</code>&gt;<code>Setup</code>&gt;<code>Document Sequence</code> window the user can see and edit the sequences generated.</p> <p></p> <p>| List of sequences generated by the process |</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#conversion-rate-download-rule","title":"Conversion Rate Download Rule","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Conversion Rate Download Rule</code></p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This module automatically generates conversion ranks with a background process using Apilayer. It allows keeping currency conversions up to date.</p> <p>Conversion rate, also called currency exchange rate, is the rate at which one currency may be converted into another one within a given period of time. Currency is an accepted medium of monetary exchange that may vary across countries.</p> <p></p> <p>Fields to note:</p> <ul> <li>From Currency: Original currency</li> <li>To Currency: Target currency</li> <li>Tolerance: The maximum difference allowed between the new conversion rate and the previous one. This is used to insert or not the new downloaded rate.</li> </ul>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#currency","title":"Currency","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Currency</code></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#overview","title":"Overview","text":"<p>Currencies and conversion rates are basic settings in Etendo.</p> <p>Currencies used worldwide are automatically created and listed in the currency window once Etendo installation is completed.</p> <p>Info</p> <p>All these currencies are linked to the system organization (*), that means that those currencies will be shared by all the organizations in the system.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#currency_1","title":"Currency","text":"<p>Currency window allows the user to visualize or to create and configure the currencies to use in monetary transactions.</p> <p></p> <p>As shown in the image above, currency relevant data is:</p> <ul> <li>the currency ISO code. Currency ISO codes are worldwide used codes for the representation of currencies and funds.</li> <li>the currency symbol which can be placed at the right or at the left of an amount</li> <li>and the currency precision or number of decimals to use while calculating amounts in that currency.</li> </ul> <p>Etendo allows the user to setup three types of currency precision:</p> <ul> <li>the standard precision, defaulted to 2, is the one used overall but for prices and cost amounts calculations which can use a different precision.   This precision is the one used to calculate order and invoices amounts such as \"Line Net Amount\", \"Total Net Amount\" and \"Total Gross Amount\", therefore it should not be bigger than 2 unless the currency allows the user to pay smaller quantities than 0.01</li> <li>the costing precision, defaulted to 2, is the one used for product cost calculations. It is recommended to change it up to 4</li> <li>and the price precision is the one used for unit/list prices which can have more than 2 decimals precision because amounts are finally rounded to 2 by the standard precision.</li> </ul> <p>Warning</p> <p>Changes on currency precision can only be made at client level, therefore System Admin Role needs to be used.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#conversion-rates","title":"Conversion Rates","text":"<p>Conversion rates tab lists the available conversion rates for a given currency.</p> <p></p> <p>A conversion rate is the valid rate at which one currency may be converted into another one within a given period of time.</p> <p>This implies that a single currency might have several conversion rates depending on:</p> <ul> <li>the currency at which might be converted</li> <li>and the period of validity</li> </ul> <p>Info</p> <p>Currency conversion rates can be also created in the Conversion Rates window, therefore it can be reviewed in this tab.</p> <p>Note</p> <p>Etendo recommends conversion rates to be configured in the Conversion Rates window, as it is required to defined both the \"Multiple Rate By\" (USD - \u20ac) and the \"Divide Rate By\" (\u20ac - USD) to properly defined the exchange of two currencies.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#translation","title":"Translation","text":"<p>Currencies can be translated to any language if required.</p> <p></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#conversion-rates_1","title":"Conversion Rates","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Conversion Rates</code></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#overview_1","title":"Overview","text":"<p>Conversion rate also called currency exchange rate is the rate at which one currency may be converted into another one.</p> <p>Info</p> <p>Conversion rates can only be created at system organization level (*), which implies they are available for all the organizations within the client.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#conversion-rate","title":"Conversion Rate","text":"<p>Conversion rates window allows the user to create the rates to be used for multi currency transactions.</p> <p>Etendo requires the user to enter and maintain currency exchange rate in both senses, that means to enter at the same time the two rates below:</p> <ul> <li>a Multiple rate by which is the rate by which the base amount will be multiplied for to calculate the converted amount.</li> <li>and a Divide rate by which is the rate by which the base amount will be divided by to calculate the converted amount.</li> </ul> <p>For instance, USD exchange rate to EUR should have a Multiple rate by = 0.68 setting and a Divide rate by = 1.47 setting, as shown in the image below:</p> <p></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#country-and-region","title":"Country and Region","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Country and Region</code></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#overview_2","title":"Overview","text":"<p>Countries and regions are basic settings to share within Etendo.</p> <p>Countries and their corresponding regions are automatically created and listed in this window once Etendo installation is completed.</p> <p>Info</p> <p>All these countries and regions are linked to the system organization (*), that means that those countries and regions will be shared by all the organizations in the system.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#country","title":"Country","text":"<p>This window allows the user to visualize and/or to create and maintain the countries and the regions to be used in daily business activities.</p> <p></p> <p>As shown in the image above, country relevant data is:</p> <ul> <li>the country ISO code.<ul> <li>Country ISO codes are worldwide used codes for the representation of the countries.</li> </ul> </li> <li>the address print format.</li> <li>whether it has any kind of regions such as states or not. \"Has regions\" flag needs to be enable to enter regions in the Region tab.</li> <li>the region name</li> <li>the country IBAN code of the country<ul> <li>IBAN or International Bank Account Number is a system of numbering that was created to categorize the bank accounts worldwide.</li> </ul> </li> <li>the country IBAN code length of the country.</li> <li>the Phone number format</li> <li>the default language</li> <li>and the default currency</li> </ul>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#translation_1","title":"Translation","text":"<p>Countries and regions can be translated to any language.</p> <p></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#region","title":"Region","text":"<p>Regions tab allows the user to visualize and/or to create and maintain the regions of any type of country.</p> <p>Info</p> <p>Country regions are simply defined by a name and a description.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#preference","title":"Preference","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Preference</code></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#overview_3","title":"Overview","text":"<p>A preference is a type of session value which can either be an attribute or a property.</p> <p>Info</p> <p>Every time a user logs in Etendo, a new session is opened.</p> <p>While logging in, the user enters several variables such as the Role, the Client and the Organization and, once in, the user navigates to a Window.</p> <p>All those variables have a key influence on the session values the user will get.</p> <p>In other words, Preferences allow the user to define session values, session values which can either be a property or an attribute defined for a single client or for all of them, or for a single organization or for all of them.</p> <p>Info</p> <p>Preferences can be assigned to the system or to a specific module, therefore, while exporting that module, the preferences it has assigned will also be exported, so those general settings can be reused.</p> <p>For instance, there is an existing Property named \"Implements an alternative Invoice Process button\". That existing property is currently assigned to the Module \"Advanced Payables and Receivables Management\" with a value = \"Y\" for any client, organization, user, role and window:</p> <ul> <li>Above preference means that if the Advanced Payables and Receivables Management module is installed, it will use an alternative invoice process button, besides every user logging in Etendo will get that feature working regardless of its role, user and the client or the organization it is working on.</li> </ul> <p>For instance, there is an Attribute named \"Autosave\" which is currently assigned to the system with a value =\"Y\". This attribute is visible and therefore applicable to System client and to (*) organization for any user, role and window.</p> <ul> <li>The preference above means that every user logging in Etendo will get that feature working regardless of its role and user and the client or the organization it is working on.</li> </ul>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#preference_1","title":"Preference","text":"<p>Preference window allows the user to define and maintain session values which can be visible and therefore applied to different levels such as Client, Organization, User, Role and Window.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#preference-definition","title":"Preference Definition","text":"<p>As shown in the image above there is one field named \"Property List\" which is key in defining a preference as a property or as an attribute:</p> <ul> <li>if the Property List checkbox is checked, the preference is configured as a property to be taken from an existing list of properties.   There are many types of properties already created, besides modules can add new properties to that list with the aim of getting those other modules or even the system can use them by setting the corresponding properties values.   Some of the available properties are listed and briefly explained below:</li> <li>Enable UOM Management     If set to Value = \"Y\" at \"System\" level, it allows the user to define alternative UOM for a product, besides product's UOM.     Same way, a new field named \"Operative Quantity\" will then be shown in purchase, inventory and sales transaction documents, therefore \"Ordered Quantity\", \"Movement Quantity\" and \"Invoiced Quantity\" always shows \"Operative Quantity\" entered by the end-user, converted to the product's UOM. Enable automatic Price Difference Corrections     If set to Value = \"Y\", it allows the creation of Price Difference correction cost adjustments.</li> <li>Enable Negative Stock Corrections     If set to Value = \"Y\", it allows the creation of Negative Stock correction cost adjustments.</li> <li>Enable Cancel and Replace     If set to Value = \"Y\", it allows to Cancel and Replace booked sales orders.</li> <li>Cancel and Replace - Associate shipment lines to new order     This preference requires \"Enable Cancel and Replace\" preference enabled, and it only works if \"Create netting shipment on Cancel and Replace\" preference is not enabled     If set to Value = \"Y\", it assigns the shipment(s) related to the cancelled sales order lines to the replaced sales order lines.</li> <li>Cancel and Replace - Create netting goods shipment     This preference requires \"Enable Cancel and Replace\" preference enabled, and it only works if \"Cancel and Replace - Associate shipment lines to new order\" preference is not enabled     If set to Value = \"Y\", it automatically creates and completes a \"netting\" goods shipment related to the cancelled, voided and replaced sales orders.</li> <li>CSV Text Encoding     If set to Value = \"Y\" allows to specify the encoding to be used in the Export to CSV process</li> <li>Grid configuration     If set to Value = \"Y\" every time a user changes a grid view, those changes are saved in this window linked to this property.</li> <li>Implements customer Credit Used calculation     This property is currently assigned to the Advanced Payables and Receivables management module with a property value =\"Y\". This property avoids the C_BP_SOCREDITUSED_REFRESH function calculation.</li> <li>Implements an alternative Invoice Process button     This property is also assigned to the Advanced Payables and Receivables management module with a property value =\"Y\". This property avoids the usage of core invoice process button.</li> <li>Implements an alternative Financial Management     Same applies to this which allows an alternative financial management for that module.</li> <li>Implements Payment Monitor management     Same applies to this, which disables core's background process and button on the invoice header that manage the payment monitor.</li> <li>Recent views shown in the workspace property set to \"Y\"     This allows that the recent views are shown in the user workspace</li> <li>Show MRP and Production fields property set to \"Y\"     This allows that the MRP and production fields are shown</li> <li>Not allow changing exchange rate and amount     If you set this property with value = \"Y\", exchange rate and amount are read-only in Add Payment from Sales Invoice, Purchase Invoice, Payment In, Payment Out, Financial Account, in Select Expected Payments from Payment Proposal and in Funds Transfer from Financial Account.</li> <li>Write-off limit     This property with a property value =\"Y\" allows configuring write-off limit in Add Payment from Sales Invoice, Purchase Invoice, Payment In, Payment Out, Financial Account and in Select Expected Payments from Payment Proposal. The write-off limit is set for each Financial Account in Financial Account window.</li> <li>Show Product Characteristics Parents     Values can be 1,2,3,4, etc. The number means how many levels in the hierarchy tree the user wants to show in form view in the Product window. For example, if the tree is: Colour-&gt;Green-&gt;Green light-&gt;0034</li> <li>Allow Multiple Tabs of Window     If set to Value = 'Y' allows opening more than one tab of a single window.</li> <li>Attach By Default<ul> <li>If set to Value = 'Y' the \"Print Document\" popup will not be shown, this popup is the one which asks if the user want to attach the document or instead of it just print it without attaching. When the value of the preference is set to 'Y' the document will be automatically attached.</li> <li>If set to Value = 'N' the \"Print Document\" popup will not be shown, this popup is the one which asks if the user wants to attach the document or instead of it just print it without attaching. When the value of the preference is set to 'N' the document won't be attached.</li> <li>If Value is Undefined the \"Print Document\" popup will be shown with two options: \"Yes\" and \"No, just print it\". If \"Yes\" is selected, the document will be attached. If \"No, just print it\" is selected, the document won't be attached.</li> </ul> </li> <li>Direct Print<ul> <li>If set to Value = 'Y' the Direct Print mode is enabled.</li> <li>If set to Value = 'N' or Undefined, the standard print mode is used.</li> </ul> </li> <li>Allow Where Parameter<ul> <li>If set to Value = 'Y', it allows getting the \"_where\" parameter from manual datasources. A warning will be shown if the \"_where\" parameter is sent.</li> <li>If set to Value = 'N' or Undefined, it will not allow getting the \"_where\" parameter from manual datasources. An exception will be thrown if the \"_where\" parameter is sent.</li> </ul> </li> <li>Allow Unsecured Datasource Request<ul> <li>If set to Value = 'Y', it allows doing unsecured datasource request. A warning will be shown if the current role does not have access.</li> <li>If set to Value = 'N' or Undefined, it will not allow doing unsecured datasource request. It is required to have a role with enough access permissions. An OBSecurityException is thrown if current role does not have access.</li> </ul> </li> <li>External Rebuild, when this preference is defined as system level with its value set to Y, it will not be possible to rebuild the system from Module Manager Console after installing/updating modules. It forces rebuilding the system from command line.</li> <li>Bypass Access Level Entity Check, when this preference is defined with its value set to Y, it will allow bypassing the check that compares role's user level with entity's access level to completely prevent accessing latter one.</li> <li>Translate Yes/No Reference in Export To CSV, when this preference is defined with its value set to Y, the value of the columns whose reference is Yes/No will be translated to the current context language when exporting the grid of a standard window into CSV.</li> <li>Disable Linked Items Section, when this preference is defined for a window with its value set to Y, the Linked Items section will be disabled for that window. If there is not any window defined in the visibility settings, this section will be disabled for every window in the application.</li> <li>Enable Screen Reader, If this preference is set to Y the full screen reader will be enabled. This will improve the accessibility to visual impaired people.</li> <li>Excel Export Format, this preference allows setting the export format to be used when generating Excel reports. Two values are supported: XLS or XLSX. When this preference is not defined, XLSX is the default Excel export format.</li> <li>\"Filter by documents processed since N days ago\" is related to Create Lines From in Sales/Purchase Invoice. It limits transactions starting from the current date to the defined days ago. If the preference is not defined then queries retrieve all records created since one year ago (365 days), else it will be filtered by the count of days defined as the preference value.</li> </ul> <p></p> <ul> <li>if the Property List checkbox is not checked, the preference is configured as an attribute. An attribute is a free text attribute which can get whatever value.</li> </ul> <p></p> <ul> <li>\"ShowAuditDefault\" attribute allows enabling the Audit Trail feature. Audit Trail feature allows tracking every change done to any Etendo table or entity.</li> <li>\"ShowAcct\" attribute allows showing Post buttons and Accounting tab whenever its value is set to \"Y\".</li> <li>\"ForcedLinkWindowDBTableName\" where \"DBTableName\" is the name of the table in database.   This attribute allows a direct navigation to the window which UUID is set as attribute value, instead of using the standard navigation logic.</li> <li>\"ModalModuleModuleJavaPackage\" where \"ModuleJavaPackage\" is the name of the module's Java Package name or \"ModalModuleModuleUUID\" where Module UUID is the unique identifier of the module in the data base.   This attribute defines whether the processes within a module invoked from a menu or a button or a tab are opened in browser popups (attribute value = \"N\") or in modal popups (attribute value =\"Y\").</li> <li>Browser popups implies the deployment of the process in a new window in the browser</li> <li>Modal popups implies the deployment of the process in another layer inside the application window.</li> <li>\"ModalProcessProcessUUID\" where Process UUID is the UUID of the process.   This attribute defines whether a given process is opened in modal popup (attribute value =\"Y\") or in browser popup (attribute value =\"N\").</li> <li>This attribute has a higher preference than ModalModule, therefore it is possible to define all processes in a module to open in modal popups but some of them.</li> <li>\"SaveAttachmentsOldWay\"   This attribute defines whether attachments should be saved using the old attachment model.</li> </ul>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#preferences-visibility","title":"Preferences Visibility","text":"<p>Preference visibility section defines the levels where a preference is going to be used and therefore applied.</p> <p>Preference levels can be set to a given value or left empty. If a level is left empty, the preference will be valid for any value of that level.</p> <p>For instance, if user level is empty, any user will be able to see that preference. In case the same preference has values at different levels, the most specific one will then be used.</p> <p>Available levels are:</p> <ul> <li>Client - if this level is set to empty or to System, the preference will be visible from any client used to log in.</li> <li>Organization - if this level is set to empty or to (*), the preference will be visible from any organization used to log in.</li> <li>User - if this level is set to a given user, only that user will be able to see that preference once logged in.</li> <li>Role - if this level is set to a given role, only that role will be able to see that preference.</li> <li>Window - if this level is set to a given window, only that window will be able to see that preference.</li> </ul>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#preference-priority","title":"Preference Priority","text":"<p>Preference Priority section defines priority of multiple preferences defined for same Property</p> <p>Preference Priority will be applied while loading the default Preferences of the Logged in Role.</p> <ul> <li>Check Priority by Client (Visible at client) :</li> <li>Undefined client visibility is handled as SYSTEM.</li> <li>If pref1 or pref2 either of them which does not set to SYSTEM CLIENT will be considered.</li> <li>If pref1 or pref2 both have value set and both not set to SYSTEM CLIENT, then it will check Next Priority Level.</li> <li>Check Priority by Organization (Visible at Organization) :</li> <li>If pref1 or pref2 either of them which has value set will be considered.</li> <li>If pref1 or pref2 both have values set then, It will check the depth of the value in Organization Tree and Highest Organization's Preferences will be Considered.</li> <li>If pref1 or pref2 both have the same value set then it will check Next Priority Level.</li> <li>Check Priority by user (Visible at User) :</li> <li>If pref1 or pref2 either of them which has value set will be considered.</li> <li>If pref1 or pref2 both have value set then it will check Next Priority Level.</li> <li>Check Priority by Role (Visible at Role) :</li> <li>If pref1 or pref2 either of them which has value set will be considered.</li> <li>If pref1 or pref2 both have a value set then it will check Next Priority Level.</li> <li>Check Priority by Window (Visible at Window) :</li> <li>If pref1 or pref2 either of them which has value set will be considered.</li> <li>If pref1 or pref2 both have a value set then it will check Next Priority Level.</li> <li>SAME PRIORITY:</li> <li>If all the above levels are the same then it will and will consider preference with column \"selected\"=true.</li> </ul>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#preferences-values","title":"Preferences Values","text":"<p>When logging in Etendo or entering the role or the organization, the preferences visible for that user, role, client, organization or window are stored in the Etendo session. Those session values can be obtained by using the method: org.openbravo.erpCommon.utility.Utility.getContext method.</p> <p>Additionally:</p> <ul> <li>It is possible to look for the value of a given preference by using the method: org.openbravo.erpCommon.businessUtility.Preferences.getPreferenceValue.   This method shows an exception in case:</li> <li>a preference property does not have a value defined for the required visibility level</li> <li>or there is a conflict caused by the definition of more than one property values for the same preference property for a given visibility level</li> </ul> <p>Conflicts can be manually resolved by checking and modifying the preference.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#session-preferences","title":"Session Preferences","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Session Preferences</code></p> <p>Session preferences allow showing or hiding accounting tabs or translation tabs for a given user, role, client and organization.</p> <p></p> <p>As shown in the image above, session preferences window allow the user to setup a list of session preferences for the user, the role, the client and the organization entered while login in Etendo.</p> <p>That user will need to have access rights to this window to get these preferences setup.</p> <p>Available session preferences which can be shown or hidden are:</p> <ul> <li>Enable Accounting (previously called Show accounting tabs), this option allows showing the tabs defined as \"accounting tabs\" in a window, besides this option allows showing the process buttons that \"Post\" a document.   The complete list of accounting tabs is listed below. This option if selected set the \"ShowAcct preference to \"Yes\".</li> </ul> Window Name Tab/Sub-Tab Name General Ledger Configuration General Ledger Configuration General Ledger Configuration Documents General Ledger Configuration General_Accounts General Ledger Configuration Defaults Accounting Transaction Details Header Asset Group Accounting Asset Accounting Business Partner Customer Accounting Business Partner Vendor Accounting Business Partner Employee Accounting Business Partner Category Accounting Financial Account Accounting History Financial Account Accounting Configuration Financial Account Accounting G/L Item Accounting Product Accounting Product Category Accounting Tax Rate Accounting Warehouse and storage bin Accounting <ul> <li>Show Translation tabs, this option allows showing translation tabs.   Translation tabs are shown in many Etendo windows. This option, if selected, sets the \"ShowTrl\" preference to \"Yes\".</li> <li>Show Audit - same way, this option allows showing the Audit Trail information. Audit Trail information can be found as well in many Etendo windows under the group section \"Audit\".   This option, if selected, sets the \"ShowAuditDefault\" preference to \"Yes\".</li> <li>Theme or skin - there are two possible options, \"Default\" or \"Classic\" skin or \"2.50 to 3.00 Compatible\".</li> <li>Transaction Range - this one is about the number of days (counting backwards from current day) used in the implicit filter of sales order or purchase order by example. Implicit filters are the filters used not to show documents that have been completed the last x days to avoid overflow.</li> <li>\"Records Range\" and \"Selector registry range\" only applies to 2.50 views. Etendo 3 allows scrolling down to see all the records in a window, tab or selector.</li> </ul> <p>Finally, the Save Preferences button allows saving the changes.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#number-to-word-converter","title":"Number to Word Converter","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Number to Word Converter</code></p> <p>Info</p> <p>To be able to include this functionality, the Platform Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Platform Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Platform Extensions - Release notes.</p> <p>This module provides the infrastructure to convert a number into its equivalent in words. This functionality is especially useful while printing checks.</p> <p>Once installed, this module creates a new window which can be found in the application path: General Setup // Application</p> <p>Some fields to note are:</p> <p>Organization that is the legal entity which requires printing checks in a given language. Language that is the language's words into which the amounts to pay needs to be converted. Javaclass that is the route where the Javaclass that converts amounts into a given language is located.</p> <p>The \"javaclass\" field is required but empty by default unless another module such as the Number to Word (Spanish) or the Number to Word (English) is installed and properly applied to the legal entity for which it is required to print checks. Additionally, the Javaclass can be filled in manually.</p> <p></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#window-personalization","title":"Window Personalization","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Window Personalization</code></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#overview_4","title":"Overview","text":"<p>Etendo allows the customization of grid and form views. Customize windows and form views are stored once saved in the Window Personalization window. Etendo windows can be shown in Form View and in Grid View, both ways can be customized as required.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#window-personalization_1","title":"Window Personalization","text":"<p>Window Personalization lists and maintains the customized form views.</p> <p></p> <p>Once a form has been customized, saved and listed in the \"Window Personalization\" window, it is possible to configure the levels of visibility where that form personalization will apply.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#alert","title":"Alert","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Alert</code></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#overview_5","title":"Overview","text":"<p>Alerts are notifications which inform about events happening whenever an alert rule has been properly defined to monitor those events.</p> <p>The way \"Alerts\" work in Etendo is described below:</p> <ul> <li>Alert rules need to be previously defined as SQL queries. SQL queries define the event that is going to be monitored.   For instance, \"Products without a defined price\", \"Products under stock\" or \"Bank account without accounting information\"</li> <li>An alert rule can be applied to every Etendo user or just to a set of them. Alert recipients are the Etendo users for which a given event is going to be monitored.</li> <li>An Etendo background process is permanently checking if the SQL query defined in each of the active rule alerts return any record.</li> <li>If that is the case, Etendo creates and returns a new alert instance, which is saved in the \"Alert Management\" window in \"New\" status.</li> </ul> <p>The number of alerts instances informing about events being monitored happening is shown in the \"Top Navigation\" menu:</p> <p></p> <p>Alerts instances can be visualized and managed in the Alert Management window which is opened by clicking the \"Alert\" option of the Top Navigation menu.</p> <p></p> <p>Alerts can have 4 different status:</p> <ul> <li>New - new alerts instances which reflect the events monitored happening.</li> <li>Pending - acknowledge alert instances for which an end-user action is pending to be done to get them solved or fixed.</li> <li>Ignore - not applicable alert instances which must be ignored.</li> <li>Solved - alert instances solved as the event happening is fixed or solved.</li> </ul> <p>The way to manage alerts instances is by manually selecting and moving them to the next or previous status once they are manually acknowledged, ignored or solved.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#alert-rule","title":"Alert Rule","text":"<p>Alert window allows the definition of alert rules as SQL queries which define the event to be monitored and how it will be monitored.</p> <p>Alerts are defined by entering below data:</p> <ul> <li>The \"Name\" of the alert which is the event to be monitored.</li> <li>The \"SQL\" query.</li> <li>and the \"Tab\" where the alert instance can be fixed or solved.</li> </ul> <p></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#translation_2","title":"Translation","text":"<p>Alerts can be translated to any language required.</p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#alert-recipient","title":"Alert Recipient","text":"<p>Alerts can be allocated to specific users or contact or to all of them.</p> <p>Warning</p> <p>If no Role or User is configured in the Alert Recipient tab of a given alert, that alert will apply to any Etendo user or role.</p> <p>Etendo supports alerts notification to user or roles by email:</p> <ul> <li>for this, it is required to properly configure e-mail server, account and password for the corresponding client in the header of the Client window, section \"Request Management\".</li> </ul>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/application/#alert_1","title":"Alert","text":"<p>Alert tab list the events happening which generate the corresponding alert.</p> <p></p>","tags":["Application Management","Sequences Setup","Currency Exchange","Alerts in Etendo"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/attachments-configuration/","title":"Attachments Configuration","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Attachments Configuration</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/attachments-configuration/#overview","title":"Overview","text":"<p>Client configuration of the Attachment Method to be used. Each attachment method can include its own extra fields to complete the configuration of the attachment method. It is only possible to have one active configuration on each client.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/attachments-configuration/#header","title":"Header","text":"<p>It shows all configuration related to the attachment method used to save attachments. Each Attachment Method can include its own specific configuration fields like: server URL, user, password, language, etc.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/clear-report-cache/","title":"Clear Report Cache","text":"<p>Info</p> <p>To be able to include this functionality, the Platform Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Platform Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Platform Extensions - Release notes.</p> <p></p> <p>In this window, the user, in general a developer, can delete the report cache data by clicking the \u201cDone\u201d button. This has technical purposes. After clicking it, a success message will be shown indicating the completion of the process.</p> <p>Info</p> <p>For more information, visit Platform Extensions Bundle developer guide</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/client/","title":"Client","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Client</code> &gt; <code>Client</code></p>","tags":["Etendo Client Setup","Master Data Management","Accounting Dimensions","Email Configuration"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/client/#overview","title":"Overview","text":"<p>A client is an independent entity composed of at least an organization. A client can include and manage master data such as users, customers and vendors. That master data is then shared among all the organizations which belong to that client.</p> <p>Etendo allows the user to create more than one Client and more than one Organization within each Client to model your enterprise according to your needs.</p> <p>Normally, it is enough creating just one Client which hosts multiple organizations that can be used to model your enterprise, the main reasons for this are:</p> <ul> <li>a client can manage master data that is therefore available to all organizations within that client</li> <li>besides, each organization can also manage its own master data and have its own transactional data</li> <li>finally, a Client cannot share any master data with another Client.</li> </ul> <p>Clients are created by running the Initial Client setup process available for the \"System Administrator\" role.</p> <p>Organizations are created by running the Initial Organization setup process available for the \"Client Administrator\" role.</p>","tags":["Etendo Client Setup","Master Data Management","Accounting Dimensions","Email Configuration"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/client/#client","title":"Client","text":"<p>The Client window allows the user to view and maintain the clients created by running the Initial Client Setup process.</p> <p></p> <p>Info</p> <p>The field \"Days To Password expiration\" allows the user to set a day limit during which a password may be valid for users. The limit will be reset every time a user changes his password.</p> <p>The value of the field determines the day limit during which a password must be valid for users:</p> <ul> <li>If it is set to 0, no day limit will be applied.</li> <li>If the value is greater than 0, the day limit will apply after the last date of user update password date.</li> </ul> <p>Setting the value will apply the configuration to all Users from that Client.</p> <p>A relevant field to note is the \"Central Maintenance\" checkbox under the section \"Accounting Dimensions\".</p> <p>This checkbox, if selected, allows the user to configure that the Client centrally maintains key accounting dimensions such as \"Organization\", \"Business Partner\" or \"Cost Center\", therefore the configuration set in here is shared by all the organizations of the client.</p> <p>New Clients created by running the Initial Client Setup process are created as \"Centrally Maintained\" by default with the mandatory accounting dimensions (Organization, Business Partner, Product) selected.</p> <p>The organizations of the Client which require to have additional dimensions not listed in here, for instance \"Campaign\" or \"Sales Region\", will have to configure them in the Dimension tab of the organization's general ledger configuration.</p> <p>Existing clients are not set as \"Central Maintained\" by default because the accounting dimensions which were set are the ones which were configured in the Dimension tab of the corresponding organization's general ledger configuration.</p> <p>It is now possible to change existing Clients as \"Centrally Maintained\", this action overrides what is configured for the organization in relation to the accounting dimensions that can be centrally maintained in the Client, those dimensions are:</p> <ul> <li>Mandatory dimensions:</li> <li>Organization</li> <li>Business Partner</li> <li>and Product</li> </ul> <p>Mandatory dimensions can be filled in or not depending on the document category being created. For instance, \"Organization\" needs to be always specified in the document's header regardless of the document being created, however \"Business Partner\" and \"Product\" are mandatory dimensions that need to be filled in a purchase invoice but can be filled in a G/L Journal if needed.</p> <ul> <li>Non Mandatory dimensions:</li> <li>Project</li> <li>Cost Center</li> <li>1st Dimension, this is a free text dimension which can be customized as required (i.e. it could be customized as \"Department\"), same as the next one</li> <li>and 2nd Dimension</li> </ul> <p>Non mandatory dimensions can be filled in or not depending on what is needed and regardless of the document category being created.</p> <p>Above dimensions are then shown either in the header or/and in the lines of the documents to be posted to the ledger within a section named \"Dimensions\".</p> <p>Besides, there is a financial report named Accounting Transaction Details which shows every ledger entry of an organization's general ledger detailing every dimension value entered.</p> <p>Info</p> <p>It is important to remark that the settings displayed in the client window in both the \"Accounting Dimensions\" section and in the Dimensions tab is the defaulted configuration provided by Etendo.</p> <p>This defaulted configuration is populated from the Dimension Mapping window.</p> <p>It is always possible to customize the defaulted configuration, for instance:</p> <ul> <li> <p>if a client needs to show and therefore make available the organization dimension in the lines of the documents, below actions need to happen:</p> <ul> <li>check the checkbox \"Show in Lines\" for the Organization dimension</li> <li>and delete or modify the records linked to the \"Organization\" accounting dimension in the Dimension tab as all those records are defaulted not to show Organization in any document category lines.</li> </ul> </li> </ul>","tags":["Etendo Client Setup","Master Data Management","Accounting Dimensions","Email Configuration"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/client/#information","title":"Information","text":"<p>Information tab allows the user to add, edit and maintain client generic information such as default units of measure and images.</p> <p></p> <p>Additional information allowed to be specified:</p> <ul> <li>Discount calculated from Line Amounts excluding taxes and charges</li> <li>Default units of measure for:<ul> <li>volume</li> <li>weight</li> <li>length</li> <li>and time</li> </ul> </li> <li>Price List</li> <li>Product for freight</li> <li>Check shipment Organization to monitor that the organization shipping the goods is the same as the organization of the customer.</li> <li>Check Order Organization to monitor that the organization ordering the goods is the same as the organization of the vendor.</li> <li>Group Invoice lines in accounting to get invoices having many invoice lines, do not generate as many accounting lines as invoice lines but a summarized number of accounting lines per account.</li> <li>Company Logos for:<ul> <li>the Company Image</li> <li>the Company Menu</li> <li>and Company Documents</li> </ul> </li> <li>Allow Negative stock to do this, Etendo does not check stock if that is not required.</li> </ul>","tags":["Etendo Client Setup","Master Data Management","Accounting Dimensions","Email Configuration"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/client/#email-configuration","title":"Email Configuration","text":"<p>Documents such as orders or invoices can be sent out by email. Email configuration tab allows the user to configure the email server, account and password, variables which require to be properly set up prior to sending documents by email.</p> <p></p> <p>\"Email Configuration\" tab gathers the email configuration required for sending out documents such as orders or invoices.</p> <p>Info</p> <p>It is important to know the smtp server configuration which is going to be used in order to properly fill the information below:</p> <ul> <li>Smtp Server, email server with SMTP</li> <li>SMTP Authentication, \"yes/no\" flag to define if the email server requires authentication or not before sending emails.</li> <li>SMTP Server Account, email server username in case of authentication required.</li> <li>SMTP Server Password, email server password in case of authentication required.</li> <li>SMTP Server Sender Address, email address to send emails from.</li> <li>SMTP Connection Security, security level needed for the SMTP servers connection. Available options are:<ul> <li>None</li> <li>STARTTLS</li> <li>SSL</li> </ul> </li> <li>SMTP Port, port required for your SMTP server</li> <li>SMTP Connection Timeout, maximum amount of time (in seconds) allowed for an SMTP connection to connect or communicate.</li> </ul> <p>In the provided screenshot, you can see a valid configuration for a gmail account:</p> <ul> <li>Smtp Server, smtp.gmail.com</li> <li>SMTP Authentication, \"yes\"</li> <li>SMTP Server Account, a valid gmail account (including the @gmail.com or @yourdomain)</li> <li>SMTP Server Password, the password for this gmail account</li> <li>SMTP Server Sender Address, email address to send emails from.</li> <li>SMTP Connection Security, SSL</li> <li>SMTP Port, 465</li> <li>SMTP Connection Timeout, 600 (10 minutes)</li> </ul>","tags":["Etendo Client Setup","Master Data Management","Accounting Dimensions","Email Configuration"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/client/#dimensions","title":"Dimensions","text":"<p>Dimensions tab allows the user to configure whether a given accounting dimension is going to be available in the header and/or in the lines of a given document category or not.</p> <p>This tab can be used to configure accounting dimensions availability at document level only if the client is set as \"Centrally Maintained\". This setting is specific to the document and accounting dimension and it overwrites the configuration in the header.</p> <p>For example, if a client needs to display project dimension in the header and lines in all documents less in amortization document, the client window should have the following configuration:</p> <p></p> <p>The configuration in dimensions tab is populated by the configuration that exists in the Dimension Mapping window.</p>","tags":["Etendo Client Setup","Master Data Management","Accounting Dimensions","Email Configuration"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/crm-connector/","title":"CRM Connector Configuration","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>CRM Connector</code> &gt; <code>CRM Connector Configuration</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/crm-connector/#overview","title":"Overview","text":"<p>The concrete CRM connector must add a configuration in this window to enable it to connect to the external system and to define the properties and filters used by Etendo to map with the external system information.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/crm-connector/#api-property","title":"API Property","text":"<p>An API property is like a Map which matches an external API key with an Etendo Message. It defines the data type and any other related configuration.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/crm-connector/#property-options","title":"Property Options","text":"<p>It allows the user to define options accepted by parent property.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/crm-connector/#filter","title":"Filter","text":"<p>Filters for external business partner integration. The filter has a defined type and it is linked to one or many properties.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/crm-connector/#filter-options","title":"Filter Options","text":"<p>It allows the user to define options accepted by the parent filter.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/crm-connector/#address-mapping","title":"Address Mapping","text":"<p>In this tab, the user can define addresses and determine the properties that should be used for each location column mapping.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/","title":"Enterprise Model","text":"<p>Enterprise Model folder allows the user to create and model the Organizations which belong to a Client.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#initial-organization-setup","title":"Initial Organization Setup","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Enterprise Model</code> &gt; <code>Initial Organization Setup</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#overview","title":"Overview","text":"<p>An Organization is an enterprise of a Client. A client can have at least one or even more than one organization as the way of configuring different types of enterprise models.</p> <p>Overall organizations can be:</p> <ul> <li>independent legal entities with a different Tax ID number</li> <li>enterprise groups with the aim of getting aggregated figures for the group</li> <li>or business areas of the client such as departments</li> </ul> <p>Besides, organizations can be structured:</p> <ul> <li>by country or region</li> <li>by area or function</li> <li>and so on, according to the enterprise model needs.</li> </ul> <p>All of the above provides an insight about the different scenarios which need to be covered while modeling the enterprise.</p> <p>There could be organizations which require to share master data such as business partners and products while having its own chart of account, taxes, financial reporting and transactional data. That could be the case of independent legal entities belonging to the same enterprise group.</p> <p>There could be organizations sharing master data and even the same chart of accounts. That could be the case of divisions or departments within the same independent legal entity.</p> <p>There could be organizations created with the aim of just grouping data, for which its own transactional data is not required.</p> <p>All of the above is possible due to the fact that there are different types of Organizations, see the section below, and besides organizations can be structured in a hierarchical way:</p> <ul> <li>At the highest level of the tree, there is an organization named (*).<ul> <li>(*) organization is created at the same time that the system client is created, and it is shared among the different client/s in the system.</li> <li>Master data created at (*) organization level is accessible for all the organization beneath it</li> <li>(*) organization is not an independent legal entity, therefore transactional data is not allowed.</li> <li>Every organization created later on will be created below (*) organization.</li> </ul> </li> <li>At a lower level of the tree, there can be parent organization/s which can have child organization/s beneath it/them.<ul> <li>Master data such as business partners and products created at parent organization level is accessible for all the child organization/s beneath it.</li> </ul> </li> <li>At the lowest level of the tree, there can be child organization/s with no organizations beneath it/them.<ul> <li>Master data such as business partners and products created at child organization level will not be accessible for the rest of the child organizations, if any.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#initial-organization-setup_1","title":"Initial Organization Setup","text":"<p>As already mentioned, Organizations are created by running the Initial Organization Setup process and not only that, once an organization has been created it must be set as \"Ready\" in the Organization window.</p> <p></p> <p>As shown in the image above, an organization can be created by providing the relevant data below:</p> <ul> <li>the name of the organization</li> <li>the name of the user of the organization<ul> <li>Etendo creates a new user and a new role which only has access to the newly created organization.<ul> <li>This user can be later on changed by assigning new roles to it.</li> <li>And the role can also be later on changed by assigning new organizations to it.</li> </ul> </li> </ul> </li> <li>the organization type. The options available are:<ul> <li>Organization - an organization which is not a legal entity and does not allow transactional data entering.<ul> <li>This type of organization allows the creation and configuration of master data to be shared among a group of organizations of any type belonging to it, for instance Business Partners, Chart of Accounts, etc.</li> <li>It does not require general ledger as it does not allow entering transactions, but it can have a given General Ledger configuration to be shared among the organizations underneath</li> <li>The accounting periods can not be opened and closed independently at its level.</li> <li>And there could be as many organizations type \"organization\" in a branch as required.</li> </ul> </li> <li>Legal with accounting - an independent legal entity with a unique Tax ID number which requires accounting, therefore:<ul> <li>This organization requires a General Ledger and therefore an Account Tree or Chart of Accounts, as well as a Fiscal Calendar because the accounting periods can and must be opened and closed at its level.</li> <li>This organization type allows the \"consolidation\" of the Balance Sheet and P&amp;L reports only for the Chart of Accounts it has assigned.</li> <li>Transactions are allowed for this organization type.</li> <li>And finally, there can only be one legal entity per tree branch, therefore the organizations underneath inherit the General Ledger configuration and the Fiscal Calendar of the legal with accounting organization.</li> </ul> </li> <li>Legal without accounting - an independent legal entity with a unique Tax ID number which does not require accounting because it is managed in a separated system, therefore:<ul> <li>This organization type does not need a general ledger nor a chart of accounts and will not support financial reports at its level.</li> <li>Transactions are allowed for this organization type. Transactions which will not be posted to the ledger.</li> <li>It can not have another legal entity in an upper/lower level of the enterprise tree structure.</li> </ul> </li> <li>Generic - an organization which is not a legal entity but must belong to a legal entity placed at an upper level in the organization tree structure. For instance, departments or divisions within an organization or legal entity.<ul> <li>There could be as many generic organizations as required per tree branch, but always under a legal entity.</li> <li>This organization type allows transactional data entry, it can have its own general ledger configuration and can inherit the general ledger configuration of the legal entity with accounting they belong to.</li> <li>The accounting periods can not be opened and closed independently at its level.</li> </ul> </li> </ul> </li> <li>the parent organization. While creating an organization, it is possible to select the organization to which the organization being created will belong to. The parent organization would need to be set as \"Summary\".<ul> <li>A generic organization can not be the parent organization of a legal entity organization, but the other way around.</li> </ul> </li> <li>the organization location/address</li> <li>and the organization currency</li> </ul> <p>Besides:</p> <ul> <li>There is a checkbox named \"Include Accounting\" which allows the user to select for an organization:<ul> <li>an accounting CSV file in the field \"Accounting File\"</li> <li>or a Chart of Accounts module reference data in the section \"Reference Data\". Reference data coming from extensions modules is master data such as Taxes, Chart of Accounts, etc to be applied from the already installed modules.</li> </ul> </li> </ul> <p>This action creates:</p> <ul> <li>a General Ledger configuration which is automatically linked to the Organization being created</li> <li>and an Account Tree or Chart of Accounts which is also linked to the Organization being created</li> </ul> <p>This step does not create a Fiscal Calendar as the Initial Client Setup process does, because Fiscal Calendars need to be created ad hoc for the \"Legal with Accounting\" Organizations for which \"Allow Period Control\" feature is going to be enabled.</p> <p>Note</p> <p>This step does not imply to manage accounting within an organization, but just to include an accounting file or an accounting reference data in an organization.</p> <p>Accounting management relies on the organization type being created.</p> <p>It is not mandatory to select \"Include Accounting\" checkbox while creating a legal entity with accounting organization for instance because:</p> <ul> <li>a legal entity with accounting can inherit the client chart of accounts</li> <li>or, later, both the Chart of Accounts and the General Ledger configuration can be created manually and be linked to the organization.</li> <li>if the checkbox \"Include Accounting\" is selected, it is possible to select for the organization being created below dimensions to be used while posting the organization's documents to the ledger:<ul> <li>Mandatory accounting dimensions such as \"Business Partner\" and \"Product\" and not mandatory accounting dimensions such as \"Project\" and \"Sales Region\" while creating an Organization in a \"Client\" which does not centrally maintain the accounting dimensions. In that case, the dimensions selected in here will all be listed in the dimensions tab of the organization's general ledger configuration, therefore will be available just for that organization.</li> <li>Additional accounting dimensions such as \"Project\" or \"Campaign\" while creating an Organization in a \"Client\" which centrally maintains the accounting dimensions. Once more, the dimensions selected in here will be listed in the dimensions tab of the organization's general ledger configuration, therefore will be available just for that organization.</li> </ul> </li> </ul> <p>It is possible to apply reference data such as:</p> <ul> <li>Document types and default algorithm for bank statements auto-matching, this one is similar to the previous one but for specific financial flows such as Payment Outs, Payment In and Financial Accounts.</li> <li>or reference data such as master data or configuration data (i.e. tax setup) created for Etendo extension modules.</li> </ul> <p>Finally, it is important to remark that:</p> <ul> <li>Each organization, of any type, can have its own general ledger configuration/s and currency/ies (apart from the one inherited from its parent) if it is configured to be that way for the Organization</li> <li>A calendar is mandatory just for the legal entities with accounting. This organization type is the only one which can have a calendar assigned, the rest can inherit it.</li> <li>Financial reports are run by general ledger configuration and therefore by currency, as each general ledger configuration has only one currency allowed.</li> <li>Financial Reports such as the Balance Sheet and the P&amp;L as well as Tax Reports can only be created at the level of Legal Entity with accounting.<ul> <li>Rest of reports such as sales, procurement and warehouse reports can be launched for any organization type.</li> </ul> </li> <li>A general ledger configuration should not be assigned to the (*) organization because that one will then be shared by all the organizations underneath.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#examples","title":"Examples","text":"<p>1. Etendo Demo Data:</p> <p>Etendo includes demo data for demonstration purposes, which includes an \"Enterprise Model\" composed by a set of organizations.</p> <p></p> <ul> <li>An organization type \"Organization\" named F&amp;B International Group.<ul> <li>This organization is not a legal entity and it does not allow transactions</li> <li>This organization allows the creation and configuration of master data to be shared among a group of organizations beneath it.</li> </ul> </li> <li>Two \"legal entities with accounting\" named \"F&amp;B Espa\u00f1a\" and \"F&amp;B US\" that belong to F&amp;B International Group.</li> <li>Below the legal entities with accounting organizations there are four \"Generic\" organizations, which are not legal entities but belong to a legal entity and besides allow transactional data entry:<ul> <li>F&amp;B US West Coast</li> <li>F&amp;B US East Coast</li> <li>F&amp;B Espa\u00f1a - Region Norte</li> <li>F&amp;B Espa\u00f1a - Region Sur</li> </ul> </li> </ul> <p>2. How to create each Organization type:</p> <p>The basic variables to take into account while creating an organization of the type \"Organization\" are:</p> <ul> <li>Organization Type = Organization</li> <li>Include Accounting = Yes     If the accounting configuration at this level needs to be shared by all the organizations underneath the one being created.</li> <li>Accounting Dimensions = Business Partner, Product and Project</li> </ul> <p>The basic variables to take into account while creating an organization of the type \"Legal with accounting\" are:</p> <ul> <li>Organization Type = Legal with accounting</li> <li>Include Accounting = Yes</li> <li>Accounting Dimensions = Business Partner, Product and Project</li> </ul> <p>The basic variables to take into account while creating an organization of the type \"Legal without accounting\" are:</p> <ul> <li>Organization Type = Legal without accounting</li> <li>Include Accounting = No</li> </ul> <p>The basic variables to take into account while creating an organization of the type \"Generic\" are:</p> <ul> <li>Organization Type = Generic</li> <li>Include Accounting = Yes     If this organization requires its own accounting configuration besides the inherited one, otherwise include accounting = No</li> <li>Parent organization = should be a \"Legal with Accounting\" organization.</li> </ul> <p>3. Enterprise Models examples:</p> <p></p> <p></p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#enterprise-module-management","title":"Enterprise Module Management","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Enterprise Model</code> &gt; <code>Enterprise Module Management</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#overview_1","title":"Overview","text":"<p>Datasets allow the user to define reference data such as master data or configuration data for modules or even for Etendo core.</p> <p>Reference data can be imported or applied to organizations in the \"Enterprise Module Management\" window by just selecting the organization for which the reference data needs to be applied and the reference data to apply or to import.</p> <p></p> <ul> <li>If a reference data is applied at (*) organization, every organization in the system will have access to that data.</li> <li>If a reference data is applied at a parent organization, all the organizations which belong to it will have access to that data.</li> <li>If a reference data is only applied to an organization which does not have any organization underneath in the tree, only that organization will have access to that data.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#organization-type","title":"Organization Type","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Enterprise Model</code> &gt; <code>Organization Type</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#overview_2","title":"Overview","text":"<p>An organization can be a Legal Entity, a Business Unit or neither of both. You can also select if transactions are allowed or not for this organization type.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#organization-type_1","title":"Organization Type","text":"<p>Etendo default Organization types are:</p> <p>Organization - an organization which is not a legal entity and does not allow transactional data entering.</p> <ul> <li>This type of organization allows the creation and configuration of master data to be shared among a group of organizations of any type belonging to it, for instance Business Partners, Chart of Accounts, etc.</li> <li>It does not require a general ledger as it does not allow entering transactions but it can have a given General Ledger configuration to be shared among the organizations underneath.</li> <li>The accounting periods can not be opened and closed independently at its level.</li> <li>And there could be as many organizations type \"organization\" in a branch as required.</li> </ul> <p>Legal with accounting - an independent legal entity with a unique Tax Id number which requires accounting, therefore:</p> <ul> <li>this organization requires General Ledger and therefore an Account Tree or Chart of Accounts, as well as a Fiscal Calendar because the accounting periods can and must be opened and closed at its level.</li> <li>This organization type allows the \"consolidation\" of the Balance Sheet and P&amp;L reports only for the Chart of Accounts it has assigned.</li> <li>Transactions are allowed for this organization type.</li> <li>And finally, there can only be one legal entity per tree branch, therefore the organizations underneath inherit the General Ledger configuration and the Fiscal Calendar of the legal with accounting organization.</li> </ul> <p>Legal without accounting- an independent legal entity with a unique Tax Id number which does not require accounting because it is managed in a separated system, therefore:</p> <ul> <li>this organization type does not need a general ledger nor a chart of accounts and will not support financial reports at its level.</li> <li>Transactions are allowed for this organization type. Transactions which will not be posted to the ledger.</li> <li>It can not have another legal entity in an upper/lower level of the enterprise tree structure.</li> </ul> <p>Generic - an organization which is not a legal entity but must belong to a legal entity placed at an upper level in the organization tree structure. For instance departments or divisions within an organization or legal entity.</p> <ul> <li>There could be as many generic organizations as required per tree branch but always under a legal entity.</li> <li>This organization type allows transactional data entry, can have its own general ledger configuration and can inherit the general ledger configuration of the legal entity with accounting they belong to.</li> <li>The accounting periods can not be opened and closed independently at its level.</li> </ul> <p>Additionally, an organization type can be configured as: \"Legal Entity\" \"Business Unit\" \"Legal Entity with Accounting\" \"Transactions Allowed\"</p> <p>Info</p> <p>Note that any of Etendo Organization types are configured as \"Business Unit\".</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#organization","title":"Organization","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Enterprise Model</code> &gt; <code>Organization</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#overview_3","title":"Overview","text":"<p>An organization is an enterprise of a Client. Each client must have at least one organization created by running the Initial Organization Setup process. The process of creating an organization ends after setting it as \"Ready\".</p> <p>In other words, the process of creating an organization ends after setting it as \"Ready\" since Etendo requires performing some checking which validates that the organization has been properly created and that the organization structure is valid. If an organization is not properly created, Etendo will display an error when trying to set it up as ready.</p> <p>Once an organization is set as ready, no changes can be made to the organization anymore. New organizations can be added, but cannot be placed above the current organization. They can be added underneath or at the same level.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#organization_1","title":"Organization","text":"<p>The Organization window allows the user to maintain the organizations created by the Initial Organization Setup process.</p> <p>There are different types of data left to be entered or changed for an organization:</p> <ul> <li>The Legal Name of the organization, this name, if any, will be the one used in the financial and tax reports.</li> <li>The Summary level checkbox informs Etendo if an organization is going to be a parent organization or not.   If an organization is set as summary, it could be selected as \"Parent Organization\" while running the Initial Organization Setup process.   This flag can always be changed regardless if the organization is already set as ready, as it is always possible to add organizations underneath an existing one.</li> <li>The Allow Period Control checkbox is only shown for \"legal with accounting\" organizations.</li> </ul> <p></p> <p>If enabled, it allows selecting a Fiscal Calendar for which the corresponding fiscal periods can be opened or closed in the Open/Close Period Control window.</p> <ul> <li>Opening &amp; Closing periods process impacts to the organizations underneath the \"legal entity with accounting\" organization.</li> <li>The organization's General Ledger.   For instance, legal entities with accounting organizations need to record and post the financial transactions such as invoices and payments to the ledger.   Etendo allows customizing the way that the financial transactions are posted to the ledger, that means customizing the General Ledger configuration to meet the organization's needs.   This field is automatically defaulted by Etendo, which means that a general ledger is created by default, if :</li> <li>a Localization Pack containing a localized chart of accounts module</li> <li>or an accounting CSV file</li> <li>or the Generic Chart of Accounts Module is installed and then selected while creating the organization by running the Initial Organization Setup process.</li> <li>The Default G/L Item for Funds Transfer is used to set default value for G/L Item parameter in Funds Transfer Process from the Financial Account.</li> </ul> <p>Inherited Information</p> <p>This field group is collapsed by default with the following read-only fields.</p> <ul> <li>the organization's Period Control Allowed Organization.</li> <li>the organization's Calendar Owner Organization.</li> <li>Calendar of the organization's Calendar Owner Organization.</li> <li>the organization's Legal Entity.</li> <li>the organization's Business Unit.</li> </ul> <p>Above fields are automatically fetched and set with proper values when setting organization as ready.</p> <p>An organization can have only one general ledger configuration assigned unless:</p> <ol> <li>the organization has its own one and besides inherits another one from its parent organization</li> <li>or if the advanced general ledger configuration feature is enabled at system level.</li> </ol> <p>The way to allow an organization to have more than one general ledger configuration assigned is described below:</p> <ul> <li>As System Administrator, set your own \"template\" as \"In Development\". Save.</li> <li>Once done, navigate to the \"Windows, Tabs, and Fields\" window</li> <li>Find the \"Organization\" window</li> <li>Navigate to the \"Tab\" tab and double click on the \"General Ledgers\" tab</li> <li>Set it as \"Active\". Save.</li> <li>Above detailed steps shows the General Ledger tab, which allows assigning more than one general ledger configuration to an organization.</li> </ul> <p>Food &amp; Beverage (F&amp;B) sample client shipped with Etendo illustrates scenario 1 above:</p> <ul> <li>Every F&amp;B sample client organization has been created by running the \"Initial Organization Setup\" process.</li> <li>The \"F&amp;B International Group\" is an \"Organization\" Organization Type.   An Accounting CSV file was selected while it was created, in the same way as the \"USD\" currency, therefore this organization has the \"F&amp;B International Group US/A/Dollar\" general ledger configuration assigned.</li> </ul> <p></p> <p>This general ledger configuration can also be shared by the organizations underneath, for instance \"F&amp;B US, Inc\" and \"F&amp;B Espa\u00f1a S.A.\"</p> <ul> <li>Same way, an accounting CSV file was also selected while creating the \"Legal with Accounting\" organization \"F&amp;B Espa\u00f1a S.A.\" same way as EUR currency, therefore this organization has the \"F&amp;B Espa\u00f1a, S.A US/A/Euro\" general ledger configuration assigned.   As a consequence, \"F&amp;B Espa\u00f1a S.A.\" has two general ledger configurations assigned, its own one and the inherited one.</li> <li>Besides, each of the general ledger configurations mentioned above are linked to a different account tree or chart of accounts.</li> <li>Therefore, every time that an \"F&amp;B US Inc\" transaction is posted to the ledger, Etendo opens a new window named \"Journal Entries Report\" which shows the journal entry created for the \"F&amp;B International Group US/A/Dollar\" general ledger configuration in USD and in the corresponding accounts of a given Chart of Accounts.</li> <li>Every time that an \"F&amp;B Espa\u00f1a S.A.\" transaction is posted to the ledger, Etendo opens two new windows, one per each general ledger configuration, one of them in USD and the other one in EUR, both of them in different accounts.</li> </ul> <p>The tree action button  allows dragging and dropping an organization within an enterprise model, whenever it is not \"Set as Ready\".</p> <p>\"Set as Ready\" process takes into account the list of requirements below per organization type:</p> <ul> <li>Organization type:<ul> <li>No requirements</li> </ul> </li> <li>Generic type<ul> <li>to have a \"Legal Entity\" organization type up in the enterprise model tree.</li> </ul> </li> <li>Legal without accounting<ul> <li>not to have another \"Legal Entity\" organization type up in the enterprise model tree.</li> </ul> </li> <li>Legal with accounting<ul> <li>to have its own general ledger configuration or an inherited one</li> <li>to allow period control</li> <li>to have a fiscal calendar assigned</li> </ul> </li> </ul> <p>Once an organization is set as ready:</p> <ul> <li>The organization newly created can not be moved up or down within the enterprise tree and can not be deleted.</li> <li>It is not possible to create new organizations up in the tree but underneath or at the same level.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#information","title":"Information","text":"<p>Information tab allows the user to add relevant information of an organization, information such as location and tax ID number.</p> <p></p> <p>Fields to fill in are:</p> <ul> <li>the organization Location</li> <li>the Tax ID number, if required</li> <li>the DUNS number, if any</li> <li>the User who will act as the main organization Contact. This organization contact is used in some localized fiscal reports (Spanish fiscal reports), that requires a contact person.</li> <li>The purchase invoice number which will be used for payments. There are two options available:<ul> <li>\"Invoice Document Number\" (internal number)</li> <li>or \"Supplier's Invoice Number\"  <ul> <li>Any of the above will be included in the payment description field to inform about the invoice number being paid.  </li> <li>This also changes what is going to be shown in several purchase windows such as Add Payment button in purchase invoice or Add details in Payment Out</li> </ul> </li> </ul> </li> </ul> <p>Finally, the checkbox Tax Not Deductible allows configuring an Organization as a non tax deductible organization, if enabled.</p> <p>That is the case of Organizations like Public Sector organizations for which tax deduction is not allowed. In this case:</p> <ul> <li>the purchase tax is posted as an expense</li> <li>and the issued sales invoices are tax-exempt</li> </ul> <p>The field Sales Tax Exempt Rate allows entering a by default exempt sales tax rate to be used in the sales invoices by the non-tax-deductible organizations.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#period-control","title":"Period Control","text":"<p>Period Control tab is a read-only tab which lists the fiscal calendar period status of an organization.</p> <p></p> <p>The Status</p> <p>It is split in two columns. One that represents the Status with a color code, making it easier to understand the situation at a quick glance. The other one represents the Status by its name, making it possible to filter the records shown. The possible Status values are:</p> <ul> <li>All Never Opened, colored in gray. Recently created Periods.</li> <li>All Opened, colored in green. All the Document Types are open for this Period.</li> <li>All Closed, colored in red. All the Document Types are closed for this Period.</li> <li>Mixed, colored in orange. Not all the Document Types have the same Status value in this Period. For more information refer to the Documents Tab below.</li> <li>All Permanently Closed, colored in red. All the Document Types are Permanently Closed for this Period.</li> </ul> <p>This tab can be used for searching for a period (i.e. Jan-19) and get its current status.</p> <p>As shown in the image below, the period Feb-19 has a mixed status, meaning that not all the Document Types have the same Status value within the Organization \"F&amp;B Espa\u00f1a S.A.\" which has the \"Calendario Espa\u00f1a\" assigned.</p> <p></p> <p>For more information, see Open/Close Period Control.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#documents","title":"Documents","text":"<p>Documents tab is a read-only tab which lists the Document Category status for a selected period of an organization.</p> <p></p> <p>For more information, see Documents in the Open/Close Period Control window.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#data-sets","title":"Data Sets","text":"<p>Data sets tab allows viewing the reference data applied to the organization and informs in case there is any update of a reference data applied available.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#warehouse","title":"Warehouse","text":"<p>Relation of prioritized on-hand warehouses of the Organization.</p> <p></p> <p>In this tab, it is possible to define the organization's warehouse/s, that way the quantity on hand of an organization is the sum of the available stock of its warehouse/s.</p> <p>It is possible to define the priority of each organization's warehouse/s therefore Etendo proposes first the goods of the warehouse with a higher priority.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#intercompany","title":"Intercompany","text":""},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#overview_4","title":"Overview","text":"<p>This section describes the Intercompany module included in the Etendo Financial Extensions bundle.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#description","title":"Description","text":"<p>In case the user has to create orders or invoices among two or more organizations that are different but belong to the same client, this functionality allows automatically generating the corresponding inverse document.\u00a0</p> <p>For example, if Organization A makes a sales transaction to organization B, once the sales invoice is manually created by Organization A, this functionality will automatically create a purchase invoice for Organization B.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#installation","title":"Installation","text":"<p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#set-up","title":"Set Up","text":""},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#organization-window","title":"Organization Window","text":"<p>It is required for each organization using this module to have one business partner assigned.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#business-partner-window","title":"Business Partner Window","text":"<p>Info</p> <p>When configuring a new Business Partner, take into account that this business partner should be visible in the inverse organization.\u00a0</p> <p>The Business Partner has to be configured as both vendor and customer, using the corresponding checkboxes.</p> <p></p> <p></p> <p>In the Intercompany Documents tab, it is necessary to select the required document types for this business partner.</p> <p>Info</p> <p>It is not mandatory to create new document types, but it is recommended.</p> <p></p> <p>Info</p> <p>Note: The information in both the source business partner and the target business partner should be the same.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#invoices-and-orders","title":"Invoices and Orders","text":"<p>Info</p> <p>The following information can be applied not only to sales and purchase invoices, but also to sales and purchase orders.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#header","title":"Header","text":"<p>The relevant fields are described below:</p> <ul> <li>Organization: it is necessary to select an organization configured to work as an intercompany organization (In the following example, the organization \u201cF&amp;B US East Coast\u201d).</li> <li>Business Partner: it is necessary to select a business partner configured to work as an intercompany business partner (In the following example, \u201cBe Soft Drinker, Inc.\u201d).</li> <li>Transaction document: it is necessary to select the document type defined in the intercompany document tab of the business partner (In the following example, the document type \u201cAR Invoice Intercompany\u201d).</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#lines","title":"Lines","text":"<p>The relevant fields are described below:</p> <ul> <li>Product: The product must be visible for both organizations (In the following example, \u201cLemonade\u201d).\u00a0</li> <li>G/L items: The necessary G/L items must be visible for both organizations.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#product-window","title":"Product Window","text":"<p>The relevant fields are described below:</p> <ul> <li>Price: The price must be equivalent and available in every price list.\u00a0</li> <li>Currency: The currency must be the same for both organizations.</li> <li>Tax: The tax in each organization must be equivalent.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#complete-or-book-documents","title":"Complete or book documents","text":"<p>When you complete invoices or book orders, these processes generate the corresponding inverse document and complete or book both the source and the target documents.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/enterprise-model/#reactivate-documents","title":"Reactivate documents","text":"<p>To reactivate intercompany documents, both documents should not have an associated payment.</p> <p>Info</p> <p>Note: This process is only allowed for source documents.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/","title":"General Setup - Getting Started","text":"","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/#general-setup-getting-started","title":"General Setup - Getting Started","text":"","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/#overview","title":"Overview","text":"<p>This section describes the steps that need to be performed first to configure Etendo. Etendo installations require at least a Client and an Organization. Client and Organization are the two key concepts within the General Setup.</p> <p>In other words, it is not possible to issue an invoice or to post a journal entry to the ledger in Etendo if there is no Client and Organization properly created and configured.</p> <p>The first steps to follow to configure Etendo are:</p>","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/#installation-of-the-localization-bundle-if-available-for-the-country","title":"Installation of the Localization Bundle if available for the country","text":"<p>Info</p> <p>Read the Install Modules documentation to install the Localization bundle. </p> <p>This can be considered the first basic step while setting Etendo instances as it is required to install first the localization bundle if any, in order to apply the accounting reference data or Chart of Accounts while creating either the Client or the Organization later on.</p> <p>A Localization Bundle can include at least:</p> <ul> <li> <p>the complete translation for the official language(s) in the country. The language is automatically available once the localization bundle has been successfully installed, therefore it can be selected as described at profile.</p> </li> <li> <p>the chart of accounts that defines the accounting structure if any to comply with the approved local practice and laws. The Chart of Accounts is available for selection just while running either the Initial Client Setup or the Initial Organization Setup.</p> </li> <li> <p>and the setup of the taxes which comply with the in-country tax authorities requirements. The setup of the taxes is also available for selection while running either the Initial Client setup or the Initial Organization setup, and even in the Enterprise Module Management window.</p> </li> </ul>","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/#initial-client-setup","title":"Initial Client Setup","text":"<p>A Client in Etendo is the top-most level of configuration and data within Etendo.</p> <p>Above means that certain configurations such as users, customers, vendors and other master data can be managed in a client and therefore be available across all the organizations within the client.</p> <p>Info</p> <p>Each client can host at least one or even more than one organization that can be used to model your enterprise.</p> <p>The Initial Client setup is the process which creates a Client in Etendo. A Client cannot be created manually.</p> <p>This process besides creating a Client allows selecting the reference data included in the bundle/s already installed. All that data, if applied to the Client, will be shared by all the organizations which belong to the Client.</p> <p>Info</p> <p>There is a System Client which is automatically created by Etendo as part of the Etendo installation process. This client handles application data such as tables, columns and fields and it also manages some data which can be shared across all the Clients such as currencies, countries and regions and units of measure.</p>","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/#initial-organization-setup","title":"Initial Organization setup","text":"<p>An Organization is the second level of configuration and data.</p> <p>Organizations can be structured in a hierarchical way within a Client providing multiple options while modeling your enterprise.</p> <p>There are different types of Organizations which can either be independent legal entities or not. Legal entities can either require accounting or not and Not Legal Entities can either allow transactional data or not.</p> <p>The Initial Organization setup is the process which creates Organizations in Etendo.</p> <p>Info</p> <p>An Organization can be created once the Client it belongs to has been created.</p> <p>An Organization cannot be created manually.</p> <p>Same way, this process besides creating an Organization allows selecting the reference data included in the bundle/s already installed.</p> <p>This time the data, if applied to the Organization, will be available just for the Organization being created.</p> <p>Info</p> <p>There is an Organization named (*) which is automatically created at the same time that the System Client is created. Every organization created later on will hierarchically be located below it.</p>","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/#users-and-roles-setup","title":"Users and Roles setup","text":"<p>Etendo security can be split into Functional and Data security. Functional security manage the access rights to Etendo entities such as Windows and Processes by properly setting up users and roles:</p> <p>A User is an entity which can log into Etendo whenever it has a password and at least one role assigned. Each person accessing Etendo should have a different user assigned properly configured.</p> <p>A Role is the connection between users and access rights to Organizations, Windows, Processes and Forms in Etendo. Access rights are first configured at role level, roles are then assigned to the user/s.</p> <p>Etendo creates two users by default, the System user and the Admin user:</p> <ul> <li>the System user is the owner of Etendo application data. It is not possible to log into Etendo as System user.</li> <li>the Admin user is a super user which has access to any Etendo Client.</li> </ul> <p>The password assigned to this user is Etendo, however it can be changed if needed in the user window.</p> <p>This user is assigned to the System Administrator Role, a role with no access restrictions. Data security is an advance setting as it manages the access rights to subsets of data within Etendo entities such as Windows and Processes, by properly setting up the Data Access Level at table level and the role:</p> <p>Info</p> <p>Data Access level defines the client and/or the organization each record is going to be visible from.</p> <p>Every table in Etendo has a Data Access Level column.</p> <p>User Access Level allows limiting the records which will be accessible in entities such as Windows, Processes, Forms, Widget Classes and Views for a role, or even limit the access to a given entity.</p>","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/#basic-setup-diagram","title":"Basic Setup Diagram","text":"<p>The diagram below shows the Etendo basic General Setup flow for a legal entity with accounting. This flow is one part of the overall Business setup flow.</p> <p></p> <p>In the example above, the Accounting data can not be shared across all the organization/s of the client because it was not applied at client level but to the Organization being created.</p> <p>This setup would fit in the case of a Client which has one or more independent legal entities with accounting underneath, same as the sample client shipped with Etendo by default (F&amp;B sample client).</p> <p>There is a close relationship between the general setup which allows the creation and configuration of an enterprise, and the accounting configuration area because to set a Legal with Accounting Organization as ready, it requires below accounting items to be properly created and configured first:</p> <ol> <li> <p>a Fiscal Calendar</p> </li> <li> <p>and an organization's General Ledger configuration which includes a dimension that is the Account Tree or Chart of Accounts.</p> </li> </ol> <p>Info</p> <p>The Fiscal Calendar, once manually created, can be available to all the organizations within the client if it is created for the (* (asterisk)) organization.</p> <p>A defaulted General Ledger configuration and the Chart of Accounts can be automatically created if an Accounting reference data such as a Localization Bundle containing a Chart of Accounts module is installed and applied to the Organization. Moreover, in case there is no Localization Bundle for your country, Etendo delivers a Generic Chart of Accounts module which, if installed and applied, creates a sample Chart of Accounts and a defaulted General Ledger configuration which can be later on customized to meet the needs of your organization.</p>","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/getting-started/#business-setup-diagram","title":"Business setup diagram","text":"<p>The diagram below shows the business setup flow. This business setup flow goes from the Generic setup and Master Data areas to the Accounting and Warehouse setup areas.</p> <p></p> <p>If you want to know more about the basic setup of the business configurations in Etendo, please review the different articles in the General Setup section.</p> <p>By following this setup flow you should be able to have your own version of Etendo ready to execute the basic Business Flows.</p>","tags":["Getting Started","Installations","Client Setup","Organization Setup"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/","title":"Process Scheduling","text":"","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#process-request-windows","title":"Process Request Windows","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt; <code>Process Request</code></p> <p>A background process is a system action requested by the user, who must provide auxiliary parameter values to execute that action. Process Request window allows the user to review and add background processes, which can be scheduled or unscheduled as required.</p> <p></p> <p>The information to fill in to schedule a background process is:</p> <ol> <li> <p>Select the Organization for which the background process is going to be scheduled.</p> </li> <li> <p>Select a Process or a Process Group from the corresponding list. To schedule a Process Group, check the Group flag, this will enable the Process Group field.</p> <p>Info</p> <p>A Process Group is scheduled in the same way as a single process. However, you cannot schedule a Process Group and a single process at the same time. </p> <p>See the Process Group Window section for more details.</p> </li> <li> <p>Select the Timing. Timing options are described in the options below:</p> Run ImmediatelyRun Later Schedule <ul> <li>Executes the process immediately.</li> <li>No additional configuration parameters are required.</li> </ul> <ul> <li>Executes the process once at a specified future time.</li> <li>Scheduling section fields:<ul> <li>Start Date and Start Time: Define when the first execution will occur.</li> </ul> </li> </ul> <ul> <li>Executes the process on a recurring basis.</li> <li>Scheduling section fields:<ul> <li>Start Date and Start Time: Define when the first execution will occur.</li> <li>Frequency: Select how often the process should run. Options include every n seconds, every n minutes, hourly, daily, weekly, monthly, or by entering a custom cron expression. Depending on the selected frequency, additional fields may appear for more precise scheduling.</li> <li>Number of Repetitions: Set how many times the process should repeat after the initial run. For example, entering 3 will result in a total of 4 executions.</li> <li>Finishes: Specify when the process should stop running. You can set a Finish Date and Finish Time to determine the end of the schedule.</li> </ul> </li> </ul> <p>Info</p> <ul> <li>Processes defined as Run Immediately and Run Later are one-time executions and can be either Scheduled or Rescheduled.</li> <li>Processes defined as Schedule are recurring executions and can be either Scheduled or Unscheduled.</li> </ul> </li> <li> <p>Select the Security Based on Role checkbox to ensure that only the user who schedules a process can monitor it in the process monitor window, otherwise any user sharing the same role as the one who scheduled the process will be allowed to monitor it.</p> <p>Tip</p> <p>In both cases, it is required that the role have access to the process in the Process Access tab of the Role window.</p> </li> </ol>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#process-monitor-tab","title":"Process Monitor Tab","text":"<p>Process monitor is a read-only tab that allows reviewing the status of processes executed by the current request.  The information shown is the same as the Process Monitor Window.</p> <p></p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#processes-in-group-tab","title":"Processes in Group Tab","text":"<p>In case that the process executed by the process request is a process group, you will find here the information about the executions of the processes in the group for each process group execution.</p> <p></p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#key-background-processes","title":"Key Background Processes","text":"<p>There are some background processes which are configured by default in the process request window:</p> <p>Info</p> <p>All these processes can be scheduled if logged as System Administrator.</p> <p>Besides, there are other background processes which can also be scheduled and therefore monitored:</p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#acct-server-process","title":"Acct Server Process","text":"<p>This process searches for and automatically Posts transactions in status Completed set as Posted = No.</p> <p>This process allows documents such as purchase invoices, sales invoices or GL journals get automatically posted without any user action but to schedule this process.</p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#alert-process","title":"Alert Process","text":"<p>This process checks if the SQL Query defined in each active alert rule returns any record in order to create the corresponding alert instance. </p> <p>This process also removes the fixed alerts instances to ensure they are not shown anymore.</p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#payment-monitor-process","title":"Payment Monitor Process","text":"<p>This process checks the invoice's payment status and updates the invoice's Payment monitor section.  </p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#execute-pending-payments-process","title":"Execute Pending Payments Process","text":"<p>This process checks and executes Payment In and Payment Out linked to a payment method having an Automatic Payment Execution Process, which are not set as Deferred and do not require any input to be executed.</p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#costing-background-process","title":"Costing Background Process","text":"<p>This process calculates the cost of the material transactions.</p> <p>The Costing Background Process is the process in charge of searching for goods transactions, whose cost has not yet been calculated. These include:</p> <ul> <li>Goods Receipts</li> <li>Goods Shipments</li> <li>Physical Inventory</li> <li>Goods Movements</li> <li>Internal Consumptions</li> <li>Productions</li> </ul> <p>This process considers only transactions having its Costing Status property as:</p> <ul> <li>Not Calculated</li> <li>Pending.</li> </ul> <p>The Costing background process calls the Costing Server process which calculates the cost of each transaction and takes into account what configured in the Costing Rule defined for the products, therefore either Warehouse dimension is taken into account while calculating the costs, or either average or standard cost is calculated for the products.</p> <p>The transactions are calculated sequentially ordered by the Transaction Process date that is the date and time when the document that originated the transaction was processed.</p> <p>Some costing algorithms such as FIFO implement the Pending Costing Status as a way to delay the cost calculation of a given transaction/s until the next run. This way, the costing calculation process is not stopped for the rest of the transactions having a Not Calculated or Pending status, for which it is possible to calculate the cost.</p> <p>Warning</p> <ul> <li> <p>The Costing Background process needs to be configured for each Legal entity defined in the client, as this process runs at legal entity (Organization) level.</p> </li> <li> <p>It is important to remark that if the process is scheduled at (*) organization level, it will run for all the Legal Entities defined in the Client, therefore it would not be necessary to configure the process more than once.</p> </li> </ul> <p>Failure</p> <p>If the Costing Server shows an error, the background process stops and it is not possible to calculate any new transaction cost until the error is fixed. The error message can be checked in the Process Monitor window.</p> <p>Info</p> <p>Although the Costing Background might have failed the process monitor might show a Success. Please refer to the Process Log field to get the real result message.</p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#price-correction-background-process","title":"Price Correction Background Process","text":"<p>Price correction background process searches for Goods Receipts that either have a purchase order related which has been reactivated and booked after completing the Goods Receipts or have a purchase invoice related</p> <p>After that, this process checks and compares whether:</p> <ul> <li>The purchase order price has changed before the invoice was booked</li> <li>The purchase invoice price is not the same as purchase order price.</li> </ul> <p>If the purchase price has changed, a Price Correction cost adjustment is created for the products included in the Goods Receipt(s).</p> <p>Info</p> <p>There is a menu process named Process Price Different Adjustment that manually adjusts all already invoiced Goods Receipts, if required. </p> <p>You can view the changes in the Cost Adjustments window.</p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#process-monitor-window","title":"Process Monitor Window","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt; <code>Process Monitor</code></p> <p>Process monitor window allows reviewing the status of processes executed by a user as well as the ones scheduled in the process request window.</p> <p>In other words, there are two types of processes which can be monitored in this window:</p> <ul> <li>Transactional processes such as Generate Average Cost or Generate Invoices.</li> <li>Background processes scheduled in the process request.</li> </ul> <p>In any case, only the users having a role which have access to a given process/processes will be able to monitor it/them in this window.</p> <p>Besides, and as already explained, Security Based on Role definition at process request level will allow defining the users which will be able to monitor a given background process in this window.</p> <p>Process Monitor window shows read-only information about individual process execution.</p> <p></p> <p>As shown in the image above, process monitor window provides the information below per each process executed:</p> <ul> <li>Process</li> <li>Process Group</li> <li>User who run the process.</li> <li>Start and End time</li> <li>Duration</li> <li>Status</li> <li>Channel. The options available are:<ul> <li>Direct: Transactional process executed manually by the user</li> <li>Process Scheduler: For background processes scheduled in the Process Request window.</li> </ul> </li> <li>Process Log</li> </ul>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#processes-in-group-tab_1","title":"Processes in Group Tab","text":"<p>In case the process executed is a process group, you will find here the information about the executions of the processes in the group.  </p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#process-group-window","title":"Process Group Window","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Process Scheduling</code> &gt; <code>Process Group</code></p> <p>A Process Group allows you to define and schedule a sequence of processes that will run one after another as a single batch. This is useful for automating workflows that require multiple processes to be executed in a specific order.</p> <p>When a Process Group is scheduled:</p> <ul> <li>A single entry appears in the Process Request and Process Monitor windows.</li> <li>Each process within the group also appears separately in both windows with its own log and status, regardless of whether it succeeded or failed.</li> </ul> <p></p> <p>Fields to note:</p> <ul> <li>Name: Identifier of the process group.</li> <li>Description: Additional information about the group.</li> <li>Prevent concurrent execution of the group: When enabled, the system will check if another instance of the same process group is already running (for the same client and organization) before starting a new execution. If one is found, execution is canceled and an error message appears in the log: Concurrent attempt to execute.</li> <li> <p>Stop group execution if a process fails: By default, if a process in the group fails, the following processes will still execute. When this option is selected, the entire group execution will stop immediately upon a process failure.</p> <p>Info</p> <p>This is useful when processes are dependent on each other.</p> </li> </ul>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/process-scheduling/#process-group-list-tab","title":"Process Group List Tab","text":"<p>List of individual processes, each with an assigned sequence number that determines the execution order.</p> <p>Error Result</p> <p>A process group will show an Error result if it has one or more Error results in the processes that conform the group.</p> <p>Empty Groups</p> <p>You can not launch executions of empty groups. If you try, you will receive this error: No processes on the group: Name of the Group.</p> <p>Prevent Concurrent Execution Co-Exists</p> <p>Prevent executions of single processes and group processes will co-exist. Which means that none of them overrides the other and both can be set at the same time.</p> <p>Permissions</p> <p>Process Group is a window, so you can manage permissions for creation of Process Group as you wish: Only System, some clients, some organizations, some roles, among others.</p>","tags":["Process Request","Process Group"]},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/","title":"Security","text":"<p>Security folder allows creating and configuring basic security entities such as users, user roles and access rights.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#user","title":"User","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Security</code> &gt; <code>User</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#overview","title":"Overview","text":"<p>A user is an entity which can log into Etendo whenever it has a password and at least one role assigned to it.</p> <p></p> <p>As shown in the image above, Etendo allows the user to sign in by entering a username and a password previously created in Etendo. The user assigned to that username will be able to sign in only in case it has at least one user role assigned to it.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#user_1","title":"User","text":"<p>User window allows the user to create as many Etendo users as required. Each person accessing Etendo can have a different user assigned.</p> <p></p> <p>As shown in the image above, a user can be created by entering the basic information below:</p> <ul> <li>the User First and Last Name</li> <li>the \"User Name\" and the \"Password\" to use for logging into Etendo</li> <li>and in the case of being an \"Employee\", the employee business partner records in the field \"Business Partner\", under the \"More Information\" section.</li> <li>the \"Expired Password\" checkbox: if it is checked, the user's password will be set as expired and when the user logs in, he will be forced to change it.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#user-roles","title":"User Roles","text":"<p>Roles are the connection between users and access rights. Each user can have more than one role assigned, however, a user can only log into Etendo by using just one role.</p> <p></p> <p>For instance, it is possible to create and configure a role for Sales, a role for Finance, a role for Warehouse, and another role for Procurement.</p> <p>Those roles will have to be configured to allow access to either sales, finance, warehouse or procurement windows, processes and forms. To learn more about how to do this, visit Role.</p> <p>Whenever there is a new member in the organization, a new user could be created and assigned to any of the existing roles instead of creating and configuring new users permissions every time.</p> <p>There can be a user having a given role set up as \"Role Administrator\", that user will be able to add new users to that role.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#role","title":"Role","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Security</code> &gt; <code>Role</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#overview_1","title":"Overview","text":"<p>The aim of a role is to group user/s depending on what parts of Etendo they are allowed to access to and therefore to work in.</p> <p>Info</p> <p>Etendo comes with a \"super\" user named \"admin\" (password \"admin\") which can be used to sign in for the first time.</p> <p>The admin user has several roles assigned:</p> <ul> <li>the System Administrator Role (this one is assigned to it by default)<ul> <li>this role enables admin users to have admin rights to all the existing Clients.</li> </ul> </li> <li>the F&amp;B International Group Admin Role demo data (this one is also assigned to it by default)<ul> <li>this role enables admin users to have \"F&amp;B demo data\" Client admin rights.</li> </ul> </li> <li>and besides:<ul> <li>every time a new \"Client\" is created by running the Initial Client Setup process, Etendo automatically creates for that Client a \"Client Admin\" user linked to a \"Client Admin role\":</li> <li>the client admin role enables \"Client Admin\" user to have admin access rights to that Client and all the organization/s of that client once signed in.</li> <li>the newly created client admin role is also assigned to the admin user by default, therefore it will be possible for the admin user to access the newly created Client.</li> </ul> </li> </ul> <p>Finally, every time a new \"Organization\" is created by running the Initial Organization Setup process, a new user and a new role are created and linked to each other, this time the new user role will only enable the user to access that Organization once signed in.</p> <p>Having said that, Etendo allows the creation of as many new \"Roles\" as required to be later on assigned to the existing and/or new users.</p> <p>Info</p> <p>Roles group user/s depend on the tasks they do and therefore the parts of Etendo they should have access to parts such as windows, processes, forms, widgets and views.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#permissions-inheritance","title":"Permissions Inheritance","text":"<p>It is possible to configure roles to retrieve their access to the different Etendo elements automatically, by inheriting them from other \"parent\" roles. This configuration is possible thanks to a feature known as Role Inheritance.</p> <p>Having a role, it is possible to assign one or more template roles to it. This way, all the elements which are accessible by these template roles will be available automatically for that role as well.</p> <p>Besides, any change done in a permission of a template role will be propagated automatically to every role inheriting from it.</p> <p>Note</p> <p>It is only possible to inherit permissions from template roles, which are manual roles as well.</p> <p>When inheriting from multiple roles, the permission application order is determined by the sequence number of each inheritance. This means that if a particular permission is inherited from multiple inheritance, the permission will be taken from the inheritance with higher sequence number.</p> <p>This process eases the role management, specially when the number of roles defined for a Client is high. Thus, it is possible to define template roles to give access for a particular set of elements, and then create multiple combinations of functional roles in order to give personalized access for the different users. This is illustrated in the picture below.</p> <p></p> <p>The current list of inheritable elements include the following: organizations, windows, tabs, fields, processes, forms, widgets, views, process definitions, preferences and alert recipients.</p> <p>For the case of preferences and alert recipients, there are some restrictions to make them inheritable:</p> <ul> <li>A preference is inheritable if it has a template role set in the Visible At Role field.</li> <li>It is not possible to create more than one preference with exactly the same visibility settings for a template role.</li> <li>An alert recipient is inheritable if it has the User field empty.</li> <li>It is not possible to create more than one inheritable alert recipient with the same alert rule for a template role.</li> </ul> <p>Note</p> <p>This mechanism takes into account the permissions manually given to the roles. This kind of not inherited access is not affected (not modified) in any case by the inheritance process.</p> <p>It is also possible to force the recalculation of the permissions of a role, using the Recalculate Permissions process. But following the common flows of a Role configuration, all the inheritances are calculated automatically, so this process is not necessary. For this reason, it remains hidden.</p> <p>As mentioned before, the changes (create, edit or remove) done in a permission which belongs to a template role will be propagated automatically to all the roles currently inheriting from it. For this reason, a warning message is displayed on the User Interface in order to inform users about the implications of this kind of action.</p> <p>This warning message is similar to the one shown below. It appears when creating or editing a record that belongs to a template role, in a tab of an inheritable entity.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#role_1","title":"Role","text":"<p>The Role window allows the user to review, create, configure and maintain the roles to use in a given client.</p> <p></p> <p>As already described, there are roles automatically created by Etendo which can be reviewed in this window.</p> <p>Besides, this window allows the user to create new roles for a given client. Roles creation can properly be done by using a Client Admin user &amp; role.</p> <p>The fields to fill in are:</p> <ul> <li>the Name and a brief Description of the role</li> <li>the \"User level\" which is a step forward \"Data Access Level\" to be defined at Role level.<ul> <li>User level allows the user to limit the records which will be accessible in entities such as windows, processes or forms for a role; or even to limit the access to a given entity for a role:</li> <li>Every table in Etendo has a \"Data Access Level\" defined. The options available are:<ul> <li>System, this level allows the user to see System Client records and (*) organization records, for instance application dictionary records.</li> <li>System/Client, this level allows the user to see any Client record and (*) organization records, for instance master data related records such as Countries.</li> <li>Client/Organization, this level allows the user to see any Client record but System Client and any Organization including (*) Organization, for instance master data related records such as Products.</li> <li>Organization, this level allows the user to see any Client record but System Client and any Organization record but (*) Organization records, for instance transactional data records such as Purchase Orders.</li> </ul> </li> <li>User Level available options are:</li> <li>System, if a table is defined as \"System\" data access level, a user role which has this user level assigned will be able to see the records of any Client including System Client records, in an entity such as a given window or form.</li> <li>Client, if a table is defined as \"System/Client\" data access level, a user role which has this user level assigned will be able to see the records belonging to any Client but System Client, in an entity such as a given window or form.<ul> <li>On the other hand, if a table is defined as \"System\" data access level, a user role which has this user level assigned will not be able to see any record as all of them will belong to System Client.</li> </ul> </li> <li>Client + Organization, if a table is defined as \"Client/Organization\" data access level, a user role which has this user level assigned will be able to see the records belonging to any Client but System Client and any Organization including (*) organization, in an entity such as a given window or form.</li> <li>Organization, if a table is defined as \"Client/Organization\" data access level, a user role which has this user level assigned will only be able to see the records belonging to a given organization but (*) organization, in an entity such as a given window or form.</li> <li>Additionally, depending on the role's user level, no data at all is visible based on the table's access level. This restriction can be bypassed by setting Bypass Access Level Entity Check preference to Y, the cases when entity is not accessible are:</li> <li>If access level is System and user level is not System</li> <li>If access level is Organization and user level is not Organization or Client+Organization</li> <li>If access level is Client/Organization and user level is not Client, Organization not Client/Organization</li> <li>If access level is System/Client and user level is not System or Client/Organization</li> </ul> </li> <li>Manual check. The role automatically gets all standard user plus admin privileges, even when new elements such as windows, processes, forms, widget classes, organizations are added unless the Manual check is enabled.<ul> <li>If the manual check is enabled, it will be possible to manually assign access to windows, processes, etc by manually selecting them in the corresponding tab or by using the process button \"Grant Access\".</li> <li>Grant Access process button allows the user to select:</li> <li>the module or application area for which access is required, modules such as Financial Management or Production Management among others.</li> <li>and the entities of the module selected for which access is required, entities such as windows, processes or forms among others.</li> <li>If the Grant Access process is executed for a role marked as template, the granted accesses will be propagated automatically to the roles inheriting from it.</li> </ul> </li> <li>Template check is shown for roles which have a manual access assignment (Manual flag is Yes). Roles marked as template are those that can be used by other roles to retrieve their permissions automatically, using the Role Inheritance mechanism.<ul> <li>For this reason, just template roles can be selected in the Inherit From field of the Role Inheritance tab.</li> </ul> </li> <li>Restrict backend access: If checked, this role will not have access to the backend (ERP). It will however have access to other applications (such as the WebPOS).</li> <li>For Portal Users: If checked, this role will have a simplified (portal) interface, where he only has available the workspace widgets. Portal interface changes the look and feel of the workspace. Top page menu and left-side menu are hidden. Usually a role for Portal Users gives access to users only to their own information using widgets.</li> <li>Portal Admin: If checked, the Portal Role will have Portal Administrator privileges.</li> <li>Is Web Service Enabled: If checked, web services will be able to obtain data for users with this role. It applies to both JSON REST and XML REST web services.</li> <li>Advanced check is shown for roles that have an automatic access assignment (Manual flag is No) and automatically grants access for such roles to all Advanced Features.<ul> <li>Manually created roles (Manual flag is Yes) have their own configuration which can include advanced features or not so this flag is not shown for them.</li> </ul> </li> <li>Client Administrator checkbox allows a role to admin other users' Workspace as well as Customized Forms\":<ul> <li>In other words, a client administrator role can assign widgets to the workspace of any client user as well as customized forms.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#org-access","title":"Org Access","text":"<p>Org Access tab allows the user to define the organization/s to which a given role will have access rights to.</p> <p>As already mentioned, every record in Etendo belongs to an organization, therefore the only way for a user role to edit a record which belongs to an organization is to provide that user role with access to that organization.</p> <p></p> <ul> <li>Organization Administrator checkbox allows a role to admin other users' \"Workspace as well as Customized Forms\":<ul> <li>In other words, an organization administrator can assign widgets to the workspace of any user of the organization as well as customized forms.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#user-assignment","title":"User Assignment","text":"<p>The User Assignment tab allows the user to add users to a given role.</p> <p></p> <p>\"Role Administrator\" checkbox allows the user to administer the given role for:</p> <ul> <li>Widgets: they will be able to set default widgets that will be seen by other users with the same role.</li> <li>Saved Views: this user will be able to share with other users with the same role the views she saved.</li> </ul> <p>Info</p> <p>As Role Administrator flag allows the user to modify behavior of other users with the same role, it should only be granted to trusted users.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#window-access","title":"Window Access","text":"<p>This tab lists and/or allows the user to add the windows to which a role will have access to.</p> <p>As already mentioned, every time a new role is created and saved without selecting the \"Manual\" checkbox, Etendo automatically fills in all the windows in the Window Access tab.</p> <p>The information above means that the newly created role will have access to every Etendo window.</p> <p></p> <p>Having said that, if the \"Manual\" checkbox is selected, it will be required to manually add a subset of windows which will be accessible for a given role, or it will be required to automatically add them by using the action process \"Grant Access\". This process will allow window access for a given Etendo module or area such as Projects, Finance or Sales.</p> <p>Editable Field checkbox defines if the accessible data in a window can be edited by the role or not.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#tab-access","title":"Tab Access","text":"<p>It defines whether a tab is editable or read-only for a concrete role.</p> <p>In a window accessible by a role, it is possible to define for each of its tabs if they are editable or not through the Editable Tab check.</p> <p>If the window is editable (Editable Field is checked), by default all its tabs will be editable. But it is possible to define some of them not to be editable for this role by adding them in this tab and setting to false the Editable Tab check. Note this is only true if the table behind the tab is editable for the role.</p> <p>In the same way, having a non-editable window, it is possible to define some of its tabs as editable by checking Editable Tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#field-access","title":"Field Access","text":"<p>It defines whether a field is editable or read-only for a concrete role.</p> <p>Field Access tab works very similarly to Tab Access tab, allowing the user to define write access up to a field granularity level.</p> <p>So if a tab is editable for a role, a concrete set of fields can be made read-only for that role, adding a new row in this tab for each field and setting false Editable Field of each of them. Or in the other way around: in a non-editable tab, fields can be editable if they are added and their Editable Field property is checked.</p> <p>When editing a tab with some fields defined not to be editable in this way, backend checks modifications in that tab to prevent this to happen. Note this also affects the field in case it was modified by, for example, a callout or a default expression. This is controlled by the Check on Save property, unflagging it, this check will not be performed allowing thus the field to be modified by a callout.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#report-and-process-access","title":"Report and Process Access","text":"<p>This tab lists and/or allows the user to add the reports and processes to which a role will have access to.</p> <p>As already mentioned, every time a new role is created and saved without selecting the \"Manual\" checkbox, Etendo automatically fills in all the reports and processes in the Report and Process Access tab.</p> <p>Above means that the newly created role will have access to every Etendo report and process.</p> <p></p> <p>Having said that, if the \"Manual\" checkbox is selected, it will be required to manually add a subset of report and process which will be accessible for a given role, or it will be required to automatically add them by using the action process \"Grant Access\". This process will allow report or process access for a given Etendo module or area such as Projects, Finance or Sales.</p> <p>Editable Field checkbox defines if the accessible data in a report or process can be edited by the role or not.</p> <p>By default, access to processes in a standard window given from a button is inherited from the permission to the window. So if the role has access to the window, it will be possible to execute all the processes defined in that window, regardless if there are explicit entries for them in Report and Process Access tab. This default behavior can be changed in two different ways:</p> <ul> <li>To revoke this inherited access and manually decide case by case which are the accessible processes, it is possible to define a \"Secured Process\" Preference (at system level or for that specific window) with \"Y\" as value.</li> <li>If the developer defined the process as Requires Explicit Access Permission. In this case, permissions will never be inherited for that process.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#form-access","title":"Form Access","text":"<p>This tab lists and/or allows adding the forms to which a role will have access to.</p> <p>As already mentioned, every time a new role is created and saved without selecting the \"Manual\" checkbox, Etendo automatically fills in all the forms in the Form Access tab.</p> <p>The information above means that the newly created role will have access to every Etendo form.</p> <p></p> <p>Having said that, if the \"Manual\" checkbox is selected, it will be required to manually add a subset of forms which will be accessible for a given role, or it will be required to automatically add them by using the action process \"Grant Access\". This process will allow form access for a given Etendo module or area such as Projects, Finance or Sales.</p> <p>Editable Field checkbox defines if the accessible data in a form can be edited by the role or not.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#widget-class-access","title":"Widget Class Access","text":"<p>This tab lists and/or allows adding the widget classes to which a role will have access to.</p> <p></p> <p>Widgets are User Interface elements which can either be placed in the Users' Workspace tab or be part of a generated window.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#view-implementation","title":"View Implementation","text":"<p>View implementation tab allows the user to select customized views.</p> <p>A view implementation is a completely custom implementation of a main view.</p> <p>The access to a custom view can be controlled through this role access tab.</p> <p></p> <p>For additional information about views, visit How to implement a new main view.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#process-definition","title":"Process Definition","text":"<p>Grants access to Process Definition. By default, access to process definitions in a window (given from a button), is inherited from the permission to the window. To cancel this inherited access and manually decide case by case which are the accessible processes, it is necessary to define a \"Secured Process\" Preference (at system level or for that specific window) with \"Y\" as value.</p> <p></p> <p>Access when the process is invoked from a standard window button is inherited in the same way that for Processes.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#role-inheritance","title":"Role Inheritance","text":"<p>It allows defining an inheritance for a role. An inheritance is a relationship between two roles: if role A inherits from role B, that means that all the permissions that role B has for different application elements like organizations, windows, reports, processes, widgets etc. will be automatically inherited by role A, allowing it to access those elements in the same way as B. It is also possible to define an inheritance hierarchy, i.e., a role can inherit from different roles, and the priority (order) to inherit the permissions is defined by the sequence number. This means that if two inheritances have accesses in common, the accesses of the inheritance with lower sequence number will be overridden with the accesses of the inheritance with higher sequence number.</p> <p>Within this tab is where the Role Inheritance configuration of a particular role is set.</p> <p></p> <p>The fields to fill in are:</p> <ul> <li>Inherit From: In this field, it should be selected the role whose permissions will be inherited. It defines the role that will be used to retrieve access to its permissions automatically.</li> <li>Sequence Number: It defines the order in the application of the role inheritance, when having multiple records in the tab. The lower this value is, the earlier will be retrieved the permissions of the related template role. This means that if the same permission is accessed by two template roles selected to inherit from them, the permission related to the inheritance with higher sequence number will override the other one.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#role-access","title":"Role Access","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Security</code> &gt; <code>Role Access</code></p> <p>This window defines access to DB /database tables and columns for selected roles. Edit a role to give or withhold the necessary access to tables and columns tables.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#table-access","title":"Table Access","text":"<p>Create or edit access to DB tables for a selected role. The user can give access to the needed information by selecting the options displayed in the table tab.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#audit-trail","title":"Audit Trail","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Security</code> &gt; <code>Audit Trail</code></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#overview_2","title":"Overview","text":"<p>Audit Trail allows the user to monitor every data change done in any table or entity through the user interface.</p> <p>Audit trail feature monitors data changes such as:</p> <ul> <li>Insert</li> <li>Update</li> <li>Delete</li> </ul> <p>Audit trail feature must be enabled by the \"System Administrator Role\" in the Application Dictionary, as the first thing to do is to configure the table/s for which this feature is going to be enabled.</p> <p>Once a change has been made in a table for which the audit trail feature has been enabled, it is possible to monitor that change through the user interface by using the action button \"Audit Trail\".</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#audit-trail_1","title":"Audit Trail","text":"<p>Audit Trail view displays read-only information about all the recorded data changes done in the tables for which the audit trail feature has been enabled.</p> <p></p> <p>The changes done in a given table, column and record are viewed by showing the corresponding record ID or UI of the records in the database.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#configuration","title":"Configuration","text":"<p>In order to track audit information, the system administrator needs to perform two tasks:</p> <ul> <li>Enable the audit trail for one or more tables in the system</li> <li>Run the 'Update Audit Trail infrastructure' process</li> </ul> <p>In the following sections, a step-by-step guide with more detailed information is provided.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#enabling-audit-trail-for-a-table","title":"Enabling audit trail for a table","text":"<p>Enabling/disabling the audit trail feature for a table is done in the Table definition in the Application Dictionary.</p> <ul> <li>Switch to the System Administrator role</li> <li>Go to Application Dictionary &gt; Tables and Columns</li> <li>Navigate to the table for which you want to enable the Audit Trail</li> <li>Switch to Edit View</li> <li>Mark the \"Fully Audited\" checkbox and save</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#audit-inserts","title":"Audit Inserts","text":"<p>When a table is flagged as Fully Audited, the users can decide if they want to audit the insertions done in that table.</p> <p></p> <p>If the Audit Inserts field is checked in a table, when a new row is inserted in that table several records will be inserted in the Audit Trail table, one for each column in the audited table. These records will contain the original value of the columns of the new row.</p> <p>Usually, it is not necessary to store this information, because the original value of a column could be easily obtained by using the Old Value and New Value fields of the Audit Trial table that correspond with that column. If the Audit Inserts field is left unchecked, only one row will be inserted in the Audit Trial table for each record inserted in the audited table. At least this one record needs to be inserted in the Audit Trial table to be able to store which process was used to create the record in the audited table.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#excluding-columns","title":"Excluding columns","text":"<p>By default, when a table is audited, modifications in any of its columns are audited. In some cases, it makes sense not to audit changes for some of them. This can be configured by setting the Exclude Audit flag in Tables and Columns &gt; Table &gt; Column tab.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#running-the-system-compilation","title":"Running the System Compilation","text":"<p>The audit trail system uses a number of generated triggers (one per table to be audited) to collect the audit data for all changes.</p> <p>These triggers need to be regenerated, when executing a system compilation, once the following actions have been performed:</p> <ul> <li>The Audit Trail feature has been enabled or disabled for a table</li> <li>There has been any structural change to a table being audited (i.e. new columns, changed columns)</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#the-audit-trail-popup","title":"The Audit Trail Popup","text":"<p>For the set of tables for which the audit trail feature has been enabled, the button  is shown in the toolbar of the corresponding windows. It gives access to the Audit Trail Popup.</p> <p>This popup allows examination of the history of the record which is currently shown in the window. It has two main view modes which allow examining the following data:</p> <ul> <li>'Record history' of a single record</li> <li>'Deleted records' of a single tab</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#the-record-history-view","title":"The 'Record History' view","text":"<p>This view is displayed when the popup is opened from an existing record via the new toolbar button.</p> <p>The top area always shows a reference to the entity (i.e. Sales Order) and the record \"1000175 - 2016-04-03 00:00:00.0-0.00\" for which the history is displayed.</p> <p>Then a number of filters are available which allow some restriction on the changes displayed to ease the use of records with many modifications.</p> <p>The grid in the lower area shows all changes done to this record while the audit trail feature was enabled. The changes are shown sorted from the most recent change back to earlier changes.</p> <p>Info</p> <p>Only fields which are visible in the corresponding tab are shown here.</p> <p>A row in this grid corresponds to a single changed field. For changes to an existing record, the number of grid entries shown correspond to the number of fields changed. For new record creations or record deletion, one row in the grid is shown per field of the inserted/deleted record.</p> <p></p> <p>Finally, a link just on top of the grid allows switching to the 'Deleted Records' view. Following that link will show deleted records for the tab from which the Audit Trail popup was opened.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#disable-filtering-by-user","title":"Disable filtering by User","text":"<p>The User filter can be removed from both the 'Record History' and the 'Deleted Records' view. This can be interesting for performance reasons when the number of users available is high. In order to do this, go to General Setup|Application|Preference and add the following preference: Show Audit Trail User filter with value Y.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#the-deleted-records-view","title":"The 'Deleted Records' view","text":"<p>This view allows examination of records which have been deleted from a tab and are otherwise no longer accessible in the user interface.</p> <p>The general layout of the view is similar to the record history view.</p> <p>An info on the top shows a reference to the entity for which the deleted records are shown. Directly below, a number of filters is available to restrict the records shown.</p> <p>Then a grid displays all deleted records belonging to this tab/entity. Here one row shown corresponds to a single deleted record and the columns shown are the same as the ones shown in the normal grid view of the same tab.</p> <p></p> <p>This view offers a number of navigation choices to view related or more detailed information.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#navigation-back-to-history","title":"Navigation: Back to history","text":"<p>The first one is Back to history. Following this link, the view is just switched back to 'Record History' showing the same records as shown before going to the deleted records view.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#navigation-history-of-selected-record","title":"Navigation: History of selected record","text":"<p>The next one, View history of selected deleted record below, allows examining the detailed history of a deleted record, instead of the summary view which is shown here.</p> <p>This detailed history is displayed in the same 'Record History' view, however its top info area notes the fact that the history of a deleted record is displayed.</p> <p>The following screenshot shows an example of the history view of the same deleted 'Sales Order' entry. Compared with the previous example of this view, new history entries corresponding to the deletion are shown in addition to the older information about the record creation and modification.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#navigation-child-tabs","title":"Navigation: Child Tabs","text":"<p>As the last method of navigation, the popup allows filtering records based on a parent record. This can be useful to search for deleted lines belonging to a sales order.</p> <p>There are two possible ways based on the status of the parent record: still existent or already deleted.</p> <p>If the parent record (i.e. a Sales Order) does still exist, then the following steps can be done two view its deleted lines:</p> <ul> <li>Go to the lines tab of the Sales Order</li> <li>Click the audit trail icon to open the record history view</li> <li>Use the 'Deleted Records' links to switch to deleted records view</li> </ul> <p>As the lines tab is not a top level tab (it has a parent tab Sales Order) the deleted records view is automatically filtered to only show lines belonging to the current Sales Order. As visual information that the information shown is filtered, the top info area shows:</p> <p></p> <p>If the parent record (i.e. a Sales Order) does not exist anymore, then the same can be accomplished by using the following steps:</p> <ul> <li>Go to the 'Deleted Records' view of the Sales Order tab</li> <li>Search the Sales Order for which the deleted lines should be shown</li> <li>Click the Lines link just below the grid</li> </ul> <p>Then the deleted records view will show the deleted lines belonging to the selected (deleted) Sales Order.</p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#a-generated-audit-trail-window","title":"A generated Audit Trail Window","text":"<p>The second interface to view audit data is a normal generated window which is based on the AuditTrail entity, and allows browsing all audit information filtered by the currently active client. Open the Application menu and navigate to General Setup, Security and select Audit Trail.</p> <p>It offers a raw view of the audit data, meaning that no translation of raw values is done, but instead the raw column values of each change are displayed.</p> <p>Simultaneously, this window allows a much more flexible filtering/searching.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#limitations","title":"Limitations","text":"<p>The audit trail feature will record all data changes (for the table for which it has been enabled) with the following exceptions:</p> <ul> <li>text fields of types (char,varchar) with a length &gt;= 4k will not be audited</li> <li>text fields of types (nchar,nvarchar) with a length &gt;= 2k will not be audited</li> <li>BLOB fields (binary stored inside the database) will not be audited</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/general-setup/security/#etendo-advanced-security","title":"Etendo Advanced Security","text":"<p>The Etendo Advanced Security module allows the user to customize several security features such as the following:</p> <ul> <li>Password Security</li> <li>Password History</li> <li>User Lockout</li> <li>Multiple Session Verification</li> <li>Changing Password after Login</li> <li>Expiration Time (Autolock Password)</li> </ul> <p>Info</p> <p>For more information, visit the Etendo Advanced Security module User Guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/","title":"Business Partner Setup","text":""},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview","title":"Overview","text":"<p>Business partners can be grouped into different categories with the aim of helping their management and analysis.</p> <p>You may want to group the suppliers of a certain type of products within the same category, in order for you to compare the purchase prices your company got from them in relation to the same type of products.</p> <p>Or you may want to group the customers located in your country within the same category, a different one than the one which groups the customers located abroad, in order for you to compare national and foreign sales figures.</p> <p>All of the above is possible due to the fact that Business Partner Group is a dimension of Purchase and Sales Reports.</p> <p>To learn more, visit Procurement Analysis Tools and Sales Analysis Tools.</p> <p>Finally, it is also important for you to take into account that each business partner category allows the user to set up a different set of ledger accounts to be used while posting transactions such as customer receivables or vendor liabilities.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#business-partner-set","title":"Business Partner Set","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Business Partner Set</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview_1","title":"Overview","text":"<p>In this window the user can define lists of business partners to use in other functionalities.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#header","title":"Header","text":"<p>In the Business Partner Set header the fields to complete are the organization and the name of the list of business partners. It is also possible to add a description when necessary.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#lines","title":"Lines","text":"<p>The lines tab allows the user to add the required business partners to the corresponding business partner set.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#business-partner-category","title":"Business Partner Category","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Business Partner Category</code></p> <p>Business partner category window allows the user to create and configure every business partner category your organization may need.</p> <p></p> <p>As shown in the image above, the creation of a business partner category requires entering below listed information for each category:</p> <ul> <li>a Search Key or short name which helps to easily find a category</li> <li>a Name</li> <li>and a Description</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#accounting","title":"Accounting","text":"<p>Each business partner category allows the user to configure a different set of ledger accounts.</p> <p></p> <p>There are several business partner related accounts which need to be properly set up for the organization's general ledger configuration.</p> <p>The \"Copy Accounts\" process of the Defaults tab of the General Ledger Configuration screen allows the user to automatically populate at least the mandatory ones shown in the image above.</p> <p>The accounts automatically defaulted by Etendo can always be changed if required.</p> <p>These ledger accounts are the ones to be used while posting business partner related transactions such as:</p> <ul> <li>Customer Receivables, sales invoices posting.   To learn more, visit Sales Invoice</li> <li>Customer Prepayments, customer payments in advanced posting.   To learn more, visit Payment In</li> <li>Vendor Liabilities, purchase invoices posting.   To learn more, visit Purchase Invoice</li> <li>Vendor Prepayments, vendor payments in advanced posting.   To learn more, visit Payment Out</li> <li>Non-invoiced Goods Receipts, Goods Receipt posting   To learn more, visit Goods Receipt</li> <li>Write-off amounts, or amounts your company expected to get paid by a customer which are not going to be paid anymore.   To learn more, visit Payment In</li> <li>Revenue Write-off amounts, or amounts to be paid by your company to a supplier which are not going to be paid anymore.   To learn more, visit Payment Out</li> <li>Doubtful Debt Account, doubtful debts posting.   To learn more, visit Doubtful Debt Run</li> <li>Bad Debt Expense Account, expense amount classified as bad debt.   To learn more, visit Doubtful Debt Run</li> <li>Bad Debt Revenue Account, revenue amount classified as bad debt.   To learn more, visit Doubtful Debt Run</li> <li>Allowance for Doubtful Debt Account, amount used to provision against possible bad debts.   To learn more, visit Doubtful Debt Run</li> </ul> <p>The \"Copy Accounts\" action button allows the user to copy the accounts defaulted in this window to either:</p> <ul> <li>the Customer Accounting tab</li> <li>or the Vendor Accounting tab</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#invoice-schedule","title":"Invoice Schedule","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Invoice Schedule</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview_2","title":"Overview","text":"<p>Invoice schedule window allows the user to define and configure how often and by when an organization can issue invoices to be sent to customers.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#invoice-schedule_1","title":"Invoice Schedule","text":"<p>An organization can agree and therefore define specific schedules for issuing invoices, schedules which will then need to be linked to the corresponding customers.</p> <p></p> <p>As shown in the screen above, an invoice schedule can be easily created by entering below data:</p> <ul> <li>a Name for the invoice schedule</li> <li>a Description if needed</li> <li>the Invoice Frequency which defines how often sales invoices are going to be issued. The values allowed are:</li> <li>Daily - a daily invoice schedule does not require any additional setup as it implies a daily generation of sales invoices.</li> <li>Monthly or Twice Monthly - a monthly or twice monthly invoice schedule requires to enter additional data such as:<ul> <li>Day of the Month - this is the day when the invoice is generated, by example: 1st February.</li> <li>Invoice Cut-Off Day - this is the last day for including the orders to be invoiced, by example: 31st January</li> </ul> </li> <li>Weekly - a weekly invoice schedule requires to enter additional data such as:<ul> <li>Day of the Week - when the invoice is going to be generated, by example: Saturday</li> <li>Day off the Week Cut-Off - this is the last day of the week for including the orders to be invoiced, by example: Friday.</li> </ul> </li> </ul> <p>The process \"Generate Invoices\" takes into account both:</p> <ul> <li>the \"Invoice Terms\",   to learn more about \"Invoice Terms\" visit \"Master Data Management // Business Partner // Customer tab\".</li> <li>as well as the \"Invoice Schedule\"</li> </ul> <p>agreed and therefore assigned to each customer.</p> <p>To learn more about this process, visit \"Sales Management // Transactions\".</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#title","title":"Title","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Title</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview_3","title":"Overview","text":"<p>Title window allows the user to set up business partner titles such as Mr or Madame to be used while contacting business partners.</p> <p>The same applies to any type of \"Contacts\" entered in Etendo.</p> <p>This is an \"Advanced Feature\". To be reviewed, as I do not see where Titles can be assigned to business partners and contacts.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#title_1","title":"Title","text":"<p>There are many titles to use while contacting business partners of any type as well as contacts.</p> <p></p> <p>Once the required titles have been properly entered and configured, you can link them to the corresponding business Partner \"Contact/s\" in the Business Partner window.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#translation","title":"Translation","text":"<p>Business partner titles can be translated to any language required.</p> <p>The way to get that is as simple as:</p> <ul> <li>select first the language required</li> <li>and then enter the title name translated into that language.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#payment-term","title":"Payment Term","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Payment Term</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview_4","title":"Overview","text":"<p>A payment term specifies the period allowed to pay off an amount due.</p> <p>A vendor or a customer may demand a deferred payment period of 30 days or may even demand to partially pay their debts or collect in two or more deferred periods.</p> <p>Therefore \"Payment Terms\" will generate a list of scheduled payment/s against an invoice, each payment/s will have a due date and a due or expected amount to be paid.</p> <p>In other words, each payment term line and/or header is a different scheduled payment against an invoice.</p> <p>The way it works is:</p> <ol> <li>Payment terms must be first properly created and configured as described in this section.</li> <li>Then payment terms must be linked to each business partner as described in the \"Master Data Management // Business Partner\" section.</li> <li>Finally, every time an invoice is booked for that business partner the payment terms setup by default will be applied and therefore used for the creation of the corresponding Invoice \"Payment In/Out Plan\".     A payment in/out plan lists as many scheduled payments against an invoice as due dates configured in the payment term associated with that invoice.</li> </ol>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#header_1","title":"Header","text":"<p>Payment Term window allows the user to create and configure the payment terms to be linked to the business partners.</p> <p></p> <p>As shown in the screen above a payment term which only has a deferred period such as \"100% in 120 days\", can be created by entering below data in the payment term header window:</p> <ul> <li>an \"Offset Month Due\" which is the length of the payment period agreed in months, by example \"4\" as four months.</li> <li>or an \"Overdue Payment Days Rule\" which is also the length of the payment period agreed but in days, by example \"120\" as one hundred and twenty days.</li> <li>Fixed Due Date flag allows you to enter a fixed maturity payment date, such as 20th of each month, by example.</li> <li>Next Business Day flag allows you to set as payment date not exactly the corresponding due date but the next business day, this helps avoid due dates calculation over the weekend.</li> <li>Overdue Payment Day Rule allows you to enter a fixed payment day.</li> </ul> <p>It is important to remark that in the case of defining a payment term split into more than one deferred period such as \"50% in 30 days and 50% in 60 days\", the second one (or the latest one in case of more than 2 deferred periods) must be setup in the header not in the lines as shown in the image below:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#translation_1","title":"Translation","text":"<p>Payment Terms can be translated to the language required.</p> <p>The way to get that is as simple as:</p> <ul> <li>selecting first the language required</li> <li>and then entering the payment term name translated into that language.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#lines_1","title":"Lines","text":"<p>It is possible to split payment terms into more than just one payment term line.</p> <p>The information you can enter for each payment term line is:</p> <ul> <li>Percentage Due - or the percentage of the due amount to be paid each time or for each payment term line.</li> <li>Etendo first shows a \"100.00 %\". That value can always be changed as needed for the lines.</li> <li>Etendo sums up the percentage enter for each payment term line</li> <li>therefore the remaining % up to 100.00%\" is the one which will apply to the very last payment term set up in the header.</li> <li>Offset Month Due - or the length of the deferred period in months</li> <li>Overdue Payment Days Rule - or the length of the deferred period in days</li> <li>Fixed Due Date - this one allows you to enter a fixed maturity payment date such as 20th of each month.</li> <li>Payment Method - you can get that a payment term line uses a specific payment method which would overwrite the overall one used at invoice level.</li> <li>Rest - this flag implies that the due amount calculated is not the total amount of the invoice but the total amount of the invoice decreased by the previous due amount</li> <li>therefore the very last due amount will just be the remaining amount.</li> <li>Exclude Tax - if a payment term line is marked as \"exclude tax\" the corresponding schedule payment will not include taxes.</li> <li>that time the amount due is the [total net due amount * percentage due]</li> <li>those taxes will be taken into account in the very last payment together with the remaining due amount including taxes.</li> <li>Fixed Week Day - a fixed day of the week can be selected to get that calculated due dates matches exactly that day of the week.</li> <li>Next Business Day - allows you to set as payment date not exactly the due date but the next business day.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#return-reasons","title":"Return Reasons","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Return Reasons</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview_5","title":"Overview","text":"<p>In this window you can configure different reasons because either you return goods or the customer returns goods. This is the reason why these values are used in Return to Vendor and Return from Customer windows</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#return-reasons_1","title":"Return Reasons","text":"<p>This window is in Application||Master Data Management||Business Partner Setup||Return Reasons</p> <p></p> <p>Fields:</p> <ul> <li>Return from customer: When this flag is marked, the value will be available in the window Return from Customer window</li> <li>Return to vendor: When this flag is marked, the value will be available in the window Return to vendor window</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#volume-discount","title":"Volume Discount","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Volume Discount</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview_6","title":"Overview","text":"<p>Volume discounts are discounts which apply after getting a certain volume of sales of specific products or product groups.</p> <p>Volume discounts are incentives intended to encourage the purchase of goods in greater quantities. This incentive is normally offered to pass on some of the economic efficiencies gained through larger orders, to improve customer relations, and to increase total volume of sales.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#volume-discounts","title":"Volume Discounts","text":"<p>Volume Discount window allows the user to create and properly configure volume discounts related to specific products and/or product groups, which are later on assigned to selected business partners.</p> <p></p> <p>As shown in the image above, a volume discount can be created by just entering below data in the \"Volume Discount\" header window:</p> <ul> <li>the \"Name\" of the volume discount</li> <li>the \"Currency\"</li> <li>the \"Included Products\" to which the volume discount will apply. Available options are:</li> <li>Only those defined - which means applicable to all the products defined in the \"Product\" tab below.</li> <li>or All excluding defined - which means all products but the ones defined in the \"Product\" tab below.</li> <li>the \"Included Product Categories\" to which the volume discount will apply. Available options are:</li> <li>Only those defined - which means applicable to all the product categories defined in the \"Product Category\" tab below.</li> <li>or All excluding defined - which means all product groups but the ones defined in the \"Product Category\" tab below.</li> <li>Scaled - A volume discount can be scaled which means that it is possible to define a set of amount ranges having a different discount. To learn more, visit the \"Volume Discount Parameters\" tab below.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#product-category","title":"Product Category","text":"<p>A volume discount can be configured for a set of product categories or can be configured for all product categories but for a set of them.</p> <p>Therefore, and depending on the criteria taken, you could select here the products to either include or exclude of a given volume discount.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#product","title":"Product","text":"<p>A volume discount can be configured for a set of products or can be configured for all products but a set of them.</p> <p>Therefore, and depending on the criteria taken, you could select here the product groups to either get included or excluded of a given volume discount.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#volume-discount-parameters","title":"Volume Discount Parameters","text":"<p>Volume discount parameters are a discount % as well as the minimum amount up to which the discount % is applied.</p> <p>Besides, it is also possible to configure not just a minimum amount up to which a given discount % will apply, but a set of amount ranges to which a different discount % will apply.</p> <p>As an example, you could configure a volume discount which applies:</p> <ul> <li>a 2% to the amount range =0,00 to 9,999.99</li> <li>a 5% to the amount range = 10,000.00 to 24,999.99</li> <li>and a 10% to a minimum amount up to 25,000.00</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#business-partners","title":"Business Partners","text":"<p>Volume Discounts can be assigned to selected business partners within a given time period.</p> <p>You can also get a volume discount applied to a selected business partner starting from a given \"Valid From Date\".</p> <p>Regardless volume discount makes more sense for \"Sales Transaction\", it is also possible to create and configure volume discounts to be applied to selected suppliers or vendors by:</p> <ul> <li>removing the \"Sales Transactions\" flag</li> <li>and by removing the filter \"Customer\" while selecting business partners in the business partner selector.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#basic-discount","title":"Basic Discount","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Basic Discount</code></p> <p>A Basic Discount is a deduction from the total amount of an order or an invoice.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview_7","title":"Overview","text":"<p>Discounts of this type means a sum of the total order / invoice discount amounts, excluding taxes per each tax rate.</p> <p>Discounts tab can be found in the Purchase &amp; Sales Order / Invoice windows and allows the user to add discounts manually or to review the ones automatically applied by Etendo based on the Business Partner Discount tab configuration.</p> <p></p> <p>Discounts</p> <ul> <li>When an order or an invoice is in Draft status, the total amounts are the totals amounts including tax, but excluding discounts.</li> <li>Once the order/invoice is Processed, Etendo calculates the monetary value of the corresponding discounts and shows them as new order/invoice lines.</li> <li>Discount lines have no product nor account but the discount product (see below).</li> <li>Besides, Etendo creates as many new invoice lines as discounts included in the invoice as well as tax rates (%).</li> <li>Discount lines have an ordered quantity equal to \"1\" and a Net Unit Price equal to the calculated discount amount with an opposite sign to the invoice amount (normally negative) in order to reduce it.</li> <li>Finally, discounts can be calculated in cascade.</li> <li>Cascade calculation implies that the first discount is applied to the total net amount and the second discount is applied to the total net amount already decreased by the first discount amount, and so on. Configured in the Business Partner Discount tab.</li> </ul> <p>Example 1. Purchase invoice containing just one tax rate:</p> <ul> <li>Let us imagine a purchase invoice containing two invoice lines for a net line amount of 1,000.00 each.</li> <li>A 18% tax rate applies to both purchase order lines.</li> <li>There is a 10% Discount assigned to the supplier, therefore that discount is shown in the Discounts tab.</li> <li>Once above purchase invoice is booked:</li> <li>Etendo shows just one new line with below information:<ul> <li>Product named Discount 10% which is the one created and linked to the discount.</li> <li>Invoiced Quantity equals to 1.</li> <li>Net Unit price equal to the applicable discount amount, which in our example is -200 (10% of the total net amount 2,000.00).</li> </ul> </li> </ul> <p>Example 2. Purchase invoice containing two different tax rates:</p> <ul> <li>Let us imagine a purchase invoice containing two invoice lines for a net line amount of 1,000.00 each.</li> <li>A 18% tax rate applies to the first purchase invoice line, and an 8% tax rate applies to the second one.</li> <li>There is a 5% Discount assigned to the supplier, therefore that discount is shown in the Discounts tab.</li> <li>Once above purchase invoice is booked:</li> <li>Etendo shows two new lines, each of them with below information:<ul> <li>Product named Discount 5% which is the one created and linked to the \"Discount\".</li> <li>Invoiced Quantity equals to 1.</li> <li>Net Unit Price equals the applicable discount amount, which in our example is -50 (5% of the total net amount at a given tax rate 1,000.00).</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#basic-discount_1","title":"Basic Discount","text":"<p>A total discount can be created and configured by entering a discount name, a discount product and a discount %.</p> <p></p> <p>Fields to note:</p> <ul> <li>Previously created Product you could name the same as the discount name. That product is the one to be filled in the new orders / invoice line/s to manage this type of discounts (see above).</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#salary-category","title":"Salary Category","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Salary Category</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#overview_8","title":"Overview","text":"<p>Create salary categories to be applied to your employees/workers.</p> <p>The salary category and related cost is used in the Production module for the calculation of the cost of a product that is the result of the production process.</p> <p>All operations in the production process consist of activities. These activities have a cost center defined and how much time of that cost center is used. Each cost center has the employees that are part of the cost center, defined by salary category in the employee tab. The employee is set up as an operator in the employee tab of the business partner. Apart from the employee cost, also the machines cost used in the cost center and any indirect cost, such as electricity, is set up. Based on these components, a cost per hour related to the cost center can be defined. Based on the use of the cost center during production, a cost per produced unit is added to the total cost of the unit.</p> <p>The salary category and related cost is also used in the Project and Service management module to calculate the profitability of a project. The cost related to a salary category for Project Management has to be defined with the 'per hour' unit of measure.</p> <p>The setup of the salary category of the employee is done in the [Cost Salary Category] tab underneath the [Employee] tab of the Business Partner</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#salary-category_1","title":"Salary Category","text":"<p>It defines costs and date ranges for a specified salary category.</p> <p>For the use of the salary category for the cost calculation in the Production and Project and Service management module, the cost applied checkbox is selected.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#cost","title":"Cost","text":"<p>It creates a salary category.</p> <p>Cost UOM: for Project and Service Management, the salary is set up per Hour, so that when the time expenses are entered, the cost of that time can be added to the profitability report.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#rappel-configurations","title":"Rappel Configurations","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Setup</code> &gt; <code>Rappel Configurations</code></p> <p>Info</p> <p>To be able to include this functionality, the Advanced Rappels module of the Sales Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Sales Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Sales Extensions - Release notes.</p> <p>Rappels are discounts based on the volume of consumption of a business partner in a given period of time. This functionality allows the user to configure and grant rappels to business partners.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#requirements","title":"Requirements","text":"<p>Before the user is able to use this functionality, it is necessary to configure a new document sequence and a new document type to be used for Rappels.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#document-sequence","title":"Document sequence","text":"<p>A specific document sequence for rappels is necessary to distinguish them from other transactions. In this window, create a new record and fill the corresponding fields:</p> <ul> <li>Organization: The name of the corresponding organization.</li> <li>Name: The name of the document sequence, in this case, \u201cRappel sequence\u201d</li> <li>Active: Yes</li> <li>Auto Numbering: Yes</li> <li>Increment by: 1</li> <li>Next assigned number: 1,000,000</li> <li>Prefix: It is optional and, in this case, \u201cRAP-\u201d is entered to indicate that these transactions are Rappels.</li> </ul> <p>Save the record and the document sequence for rappels is available.</p> <p></p> <p>Info</p> <p>For more information, visit Document Sequence</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#document-type","title":"Document type","text":"<p>A specific document type is necessary for rappels. In this window, create a new record and fill the corresponding fields:</p> <ul> <li>Organization: The name of the corresponding organization</li> <li>Name: The name of the document type, in this case, \u201cRappel\u201d</li> <li>G/L Category: In this case, select \u201cAR invoice\u201d</li> <li>Print text: In this case, \u201cRappel\u201d</li> <li>Document Category: \u201cAR Invoice\u201d</li> <li>Sequenced Document: Yes</li> <li>Document Sequence: In this case, \u201cRappel sequence\u201d</li> <li>Table: C_invoice</li> <li>Sales Transaction: Yes</li> <li>Is rappel: Yes</li> </ul> <p>Save the record and the document type for rappels is available. After saving it, it is necessary to select \u201crappel\u201d in the field \u201cDocument Cancelled\u201d and save again.</p> <p></p> <p>Warning</p> <p>For each organization, it is possible to configure only one \"rappel\" document type.</p> <p>Info</p> <p>For more information, visit Document Type</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#rappel-configurations_1","title":"Rappel Configurations","text":"<p>In this window, the user can configure all the necessary aspects to grant rappels to certain business partners.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#header_2","title":"Header","text":"<p>This window contains the general data of the configuration. The relevant fields are described below:</p> <ul> <li>Name: It indicates the name assigned to the rappel.</li> <li>Currency: The user can select the currency of the rappel.</li> <li>Include Products: The user can define if the selected products are to be included or excluded (\u201call excluding defined\u201d or \u201conly those defined\u201d).</li> <li>Include Product categories: The user can define if the selected product categories are to be included or excluded (\u201call excluding defined\u201d or \u201conly those defined\u201d).</li> <li>Include Brands: The user can select certain brands to be included or excluded (\u201call excluding defined\u201d or \u201conly those defined\u201d).</li> <li>Include Locations: The user can select certain locations to be included or excluded (\u201call excluding defined\u201d or \u201conly those defined\u201d).</li> <li>Warehouse: It provides information about the warehouse of the products. By default, this field is empty. This is the case except for invoices created from goods shipments.</li> <li>Periodicity: It provides information about the suggested periodicity of the rappel (\u201cannual\u201d, \u201cbiannual\u201d, \u201cmonthly\u201d or \u201cquarterly\u201d).</li> <li>Type of Rappel: The user can select the type of rappel, it can be according to the amount of the consumption or the quantity of products consumed (\u201camount\u201d or \u201cquantity\u201d).</li> </ul> <p>Once this information is completed, the user is able to save the configuration and use the buttons in the window to configure specific aspects of each rappel.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#buttons","title":"Buttons","text":"<p>At the top of this window, four different buttons can be found.</p> <ul> <li>Add product categories: With this button, the user can select one or more product categories and add them to the rappel.</li> <li>Add products: With this button, the user can add one or more products to the rappel.</li> <li>Add partners: With this button, the user can add one or more partners to the rappel, and a date from and a date to must be assigned to determine the validity period for the created rappel.</li> <li>Copy rappel: With this button, the user can copy the characteristics of an existing rappel to the selected rappel.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/business-partner-setup/#tabs","title":"Tabs","text":"<ul> <li>Product Category: In this tab, product categories assigned to the Rappel are shown. It is also possible to assign new categories from this tab.</li> <li>Product: In this tab, products assigned to the Rappel are shown. It is also possible to assign new products from this tab.</li> <li>appel Parameters: In this tab, the discount percentage, minimum and maximum amounts can be assigned to the rappel.</li> <li>Business Partners: In this tab, the business partner to which the Rappel applies is shown. Here, it is possible to select the \u201cfrom date\u201d and \u201cto date\u201d. This tab also contains a sub tab called \u201cB. Partners Location\u201d, where the location of the business partner is indicated.</li> <li>Brand: In this tab, the brands of the products to which the Rappel applies or not can be selected.</li> </ul> <p>Remember that the options selected in the tabs \u201cProduct Category\u201d,\u201cProduct\u201d, and \u201cBrand\u201d must follow a certain logic: the priority is the option selected in the tab \u201cProduct Category\u201d. This means that more specific filters apply to the included or excluded product categories.</p> <p>When selecting the option \u201conly those defined\u201d in the fields \u201cinclude product categories\u201d and \u201cinclude products\u201d of the header, if in the \u201cproduct category\u201d tab the user selects \u201cwater\u201d, and in the \u201cproduct\u201d tab the user selects \u201cwhite wine\u201d, the rappel will only include the products belonging to the category \u201cwater\u201d and not \u201cwhite wine\u201d.</p> <p>Warning</p> <p>When selecting the option \u201cAll excluding defined\u201d in the \u201cInclude product categories\u201d field and the option \u201cOnly those defined\u201d in the \u201cinclude products\u201d field, if in the \u201cproduct category\u201d tab the user selects \u201cwater\u201d, and in the \u201cproduct\u201d tab the user selects \u201csparkling water\u201d, the rappel will not include the product \u201csparkling water\u201d despite what is defined in the \u201cproduct\u201d tab, since the priority is in the defined \u201cproduct category\u201d.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/","title":"Master Data Management","text":""},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#overview","title":"Overview","text":"<p>This section describes the Master Data Management process. One of the steps to take while setting up Etendo is to define the master data to be used across other Etendo application areas.</p> <p>Master Data Management helps to organize and centralize in a single repository the key data of the organization.</p> <p>Having a single repository of data avoids data duplication, provides a unique way of data coding and is a key aspect for guaranteeing the coherence and tracking of business processes of any type.</p> <p>Info</p> <p>Master data creation is one part of the overall Business Setup flow in Etendo and, as any other setup, it is required prior to entering transactions.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#business-partner-general-view","title":"Business Partner General View","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner General View</code></p> <p>Info</p> <p>To be able to include this functionality, the Advanced Business Partner module of the Essentials Bundle must be installed. To do that, follow the instructions from the marketplace: Advanced Business Partner. For more information about the available versions, core compatibility and new features, visit Essentials Extensions - Release notes.</p> <p>The \u201cAdvanced Business Partner\u201d module allows the user to have a general view of business partners information and to assign sequence numbers to business partners.</p> <p>Info</p> <p>For more information, visit Advanced Business Partner in the Essentials Extensions Bundle Documentation.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#currency-converters","title":"Currency Converters","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Currency Converters</code></p> <p>In the Currency Converters window, the necessary Apilayer data has to be configured with the following information:</p> <ul> <li>Classname: com.smf.currency.apiconfig.CurrencyLayerConverter</li> <li>URL: http://apilayer.net/api/</li> <li>Token</li> <li>User</li> <li>Password</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#business-partner","title":"Business Partner","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#overview_1","title":"Overview","text":"<p>Business partner master data window is the place where the user can easily organize and centralize business partner data.</p> <p>Nowadays, organizations deal with many third parties such as customers, suppliers, creditors, etc., therefore it is recommended to import large number of business partners instead of creating them one by one using the Import Data module.</p> <p>Etendo allows the user to enter business partner master data information whenever it is needed as the business takes place, therefore the procedure described within this section explains how to set up a single business partner of any type.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#business-partner_1","title":"Business Partner","text":"<p>There are many business partner types such as customers, suppliers and employees you can define and configure.</p> <p>There is one key field in the business partner header window, which is the Business Partner Category.</p> <p>The user should select a category which the business partner is going to belong to.</p> <p>To learn more about Business Partner Category, visit the Business Partner Category section.</p> <p></p> <p>The rest of fields at header level are common fields which require to enter basic business partner information such as:</p> <ul> <li>the Search Key or short name which will help you to identify and search a given business partner</li> <li>the Commercial Name</li> <li>the Fiscal Name, if known. If it is known, it is the one used in official documents such as invoices and tax reports, otherwise the commercial name will be used instead.</li> <li>a brief Description, if needed</li> <li>the business partner URL, if known</li> <li>a Reference No which can be used as an additional way to identify a business partner</li> <li>the Consumption Days information, which will be used while creating sales or purchase orders for that particular business partner, by using a process named Copy Lines.   To learn more about that process, visit Sales Order and Purchase Order sections.</li> <li>and finally Credit Line Limit. Etendo will inform whenever the credit limit entered in this field for the business partner is over while booking sales invoices.</li> </ul> <p>A new check named Consent for Customer Data Processing has been created in the business partner data model, to reflect whether a given contact consents or not that their data can be used by the organization.</p> <p>It is not the same to enter and configure a customer than a supplier/creditor or an employee, that is the reason why Business Partner window has three main tabs and therefore sub-tabs which allow you to set up each main business partner type separately:</p> <ul> <li>Customer tab</li> <li>Customer Accounting sub-tab</li> <li>Vendor tab</li> <li>Vendor Accounting sub-tab</li> <li>Employee tab</li> <li>Employee Accounting sub-tab</li> </ul> <p>The tabs and sub-tabs mentioned above are described in the next chapters of this section.</p> <p>Finally, it is very important to remark that there could be other types of business partners which require to be set up as business partners in this window; business partners which have nothing to do with either a customer, or a supplier/creditor or an employee.</p> <p>That is the case of banks. Banks need to be created in the business partner window header by just entering basic header information and no data in any of the business partner window tabs, but Location and Contact. The reason for this is that Bank type business partners are needed in the Remittance financial workflow.</p> <p>Info</p> <p>To learn more about this workflow, visit Financial Account.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#set-new-currency","title":"Set New Currency","text":"<p>Set New Currency process allows the user to change business' partner currency.</p> <p>Business partner currency is automatically filled in with the currency of the Price List assigned to the business partner. Once filled in, it can be changed if required by running Set New Currency process.</p> <p>Normally, business partner currency is the same as the currency of the price list assigned to it. However, it can happen that a business partner having, for instance, an EUR price list assigned, might have USD as its by default currency.</p> <p>In that case, all the transactions booked in EUR for that business partner, will be exchanged to USD, therefore, the business partner balance is calculated in USD.</p> <p>Set New Currency process allows defining:</p> <ul> <li>a new currency for the business partner</li> <li>as well as the currency conversion rate to be used to exchange customer balance to the new currency.</li> </ul> <p></p> <p>At first, the currency shown in the Set New Currency window is business partner price list currency, in our example USD.</p> <p>Business partner's new currency can be entered in the field Currency, for instance EUR.</p> <p>Checkbox Use default conversion rate uses the conversion rate defined in Conversion Rates window, to recalculate business partner balance from USD to EUR, in our case.</p> <p>If this check is not selected, a new field Rate is shown to allow entering a specific conversion rate.</p> <p>Additionally, a business partner might have available credit in a given currency.</p> <p>If that is the case, Etendo informs the user because business partner available credit will have to be exchanged to the new currency, therefore it can be consumed in the new currency.</p> <p></p> <p>This process automatically creates three new payments, in case business partner has available credit:</p> <ul> <li>a GL Item payment in EUR, that moves credit amount to the ledger account defined in the selected G/L Item, in the CREDIT.</li> <li>a refunded payment in EUR, that moves credit amount to a prepayment account in the DEBIT</li> <li>and a Zero amount payment that is a credit payment in USD (new currency). This credit payment moves the credit amount to a prepayment account in the CREDIT.</li> </ul> <p>Let us take as an example a business partner having a price list in EUR.</p> <ul> <li>This business partner has a current balance of 306.00 EUR and a generated credit of 100.00 EUR, which decreases its balance to 206.00 EUR.</li> <li>After that, Set New Currency process is run for this business partner, because its currency needs to change to USD</li> <li>Set New Currency process informs us that there is available credit for the business partner in the old currency (EUR). That available credit needs to be exchanged to the new currency (USD), therefore a conversion rate needs to be used. In this example, system conversion rate is used, that is 1.13 EUR to USD.</li> <li> <p>Once Set New Currency process ends, business partner:</p> <ul> <li>current balance shown changes to 232.78 USD (206.00 EUR * 1.13 EUR/USD).</li> <li>currency shown is USD.</li> <li>and three new payments are created, as described above, to exchange available credit into the new currency.</li> </ul> </li> <li> <p>After that, a new sales invoice is booked for the business partner in EUR, as the business partner price list is in EUR. Sales invoice total gross amount is 41.50 EUR.</p> </li> <li>This new sales invoice, once booked, will change business partner balance to 279.68 USD, that is (sales invoice amount 41.50 EUR * 1.13 EUR to USD) + 232.78 USD.</li> <li>After that, a new sales invoice for an amount of 100.00 USD is booked for the business partner. While completing this new sales invoice, a new window appears showing business partner USD credit available, in our case 100 EUR * 1.13 EUR to USD = 113.00 USD.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#customer","title":"Customer","text":"<p>Info</p> <p>Customer related data can be entered and configured once the Customer checkbox is enabled.</p> <p></p> <p>As shown in the image above, there is a list of relevant data to be entered for customers together with current customer balance information:</p> <p>You could either select any data such as Price List from a previously created list of values, or create it ad hoc by navigating to the corresponding window, and then select it.</p> <ul> <li>Price List - the one selected will be the one applied while creating sales documents such as sales orders or sales invoices for that customer.   To learn more, visit Price List.   Price lists are defined in a given currency, which could be the same as customer currency or not.   In case it is not, customer balance will be calculated by taking into account either the conversion rate defined in the Conversion Rates window or the one entered in the process Set New Currency which can be run to change the currency of a business partner.</li> <li>Payment method - the one selected will be the one applied while creating and managing the payments received from that customer.   If a Financial Account is linked to the customer, the payment method to select here will be one of the payment methods linked to the financial account.   To learn more, visit Payment Method.</li> <li>Payment Terms - the one selected will be the one used while managing sales invoices payment plan.   To learn more, visit Payment Term.</li> <li>Financial account - the one selected will be the one use while collecting and reconciling the payments made by that customer.   To learn more about Financial Account, visit Financial Account.</li> <li>Invoice terms - there are few invoice terms which can be used while generating sales invoices.   To learn more, visit Generate Invoices.</li> <li>After Order Delivered - the invoice could be automatically generated once all the goods of the sales order have been shipped</li> <li>After Delivery - the goods of the sales order will be automatically invoiced as they are shipped, even if there are partial shipments</li> <li>Do not invoice - no invoice will be generated automatically</li> <li>Immediate - the invoice will be generated on the next run of the Generate Invoices process.</li> <li>Customer Schedule after Delivery - the invoice will be generated according to the calendar agreed with the customer and once the goods ordered have been shipped.     If this is the option selected, a new field named Invoice Schedule is automatically displayed for you to select the corresponding Invoice Schedule or calendar.     To learn more, visit Invoice Schedule</li> <li>Credit Line limit - If the sum of all pending payments is over the credit limit specified for a customer, the system will alert you by saying that this customer has reached the credit limit whenever this business partner is selected in a sales document (order, shipment or invoice).</li> <li>A customer can be defined as Tax Exempt whenever applicable, therefore only those Tax rates also defined as exempt apply.</li> <li>Sales Representative - you can select here a customer sales representative. A sales representative is an employee set as such.</li> <li>SO BP Tax Category - this field can be found under the More Information section.   You can use a business partner tax category to get that the sales documents created for a customer can only have a specific set of tax rates linked to that tax category.   To learn more, visit Business Partner Tax Category</li> <li>On Hold - this checkbox allows blocking a customer, therefore some specific documents cannot be fulfilled for it. If checked, the On Hold section is shown with the following setup, which can obviously be changed as required:</li> <li>Sales Order: Blocked</li> <li>Goods Shipment: Blocked</li> <li>Sales invoice: Blocked</li> <li>Payment In: Not blocked</li> </ul> <p>Above defaulted configuration means that it is not possible to complete either a sales order, a goods shipment or a sales invoice for the customer but to receive a payment.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#customer-accounting","title":"Customer Accounting","text":"<p>Customer accounting tab allows the user to configure the ledger accounts to be used while posting customer related transactions such as customer receivables and customer advances to the general ledger.</p> <p></p> <p>As shown in the screen above, you can configure for each customer and general ledger the accounts to be used in:</p> <ul> <li> <p>the Customer Receivables transactions such as sales invoices posting. To learn more, visit Sales Invoice.</p> </li> <li> <p>the Customer Prepayment transactions, such as those cases when the company shipping the goods requires the customer to advance part or full amount of the debt.  </p> </li> </ul> <p>At first, these accounts are inherited from the Defaults accounts of the organization's general ledger for which the business partner is being created. The end-user can always change them.</p> <p>Besides, it is important to remark that it is possible to configure the creation of new correlative accounts for the business partners as described in the General Ledgers tab of the Organization window.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#vendorcreditor","title":"Vendor/Creditor","text":"<p>Vendor or Creditor related data can be entered and configured once the Vendor checkbox is enabled.</p> <p></p> <p>As shown in the image above, there is a list of relevant data to be entered for suppliers or creditors, also known as vendors:</p> <ul> <li>Purchase Price List - the one selected will be the one applied while creating purchase documents such as purchase orders or invoices for that vendor.   If a Business Partner has already generated Credit, it will not be possible to select a Price List in a different Currency from the generated Credit. In that case, it is possible to convert Credit to a different Currency.   To learn more, visit Price List.</li> <li>Payment method - the one selected will be the one applied while creating and managing the payments made to that vendor.   If a financial account is linked to the vendor, the payment method to select will be a payment method linked to that financial account.   To learn more, visit Payment Method.</li> <li>Payment Terms - the one selected will be the one used while managing supplier invoices payment plans.   To learn more, visit Payment Term.</li> <li>PO Maturity Date 1 - as indicated in the Payment Term the PO Maturity Date is used in combination with the Fixed Due Date in the payment term to be set to Y and the Next Business Day set to N. The due date of the payment is based on the payment term defined in combination with the PO Maturity Date.</li> <li>For example, the defined payment term is 30 days and the PO Maturity Date 1 is set to 10. If the invoice date is the 1st of the month, based on the 30 days payment term, the payment due date is the 1st of the next month, but since the PO Maturity Date is set to 10, the payment due date as a result is the 10th of next month.</li> <li>PO Maturity Date 2 - a second PO Maturity Date can be set to be combined with the payment term and the first PO Maturity Date.</li> <li>For example, the payment term is 30 days, the PO Maturity Date 1 the value is 10, the PO Maturity Date 2 is 20. The example given in PO Maturity Date 1 will remain the same. However, if the invoice date is the 11th of the month, the payment due date will be the 20th of next month: the 30 days of the payment terms are taken into account and since the 10th of the month is passed the second maturity date of the 20th is taken into account.</li> <li>PO Maturity Date 3 - a third PO Maturity Date can be set to be combined with the payment term and the first and second PO Maturity Date.</li> <li>Financial account - the one selected will be the one used while withdrawing and reconciling the payments made to a supplier.   To learn more, visit Financial Account.</li> <li>Tax Category - you can use a business partner tax category to get that the purchase documents registered from a vendor can only have a specific set of tax rates linked to that tax category.   To learn more, visit Tax Category.</li> <li>On Hold - this checkbox allows blocking a vendor, therefore some specific documents cannot be fulfilled for it. If checked, the On Hold section is shown with the following setup which can obviously be changed as required:</li> <li>Purchase Order: Blocked</li> <li>Goods Receipt: Not blocked</li> <li>Purchase Invoice: Blocked</li> <li>Payment Out: Blocked</li> </ul> <p>Above defaulted configuration means that it is not possible to complete either a purchase order, a purchase invoice or to make a payment but to receive goods sent by the vendor.</p> <p>As already mentioned if a business partner of any type is blocked it is not possible to Complete (or book) some document types however it is always possible to Void them.</p> <p>You will realize that Etendo shows an error message stating that it is not possible to complete a document for a business partner set as on hold.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#vendor-accounting","title":"Vendor Accounting","text":"<p>Vendor accounting tab allows the user\u00a0 to configure the ledger accounts to be used while posting vendor related transactions such as vendor liabilities and vendor advance payments to the general ledger.</p> <p></p> <p>The user can configure for each supplier or creditor and available accounting schema, the ledger accounts to be used in:</p> <ul> <li>the Vendor Liability transactions such as purchase invoices posting.   To learn more, visit Purchase Invoice</li> <li>the Vendor Prepayment transactions such as those cases when the supplier of the goods requires the company to pay in advance part or full amount of the debt.   To learn more, visit Vendor Prepayments</li> </ul> <p>At first, these accounts are inherited from the Defaults accounts of the Accounting Schema assigned to the Organization for which the business partner is being created. The end-user can always change them.</p> <p>Besides, it is important to remark that it is possible to configure the creation of new correlative accounts for the business partners being created as described in the Org Schema tab of the Organization window.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#employee","title":"Employee","text":"<p>A business partner can be set up as employee once the checkbox Employee is enabled.</p> <p></p> <p>Employee tab allows the user to set which of your business partners are Employees.</p> <p>An employee can be:</p> <ul> <li>appointed as sales representative of a customer</li> <li>defined as the responsible of a company project/s.   To learn more, visit Projects and Services Management</li> <li>allocated to a production process as a resource.   To learn more, visit Production Management</li> <li>and can issue expense's sheets as part of his/her involvement in a company project.   To learn more, visit Expense Sheet</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#employee-accounting","title":"Employee Accounting","text":"<p>The ledger accounts to be used while posting employee related transactions such as paryroll accounting could be added in this tab.</p> <p></p> <p>As you can see in the image above, nowadays there is no ledger account required to be defined for employee accounting. This is due to the fact that there is no transaction susceptible of being posted for employees.</p> <p>Anyway, this is the place where Human Resources related modules or features should point to while defining the accounts to be used in any employee transaction susceptible of being posted.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#bank-account","title":"Bank Account","text":"<p>Bank account tab allows the user to list and set up business partner bank accounts.</p> <p>It is possible to configure and properly set up business partner bank accounts to be used while making or receiving business partner payments of any type.</p> <p>Therefore, we strongly recommend the user to properly set up bank accounts as those will be used by Etendo as required within Etendo payment management processes.</p> <p></p> <p>The bank account related data you can enter is:</p> <ul> <li>the Bank Name</li> <li>Active flag - We recommend you to set as Active only one bank account, if possible, in order to avoid errors; otherwise you should keep an eye on the right bank account used.</li> <li>Country - you can select a country from the list to specify if the bank account is a domestic bank account or a foreign bank account.</li> <li>User/Contact - in case you want to associate a contact for this bank account</li> <li>Bank Account Format - List that contains all the possible values for generating the Displayed Account Number, which will be later on used by other reports or processes to get the account identifier. Possible values are: Use Generic Account No., Use IBAN or Use SWIFT + Generic Account No. Note: Other options can be added by other modules that extend the supported Bank Account Format.</li> <li>Generic Account No - a generic account number to identify the bank account can be introduced here. This field must be mandatory filled in case either Use Generic Account No. or Use SWIFT + Generic Account No. is selected at the Bank Account Format field.</li> <li>IBAN - The International Bank Account Number (IBAN) is an international standard for numbering bank accounts.   The IBAN consists of a two letter ISO 3166-1 country code, followed by two check digits, and up to thirty alphanumeric characters for the domestic bank account number, called the BBAN (Basic Bank Account Number). This field must be mandatory filled in case Use IBAN is selected at the Bank Account Format field. The IBAN code will be automatically validated when inserting/updating the record taking into account the rules for the country bank defined.</li> <li>SWIFT Code - Corresponds to the ISO 9362 international bank code identifier. It must be mandatory filled in case Use SWIFT + Generic Account No. is selected at the Bank Account Format field.</li> <li>Displayed Account: It is automatically generated based on the value selected into the Bank Account Format. This field is read only, and it is used by other reports or processes.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#advanced-bank-account-management","title":"Advanced Bank Account Management","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Bank Account Management module of the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This functionality introduces the possibility to mark a bank account as Default within the Bank Account tab of the Business Partner window. Here, it is possible to check the Default Account checkbox in order to set the account to be used in the documents for different transactions. </p> <p></p> <p>Note</p> <p>If no bank account is selected as default, the one created last is used when no bank account is selected in orders/invoices.</p> <p>Warning</p> <p>Only one bank account can be selected as default for each business partner.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#locationaddress","title":"Location/Address","text":"<p>Business partner locations and full address details can be set up in this tab.</p> <p>Business partners might have different address details depending on location/address used for either Goods Receipts/Shipments purposes or location/address used for Invoices purposes.</p> <p></p> <p>Etendo allows the user to define any type of business partner address, by filling in the information below:</p> <ul> <li>Location/Address - if you click in this field the location selector box opens, there you can enter the information below:</li> <li>the address 1st line</li> <li>the address 2nd line, if needed</li> <li>the Postal Code</li> <li>the City</li> <li>the Country - you can select one from the list, if any</li> <li>the Region - once the country is selected, you can select one region of the country selected, from the list, if any.<ul> <li>Once the location entered is saved, it's listed in the Location window. To learn more, visit Location</li> </ul> </li> <li>the Phone number</li> <li>an Alternative Phone number, if any</li> <li>the address Name - this field is automatically filled in by Etendo, once the location / Address information has been configured. The user could change it as needed.</li> <li>the Fax number</li> <li>Ship to Address checkbox - the user should flag this one if the address being set up must be used for Goods Receipts/Shipments related transactions.</li> <li>Invoice to Address checkbox - the user should flag this one if the address being setup must be used for sales or purchase invoices transactions.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#advanced-bank-account-management_1","title":"Advanced Bank Account Management","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Bank Account Management module of the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Advanced Bank Account Management field is introduced in the Location/ Address tab of the Business Partners window to associate specific bank accounts to the different locations.  </p> <p>Warning</p> <p>In case of having both a default bank account and a location with a defined bank account, when generating a new document, the location bank account is prioritized over the default one.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#contact","title":"Contact","text":"<p>Contact tab allows the user to add and configure the business partner contacts you deal with.</p> <p></p> <p>As you can see in the image above, basic Contact data such as:</p> <ul> <li>First and Last Name of the contact</li> <li>as well as his/her Position in the business partner</li> </ul> <p>can be configured in this tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#basic-discount","title":"Basic Discount","text":"<p>Basic Discount tab allows the user to add and configure business partner Basic Discounts.</p> <p></p> <p>It is possible to enter as many Discounts as agreed with your business partners, by filling in the information below:</p> <ul> <li>the Discount to be applied while creating sales / purchase transactions for that business partner can be selected from the list (if any) or created by navigating to the Discount window.</li> <li>Customer: this checkbox must be selected if the discount is going to be applied to a Business Partner set as Customer</li> <li>Vendor: this checkbox must be selected if the discount is going to be applied to a Business Partner set as Vendor</li> <li>Apply in Order: this check box must be selected in case the discount can be applied in sales or purchase orders as applicable.</li> <li>Cascade calculation of the discount. For instance, if first discount is 10% and second one is 5%, a cascade calculation of the total discount won\u2019t be 15% but 14.5%</li> </ul> <p>A discount not applied in Cascade means that it affects the full quantity of the Document Line. A Discount applied in Cascade means that affects the quantity of the Document Line that remains after applying all the discounts that come before it.</p> <p>An example to explain the difference between a Cascade and not Cascade Discount is the following one:</p> <p>Three Discounts, each one of 10%, the first two ones are defined as not Cascade and the third one as Cascade. Over an Invoice Line of 1.000 USD</p> <ul> <li>The first discount will create a line of -100 USD (10% of 1.000 USD)</li> <li>The second discount will also create a line of -100 USD (10% of 1.000 USD)</li> <li>The third one, however, will create a discount based on applying the previous discounts on cascade, so:</li> <li>1.000 USD - 10% = 900 USD (applying the 1st discount on Cascade)</li> <li>900 USD - 10% = 810 USD (applying the 2nd discount on Cascade)</li> <li>10% of 810 USD = 81 USD. So the third discount will be -81 USD.</li> </ul> <p>In total -100 -100 -81 = -281 USD for all three discounts (a total discount of 28.1%)</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#rappel-configuration","title":"Rappel Configuration","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Rappels module of the Sales Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Sales Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Sales Extensions - Release notes.</p> <p>With this functionality, the user can find the tab \u201cRappel Configurations\u201d in the business partners included in the Rappel configurations. Also, in the Business Partner window, the user is able to create rappels using the button \u201cCreate Rappel\u201d.</p> <p></p> <p>To be able to do this, it is necessary to configure certain aspects in the \u201cRappel Configurations\u201d window.</p> <p>Info</p> <p>For more information, visit Rappel Configurations.</p> <p>The \u201cRappel configuration\u201d tab can be found in the tabs section of the Business Partner window. In this tab, the user can find the configured rappels for each business partner.</p> <p>To create a new rappel, the user must select one of the available configurations in this tab and click the Create Rappel button. A pop-up window will appear in which the user can select a trading partner to which the Rappel will be assigned, and also configure a date period in which the consumptions will be taken into account to calculate the discounts, determined by the date from and the date to information.</p> <p></p> <p>When the rappel is created, a sales invoice is created automatically, as seen below.</p> <p></p> <p>Each time a rappel is granted to a business partner, a new sales invoice is automatically generated in order to show the amount of the discount. This invoice has a specific sequence to distinguish it from the rest, according to the options entered when configuring the sequence, and a negative amount since it is a discount. The status of this invoice is \u201cdraft\u201d.</p> <p>Info</p> <p>For more information, visit Sales Invoice.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#business-partner-info","title":"Business Partner Info","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner Info</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#overview_2","title":"Overview","text":"<p>In this section, the user can view information related to business partner orders, receipts/shipments, invoices, and assets.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#partner-selection","title":"Partner Selection","text":"<p>The user can select a business partner to begin viewing related transactions.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#partner-orders","title":"Partner Orders","text":"<p>The user can view orders related to a specific business partner.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#partner-shipments","title":"Partner Shipments","text":"<p>The user can view shipments related to a specific business partner.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#partner-invoices","title":"Partner Invoices","text":"<p>The user can view invoices related to a specific business partner.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#product","title":"Product","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#overview_3","title":"Overview","text":"<p>Product master data window is the place where you can easily organize and centralize the key data of the items of any type you might manage as part of the organization processes and/or activities.</p> <p>Organizations deal with a variety of different items that may be required by an organization for the performance of its daily activities.</p> <p>It is possible to load Product information into Etendo en masse using the Import Data module, or one by one using the Product window.</p> <p>This section describes how to set up Products individually.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#product_1","title":"Product","text":"<p>Product window allows the creation of items such as products, raw materials, resources, services, etc.</p> <p>The information required to create a Product in Etendo is determined by the nature of the Product, its Product Type.</p> <p>There are four product types available:</p> <ul> <li>Item. The most frequently used product type is Item. Inventory held for resale, materials that are placed into a production process, and semifinished or finished goods created through production are examples of products defined using the product type Item.</li> <li>An item should be flagged as Stocked, if quantity tracking is required for the item, otherwise there is no need to flag the item as Stocked.</li> <li>An item should be flagged as Production, if the item is used in manufacturing.</li> <li>If an item is an intermediate or finished good, its bill of material (BOM) should be detailed on the Bill of Materials tab.</li> <li>Service. This product type is used to identify such provisions as professional services, transportation, telephony, and other items which do not correspond with material goods.</li> <li>Therefore, a Service is not stockable but can be purchased or sold.</li> <li>A service can have a bill of materials to be defined in the Bill of Materials tab.</li> <li>Resource and Expense. These product types can be used to distinguish between different types of products which can be purchased or sold but cannot be stocked.</li> <li>Resource type can be used to configure resources such as Financial, Legal or Natural resources used by the organization.</li> <li>Expense type can be used to configure expenses such as travel expenses to be used while reporting Employee expenses.</li> </ul> <p>Product types do not confer different accounting treatments. In other words, all product types account the same way while being purchased, stocked or sold.</p> <p>All of them use the ledger accounts defined in the Accounting tab of the Product window.</p> <p></p> <p>Additional key data to fill in are:</p> <ul> <li>UOM, that is the unit of measure to be used while purchasing, storing and selling a product, for instance Units.   A product can also have alternative UOM besides product's UOM.</li> <li>Product Category, it is mandatory to select a product category to which the product is going to belong to.   To learn more, visit Product Category</li> <li>Tax Category, this category is key for managing the taxes related to the product. Taxes such as VAT depends on the type of product.   To learn more, visit Tax Category</li> <li>Purchase checkbox can be selected to indicate that the product can be purchased to an external supplier. This checkbox is mainly an informative one, as it does not add any business logic behind but regarding MRP.   In that case, if selected, MRP will then purchase the product if needed, otherwise it will produce it.</li> <li>Sales checkbox can be selected to indicate that the product is sold or can be sold to an external parties or customers. This checkbox is an informative one, as it does not add any business logic behind.</li> <li>Stocked checkbox is selected if the product is part of the inventory, therefore proper inventory movement transactions are registered in Etendo.   This flag can not be changed anymore for a product, if that product is part of any sales, purchase, inventory or production document related, whatever document status is.</li> <li>Production checkbox is selected if the product is part of a production process. Once selected, an additional field appears to select a Process Plan.   To learn more, visit Process Plan</li> <li>Attribute Set, a product can have a group of features or an attribute set, such as Color and Size, to take into account while ordering or storing the product.</li> <li>If an Attribute Set is selected here, Etendo displays a new field named Attribute Set Value.     To learn more, visit Attribute Set</li> <li>Attribute Set Value, if an Attribute Set value such as Blue and Large is selected, Etendo displays a new field named Use Attribute Set Value As.</li> <li>Attribute Set Value As, once an attribute set has been selected, that one could be used as described below depending on the criteria selected in this field:</li> <li>Default: This means that the attribute set value defined will be defaulted in each of the transactions, but it is allowed to be changed.     In other words, the user will not have to care about setting it each time when creating transactions such as goods receipts and shipments.<ul> <li>For instance, it can be set to default the value of the attribute set Size of a product to Medium (because it is the most commonly used).   This way, each time that that product is selected, its attribute set value will be set to Medium (unless selected from stock, in which case the attribute set value is set to the value in which the product is stored).   It is possible to overwrite this attribute set value, to Small or Large for example.</li> </ul> </li> <li>Overwrite Specification: This means that the attribute set value will specify completely the product nevertheless, the attribute set value can be changed for this product.<ul> <li>For instance, product Alcohol Free Beer is given the attribute set Alcoholic Proof and the attribute set value 0% in the Product window. This definition specifies completely the product: the Alcohol Free Beer is supposed to have a 0% alcoholic proof. But, in the production process, some deviations can happen, and this alcoholic proof can go to 0.01%. Using Overwrite Specification option, the production manager will be allowed to register this deviation in the Production process for Alcohol Free Beer product.</li> </ul> </li> <li>Specification: This means that the attribute set value will specify completely the product. The attribute set value will always have this value and no other value will be allowed for it.<ul> <li>For instance, product Large Blue Jeans is given the attribute set Size &amp; Color with values Large and Blue. This defines the product and will not change. Transactions are done and completed with this product, without forcing to re-set the attribute set value. User can then query all products having Large size or Blue color without having to query the transactions but only the product definition.   To learn more about attributes, visit How to Manage Attributes and Attribute Sets article.</li> </ul> </li> <li>UPC/EAN, used to store bar-code information</li> <li>Bill of Materials checkbox is selected when the product is a bundle of other products as listed in the Bill of Materials tab.</li> <li>Deferred Revenue: this flag is visible only for products having the Sale flag checked and indicates that by default, revenues for sales of this product need to be deferred. When this flag is checked, the Revenue Plan field group becomes visible, allowing users to configure the next two fields.</li> <li>Revenue Plan Type: this field specifies the default frequency of the revenue distribution. At the moment, only monthly revenue plans are supported.</li> <li>Period Number: this field specifies the default duration of a revenue plan. For example, an annual subscription to a magazine will be defined with a revenue plan of 12 monthly periods, while a season ski pass will have revenue plan of 5 monthly periods.</li> <li>Default Period: this field specifies the first period in which revenue is going to be recognized. The options available are:<ul> <li>Current Month. This option will set the Revenue Plan Starting Period to the same period as the invoice accounting period.</li> <li>Next Month. This option will set the Revenue Plan Starting Period to the invoice accounting next period.</li> <li>Manual. This option will not set any revenue plan starting period, therefore a starting period can be selected while creating the sales invoice line.</li> </ul> </li> <li>Deferred Expense: this flag is visible only for products having the Purchase flag checked and indicates that by default, revenues for sales of this product need to be deferred. When this flag is checked, the Expense Plan field group becomes visible, allowing users to configure the next two fields.</li> <li>Expense Plan Type: this field specifies the default frequency of the expense distribution. At the moment, only monthly expense plans are supported.</li> <li>Period Number: this field specifies the default duration of an expense plan.</li> <li>Default Period: this field specifies the first period in which expense is going to be recognized. The options available are:<ul> <li>Current Month. This option will set the Expense Plan Starting Period to the same period as the invoice accounting period.</li> <li>Next Month. This option will set the Expense Plan Starting Period to the invoice accounting next period.</li> <li>Manual. This option will not set any expense plan starting period, therefore a starting period can be selected while creating the purchase invoice line.</li> </ul> </li> </ul> <p>These values are used when an invoice is created for a product having an expense plan and/or a revenue plan.</p> <p>In the same way, these values are also used when an invoice is created from another document (for example: the Generated Invoices process that creates invoices from sales orders). In the same way, these values can be modified on a transaction by transaction basis.</p> <p>To learn more, visit the How to manage deferred revenue and expenses article.</p> <ul> <li>Book Using Purchase Order Price: This flag is used when posting a Goods Receipt or a Matched Invoice document to the ledger.   Normally, the product cost is used while posting those transactions, however this checkbox allows using the product purchase price instead.   This feature only works for Expense product type not having the Sales checkbox selected.</li> </ul> <p>Info</p> <p>Notice that in this case a Purchase Order needs to be related to the Goods Receipt, otherwise an error message will be shown as the purchase product price is required.</p> <ul> <li>Returnable:This flag is used to indicate if a product can be returned and, in the case that it is, a new field called. When trying to return a non-returnable product from the Return from Customer window, an error will be shown.</li> </ul> <p></p> <ul> <li>Overdue Return Days:In this field, it is possible to configure the maximum amount of days before a product can not be returned. If the field is left blank, the product can be returned without time limitations. When trying to return a product whose period has expired, a warning message will appear.</li> </ul> <p></p> <p>Info</p> <p>Note: If stocked is not checked and BOM is checked, the product price should be 0. Because in that special case, the product price is the sum of the prices of the bill of materials components it consists of. If promotion wanted to create, 'Discounts and Promotions' should be used.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#variants","title":"Variants","text":"<p>Product can be marked as Is Generic. This means that variants of this product will be created based on some characteristics such as colour, size, etc. The definition of these characteristics takes place in the generic product, so it can be said that a generic product is like a template where new variants will inherit all the attributes (taxes, prices, image) of this product. Due to this, a generic product cannot be used for transactions but its variants.</p> <p>Info</p> <p>Note:Products that are marked as generic cannot be used in transactions operations such as sales orders, purchase orders, goods receipts, etc.</p> <p>When this flag is marked, two buttons are shown:</p> <p></p> <ul> <li>It shows all variants that have been created or not for that specific generic product. It is very useful when:</li> <li>The user does not want to generate all variants but just some of them. The button allows the user to select the possible combinations</li> <li>The user adds one more value, for example, red when having before green and white and the variants were already created in the past. It will show the new combinations</li> </ul> <p>For example, imagine generic product T-Shirt Model A has the characteristics:</p> <ul> <li>Color: Blue, White</li> <li>Size: S,M,L</li> </ul> <p>But still variants have not been created. If you press the button, you can see all possible combinations:</p> <p></p> <p>Then all combinations can be selected or just pick some of them. Once the selection takes place pressing Done, combinations will be created as Products. These new products will have the Generic Product field filled with the product that was marked as generic. We can say it is their parent product</p> <p></p> <ul> <li>It creates/explode all product variants, that is, all combinations based on the characteristics defined</li> </ul> <p>Another button that might appear is . It only shows up when the generic product or the new product variant has a non-variant characteristic related. Two scenarios:</p> <ol> <li>Generic product: This button allows entering the value of that characteristic.     Imagine the characteristic is Fashion Line that has three values: Sport, Vintage, Classic.     Unlike the characteristics that are variants users cannot enter the value through the Characteristic Configuration tab</li> <li>Variant Product: This button allows the user to enter/update the characteristic that is not variant.</li> </ol> <p>Once a variant has been created, its characteristics and values can be viewed either in the grid or in form view:</p> <ul> <li>Grid view: There is a new column Characteristic Description. This column is calculated and is not editable. It shows the characteristics with their values as a text. This column has a new search-selector in order to find product variants based on its characteristics</li> </ul> <p></p> <p>Press the button  and it opens a pop-up to select values:</p> <p></p> <ul> <li>Form view: Product variants have a new section named Characteristic Description. This section contains as many fields as different characteristics the product has.</li> </ul> <p>There is a preference Show Product Characteristics Parents: Values can be 1,2,3,4, etc. The number means how many levels in the hierarchy tree the user wants to show in form view in the Product window. For example, if the tree is: Color-&gt;Green-&gt;Green light-&gt;0034</p> <p>New values of an existing characteristic can be added. For example, colour red when already having Blue and White. When it happens, this new value is automatically added to all generic products that already have the characteristic Color. This new value will be present in the configuration tab but deactivated. If the user wants to use it in a specific product in order to create new variants he can just activate the value and use the button Manage Characteristics</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#modify-tax","title":"Modify Tax","text":"<ul> <li>Modify Tax: This check allows services to modify the taxes of the product linked to. This allows modifying taxes calculation of a product depending on a service condition. For example, a new kitchen furniture is sold to a customer, the taxes applied to the furniture might change if the installation of the furniture is also provided by the seller of the furniture. Also, this functionality applies only to Orders. The documents that are created afterwards will take the information from the Order document.</li> </ul> <p>This tax modification is implemented through a service linked to the product. This service has to be marked as able to modify taxes of the products linked to, and the configuration of the products to modify taxes and the new tax to apply must be also specified.</p> <p>To configure it, go to the Product window and create a new service. A service is just a product with the field Product Type set to Service. It has to be activated also the field Linked To Product and the field Modify Tax. When this field is activated, a new tab named Modify taxes categories is visible. In this tab, it is defined the configuration of the tax categories of products this service will modify when linked and the new tax category to apply.</p> <p></p> <p>To ease the configuration process, two components have been added:</p> <p>1.- Modify Tax for Product Category (Button): Pick and Execute window to assign the product categories and tax categories in the same action.</p> <p></p> <p>2.- Copy Service Modify Tax Configuration (Button): Pick and Execute window where services which modify taxes are displayed. The user can select one or many services, and current configuration will be assigned to selected services. Once the process has been executed, the old configuration (if it exists) will be deleted and a new one will be added. This process helps in deploying the same configuration to multiple services.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#price","title":"Price","text":"<p>A product can be part of many Price List Versions which are valid for a given time period.</p> <p></p> <p>There are two ways in which the user can get a product to be part of a Price List:</p> <ol> <li>by selecting the Price List/s and entering both the Net Unit Price and the Net List Price values in the Price List tab, while creating the product.     As a consequence of that, the product being created will also be part of the Price List selected.</li> <li>by selecting the product and entering both the Net Unit Price and the Net List Price values, while creating the Price List.     As a consequence of that, the Price List as well as both Net Unit Price and Net List Price values will be automatically shown in the Price List tab of the product.     To learn more, visit Price List.</li> </ol>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#price-rule-version","title":"Price Rule Version","text":"<p>This tab will only be available when field Is Price Rule Based is selected. This tab gives the possibility of adding Service Price Rules to the Service starting from a certain date.</p> <p></p> <p>In this window it is also possible to define a maximum and minimum amounts that will be taken into account when showing services.</p> <p>Those amounts define an interval between product prices so that the service will only be available to be added in case the sum of the selected products is between the interval.</p> <p>For services of quantity rule: Unique Quantity the quantity of the line matters, as it will be only added one service.</p> <p>For services of quantity rule: As per Product the quantity of the line does not matter, the price of the product only matters as there will be added as many services as products are selected. Only if all the products prices are between the tranche, the service will be shown.</p> <p>Also, if once a service (not yet delivered) has been added to the receipt, the price of the related product changes, a validation will be triggered, and in case the service no longer meets the tranche rules, it will be removed from the current receipt and a pop-up will be shown saying so.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#accounting","title":"Accounting","text":"<p>Accounting tab allows the user to configure the ledger accounts to be used while posting product related transactions such as product purchase or sales to the general ledger.</p> <p></p> <p>As shown in the screen above, you can configure for each product and general ledger some accounts to be used in the below listed transactions:</p> <ul> <li>Product Assets: this field stores the default account to be used to record inventory transactions such as:</li> <li>Inventory Counts</li> <li>Inventory Movements</li> <li>and Goods Receipt</li> </ul> <p>This account is typically an asset account.</p> <ul> <li>Product Expense: this field stores the default account to be used to record product's purchases:</li> <li>Normally, this account can be configured as an Expense account type in case of not managing Perpetual Inventory.     In that case, the expense is accounted at the time the goods are purchased at the purchase price.     The revenue is accounted at the time the goods are sold at the sales price.     Not managing Perpetual Inventory implies the need of manually adjusting the inventory value at the end of the year.     That inventory adjustment implies calculating the difference between the Final Inventory Value and the Initial Inventory Value.</li> <li>However, this account can also be configured as an Asset account in case of Perpetual Inventory management.     In that case, the expense needs to be accounted when the product is sold to the customer as Cost of the Goods Sold at the product cost.     In Etendo, the revenue is accounted at the time the goods are sold at the sales price and the cost of the goods sold is accounted at the time of shipping the goods at the product cost.     Managing Perpetual Inventory does not imply the need of adjusting the inventory value at the end of the year.</li> <li>Product Deferred Expense: this field stores the default account to be used to record deferred expenses.   This account is typically an asset account.</li> <li>Product Revenue: this field stores the default account to be used to record product sales revenues.   This account is typically a revenue account.</li> <li>Product Deferred Revenue: this field stores the default account to be used to record deferred revenues.   This account is typically a liability account.</li> <li>Product COGS: this field stores the default account to be used to record the cost of the goods sold.   This account is typically an expense account.</li> <li>Product Revenue Return: this field stores the default account to be used to record sales returns.   This account is typically a revenue account.</li> <li>Product COGS Return: this field stores the default account to be used to record.   This account is typically an expense account.</li> <li>Invoice Price Variance: this field stores the default account to be used to record price differences between posted Goods Receipts and booked Purchase Invoices.   This account is typically an asset account.</li> </ul> <p>At first, these accounts are inherited from the Defaults accounts of the organization's general ledger configuration for which the product is being created. The end-user can always change them.</p> <p>Info</p> <p>Besides, it is important to remark that it is possible to configure the creation of new correlative accounts for the products as described in the General Ledgers tab of the Organization window.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#bill-of-materials","title":"Bill of Materials","text":"<p>This tab allows editing the bill of materials components the selected product consists of.</p> <p>Bill of Materials apply to products flagged as Bill of Materials.</p> <p>This tab provides information of the list of products contained and its quantity for the Bill of Materials production.</p> <p>If the product Tax_Category is flagged as As per BOM, this tab also provides information for the price of each product in the Bill of Materials list. The price and quantity in this list is used to perform the division of the base amount to calculate the taxes based on the taxes configured for each product of the list.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#costing-rule","title":"Costing Rule","text":"<p>Costing rule tab allows the user to review the costing rules that apply to the product within a given date range.</p> <p>Costing Rules apply to products set as Item type flagged as Stocked.</p> <p>This tab provides information about the validated costing rule(s) which applies on a given date range to the product, as well as the Costing Algorithm defined for that rule.</p> <p>Costing rules can be created and validated in the Costing Rules window related to the corresponding legal entity / organization.</p> <p>Currency used by the costing rule is the currency set for the organization.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#costing","title":"Costing","text":"<p>Costing tab collects and summarizes product cost related information as a result of every product transaction. Product's costs are valid during a fixed date range and can be calculated either by using an Average or a Standard costing algorithm.</p> <p>One of the first things to do while creating or importing a product into Etendo is to inform Etendo about:</p> <ol> <li>the initial Cost of the products, if any, by entering it in this tab.     Keep reading to learn how to do it.</li> <li>and the initial Stock of the products, if any, by creating and booking a Physical Inventory.</li> </ol> <p>Overall, this tab allows to:</p> <ul> <li>define the Cost of stockable products, that cost can either be a standard cost or an average cost.</li> <li>define the Cost of non stockable products, that needs to be a standard cost.</li> </ul> <p>In the same way, either a Standard or an Average Costing Rule needs also to be defined for the Organization as the way to calculate the cost of the products' transactions within that organization.</p> <ul> <li>review the average cost calculated by the Costing Server when using an Average Costing Algorithm.</li> </ul> <p>Note that when using a Standard costing algorithm the cost of every product transaction is the default standard cost entered in this tab.  </p> <p>Info</p> <p>The default standard cost can be used by the Default Cost method whenever it is not possible to get the price of a transaction for which its cost needs to be calculated.</p> <p>Average algorithms override the behavior of the Default Cost method prioritizing the use of the current Average Cost if any.</p> <ul> <li>and finally to have a view of all the input transactions of the product which have impacted on product cost calculation.</li> <li>Input transactions such as vendor receipts are the ones which impact on product cost calculation, therefore the Inventory Transaction field clearly reflects those one by one.</li> <li>Similarly, a permanent manual cost adjustment executed in an output transaction, such as a Goods Movement From (M-) impacts on product cost calculation, therefore the Inventory Transaction field clearly reflects these type of output transactions.</li> <li>The very last transaction informs about:<ul> <li>the last cost, valid until a given ending date</li> <li>and the total amount of units of that product which are valued at that cost.</li> </ul> </li> </ul> <p>Here, the costs calculated by the legacy engine are also visible.</p> <p>It is possible to recognize them by their cost type:</p> <ul> <li>Legacy Average</li> <li>and Legacy Standard.</li> </ul> <p></p> <p>The way to define the Cost of a product implies to enter below detailed information:</p> <ul> <li>The Organization for which the calculated costs apply to. Note that the organization needs to be a Legal Entitytype organization.</li> <li>The Cost Type. There are two cost types available Standard and Average.</li> <li>The Cost of the product, that cost can either be the standard unit cost of the product or the average unit cost of the product.</li> <li>An Starting Date when the initial product cost entered is valid from.</li> <li>An Ending Date, when the initial product cost entered is valid until, i.e. 31-12-9999.   That is the same as saying that the cost entered is valid until a new movement of that product is dated on a given date prior to 31-12-9999. Obviously that new input movement will change the product cost.</li> </ul> <p>Besides:</p> <ul> <li>the Manual flag, allows the user to differentiate the cost transactions you have manually entered from the ones automatically created by Etendo.</li> <li>manual ones created by you while entering default product cost information should be checked as Manual.</li> <li>automatic ones related to Material Transactions bookings will not be checked as Manual.</li> <li>the Permanent flag blocks the ability to delete the cost manually. All costs should be set as Permanent.</li> <li>the Warehouse allows having a different cost by warehouse when desired and whenever the Costing Rule defined allows to do that.</li> </ul> <p>Warning</p> <p>Note that you should not fill this field if the Costing Rule does not have the Warehouse Dimension field checked.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#transactions","title":"Transactions","text":"<p>Transaction tab is a summarized view of all the transactions of a product.</p> <p>There is not a way for the user to directly create new product transactions in the transactions tab.</p> <p>Product transactions of any type are automatically saved and listed in this tab as they are booked in Etendo.</p> <p></p> <p>As shown in the image above, Etendo saves and informs us about below relevant data for each product transaction type:</p> <ul> <li>Storage Bin where the product has been stored in or taken from</li> <li>Movement Quantity, as the number of product units moved internally or either in or out</li> <li>Movement Date, as the date of the product transaction</li> <li>Movement Type, such as:</li> <li>Customer Shipment, this type can have:<ul> <li>a negative movement quantity whenever a product is shipped to a customer in a Goods Shipment document.</li> <li>a positive movement quantity whenever a product is returned from a customer in a Return Material Receipt.</li> </ul> </li> <li>Internal Consumption, as the units consumed in internal activities such as projects, reparations. This type can be:<ul> <li>Positive if the units of the product reduce stock from the warehouse</li> <li>or Negative if an internal consumption transaction is canceled, this works like when a shipment is canceled.</li> </ul> </li> <li>Inventory In, this one relates to a Physical Inventory Count higher than the Stock booked for a product in Etendo.</li> <li>Inventory Out, this one relates to a Physical Inventory Count lower than the Stock booked for a product in Etendo.</li> <li>Movement From, this one relates to Goods Movements from a Warehouse &amp; Storage Bin</li> <li>Movement To, this one relates to Goods Movements to a Warehouse &amp; Storage Bin</li> <li>Production, as the units of a product included in a work effort. This type can be:<ul> <li>Positive, for P+ when products are added to the warehouse</li> <li>or Negative, for P- when products are consumed</li> </ul> </li> <li>Vendor Receipts, this type can have:<ul> <li>a positive movement quantity whenever a product is received from a vendor in a Goods Receipt document.</li> <li>a negative movement quantity whenever a product is returned to a vendor in a Return to Vendor Shipment.</li> </ul> </li> </ul> <p>Etendo also informs us about the specific:</p> <ul> <li>Goods Receipt/Shipment Line</li> <li>Physical Inventory Line</li> <li>Movement Line</li> <li>Production Line</li> <li>or Project Issue</li> </ul> <p>information of the product transaction, as applicable.</p> <p>It is also possible to review:</p> <p>1. The Costing Status of a transaction.</p> <p>Costing status of a transaction can be any of the ones listed below and has a lot to do with the Costing Background Process:</p> <ul> <li>Not Calculated. This status means that the costing background process has not taken the transaction yet to calculate its cost.</li> <li>Cost Calculated. This status means that the costing background process has already taken the transaction and its cost has been calculated.</li> <li>Pending. This status has been implemented to get that the costing background process does not throw an error whenever it is not possible to calculate the cost of a transaction.   This status is not used by the Costing Algorithms currently implemented in Etendo but can be used by other costing algorithms such as FIFO for those cases where a product output transaction is booked without booking its corresponding product input transaction.</li> <li>Skip. This status has been implemented to make the costing background process not taking into account the transactions set as Skip while calculating costs.   This status is not used by the Costing Algorithms currently implemented in Etendo but could be used by other costing algorithms.</li> </ul> <p>2. and whether the cost of a transaction has been calculated or not.</p> <p>As soon as a product transaction gets its cost calculated by the Costing Background Process the field Is Cost Calculated gets the value Yes.</p> <p>Once the cost of a transaction is calculated you can also view the:</p> <ul> <li>Trx Original Cost, that is the original cost of the transaction</li> <li>Total Cost, that is the sum of the original cost of the transaction and all adjustment costs of any type.</li> <li>Unit Cost, that is the sum of the original cost and all the unit cost type adjustments.</li> <li>Currency used for the calculations.</li> </ul> <p>Additionally, Is Cost Permanent field informs whether the cost of a transaction is permanent or not. In case it is permanent, it will not be changed anymore.</p> <p>Finally, it is important to remark that in the case of Average cost algorithm, the average cost of a product is calculated as Moving Average.</p> <p>The average cost of a product is calculated based on the product's transaction flow, therefore it is the sum or subtraction of the Total Cost of the transactions listed for the product, divided by the sum of the Total Movement Quantity of the transactions.</p> <p>For instance the average cost of a product which transactions are listed below is equal to 23.33 = (2000.00-1000.00+2500.00)/(100-50+100):</p> <ul> <li>goods receipt for Movement Qty 100 for a Total cost of 2000</li> <li>goods shipment for Movement Qty -50 for a Total cost of 1000</li> <li>goods receipt for Movement Qty 100 for a Total cost of 2500</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#manual-cost-adjustment","title":"Manual Cost Adjustment","text":"<p>Additionally, the cost of a transaction can be modified by clicking the Manual Cost Adjustment process button. After clicking this button, a new popup is opened:</p> <p></p> <p>This pop-up allows entering below detailed data:</p> <ul> <li>Total Cost Amount: that is the new total cost of the product transaction</li> <li>Accounting Date: that is the date when this manual change which will imply a cost adjustment is going to be post to the ledger</li> <li>Incremental:</li> <li>if not checked, the amount entered in the total cost amount field is the new Total Cost of the transaction which, besides that, will be set as a Permanent cost which cannot be adjusted anymore.</li> <li>if checked, the amount entered in the total cost amount field is going to be added to the current total cost, besides Unit Cost checkbox is shown.</li> <li>Unit Cost: This checkbox is shown only if Incremental checkbox is selected.</li> <li>if not checked, the incremental amount entered in the field total cost amount is not going to be considered part of the transaction unit cost but total cost. This is like entering an extra cost such as Landed Cost, which does not change the unit cost of that transaction but the total cost.</li> <li>if checked, the incremental amount entered in the field total cost amount is going to be considered part of the unit cost of the transaction.</li> </ul> <p>For additional information about which cost adjustment is, or it is not unit cost, please review the section Cost Adjustments - Overview.</p> <p>Once done, a manual cost correction cost adjustment will be created.</p> <p>This cost adjustment can be reviewed and posted to the ledger in the Cost Adjustment window.</p> <p>In the same way, this cost adjustment can also be reviewed in the Transaction Cost tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#transaction-costs","title":"Transaction Costs","text":"<p>Transaction Costs records are automatically created by the Costing Background Process and then listed for the product in this tab.</p> <p>As soon as a product transaction gets its cost calculated, a new record is created in this tab.</p> <p>As soon as a product transaction gets its cost adjusted, a new record is created in this tab referring to a Cost Adjustment Line.</p> <p></p> <p>Some relevant fields to note are:</p> <ul> <li>Cost Date: that is the date when the cost has been calculated (i.e. accounting date of a goods receipt)</li> <li>Cost: that is the total cost calculated by the costing background process</li> <li>Currency: that is the currency used to calculate the cost.   Currency cost is legal entity currency, therefore product transaction having a different currency (price list in USD currency for instance) gets its cost calculated in the legacy currency (i.e. EUR)</li> <li>Cost Adjustment Line: if a calculated cost comes from a cost adjustment, this field populates the cost adjustment line that causes that cost.   At the end, the total cost of a product transaction is the sum of all the costs listed in this tab, original and adjusted ones which could be part of the unit cost or not (i.e landed costs).</li> <li>Unit Cost: this field details whether the calculated cost is part of the unit cost of the product or not.</li> <li>Accounting Date: that is the accounting date when the cost has been calculated and post to the ledger (i.e. accounting date of a goods receipt post to the ledger)</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#purchasing","title":"Purchasing","text":"<p>Purchasing tab information is used for products that are planned by the purchasing plan.</p> <p>In this tab, the information that is required for the creation of the Purchasing plan and of the automatic creation of Purchase Orders from the Purchasing Plan is entered.</p> <p>Also, the Requisition process uses the Business Partner information for the automatic creation of Purchase Orders.</p> <p></p> <ul> <li>Business Partner, the vendor that will appear on the Purchase Order when created automatically from the Requisition or from the Purchasing Plan.</li> <li>Quality Rating: quality rating of the vendor. Information only field that is not used by the MRP process.</li> <li>Current Vendor checkbox: indication of the default vendor that will be taken into account by the MRP process.</li> <li>UPC/EAN: Universal Product Code/European Article Number (barcode) of the product as used by the selected vendor. Information only, this information does not appear on a created Purchase Order.</li> <li>Currency: currency of the purchase order.</li> <li>Net List Price: information only field of the Net List Price that has to be updated manually on the automatically created Purchase Order from the Purchasing Plan.</li> <li>Price Effective From: the date that the entered prices became valid. Information only, not used by the MRP process.</li> <li>Purchase Order Price: information only field of the Net Unit Price that has to be updated manually on the automatically created Purchase Order from the Purchasing Plan.</li> <li>Last Purchase Order Price: the Net Unit Price on the most recently added Purchase Order.</li> <li>Last Invoice Price: the Net Unit Price on the most recently added Purchase Invoice.</li> <li>UOM: the unit of measure of the product.</li> <li>Minimum Order Qty.: a minimum order quantity for the vendor. In the Purchasing plan, the quantity for suggested purchase orders is this value or above.</li> <li>Quantity per Package: information only for the packaging of the product. This information is not taken into account for the creation of the information in the Purchasing Plan nor for the creation of Purchase Orders.</li> <li>Purchasing Lead Time: time in calendar days between when the product is ordered from the vendor and when it is received in stock. In the Purchasing Plan, this information is used to calculate when purchase orders should be placed, resulting in the Planned Order Date for the suggested purchase order.</li> <li>Fixed Cost per Order: information only field of a fixed amount that has to be added manually to the automatically created Purchase Order from the Purchasing Plan.</li> <li>Vendor Product No.: the vendor reference for the product</li> <li>Vendor Category: information-only field to add vendor category information.</li> <li>Discontinued: information-only field to indicate that this product is no longer used. The Purchasing Plan does not take this set up into account when generating the plan and when creating Purchase Orders. When selected, the field Discontinued by date to indicate when the product is discontinued. For information-only purposes.</li> <li>Quantity Type:<ul> <li>Exact: each suggested purchase order is for the exact required quantity. For example, if the demand is for 85 units, the quantity for the suggested purchase order is 85 units.</li> <li>Multiple: the quantity that appears as the quantity for the suggested purchase order is a multiple of the standard quantity (as defined on this screen). For example, if the standard quantity is 20 units and the demand is for 85 units, the quantity for the suggested purchase order is 100.</li> </ul> </li> <li>Manufacturer: information-only field to indicate the manufacturer of the product.</li> <li>Standard Quantity: quantity that is taken into account in combination with the Quantity Type for the quantity value for the suggested purchase order.</li> <li>Capacity: quantity per day the vendor is able to supply. Based on this field and the lead time, the purchase order date is calculated. The number of days is calculated as the max value of the lead time and the required quantity / capacity.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#manufacturing","title":"Manufacturing","text":"<p>Manufacturing tab is used for products that are planned by the manufacturing plan.</p> <p>The information in this tab is mainly used by MRP to process the Manufacturing Plan and Purchasing Plan. The storage bin field is filled out for products in production to indicate the default storage bin the product will be stored in when coming out of production.</p> <ul> <li>Storage Bin: default location in the warehouse of the product.</li> <li>Planning Method: definition of the elements of supply and demands that are taken into account and with which percentage for the creation of the Manufacturing Plan and Purchasing Plan. For more details, see the  Planning Method section.</li> <li>Planner: the person responsible for the execution of the MRP plan of the product. For more details, see the Planner section.</li> <li>Capacity: production capacity per day for the product.</li> <li>Min. Quantity: minimum quantity to be entered on a work requirement.</li> <li>Quantity Type:<ul> <li>Exact: each suggested work requirement is for the standard quantity (as defined on this screen). Multiple suggested work requirements appear for the total demand. For example, if the standard quantity is 20 units and the demand is for 85 units, 5 lines of suggested work requirements with quantity 20 appear.</li> <li>Multiple: the quantity that appears as the quantity for the suggested work requirement is a multiple of the standard quantity (as defined on this screen). For example, if the standard quantity is 20 units and the demand is for 85 units, the quantity for the suggested work requirement is 100.</li> </ul> </li> <li>Standard Quantity: quantity that is taken into account in combination with the Quantity Type for the quantity value for the suggested work requirement.</li> <li>Minimum Lead Time: manufacturing lead time of the product.</li> <li>Safety Stock: the minimum level of stock that has to always be in the warehouse. For example, if there is a safety stock for 1000 units and stock is 900 units, a work requirement (Manufacturing Plan) or purchase order (Purchasing Plan) is suggested for 100 units. Typically, low cost products or products with a very long lead time are set up with a safety stock level.</li> <li> <p>Max not reserved stock: Maximum stock without taking into account the pre-reserved stock. This field is only visible when Stock reservation feature is enabled. See the below example to understand how it works:</p> </li> <li> <p>Safety stock and Max not reserved stock are 200 and 1000 units, respectively</p> </li> <li>There are several sales orders to be delivered by 3000 units in total</li> <li>These sales orders will generate the corresponding purchase orders (pre-reserved) when launching the MRP</li> <li>There are currently in stock 80 units</li> <li> <p>When MRP is launched it will create the corresponding pre-reserved and because being after below safety stock it will create another purchase order:</p> <ol> <li>As the Max not reserved stock is defined, the system will create a purchase order of 920 units (1000-80)</li> <li>If this parameter was not defined, it would work as usual and it would create a purchase order of 120 units (200-80)</li> </ol> </li> <li> <p>Abc: value used in warehouse management to indicate a combination of the stock level and the cost of a part. The value is calculated by running the Pareto Product Report.</p> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#translation","title":"Translation","text":"<p>Product names can be translated to any language.</p> <p>The way to get that is as simple as:</p> <ul> <li>select first the language required</li> <li>and then enter the product name translated into that language.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#characteristics","title":"Characteristics","text":"<p>Relation of characteristics assigned to the Product.</p> <p>Fields:</p> <ul> <li>Sequence number: Order of the characteristics</li> <li>Characteristic: List all the characteristic defined in Product Characteristics window</li> <li>Variant: When it is marked, it will explode/create combinations with its values. If it is not marked, it will not create combinations with other characteristics. For example</li> <li>Characteristic Color: Variant marked with value Blue and White</li> <li>Characteristic Size: Variant marked with value M and L</li> <li>Characteristic Fashion line: Variant not marked with value Sport</li> <li>It will create four variants/products and for all of them with the characteristic Sport</li> <li>Explode Configuration Tab: Flag available on Generic Products and Variant Characteristics. When it is checked, the values of the selected variant characteristic are automatically inserted in the Characteristic Configuration tab. If it is not checked, the values must be added manually.</li> <li>Defines Price: Every value of that characteristic will define the price of the new product. It will overwrite the price defined for the generic product. This price is defined in the Characteristic Configuration tab</li> <li>Price List Type: It is shown when Defines Price is marked. It allows the user to select in which type of price list you want to overwrite the price. For example:</li> <li>The generic product has two price lists: One is for sales and the other for purchase</li> <li>You select Sales Price List value. Then when creating the product variants it will only overwrite the price in price lists defined as Sales</li> <li>The opposite if the value selected is Purchase Price List</li> <li>Define image: Every value of that characteristic will define the image of the new product. It will overwrite the image of the generic product. This image is defined in the Characteristic Configuration tab</li> <li>Characteristic Subset: List all the subsets included for the selected Characteristic (i.e. Pants)</li> </ul> <p>Once the record is saved, all the values of the characteristic are populated into the characteristic configuration tab</p> <p>Characteristic Configuration</p> <p>Characteristic Configuration tab contains the available values for each characteristic assigned to the generic product. Price modifiers to create the variants are defined in this tab as well.</p> <p>Fields to take into account:</p> <ul> <li>Characteristic value: Cannot be editable since it is populated automatically when selecting the characteristic</li> <li>Code: Code for the value. It inherits what has been defined in product characteristic window</li> <li>Unit price: This field is displayed when the characteristic is marked as Defines Price. The aim of this field is to have different prices per value. For example, depending on the Sizes</li> <li>Image: This field is displayed when the characteristic is marked as Defines Image. The aim of this field is to have different images per value. For example, depending on the colour.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#stock","title":"Stock","text":"<p>This Tab shows the available Stock for this Product in the application. It only shows Storage Bins for which the quantity available of the Product is not 0</p> <p>For each not empty storage bin, it also shows information about the:</p> <ul> <li>reserved quantity</li> <li>and the allocated quantity</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#unit-cost","title":"Unit Cost","text":"<p>Unit Cost Tab displays information about the actual Unitary Cost (Unit Cost) of the product.</p> <p>The Unitary Cost of a Product is the value of each stocked unit of the product no matter the costing algorithm used to calculate the cost of that product.</p> <p>This cost is calculated using the Total Stock of a product and the Total Value of the stock of the product, as per formula below:</p> <ul> <li>Unit Cost = Total Stock Value / Total Stock</li> </ul> <p>This way, the unitary cost calculated is independent of the Costing Algorithm used to calculate the cost of each transaction and product, therefore this unitary cost is compatible with all Costing Algorithms (Average, Standard, FIFO, ...)</p> <p>In this Tab, there is going to be a record for:</p> <ul> <li>each Organization that is a Legal Entity that has a Costing Rule defined</li> <li>or each Organization and Warehouse, whenever Warehouse Dimension is defined as a costing dimension of the current Costing Rule defined for the Legal Entity.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#product-categories","title":"Product Categories","text":"<p>The user can define if a product of a certain product category can be related to a product of 'Service' type by creating a relation between an Order Line of the Service product and another Sales Order Line of the product belonging to included/excluded product categories.</p> <p>This tab will only be available when the field \u2018Included Product Categories\u2019 of the Service has a value. It contains all the product categories related to the service.</p> <p></p> <p>The following information about related products is available in the tab:</p> <ul> <li>Search Key: Search Key of the Product Category.</li> <li>Name: Name of the Product Category.</li> <li>Description: Description of the Product Category.</li> </ul> <p>This tab is not editable, it is not possible to add records manually or edit them. It only allows to delete records. To add new records, it is necessary to click the \u2018Relate Prod Categories\u2019 button (Visible only when the field \u2018Included Product Categories\u2019 has a value). This button will open a Pick &amp; Edit displaying all product categories not related to the service.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#category-price-rule-version","title":"Category Price Rule Version","text":""},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#products","title":"Products","text":"<p>The user can define if a product can be related to a product of 'Service' type by creating a relation between an Order Line of the Service product and another Sales Order Line of the product included/excluded.</p> <p>This tab will only be available when the field \u2018Included Products\u2019 of the Service has a value. It contains all the products related to the service.</p> <p></p> <p>The following information about related products is available in the tab:</p> <ul> <li>Search Key: Search Key of the Product.</li> <li>Name: Name of the Product.</li> <li>Brand: Brand Key of the Product.</li> <li>Product Category: Product Category to which belongs the product.</li> <li>Generic Product: Generic Product of the Product, if it has any.</li> <li>Characteristic Description: Characteristics of the Product, if it has any.</li> </ul> <p>This tab is not editable, it is not possible to add records manually or edit them. It only allows to delete records. To add new records, it is necessary to click the\u00a0 \u2018Relate Products\u2019 button (Visible only when the field \u2018Included Products\u2019 has a value). This button will open a Pick &amp; Edit displaying all products not related to the service.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#product-price-rule-version","title":"Product Price Rule Version","text":""},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#alternate-uom","title":"Alternate UOM","text":"<p>Info</p> <p>The user must enable this preference by entering the Preference window, checking the Property list checkbox, choosing \u201cEnable UOM Management\u201d in the Property field with value Y.</p> <p></p> <p>Fields to note:</p> <ul> <li>UOM, that is the alternative unit of measure of the product, for instance Pallet.   It is important to remark that any unit of measure needs to be created and configured in Unit of Measure window.</li> <li>Conversion Rate, that is the conversion between product's alternative unit of measure (AUM) to product's unit of measure.   For instance, if product's AUM conversion to product's UOM is 50; that means that 1 Pallet represents 50 Units.</li> <li>Gtin, that is the Global Trade Item Number for the product defined in the corresponding AUM</li> <li>Sales, Purchase and Logistics, those fields allow defining the use of product's AUM within Sales, Purchase and Inventory flows.   Values allowed are:</li> <li>Primary: Product's AUM defined in this tab is used as default unit of measure in the selected flow (Sales or Purchase), when creating a sales or purchase document such as an order or receipt/shipment.     Only one Primary AUM can be defined per Product and flow.     For instance, if Pallet is the primary AUM defined for a product within Purchase flow, that means that every time that a purchase document is created, Pallet will be the default unit of measure shown.</li> <li>Secondary. Product's AUM defined in this tab can be selected for the selected flow when creating a Document.     For instance, if Pallet is the secondary AUM defined for a product within Sales flow, while Pack is primary one; that means that every time that a sales document is created, Pack will be the default unit of measure shown, but end-user can change it to Pallet.</li> <li>Not Applicable. The AUM defined in this tab for the product will not be available for selection when creating Documents for the selected flow.     That is the option to select for Logistics as the use of alternative units of measure is currently implemented just for sales and purchase. Inventory transactions/documents always refer to the product's unit of measure.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/master-data/#modify-taxes-categories","title":"Modify Taxes Categories","text":"<p>It defines tax modification for products linked to service. Products linked to this service that belong to the configured category will change the tax category when linked to this service.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/","title":"Pricing","text":"","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#price-list-schema","title":"Price List Schema","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Picing</code> &gt; <code>Price List Schema</code></p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#overview","title":"Overview","text":"<p>A price list schema is a template used to automatically populate a new version of a price list.</p> <p>Price List management is not an easy task to handle, mainly in competitive markets where the margins are very tight.</p> <p>Nowadays, organizations have to deal with a huge variety of products, which have different prices depending on the season and other pricing variables.</p> <p>Etendo manages prices through three pricing related concepts:</p> <ul> <li>the Price List</li> <li>the Price List Schema</li> <li>and the Price List Version</li> </ul> <p>And it allows the creation of:</p> <ul> <li>General Sales and/or Purchase Price List</li> <li>Specific Price Lists for a specific supplier or customer, or a group of them.</li> <li>Based on cost Price list based on product cost</li> </ul> <p>The way these concepts work in Etendo is described below:</p> <ol> <li>Creation of Price List/s:<ol> <li>A \"Default Price List Schema\", with no configuration at all, is created by default after creating an organization.</li> <li>The \"Default Price List Schema\" is the schema to be used in the creation of the price lists which are NOT a \"Price List Version\".</li> <li>The Price Lists linked to the \"Default Price List Schema\" might contain both the net list price and the net unit prices of the products.     To learn more, visit Price List.</li> <li>The Price list/s created can be linked to the business partners as required.     To learn more, visit Business Partner</li> </ol> </li> <li>Creation of Price List Schema/s:<ol> <li>New Price List Schema can be created as a way to configure a set of commercial rules to be applied to existing price lists.     To Learn how, keep reading.</li> </ol> </li> <li>Creation of Price List Version/s:<ol> <li>A new version of an existing Price List is created as a combination of a base price list and a given \"Price List Schema\".     To learn more, visit Price List.</li> <li>The Price list/s versions created can be linked to the business partners as required.     To learn more, visit Business Partner.</li> </ol> </li> </ol>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#header","title":"Header","text":"<p>Price list schema window supports the creation of as many price list schemas as required with the aim of obtaining an easy management of price lists and price list versions.</p> <p></p> <p>As shown in the image below, the creation of a price list schema is as easy as to create it and give it a Name.</p> <p>The set of price and discount rules which might apply to a set of product categories or specific products must be configured in the \"Lines\" tab.</p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#lines","title":"Lines","text":"<p>Price list schema lines tab allows defining a set of price rules such as to apply a discount % to the net unit price of a given product category or specific product.</p> <p></p> <p>First thing to notice is that, as shown in the image above, \"Lines\" tab is split into two sections:</p> <ul> <li>the first section allows the user to:</li> <li>Inform Etendo about:<ul> <li>the \"Business Partner\" and/or</li> <li>the \"Product Category\" and/or</li> <li>the \"Product\"   to which the price/discount rules to be defined in the next section are going to apply.</li> </ul> </li> <li>the second section allows the user to:</li> <li>configure which price of the existing price list is going to be taken as \"Base List Price\" in the new price list version. The options available are:<ul> <li>Net List Price which is the price published in the price list</li> <li>Net Unit Price which is the final price used in purchase and sales order/invoice lines</li> <li>Fixed Price, as it is possible to configure that for the new price list version, therefore the net list price is equal to a given fixed price.</li> <li>Cost, which is the price published in the price list, will be the product cost (costing tab in product window) and a margin.</li> <li>Fixed Price or Cost Based combines the previous two options with the following condition:</li> <li>If the fixed price is higher than the cost, then the defined fixed price is selected.</li> <li>If the fixed price is lower than the cost, then the cost (plus the defined margin) is selected.</li> <li>Fixed Price or Cost plus Margin Based combines fixed price and cost options with the following condition:</li> <li>If the set fixed List/Unit price is higher than the current cost plus List/unit Price margin, the price list will be created with the fixed price.</li> <li>If the set fixed List/Unit price is lower than the current cost plus List/Unit Price margin, then the price list will be created using the cost plus the margin.</li> </ul> </li> <li>configure which price of the existing price list is going to be taken as \"Base Unit Price\" in the new price list version. The options available are the same as above:<ul> <li>Net List Price</li> <li>Net Unit Price</li> <li>Fixed Price, as it is possible to configure that for the new price list version, the net unit price is equal than a given fixed price</li> <li>Cost</li> <li>Fixed Price or Cost based</li> <li>Fixed Price or Cost plus Margin Based</li> </ul> </li> <li>configure the discounts if any to apply to the net unit price and/or to the net list price in the fields:<ul> <li>List Price Discount %</li> <li>Unit Price Discount %</li> </ul> </li> <li>configure the margin on the product cost to apply to the net unit price and/or to the net list price in the fields:<ul> <li>List Price Margin %</li> <li>Unit Price Margin %</li> </ul> </li> </ul> <p>Second thing to notice is that the set of price rules and/or discounts could be configured in a \"hierarchical\" way, that's line by line or applying the last valid price rule (non-hierarchical way).</p> <p>Info</p> <p>The Enable Hierarchical Price List preference is available in order to select the desired behavior applying the price list rules.</p> <p>Let us imagine that the rules which need to be part of a price list schema are:</p> <ul> <li>to apply a net unit price discount of 5% to the products which belong to a Product Category X.</li> <li>to apply a net unit price discount of a 10% to the products which belong to the Product Category Y.</li> <li>to apply a net unit price discount of 15% to the Product X that belongs to Product Category X.</li> </ul> <p>The way this works in Etendo is:</p> <ul> <li>the price list schema must contain 2 lines one per each discount rule to be applied:</li> <li>First Line will contain information such as:<ul> <li>Sequence Number = 10</li> <li>Conversion Rate Type = Spot</li> <li>Product Category = Product Category X</li> <li>Base Net Unit Price = Net Unit Price</li> <li>Net Unit Price Discount = 5.00</li> </ul> </li> <li>Second Line will contain information such as:<ul> <li>Sequence Number = 20</li> <li>Conversion Rate Type = Spot</li> <li>Product Category = Product Category Y</li> <li>Base Net Unit Price = Net Unit Price</li> <li>Net Unit Price Discount = 10.00</li> </ul> </li> <li>Third Line will contain information such as:<ul> <li>Sequence Number = 30</li> <li>Conversion Rate Type = Spot</li> <li>Product Category = Product Category X</li> <li>Product = Product X</li> <li>Base Net Unit Price = Net Unit Price</li> <li>Net Unit Price Discount = 15.00</li> </ul> </li> </ul> <p>Using hierarchical behavior:</p> <ul> <li>unit price discount of 5% is applied to the products which belong to a Product Category X.</li> <li>unit price discount of 10% is applied to the products which belong to a Product Category Y.</li> <li>unit price discount 15% is applied to Product X, in addition to the 5% discount for belonging to Product Category X.</li> </ul> <p>Using non-hierarchical behavior:</p> <ul> <li>unit price discount of 5% is applied to the products which belong to a Product Category X, except to Product X.</li> <li>unit price discount of 10% is applied to the products which belong to a Product Category Y.</li> <li>unit price discount of 15% is applied to Product X.</li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#price-list","title":"Price List","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Picing</code> &gt; <code>Price List</code></p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#overview_1","title":"Overview","text":"<p>A price list is a listing of prices for different products or services.</p> <p>Info</p> <p>It is possible to create as many price list and price list versions as required depending on the organization's needs.</p> <p>The process of creating a price list is slightly different to the process of creating a price list version.</p> <p>Price List creation:</p> <ol> <li>Price List Name and Type (sales or purchase) is detailed in the Price List window header. It is also mandatory to define whether the price includes taxes or not.</li> <li>There exists the possibility of Price list based on cost, for this, the price list should be a sales price list.</li> <li>The Default Price List Schema with no configuration at all, as well as the valid from date information, must be detailed in the Price List Version tab</li> <li>The Unit / List price of each product which must be included in the price list is detailed in the Product Price sub-tab.</li> <li>The price list is ready and can be linked to the business partners as required and used.</li> </ol> <p>Price List version creation:</p> <ol> <li>Price List Name and Type (sales or purchase) is detailed in the Price List window header.</li> <li>A Price List Schema which contains the new commercial rules to apply, the valid from date and the Base Price List for which the price list version is created and must be detailed in the Price List Version tab.</li> <li>The process Create Price list populates the \"Product Price\" tab by including:<ol> <li>every product contained in the original price list</li> <li>each product will have a new unit and/or list price, depending on what was configured in the price list schema used.</li> </ol> </li> <li>The price list version is ready and can be linked to the business partners as required and therefore used.</li> <li>Documents will automatically default the most recent version of a price list.</li> <li>There is no end date on price list versions, but old versions can be deactivated.</li> </ol>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#price-list_1","title":"Price List","text":"<p>Price List window allows creating purchase and sales price lists to be assigned to the business partners for its use in purchase and sales transactions such as orders and invoices.</p> <p></p> <p>As shown in the image above, a price list or a price list version can be created by just entering below relevant information:</p> <ul> <li>By selecting the field \"Sales Price List\" it will be for sales transactions, otherwise it will be a purchase price list.</li> <li>Default field allows defining a given price list as the default one to be used in case a business partner does not have a specific price list assigned.</li> <li>Price list based on cost, this field is shown if the price list is a Sales Price List. This option allows creating a price list based on the cost price plus a margin.</li> <li>the cost price is the one defined in the Costing tab of the product window.</li> <li>the margin is defined in the Price List Schema window.</li> <li>when the price list is a price list based on cost, the price list schema should be configured with cost and a margin.</li> <li>Price includes taxes. This flag is very important and depending on this the behavior of sales and procurement flows will be affected.</li> <li>If it is marked, then the price defined is the gross unit price</li> <li>If it is not marked, then the price defined is the net unit price</li> </ul> <p>How does this affect the flows?</p> <ul> <li>When the price list includes taxes, the gross unit price and line gross amount are filled and the net unit price is calculated based on the gross unit price and the corresponding tax rate. What cannot be changed is the gross and, due to this, there might be some rounding issues that the system automatically handles adding or subtracting these differences in the tax amount.</li> </ul> <p>As an example : If price inclusive of tax is originally 135.50 and rate is 4.5 % then the rounded price before tax would be 129.67</p> <p>The order line would stay:</p> <p>Quantity: 1 Net Unit Price: 129.67 Line Net Amount: 129.67 Gross Unit Price: 135.50 Line Gross Amount: 135.50</p> <p>But the total gross amount (calculated by the system) would be 135.51 (tax base amount:129.67 + tax amount:5.84) and what it has to be clear is that the final result must be 135.50 (The customer bought 1 unit whose price is 135.50). This difference is going to be solved adjusting taxes:</p> <p>The system will adjust the difference by summing or subtracting this difference with the tax that has the highest amount. So, in this example, instead of having a tax line where the amount is \u20ac5.84, the amount will be \u20ac5.83 (5.84-0.01)</p> <p>Finally, the total gross amount for the sales order would be 135.50 (129.67+5.83) which is the desired amount.</p> <p>Due to this (Net amount vs Gross amount), when using prices that include taxes, it is recommended to work with greater precision (price precision) to avoid rounding differences.</p> <ul> <li>When the price list does not include taxes, the gross unit price and line gross amount fields are not displayed and both fields are not calculated at all in the line of the document. The final gross amount of the document will be the result of the sum of the lines net amounts plus the tax amounts.</li> <li>The price list is defined at document level (header) so there cannot be lines where the price includes taxes and others where not. This is clear for orders, but for invoices where orders can be grouped in one just invoice the rule is also applied. One invoice cannot have orders where the price list includes taxes and orders where the price list does not include taxes.</li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#price-list-version","title":"Price List Version","text":"<p>There could be as many versions of an existing price list as required, versions which can be valid for a given time period and which can be defined according to certain commercial rules.</p> <p></p> <p>As shown in the image above, there are two types of \"Price List Versions\":</p> <ul> <li>generic and original ones linked to the \"Default Price List Schema\"</li> <li>further price list versions (not based on the cost) which requires both:</li> <li>a Price List Schema</li> <li>and a Base Price List version</li> <li>price list versions based on cost require a Price List Schema with Cost configuration in Base list price and Base unit price.</li> </ul> <p>The process button named \"Create Price List\" must be used only in the case of creating further price list versions as it requires a Base Price List if the price list is not based on cost. If the price list is based on cost, it is mandatory to select the price list schema and optionally the base version.</p> <ul> <li>if Base version is blank, the application calculates the unit price and list price for all the products (excluding discounts products) plus the margin defined.</li> <li>if Base version value is selected, the application calculates the unit price and list price for all the products defined in the base price list as cost plus margin.</li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#product-price","title":"Product Price","text":"<p>Product Price tab allows the user to either add or edit products and their prices for a selected price list.</p> <p></p> <p>In other words:</p> <ul> <li>Add products in the case of creating a price list</li> <li>Edit products in the case of modifying a price list version:</li> <li>as the required products at their new prices are automatically populated by Etendo in this tab while running the process \"Create Price List\".</li> </ul> <p>Overall, this tab includes two main fields:</p> <ul> <li>'the List Price' field, as the price used as a reference in a given price list or price list version. This price can be the result of a discount or any other commercial rule applied by a Price List Schema.</li> <li>and the Unit Price field, as the final price used in documents such as orders and invoices. This price can be the result of a discount or any other commercial rule applied by a Price List Schema.</li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#create-all-price-lists","title":"Create All Price Lists","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Pricing</code> &gt; <code>Create All Price Lists</code></p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#overview_2","title":"Overview","text":"<p>On daily sales, especially on retail and distribution, price lists are very important. Therefore, Etendo includes plenty of information to manage and update price list versions per business partner.</p> <p>This functionality includes different price lists, price list versions per each price list and price list schemes. Have a look at these concepts to better understand Create all Price Lists functionality.</p> <p>Etendo allows hierarchical price list structure and this hierarchy is based on price list schemes.</p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#functionality","title":"Functionality","text":"<p>Follow this example about what Create all Price Lists is used for:</p> <p>Example 1:</p> <p>Imagine you own a bakery and you sell different bread types to different customers. You may have French bread, rolls, bagels, etc. And for each type you may have different sizes small, medium and extra.</p> <p>You use a main price list (with a price list version) containing a price per bread when they are medium size. Based on this price list we build 2 other price lists applying a price list schema. For small bread, 5% off and for extra breads 4% more. This way, you will be able to manage price updates easily. Suppose flour price rises 10%, and you want to increase all prices for all breads. You could follow this steps:</p> <ul> <li>Create a new price list schema increasing the price 10%.</li> <li>Create a new version for the main price list, based on the new price list schema.</li> <li>Regenerate all price lists based on the main price list automatically. For this third step, you may use the Create All Price Lists feature.</li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#process","title":"Process","text":"<p>The Create All Price Lists generates all price lists pending from the selected price list. The process checks for all child price lists, and applying the defined price list schema, it generates a new version for each price list.</p> <p></p> <p></p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#discounts-and-promotions-window","title":"Discounts and Promotions Window","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Picing</code> &gt; <code>Discounts and Promotions</code></p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#overview_3","title":"Overview","text":"<p>Discounts and Promotions is a flexible feature that allows you to automatically adjust prices on order and invoice lines according to configurable business rules. You can define when and how promotions apply using filters (such as Business Partners, Products, Price Lists, and Characteristics), configure the type of discount (percentage, fixed amount, or fixed price), and control promotion availability by day and time. Multiple promotions can be applied in a prioritized cascade. The configuration also supports translating promotion names and tracking applied discounts on processed documents through an optional read-only tab.</p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#header_1","title":"Header","text":"<p>Defines the core settings and conditions for applying Discounts and Promotions to orders and invoices.</p> <p></p> <p>Fields to note:</p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#main-section","title":"Main Section","text":"<ul> <li>Organization: Organization to which the discount or promotion will be available.</li> <li>Discount/Promotion Type: Defines the type of rule used to adjust prices. By default, Etendo includes the Price Adjustment type, but it is possible to extend and add custom types according to the organization's needs.</li> <li>Name: Internal identifier for the promotion.</li> <li>Printed Name: Label shown to end-users and in reports. Defaults to Name if empty.</li> <li>Description: Optional short text describing the promotion (up to 255 characters).</li> <li>Active: Enables the promotion for use. Inactive records are retained for auditing/reporting.</li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#filter-options","title":"Filter Options","text":"<ul> <li>Starting Date: Date when the promotion becomes valid.</li> <li>Ending Date: Date until the promotion remains valid (inclusive).</li> <li>Priority: Order of application when multiple promotions apply. Lower number = higher priority.</li> <li>Apply Next Discount/Promotion: If checked, subsequent applicable promotions will also be applied.</li> <li> <p>Filters:</p> <p>Each of the following fields supports two filtering methods that define how the related records configured in the tabs will be treated during promotion evaluation.These options provide flexibility for defining the scope of a promotion in relation to Business Partners, Products, Price Lists, and Organizations.</p> <ul> <li>Included BP Categories</li> <li>Included BP Set</li> <li>Included Business Partners</li> <li>Included Product Categories</li> <li>Included Products</li> <li>Include Price Lists</li> <li>Included Organizations</li> <li> <p>Included External Business Partner References</p> Method Description All excluding defined (Default) The promotion applies to all records except those listed in the corresponding tab. Only those defined The promotion applies only to the records listed in the corresponding tab. </li> </ul> <p>Some filters have different filtering methods, which are described below:</p> <ul> <li> <p>Included Characteristics: Defines how product characteristics are filtered to apply the promotion. Three methods are available:</p> Method Description All Characteristics (Default) The promotion applies regardless of product characteristics. All of the values defined The product must match all defined characteristic for the promotion to apply. Any of the ones defined The product must match any defined characteristic for the promotion to apply. </li> <li> <p>Exclude Characteristics:  Defines how product characteristics are filtered to exclude the promotion. Two methods are available:</p> Method Description All of the values defined (Default) The product must match all defined characteristic for the promotion not to apply. Any of the ones defined The product must match any defined characteristic for the promotion not to apply. </li> </ul> </li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#definition","title":"Definition","text":"<ul> <li>Discount %: Percentage discount to apply to the price.</li> <li>Discount Amount: Fixed amount to subtract from the price.</li> <li>Fixed Unit Price: Final price assigned to the product when the promotion is applied.</li> <li>Min. Quantity: Minimum quantity required for the promotion to apply.</li> <li>Max. Quantity: Maximum quantity eligible for the promotion.</li> <li>Is multiple: Discount applies only if quantity is a multiple of a defined value.<ul> <li>Units per package: This option is displayed only if Is Multiple is enabled. It defines the number of units considered per package.</li> </ul> </li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#availability","title":"Availability","text":"<p>This section defines the days and times when the promotion is active. If no availability is configured, the promotion will always be applied.</p> <ul> <li>All Week: Flag to enable the promotion throughout the entire week.<ul> <li>Starting Time: Daily start time for the promotion.</li> <li>Ending Time: Daily end time for the promotion.</li> </ul> </li> <li>Monday \u2013 Sunday: Flags to enable the promotion on individual days of the week.<ul> <li>Starting Time: Start time for the specified weekday.</li> <li>Ending Time: End time for the specified weekday.</li> </ul> </li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#tabs","title":"Tabs","text":"<ul> <li>Translation: Allows defining the language, as well as the corresponding translated Name and Printed Name for each language.</li> <li>Business Partner Category: Allows inclusion or exclusion of Business Partner Categories from a promotion or discount.</li> <li>Business Partner: Allows inclusion or exclusion of specific Business Partners from a promotion or discount.</li> <li>Business Partner Set: Enables defining Business Partner Sets that a promotion or discount will apply to.</li> <li>Product Category: Allows inclusion or exclusion of Product Categories from a promotion or discount.</li> <li>Products: Allows inclusion or exclusion of individual Products from a promotion or discount.</li> <li>Price List: Enables selection of Price Lists to include or exclude from a promotion or discount.</li> <li>Organization: Allows selecting Organizations to include or exclude from a promotion or discount.</li> <li>Charesteristics: Allows selecting Product Charesteristics to include from a promotion or discount.</li> <li>Exclude Charesteristics: Allows selecting Product Charesteristics to exclude from a promotion or discount.</li> <li>External Business Partner Allows selecting External Business Partner to include or exclude from a promotion or discount.</li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#buttons","title":"Buttons","text":"<ul> <li>Add Organizations: Adds Organization records in the Organization tab to include or exclude them from the promotion.     </li> <li>Add Product Categories: Adds Product Category records in the Product Category tab to include or exclude them from the promotion.     </li> <li>Add Products: Adds Product records in the Products tab to include or exclude them from the promotion.     </li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#how-promotions-are-defined","title":"How Promotions are Defined?","text":"<p>The process for setting up a promotion is straightforward:</p> <ol> <li> <p>Identify the promotion: Use the fields Name and Printed Name to identify the promotion. Printed Name will be shown to the final user, while Name is used internally.</p> </li> <li> <p>Define the active period: Set Starting Date and Ending Date to define when the promotion will be valid.</p> </li> <li> <p>Control promotion priority and cascade: Use Priority to determine the order in which promotions will apply if more than one is valid. Enable Apply Next if you want subsequent promotions to apply after this one.</p> </li> <li> <p>Configure filters: Use the Filter Options section to determine where the promotion applies:</p> <ul> <li>Select Included method for each filter (Business Partners, Products, Price Lists, Characteristics, and Organizations).</li> <li>Define the actual filter values in the corresponding sub-tabs or use the available buttons.</li> </ul> <p>Tip</p> <p>Filter configuration is key to ensuring the promotion applies only in the intended scenarios.</p> </li> <li> <p>Define discount logic: In the Definition section, configure the discount:</p> <ul> <li>Discount Amount and/or Discount % to adjust the price.</li> <li>Fixed Unit Price to override the final price.</li> <li>Min and Max Quantities to apply the promotion only for certain quantities.</li> </ul> <p>Tip</p> <p>Use Fixed Unit Price for promotions that should force a specific price, and Min/Max Quantities for volume-based promotions.</p> </li> <li> <p>Set promotion availability (optional): In the Availability section, configure when the promotion will be active, ff no availability is configured, the promotion will always be applied:</p> <ul> <li>Use All Week to apply the promotion every day.</li> <li>Optionally, enable individual days (Monday to Sunday) to fine-tune when the promotion is active.</li> <li>For each day (or All Week), set Starting Time and Ending Time to define the valid time range.</li> </ul> <p>Tip</p> <p>Setting availability ensures promotions are correctly applied based on business hours, special days, or time-based marketing strategies.</p> </li> </ol>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#how-promotions-are-applied","title":"How Promotions are Applied?","text":"<p>Discount and Promotion rules are automatically applied to sales order lines and sales invoice lines based on the filters you configure. For example, targeting certain Business Partner Categories or specific products during a defined time period.</p> <p>Etendo calculates the final price in three steps:</p> <ul> <li>Price List: The base price defined in the product price list.</li> <li>Price Standard: The first discount level. This may come from the price list or can be manually adjusted on the line.</li> <li>Actual Price: The final price that will appear on the document after applying promotions.</li> </ul> <p>If multiple promotions apply, they will be applied in order of priority. Each new promotion is applied to the price resulting from the previous one (cascade).</p> <p>Price adjustments are visible immediately when editing the line, you will see the final price before processing the document.</p> <p>Info</p> <p>Although the discount is shown instantly, the Discounts and Promotions record is only created once the document is processed. See the Optional Configuration section to learn how to display this information in the document window.</p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#optional-configuration","title":"Optional Configuration","text":"<p>The Discounts and Promotions read-only tab can be added to the following windows to display the discounts applied to each price:</p> <ul> <li>Purchase Order</li> <li>Sales Order</li> <li>Purchase Invoice</li> <li>Sales Invoice</li> <li>Sales Quotation</li> </ul> <p>Tip</p> <p>To display this tab in the mentioned windows, simply check the Active box in the corresponding tab in the windows, tabs and fields window.  This action should be performed by a developer, with system administrator role, and  using a development template to export the configuration and prevent changes from being lost.</p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#service-price-rule","title":"Service Price Rule","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Picing</code> &gt; <code>Service Price Rule</code></p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#overview_4","title":"Overview","text":"<p>In this window Price Rules assigned to Price Rule Based services will be configured. Instead of having a fixed price, there will be rules that will determine the price of the Service.</p>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#service-price-rule_1","title":"Service Price Rule","text":"<p>Configuration fields:</p> <ul> <li>Name: Name of the Service Price Rule.</li> <li>Description: Description of the Service Price Rule.</li> <li>Rule Type: There are two values to select in the dropdown</li> <li>Percentage: If selected, a Percentage field will be displayed allowing to set a Percentage. To determine the price of the service, this amount will be applied to the amount of the lines related to the service.<ul> <li>Percentage: Percentage to be applied.</li> <li>After Discounts: If selected, the percentage will be applied after adding the discounts to the ticket.</li> </ul> </li> <li>Ranges: If selected, a new tab Ranges will be displayed allowing to create different Ranges based on the amount of the related lines.</li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/pricing/#ranges","title":"Ranges","text":"<p>In this tab, different Ranges can be created based on the amount of the related order lines. Configuration fields:</p> <ul> <li>Amount Up To: If the summed amount of related order lines is equal or less than this amount, the configuration of this range will be taken into account.</li> <li>Rule Type: There are two values to select in the dropdown</li> <li>Percentage: If selected, a Percentage field will be displayed allowing to set a Percentage. To determine the price of the service, this amount will be applied to the amount of the lines related to the service.<ul> <li>Percentage: Percentage to be applied.</li> <li>After Discounts: If selected, the percentage will be applied after adding the discounts to the ticket.</li> </ul> </li> <li>Fixed Price: If selected, a field \u2018Price List\u2019 will be displayed.<ul> <li>Price List: Price List from which the price of the service will be obtained.</li> </ul> </li> </ul>","tags":["Price List","Discount","Promotions","Price Rule"]},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/","title":"Product Setup","text":""},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#product-characteristic","title":"Product Characteristic","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Product Characteristic</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview","title":"Overview","text":"<p>Product Characteristic can be defined to complete the definition of a product using variants.</p> <p>Product Characteristics are attributes that can be added to the product definition to extend the description of each product. Examples of Characteristics are Size, Color, Quality, Shape or Weight. These characteristics can be used later to filter or search products.</p> <p>Once the definition of the characteristics is created, these can be assigned to a product and then create other products or SKU based on this Generic Product and its characteristics. This is a generic product where common attributes like tax or prices are defined. By default, products inherit all the attributes of the Generic Product such as taxes, prices, etc. They can be overridden on each product. Generic products cannot be purchased or sold or used in any document.</p> <p>For example, the Generic product Shirts Summer Season 2013 by My Provider implements the Characteristics Size and Color as variants. This Generic Product will have as Product Variant each combination of Color and Size.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#characteristic","title":"Characteristic","text":"<p>Characteristic Definition</p> <p>Field to take into account:</p> <ul> <li>Variant: When it is marked, it will explode/create combinations with its values. If it is not marked, it will not create combinations with other characteristics. For example:</li> <li>Characteristic Color: Variant marked with value Blue and White</li> <li>Characteristic Size: Variant marked with value M and L</li> <li>Characteristic Fashion line: Variant is not marked with value Sport, Classic, Vintage</li> <li>Explode Configuration Tab: Flag available on Variant Characteristics. When it is checked, the values of the selected variant characteristic are automatically inserted in the Characteristic Configuration tab when the variant is assigned to a generic product. If it is not checked, the values must be added manually.</li> </ul> <p>These three characteristics are assigned to the product in this way:</p> <ul> <li>Color: Blue, White</li> <li>Size: M,L</li> <li>Fashion line: Sport</li> </ul> <p>It will create four variants/products and for all of them with the characteristic Sport. We can say that a characteristic that is not a variant is like a tag that is added to each new product.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#value","title":"Value","text":"<p>Each of the values of a characteristic.</p> <p></p> <p>Fields to be into account:</p> <ul> <li>Name: Value</li> <li>Code: To be used later when creating the variant. It will put in the Search Key field</li> <li>Summary level: It is allowed to create a tree structure. For example, if the characteristic is color and for the same value(i.e Green) there are different references depending on the supplier:</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#button-add-products","title":"Button Add Products","text":"<p>The\u00a0\" Add Products\" button is shown when a product characteristic value is NOT a \"Variant\", therefore it can be assigned to any product.</p> <p></p> <p>It does not update current values. That is why the button only shows products where the characteristic is not assigned to.</p> <ul> <li>Scenario 1:</li> <li>Product A has the characteristic Color (defined as variant) with values White, Pink, Blue and Black</li> <li>After creating the product variants, the user creates the non-variant characteristic Fashion line: Women, Men</li> <li>Non-variant characteristic can be assigned to the product in Product window by using Update Characteristics process button.</li> <li>Scenario 2:</li> <li>Not variant product characteristic is created in Product Characteristic window as \"Variant\" = No.</li> <li>Once a product characteristic has been entered in \"Value\" tab, a process button \"Add Products\" is shown.</li> <li>\"Add Products\" button opens a pick/execute window where any product or set of products can be related to that product characteristic value.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#subset","title":"Subset","text":"<p>A subset is a collection of values of a Product Characteristic.</p> <p>Subset feature is a powerful functionality that allows the user to share the same characteristics for different purposes. For example, lots of colors and sizes can be created for different products:</p> <ul> <li>Color:</li> <li>Green</li> <li>Gray</li> <li>White</li> <li>Blue</li> <li>Yellow</li> <li>Red</li> <li>Orange</li> </ul> <p>But finally you have different products, for example t-shirts and pants:Subsets:</p> <ul> <li>Pants</li> <li>Green</li> <li>White</li> <li>Gray</li> <li>Blue</li> <li>T-shirts</li> <li>Green</li> <li>White</li> <li>Orange</li> <li>Blue</li> </ul> <p>The aim of this feature is to avoid having duplicate values (blue, blue, green, green) because of different purposes. With this subset when selecting a product that is a pant, for example, instead of selecting the characteristic Color you select the subset Pants. This way, instead of retrieving seven values, it will retrieve just four. Another advantage of doing this is when searching for variants instead of having blue two times (and you would not know if the blue is for pants or t-shirts), you will have blue one time. So when searching for variants which have the characteristics Blue, the system will retrieve pants and t-shirts.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#subset-value","title":"Subset Value","text":"<p>Each of the values of the product characteristic assigned to the subset.</p> <p></p> <ul> <li>Sequence number: To order the way of seeing the values</li> <li>Name: Value. Notice that only values from the characteristic can be selected.</li> <li>Code: If it is filled, it will overwrite the code setup in the characteristic</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#filtering","title":"Filtering","text":"<p>Fields based on columns whose reference is Product Characteristics can be filtered in grid assisted with a popup where the tree of available characteristics is displayed.</p> <p></p> <p>Info</p> <p>The characteristics available in this popup are limited to the ones applicable to data filtered in the grid where it is displayed with the current filtering criteria for the rest of the fields.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#configuration","title":"Configuration","text":"<p>Product Characteristics is ready to be used out of the box.</p> <p>Anyway, some new features can be displayed as well with some simple configuration options (these changes need to be exported to the template).</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#improving-product-selector","title":"Improving product selector","text":"<p>You can select between the different product characteristics using the product selector. There you have a column showing product characteristics description (See image).</p> <p></p> <p>That is not the case when selecting from the suggestion box. There, just product names are used. Taking into account that the product with the characteristics share the name, it becomes impossible to distinguish one from another (See image).</p> <p></p> <p>User experience in this case would be completely different if products could be identified from the suggestion box (See image).</p> <p></p> <p>This can be easily improved by enabling some options of the selector.</p> <p>Follow these simple steps to enable this configuration, and please do not forget to export those changes to your template.</p> <ul> <li>Log as System Administrator</li> <li>Go To Tables and Columns and select C_OrderLine</li> <li>Go to lines tab and select product (M_Product_ID)</li> <li>Navigate to selector (see image)</li> </ul> <p></p> <ul> <li>Go to Defined Selector tab and then to Defined Selector field tab and select Characteristics Description field.</li> <li>Edit and flag \"Search in suggestion box\" and \"Show in Picklist\" check boxes (See image)</li> </ul> <p></p> <ul> <li>Last point would be to export these changes to the template. This is really important to avoid problems in future update processes and to keep these changes after the update.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#update-product-characteristics-description","title":"Update Product Characteristics Description","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Update Product Characteristics Description</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview_1","title":"Overview","text":"<p>Every variant has its product Characteristic Description and this field is calculated automatically when:</p> <ul> <li>Variants are created</li> <li>When the value of a characteristic is change, for example from Blue to Hard Blue</li> </ul> <p>For example, if the characteristics of a variant are Color and Size and the values are Blue and XL the result of the description would be: Color: Blue, Size: XL</p> <p>If later on you change Blue for Hard Blue, the new description would be Color: Hard Blue, Size: XL</p> <p>In all of these scenarios, the Characteristic Description is updated without the need of coming to this process.</p> <p>This process should be used just in some special cases:</p> <ul> <li>When the name of the Characteristic is changed, for example from Color to Tint</li> <li>When through the database characteristics or values are changed</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#unit-of-measure","title":"Unit of Measure","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Unit of Measure</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview_2","title":"Overview","text":"<p>A unit of measure is a standard unit or combination of units to be used alongside the quantity of a product.</p> <p>There are many units of measure which can be used to count product quantity on hand, or to purchase or sell a product.</p> <p>Units of measure can also be used for measuring time. There are products such as services or resources which must be measured that way.</p> <p>Below, you can find a list of the unit of measure you could setup in Etendo:</p> <ul> <li>Unit</li> <li>Box</li> <li>Hour</li> <li>Kilogram</li> <li>KWh (Kilowatt hour)</li> <li>Litre</li> <li>Pallet</li> <li>Pack</li> <li>etc.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#unit-of-measure_1","title":"Unit of Measure","text":"<p>Products of any type are managed in non-monetary units of measure.</p> <p></p> <p>As shown in the image above, a non-monetary unit of measure can be created in Etendo by filling in below relevant data:</p> <ul> <li>the EDI Code, if any.</li> <li>the UOM Name</li> <li>the Standard Precision to be used while rounding calculated quantities of the products having that unit of measure</li> <li>the Costing Precision to be used while rounding calculated cost of the products having that unit of measure.</li> <li>and the Symbol or commonly used unit of measure abbreviation</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#translation","title":"Translation","text":"<p>Units of Measure can be translated to any language required.</p> <p>The way to get that is as simple as:</p> <ul> <li>select first the language required</li> <li>and then enter the unit of measure translated into that language.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#conversion","title":"Conversion","text":"<p>Edit the conversion rate of one unit of measure into another one.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#product-category","title":"Product Category","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Product Category</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview_3","title":"Overview","text":"<p>Similar products can be grouped into different categories, which must be created with the aim of helping their management and analysis.</p> <p>You may want to group similar products within the same category in order to get procurement and sales information summarized by each category. This is possible due to the fact that \"Product Group\" is one of the \"Dimensions\" of Purchase and Sales Reports.</p> <p>To learn more, visit Procurement Analysis Tools and Sales Analysis Tools.</p> <p>Besides, each product category allows the user to set up a different set of ledger accounts to be used while posting product related transactions such as purchase and sales invoices.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#product-category_1","title":"Product Category","text":"<p>Product category window allows the user to create and configure every product group your company may need.</p> <p></p> <p>As shown in the image above, the creation of a product category requires entering below listed information for each category:</p> <ul> <li>a Search Key or short name which helps to easily find the category</li> <li>a Name</li> <li>a Description</li> <li>and the Summary Level flag which helps to arrange product categories into a hierarchical structure.</li> </ul> <p>Product categories can be arranged into a hierarchical structure, which can be later on exploited by other reports or processes. For more information about how to work with trees, visit the Tree structure section.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#accounting","title":"Accounting","text":"<p>Each product category allows the user to configure a different set of ledger accounts.</p> <p></p> <p>There is a set of product related accounts which needs to be properly set up for the organization's general ledger configuration.</p> <p>The \"Copy Accounts\" process of the Defaults tab of the General Ledger Configuration screen allows to automatically populate at least the mandatory ones shown in the image above.</p> <p>The accounts automatically defaulted by Etendo can always be changed if required.</p> <p>The whole list of product related accounts is:</p> <ul> <li>Product Assets: this field stores the default account to be used to record inventory transactions such as:</li> <li>Inventory Counts</li> <li>Inventory Movements</li> <li>and Goods Receipt</li> </ul> <p>This account is typically an asset account.</p> <ul> <li>Product Expense: this field stores the default account to be used to record product purchase expenses.   This account is typically an expense account.</li> <li>Product Deferred Expense: this field stores the default account to be used to record deferred expenses.   This account is typically an asset account.</li> <li>Product Revenue: this field stores the default account to be used to record product sales revenues.   This account is typically a revenue account.</li> <li>Product Deferred Revenue: this field stores the default account to be used to record deferred revenues.   This account is typically a liability account.</li> <li>Product COGS: this field stores the default account to be used to record the cost of the goods sold.   This account is typically an expense account.</li> <li>Product Revenue Return: this field stores the default account to be used to record sales returns.   This account is typically a revenue account.</li> <li>Product COGS Return: this field stores the default account to be used to record return material receipts.   This account is typically an expense account.</li> <li>Invoice Price Variance: this field stores the default account to be used to record price differences between posted Goods Receipts and booked Purchase Invoices.   This account is typically an asset account.</li> </ul> <p>Info</p> <p>The \"Copy Accounts\" action button allows the user to copy the accounts defaulted in this window to the Product Accounting tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#assigned-products","title":"Assigned Products","text":"<p>Assigned products is a view of all the products which belong to a product category.</p> <p>As a side note, not real products such as discount products should belong to a specific product group, named by example \"Others\", as a way of keeping them isolated from the real ones.</p> <p>To learn more about discount products, visit Discount.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#translation_1","title":"Translation","text":"<p>It maintains translations of Product Categories to different languages.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#attribute","title":"Attribute","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Attribute</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview_4","title":"Overview","text":"<p>Products can have an attribute or a set of attributes which makes them different to the rest.</p> <p>An attribute is a feature of a product, such as color or size.</p> <p>The capacity for managing product attributes allows a proper definition of the products and besides assure compliance with the tracking requirements imposed by the majority of industries.</p> <p>Etendo allows managing product attributes by following below steps:</p> <ol> <li>Creation of every Product Attribute. An Attribute can be a unique identifier such as a Serial Number, or can have a predefined list of values such as blue, white and red colors.     To learn more, keep reading this section.</li> <li>Creation of Attribute Set/s which can contain just one attribute or mix a set of attributes.     To learn more, visit Attribute Set</li> <li>Set up the relationship between the product and the attribute set.     To learn more, visit Product</li> </ol>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#attribute_1","title":"Attribute","text":"<p>Attribute window allows the user to create and edit attributes such as color or size to be assigned to attribute sets.</p> <p></p> <p>As shown in the image above, an attribute can be easily defined by entering the relevant data below:</p> <ul> <li>the Name of the attribute</li> <li>a short Description if required</li> <li>If the attribute is unique for each instance of the product, for example a lot number or a serial number, select the Instance Attribute checkbox.</li> <li>List flag allows the user to state that the attribute has a predefined list of values to be entered in the \"Attribute Value\" tab.   To learn more, visit Attribute Value.</li> <li>Mandatory flag defines the attribute as mandatory, therefore it must always be specified for the product.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#attribute-value","title":"Attribute Value","text":"<p>An attribute can have several values or individual characteristics to be detailed for each attribute.</p> <p>Above applies to attributes such as color or size.</p> <p>Attribute Value tab allows the creation of as many attribute values as required for an attribute.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#attribute-set","title":"Attribute Set","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Attribute Set</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview_5","title":"Overview","text":"<p>An attribute set can be defined by a single attribute or by a set of attributes to apply to specific products.</p> <p>If an attribute set includes among others an attribute which is unique for each instance of the product, for example, a lot number or a serial number, this window is the place to define which Lot Number Sequence or Serial Number Sequence must apply to get that unique attribute.</p> <p>The steps to follow are:</p> <ul> <li>Creation of the Lot Number Sequence/s. To learn how, visit Lot Number Sequence</li> <li>Creation of the Serial Number Sequence/s. To learn how, visit Serial Number Sequence</li> <li>Set up the relationship between the previously created Lot/Serial Number Sequence/s and the Attribute Set, in the Attribute Set window.   To learn how, keep reading this section.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#attribute-set_1","title":"Attribute Set","text":"<p>Attribute Set window allows creating as many combinations of attributes as required to define products with few or multiple characteristics.</p> <p></p> <p>As shown in the image above, an attribute set to be assigned to a specific product/s can contain:</p> <ul> <li>a Name of the attribute Set</li> <li>a brief Description if needed</li> <li>a Lot or unique identifier given to a particular quantity of that product.   If Lot flag is checked, a new field named \"Lot Control\" is shown for you to select the Lot Number Sequence to follow by the products linked to that particular attribute set.</li> <li>a Serial No or a unique identifier given to each unit of the product.   If Serial No flag is checked, a new field named \"Serial No Control\" is shown for you to select the Serial Number Sequence to follow by the products linked to that particular attribute set.</li> <li>an Expiration Date or date upon which product quality is guaranteed.   If Expiration Date flag is checked, a new field named \"Guaranteed Days\" is shown for you to enter the number of days a product can be guaranteed.</li> <li>finally, the flag \"Require At Least One Value\" implies that at least one attribute set value will be required in product related transactions.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#assigned-attribute","title":"Assigned Attribute","text":"<p>An attribute set can have a single or a set of attributes assigned.</p> <p></p> <p>As shown in the image above, an attribute set can have only one attribute, for example Color or as many attributes as required, for example Size, Lot Number and Serial Number.</p> <p>The way to get that is just to select the previously created attributes in this tab.</p> <p>You should take into account that:</p> <ul> <li>if one of the selected attributes is a \"Lot\" or a \"Serial N?\" type attribute, the corresponding Number Sequence must have been properly set up in the Attribute Set window.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#lot-number-sequence","title":"Lot Number Sequence","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Lot Number Sequence</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview_6","title":"Overview","text":"<p>A product attribute can be a Lot Number.</p> <p>Some products require lot numbering to assure compliance with the tracking requirements imposed by the majority of industries, which implies that a given quantity of a product has always to be linked to a unique lot number.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#lot-control","title":"Lot Control","text":"<p>A Lot Number is a unique number given to a particular quantity of a product, which can be defined to have a prefix or a suffix among other characteristics.</p> <p></p> <p>A Lot Number Sequence can be setup:</p> <ul> <li>by defining the first number or Starting Number that will be used as Lot Number</li> <li>by specifying the value by which the Lot Number will be incremented by</li> <li>by defining which is the Next Assigned Number that will be used. Etendo updates the next assigned number value as the Lot Numbers are assigned.</li> <li>by entering a Prefix such as Lot N?/ which easily helps to understand that the number in question is a lot number.</li> <li>by entering a Suffix such as /2011 which helps to provide additional information if needed.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#serial-number-sequence","title":"Serial Number Sequence","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Serial Number Sequence</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview_7","title":"Overview","text":"<p>A product attribute can be a serial number.</p> <p>Some products require serial numbering to assure compliance with the tracking requirements imposed by the majority of industries which implies that:</p> <ul> <li>each unit of a product has always to be linked to a unique serial number.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#number-control","title":"Number Control","text":"<p>A Serial Number is a unique number given to each unit of a product/item which can be defined to have a prefix or a suffix among other characteristics.</p> <p></p> <p>A Serial Number Sequence can be setup:</p> <ul> <li>by defining the first number or Starting Number that will be used as Serial Number</li> <li>by specifying the value by which the Serial Number will be incremented by.   In the case of Serial Numbers it will always be \"1\".</li> <li>by defining which is the Next Assigned Number that will be used. Etendo updates the next assigned number value as the Serial Numbers are assigned.</li> <li>by entering a Prefix such as Serial N?/ which easily helps to understand that the number in question is a serial number.</li> <li>by entering a Suffix such as /2011 which helps to provide additional information if needed.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#brand","title":"Brand","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Product Setup</code> &gt; <code>Brand</code></p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#overview_8","title":"Overview","text":"<p>This window allows the user to enter brands associated with one product. The brands are manufacturers or commercial names used by manufacturers to identify a product line.</p>"},{"location":"user-guide/etendo-classic/basic-features/master-data-management/product-setup/#header","title":"Header","text":"<p>To use this functionality, select an organization and add a new brand in the corresponding fields. It is also possible to enter a description when necessary.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/getting-started/","title":"Material Requirement Planning - Getting Started","text":"","tags":["Getting Started","Material Requirement Planning","Process Plan","Product","Requirement"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/getting-started/#material-requirement-planning-getting-started","title":"Material Requirement Planning - Getting Started","text":"","tags":["Getting Started","Material Requirement Planning","Process Plan","Product","Requirement"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/getting-started/#overview","title":"Overview","text":"<p>In Material Requirement Planning the application is used to automatically review the demand and display suggestions concerning required supply. In the Manufacturing Plan, the application suggests required Work Requirements and Requisitions. In the Purchasing Plan, the application suggests required Purchase Orders.</p>","tags":["Getting Started","Material Requirement Planning","Process Plan","Product","Requirement"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/getting-started/#material-requirement-planning","title":"Material Requirement Planning","text":"<p>The Material Requirement Planning consists of two plans:</p> <ul> <li>Manufacturing Plan: plan to display calculations related to products that go through Production. The suggested documents to be created in this plan are the Work Requirement and the Requisition.</li> <li>Purchasing Plan: plan to display calculations related to products that are procured. The suggested document to be created in this plan is the Purchase Order.</li> </ul> <p>Planning Methods are entered to define what supply components are taken into account with the calculations of these plans.</p> <p></p>","tags":["Getting Started","Material Requirement Planning","Process Plan","Product","Requirement"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/getting-started/#configuration","title":"Configuration","text":"<p>Info</p> <p>Apart from the set up screens in the MRP module that are configured, additional set ups are required. For the products that are planned in the Manufacturing Plan, the following configurations are required:</p> <ul> <li>the Process plan  is set up for the product.</li> <li>the production checkbox and the Process Plan name are selected in the Product screen. The Manufacturing tab in the Product screen is filled out with the information required for MRP to make the calculations for the Manufacturing plan.</li> </ul> <p>For the products that are planned in the Purchasing Plan, the following configurations are required:</p> <ul> <li>the purchase checkbox is selected in the Product screen.</li> <li>the price of the product is defined for the price list of the vendor that is entered in the Purchasing tab.</li> <li>the Purchasing  tab in the Product screen is filled out with the information required for MRP to make the calculations for the Purchasing Plan.</li> <li> <p>the vendor that is reflected as the Business Partner in the above mentioned Purchasing tab is filled out in the Business Partner screen:</p> <ul> <li>Vendor/Creditor tab with at least the following fields filled out:<ul> <li>Purchase Price List</li> <li>PO Payment Method</li> <li>PO Payment Terms</li> </ul> </li> <li>Location/Address tab</li> </ul> </li> <li> <p>The Manufacturing tab in the Product screen is filled out with the Planning Method and Planner information.</p> </li> </ul>","tags":["Getting Started","Material Requirement Planning","Process Plan","Product","Requirement"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/getting-started/#execution","title":"Execution","text":"<p>The material planner enters a Manufacturing Plan for a product for a certain time period and processes the plan.</p> <p>In the created overview the material planner reviews and analyzes the lines. Based on the information that is processed by MRP, the plan suggests Work Requirements and Requisitions for certain quantities and certain dates.</p> <ul> <li>If required, adjustments to the set ups for example the planning method, are done. The lines of the plan are recalculated by clicking the Recalculate Dates/Quantities button.</li> <li>If required, manual changes to the created lines with regards to quantities and dates are made.</li> <li>Once the plan is correct, any suggested requisitions are created by clicking the Generate Material Requisitions button and any suggested Work Requirements are created by clicking the Generate Work Requirements button.</li> <li>The material planner completes the created requisition(s) and processes the created Work Requirement(s).</li> </ul> <p>The material planner then enters a Purchasing Plan for a product for a certain time period and processes the plan. In the created overview the material planner reviews and analyzes the lines. Based on the information that is processed by MRP, the plan suggests Purchase Orders for certain quantities and certain dates.</p> <ul> <li>If required, adjustments to the set ups for example the planning method, are done. The lines of the plan are deleted and the plan is reprocessed.</li> <li>If required, manual changes to the created lines with regards to quantities and dates are made.</li> <li>Once the plan is correct, any suggested purchase orders are created by clicking the Create Purchase Orders button.</li> <li>The material planner completes the created purchase order.</li> </ul>","tags":["Getting Started","Material Requirement Planning","Process Plan","Product","Requirement"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/getting-started/#relationship-with-other-areas","title":"Relationship with other areas","text":"<p>The MRP interacts with the following modules:</p> <ul> <li>Procurement Management:<ul> <li>Requisitions are created from the Manufacturing Plan</li> <li>Purchase Orders are created from the Purchasing Plan</li> </ul> </li> <li>Sales Management:<ul> <li>Sales Orders are optionally taken into account in the calculations of both plans</li> </ul> </li> <li>Warehouse Management:<ul> <li>Stock levels are automatically taken into account in the calculations of both plans</li> </ul> </li> <li>Production Management:<ul> <li>the Process Plan is used for the calculation of the Manufacturing Plan</li> <li>Work Requirements are created from the Manufacturing Plan</li> </ul> </li> </ul>","tags":["Getting Started","Material Requirement Planning","Process Plan","Product","Requirement"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/","title":"Material Requirement Planning Setup","text":"","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/#overview","title":"Overview","text":"<p>In order to initiate the Material Requirement Planning (MRP) process, the Planning Method and the Planner sections must be configured: </p> <p>Info</p> <p>For this, Aaditional setups are required. Check the information in the Overview section of MRP module. </p>","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/#planning-method","title":"Planning Method","text":"<p> <code>Application</code> &gt; <code>Material Requirement Planning</code> &gt; <code>Setup</code> &gt; <code>Planning Method</code></p>","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/#overview_1","title":"Overview","text":"<p>Define how transaction types will be dealt with in the application.</p> <p>A Planning Method is used to define the optional components of supply and demand and their percentage to be taken into account during the execution of the MRP process creating the Manufacturing Plan and Purchasing Plan. Each product that is planned in either the Manufacturing plan or the Purchasing Plan has a Planning Method defined in the product setup.</p> <p>By default, MRP takes stock and safety stock into account when creating the plans, but the following transactions are optional and are configured in the Planning Method:</p> <ul> <li>Material Requirement: demand for the product on requisitions in completed status. </li> </ul> <p>Info</p> <p>For more details, see the Requisition section.</p> <ul> <li>Sales Forecast: prevision of future demand for the product. </li> </ul> <p>Info</p> <p>For more details, see the Sales Forecast section.</p> <ul> <li>Pending Sales Order: demand for the product on sales orders in booked status that are not shipped yet. </li> </ul> <p>Info</p> <p>For more details, see the Sales Order section.</p> <ul> <li>Pending Work Requirement: supply for the product on a processed work requirement. </li> </ul> <p>Info</p> <p>For more details, see the Work Requirement section.</p> <ul> <li>Pending Purchase Order: supply for the product on a booked purchase order that is not received yet. </li> </ul> <p>Info</p> <p>For more details, see the Purchase Order section.</p>","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/#header","title":"Header","text":"<p>Use the header to create a planning method.</p> <p>In this tab, the organization and the name of the planning method is entered. A general planning method can be entered to include all components of the optional demand and supply, because any components that are not applicable for a certain product will just not appear in the plan, while any components that are left out by mistake result in incorrect and incomplete calculations of the plan.</p> <p></p>","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/#lines","title":"Lines","text":"<p>Add transactions to be included in your plan. Each transaction is shown on its own line.</p> <p>In this tab, the applicable transactions are entered on separate lines. For each transaction type, it is possible to define whether transactions are considered for the whole time horizon on the Manufacturing plan and Purchasing Plan or just a part:</p> <ul> <li>days from start: the number of days from the beginning of the time horizon to the start of the transaction time frame being considered.</li> <li>days to end: the number of days from the beginning of the time horizon to the end of the transaction time frame being considered.</li> </ul> <p>Also, a percentage of the quantity to be considered by MRP is configured with the Weighting. If a sales forecast for 100 units is entered with a weighing of 0.9, only 90 units are reflected in the Manufacturing plan or Purchasing plan. Likewise, a value above 1 can be entered to include a higher number in the plans.</p> <p></p>","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/#planner","title":"Planner","text":"<p> <code>Application</code> &gt; <code>Material Requirement Planning</code> &gt; <code>Setup</code> &gt; <code>Planner</code></p>","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/#overview_2","title":"Overview","text":"<p>Define the entity in charge of managing the purchase or production of specific products.</p> <p>An optional filter on both the Manufacturing Plan and the Purchasing Plan is the planner. The information that is entered in this screen has no relation with the Business Partner set up. After the planner is created, the planner information is entered in the Product tab in the Master Data Management section.</p>","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/setup/#planner_1","title":"Planner","text":"<p>Define the planner in charge of managing the purchase or production of specific products.</p> <p></p>","tags":["Material Requirement Planning","Planning Method","Manufacturing Plan","Purchasing Plan","Planner Configuration"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/","title":"Material Requirement Planning","text":"","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#overview","title":"Overview","text":"<p>Material Requirement Planning (MRP) deals with all activities related to the planning of a manufacturing and suggestions for the required supply. </p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#manufacturing-plan","title":"Manufacturing Plan","text":"<p> <code>Application</code> &gt; <code>Material Requirement Planning</code> &gt; <code>Transactions</code> &gt; <code>Manufacturing Plan</code></p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#overview_1","title":"Overview","text":"<p>Create a comprehensive work requirement in order to request materials over a specified time period.</p> <p>The Manufacturing Plan suggests work requirements and requisitions that need to be created and, just by clicking a button, these documents are created automatically.</p> <p>In the main section of the document the information of what needs to be planned and for which time period is entered. The Process Manufacturing Plan button creates the lines in the plan with information of supply and demand:</p> <ul> <li>current stock level (supply)</li> <li>pending work requirements (supply)</li> <li>booked Sales Orders without a goods shipment (demand)</li> <li>safety stock (demand)</li> <li>sales forecast (demand)</li> </ul> <p>The information that is listed depends on the planning method used for the product.</p> <p>The MRP process balances the demand with the supply, taking into account the dates of both and based on this information, it suggests work requirements and requisitions to be created. The generated lines can be updated manually. Also, changes to demand and supply can be made and the plan recalculated to see a new plan.</p> <p>The Manufacturing Plan shows the demand for raw material that is required for the suggested work requirements, and suggests requisitions without reviewing the supply and demand for the raw material. Once the requisitions are completed by the planner, they are entered to the Purchasing Plan to calculate if any purchase orders need to be placed.</p> <p>Once the plan is as desired, by clicking different buttons the work requirements and requisitions are created automatically.</p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#header","title":"Header","text":"<p>Create and edit a manufacturing plan.</p> <p></p> <ul> <li>Document Date: date the manufacturing plan is entered</li> <li>Name: name of the manufacturing plan</li> <li>Time Horizon: the number of days that are being taken into account for the calculation of the manufacturing plan</li> <li>Safety Lead Time: number of days that are added to the offset for the calculation of the planned order date of the suggested work requirements and requisitions. For example, the manufacturing lead time is used to indicate how long it will take for a product between being produced and arriving in the warehouse, and the safety lead time is added on for any time that it takes to put the product into stock (due to quality check or other internal processes).</li> <li>Planner: filter to select only products managed by a certain planner, as configured in the Product tab in the Master Data Management section.</li> <li>Business Partner: filter to only select products ordered by a certain customer</li> <li>Business Partner Category: filter to only select business partners of a certain business partner category.</li> <li>Product: filter to select only a certain product</li> <li>Product Category: filter to select only products related to a certain product category</li> </ul> <p>Info</p> <p>Once the information is added in the main section, the lines can be created. If necessary, changes are made to set ups by clicking the Recalculate Dates/Quantities button.</p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#lines","title":"Lines","text":"<p>Add products to be included in your plan. Each product is shown on its own line.</p> <p>Info</p> <p>Only products that are set up with the Production checkbox and Process Plan selected in the product are executed by the MRP process.</p> <p>Depending on the product, different transaction types may appear in the lines. All supply transactions have a positive quantity, all demand transactions have a negative quantity.</p> <ul> <li>Stock: by default appearing for the product</li> <li>Sales Forecast: the information appears if:<ul> <li>forecast is set up in the sales forecast screen</li> <li>the forecast is defined in the planning method</li> <li>the planned method is linked to the product</li> </ul> </li> <li>Minimum Stock: by default appearing for the product if set up in the Safety Stock field in the product.</li> <li>Pending Sales Order: the information appears if:<ul> <li>pending sales order is defined in the planning method</li> <li>the planned method is linked to the product</li> <li>there are booked sales orders without a related goods shipment for the product</li> </ul> </li> <li>Suggested Work Requirement: advice generated by MRP to create a purchase order.<ul> <li>the required quantity is the quantity that is the outcome of the balance of all supply and all demand</li> <li>the Quantity is the quantity to appear on the work requirement(s) that is created. Based on the set ups in the product the quantity can differ from the required quantity, for example due to min. quantity for production, quantity type, etc.</li> <li>the Planned Order Date is the date that the Work Requirement needs to be created and processed. This is an offset of the dates in wich the demand is required with the manufacturing lead time set up in the product and the safety lead time in the set up in the main section of this plan. If the demand is required within the timeframe of the lead times, the date is reflected as past due to indicate that in order to get the product on time, an action should have been taken already and it indicates exactly how overdue the action is.</li> </ul> </li> <li>Suggested Material Requirement: advice generated by MRP to create requisitions for the raw material that is required to be used in the suggested work requirements. The correct raw material information is generated if the information in the Process Plan is correct.<ul> <li>the Planned Order Date is the date that the Requisition needs to be created and completed. These dates equal the planned order dates of the suggested work requirements.</li> <li>the Quantity appears on the requisition that is created. The quantity is based on the one that is on the suggested work requirement combined with the component use as defined in the Process Plan.\u00a0</li> </ul> </li> </ul> <p></p> <p>Info</p> <p>By clicking the Generate Work Requirements button, the work requirements are created automatically. The documents need to be processed please see the Work Requirement section in the Production Management section for details.</p> <p>Info</p> <p>By clicking the Generate Material Requisitions button, the requisitions are created in draft automatically. The documents need to be completed, please see the Requisition section in the Procurement Management section for details.</p> <p>The requisitions can be selected as input in the planning method of the Purchasing Plan to be included in the calculations of that plan, in order to calculate if Purchase Orders need to be created.</p> <p>Once the documents are created automatically, the numbers of the documents appear in the Work Requirement and the Requisition Line columns of the lines. The created purchase order is in draft status and needs to be booked.\u00a0</p> <p>Info</p> <p>For more information please check the Purchase Order section.</p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#purchasing-plan","title":"Purchasing Plan","text":"<p> <code>Application</code> &gt; <code>Material Requirement Planning</code> &gt; <code>Transactions</code> &gt; <code>Purchasing Plan</code></p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#overview_2","title":"Overview","text":"<p>Create a comprehensive and organized plan to request purchases over a specified time period.</p> <p>The Purchasing Plan suggests purchase orders that need to be created and, just by clicking a button, these purchases are created automatically.</p> <p>In the main section of the document the information of what needs to be planned and for which time period is entered. The Process Purchase Plan button creates the lines in the plan with information of supply and demand. </p> <ul> <li>current stock level (supply)</li> <li>booked Purchase Orders without a goods receipt (supply)</li> <li>booked Sales Orders without a goods shipment (demand)</li> <li>completed requisitions (demand)</li> <li>safety stock (demand)</li> <li>sales forecast (demand)</li> </ul> <p>The information that is listed depends on the planning method used for the product.</p> <p>The MRP process balances the demand with the supply, taking into account the dates of both and based on this information, it suggests purchase orders to be created. The generated lines can be updated manually. Also, changes to demand and supply can be made, the current lines deleted and the plan reprocessed to see a new situation.</p> <p>Once the plan is as desired, by clicking a button purchase orders are created automatically.</p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#header_1","title":"Header","text":"<p>Create and edit a purchase plan.</p> <p></p> <ul> <li>Document Date: date the purchasing plan is entered</li> <li>Name: name of the purchasing plan</li> <li>Time Horizon: the number of days that are taking into account for the calculation of the purchasing plan</li> <li>Safety Lead Time: number of days that are added to the offset for the calculation of the planned order date of the suggested purchase order. For example, the purchasing lead time is used to indicate how long it will take for a product between being ordered and arriving in the warehouse, and the safety lead time is added on for any time that it takes to put the product into stock (due to quality check or other internal processes).</li> <li>Planner: filter to select only products managed by a certain planner, as configured in the Product tab in the Master Data Management section.</li> <li>Vendor: filter to select only products for a certain vendor as configured in the Purchasing tab of the product.</li> <li>Product: filter to select only a certain product</li> <li>Product Category: filter to select only products related to a certain product category</li> <li>Business Partner: filter to only select products ordered by a certain customer</li> <li>Business Partner Category: filter to only select business partners of a certain business partner category.</li> <li>Process Purchase Plan button: once the information is added in the main section, the lines are created by the Process Purchase Plan button. If necessary, the lines are deleted, changes are made to set ups and new lines are created by clicking the Process Purchase Plan button again.</li> <li>Create purchase order: Generates the corresponding purchase orders</li> <li>Create reservations: This button is only visible when Stock reservations feature is enabled. It reserves stock for the sales orders that are not reserved, if there is stock, and for the ones that cannot be reserved because there is not stock it creates the corresponding purchase orders and link to the sales order</li> </ul>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#lines_1","title":"Lines","text":"<p>Add products to be included in your plan. Each product is shown on its own line.</p> <p>Info</p> <p>Only products that are set up with the Purchase checkbox selected in the product are executed by the MRP process.</p> <p>Depending on the product, different transaction types may appear in the lines. All supply transactions have a positive quantity, all demand transactions have a negative quantity.</p> <ul> <li>Stock: by default appearing for the product</li> <li>Sales Forecast: the information appears if:<ul> <li>forecast is set up in the sales forecast screen</li> <li>the forecast is defined in the planning method</li> <li>the planned method is linked to the product</li> </ul> </li> <li>Minimum Stock: by default appearing for the product if set up in the Safety Stock field in the product.\u00a0</li> <li>Pending Purchase Order: the information appears if:<ul> <li>pending purchase order is defined in the planning method</li> <li>the planned method is linked to the product</li> <li>there are booked purchase orders without a related goods receipt for the product</li> </ul> </li> <li>Pending Sales Order: the information appears if:<ul> <li>pending sales order is defined in the planning method</li> <li>the planned method is linked to the product</li> <li>there are booked sales orders without a related goods shipment for the product</li> </ul> </li> <li>Suggested Purchase Order: advice generated by MRP to create a purchase order.<ul> <li>the required quantity is the quantity that is the outcome of the balance of all supply and all demand</li> <li>the Quantity is the quantity to appear on the purchase order(s) that is created. Based on the set ups in the Product the quantity can differ from the required quantity, for example due to minimum order quantity, quantity type, etc.</li> <li>the Planned Order Date is the date that the Purchase Order needs to be booked. This is an offset of the dates in which the demand is required with the purchasing lead time set up in the product and the safety lead time in the setup in the main section of this plan. If the demand is required within the timeframe of the lead times, the date is reflected as past due to indicate that in order to get the product on time, an action should have been taken already and it indicates exactly how overdue the action is.</li> </ul> </li> </ul> <p></p> <p>By clicking the Create Purchase Orders button, the purchase order is created, provided that all setups were correctly entered:</p> <ul> <li>the vendor information is complete</li> <li>the product is set up with the required information in the purchasing tab</li> <li>the price for the vendor is entered in the product</li> </ul> <p>Once the purchase order is created automatically, the number of the document appears in the Order Line column of the line. The created purchase order is in draft status and needs to be booked. </p> <p>Info</p> <p>For more information, please check the Purchase Order section.</p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#mrp-forecast","title":"MRP Forecast","text":"<p> <code>Application</code> &gt; <code>Material Requirement Planning</code> &gt; <code>Transactions</code> &gt; <code>MRP Forecast</code></p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#overview_3","title":"Overview","text":"<p>Create and edit MRP forecasts over a specified time period in order to help plan necessary purchases.</p> <p>A forecast of demand for a certain customer is entered so that it can be included in the planning method and therefore in the calculations of Manufacturing Plan and the Purchasing Plan. A forecast is based on expectations of future demand, not on existing data. Therefore, once the actual information is entered in the application in a Sales Order, the forecast has to be deleted to avoid duplications.</p>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#header_2","title":"Header","text":"<p>Create a MRP forecast.</p> <p></p> <ul> <li>Document Date: date the forecast is entered.</li> <li>Business Partner: the customer for whom the demand is expected. This applies to forecast both in the Manufacturing Plan and the Purchasing Plan.</li> </ul>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/material-requirement-planning/transactions/#lines_2","title":"Lines","text":"<p>Add products to be included in your MRP forecast. Each product is added by creating a line.</p> <p></p> <ul> <li>Planned Date: the date that is taken into account for the demand on the Manufacturing Plan and Purchasing Plan as Planned Order Date.</li> <li>Product: the product that is planned on a Manufacturing Plan or Purchasing Plan.</li> <li>Quantity: the amount of the product that is required by the planned date.</li> </ul>","tags":["Material Requirement Planning","Manufacturing Plan","Purchasing Plan","MRP Forecast","Transactions"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/","title":"Procurement Reports","text":""},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#overview","title":"Overview","text":"<p>This section describes the windows related to procurement reports in Etendo. These are:</p> <p> Purchase Order Report </p> <p> Purchase Dimensional Report </p> <p> Goods Receipt Dimensional Report </p> <p> Purchase Invoice Dimensional Report </p> <p> Matched Purchase Orders </p> <p> Vendor Invoice Report </p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#purchase-order-report","title":"Purchase Order Report","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Purchase Order Report</code></p> <p>This report displays a detailed list of the purchase orders issued to the suppliers.\u00a0</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#purchase-dimensional-report","title":"Purchase Dimensional Report","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Purchase Dimensional Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#overview_1","title":"Overview","text":"<p>This report displays information about the purchase orders issued and sent to the suppliers.</p> <p>It is a dimensional type of report that shows information about registered purchases (Purchase Orders in a status Booked or Closed) during a selected period of time.</p> <p>This report can display information about the most frequently used suppliers as well as the most frequently purchased goods, along with purchase amounts and ordered quantities information.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#parameters-window","title":"Parameters window","text":"<p>There is no specific field to note, but just the dimensional primary and secondary filters which can be used to narrow down the information to be displayed.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#sample-report-output","title":"Sample Report Output","text":"<ul> <li>Amount: is the net amount from the Purchase Order converted to the report Currency.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#goods-receipts-dimensional-report","title":"Goods Receipts Dimensional Report","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Goods Receipts Dimensional Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#overview_2","title":"Overview","text":"<p>This report displays information about the goods received in the organization.</p> <p>This is a dimensional type of report that shows information about registered receipts during a selected period of time.</p> <p>This report can display information about the most frequently used suppliers as well as the most frequently received goods, together with receipt amounts and receipt quantities information.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#parameters-window_1","title":"Parameters window","text":"<p>There is no specific field to note but just the dimensional primary and secondary filters which can be used to narrow down the information to be displayed.</p> <p></p> <p>Tip</p> <p>The outcome of this report can be viewed in HTML format and PDF format.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#sample-report-output_1","title":"Sample Report Output","text":""},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#purchase-invoice-dimensional-report","title":"Purchase Invoice Dimensional Report","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Purchase Invoice Dimensional Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#overview_3","title":"Overview","text":"<p>This report displays information about the purchase invoices received in the organization. It is a dimensional type of report that shows information about registered purchase invoices (Purchase Invoices in a status Completed or Voided) during a selected period of time.</p> <p>This report can display the total purchase amount of a given supplier, split by product and purchase invoice.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#parameters-window_2","title":"Parameters Window","text":"<p>There is no specific field to note, but just the dimensional primary and secondary filters which can be used to narrow down the information to be displayed.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#sample-report-output_2","title":"Sample Report Output","text":"<p>There is also the possibility to export this report to a PDF or a XLS file:</p> <p></p> <p>PDF format shows the same fields explained before, but in XLS format, it shows information related to selected invoices columns:</p> <ul> <li>Organization</li> <li>Business Partner Group</li> <li>Business Partner</li> <li>Document No.</li> <li>Invoice Date</li> <li>Product Category</li> <li>Product</li> <li>Product Search Key</li> <li>Unit Price</li> <li>Amount</li> <li>Quantity</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#matched-purchase-orders","title":"Matched Purchase Orders","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Matched Purchase Orders</code></p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#overview_4","title":"Overview","text":"<p>This window informs about the matching between each purchase order, goods receipt and invoice line.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#matched-purchase-order","title":"Matched Purchase Order","text":"<p>Matched purchase order view informs about which purchase order line is linked to which receipt line and invoice line, if any.</p> <p></p> <p>In other words, this window provides valuable information which helps to get a quick understanding of what order lines of a product have already been receipt and invoiced.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#vendor-invoice-report","title":"Vendor Invoice Report","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Vendor Invoice Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#overview_5","title":"Overview","text":"<p>This report provides information about the total amount invoiced by each supplier within a given time period and for a given currency.</p> <p>It displays supplier invoices information, which can be narrowed down in order to get information about those invoices related to a given project and/or to a given business partner within a given time period.</p>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#parameters-window_3","title":"Parameters Window","text":"<p>Field to note:</p> <ul> <li>Currency: It works in the same way as already described in the Purchase Order report.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/procurement-management/analysis-tools/#sample-report-output_3","title":"Sample Report Output","text":""},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/","title":"Procurement Management - Getting Started","text":"","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#procurement-management-getting-started","title":"Procurement Management - Getting Started","text":"","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#overview","title":"Overview","text":"<p>Procurement Management deals with all the activities related to the purchase of goods and services from external suppliers and the corresponding reporting.</p> <p>This application area of Etendo covers Requisition to Receipt and Invoicing parts of the Procure To Pay business flow and Supplier Returns business flow.</p> <p>For Payments Management of Procure To Pay, see Financial Management / Receivables &amp; Payables application area.</p>","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#procure-to-pay-business-flow","title":"Procure to Pay Business Flow","text":"<p>Procure to Pay workflow manages the life-cycle of a procurement process.</p> <p>Due to its complexity and different roles involved, it is convenient to split Procure to Pay down into two main sub-processes:</p> <ol> <li>Requisition to Receipt process starts by the creation and management of purchase requisitions and corresponding purchase orders to the moment the warehouse staff receives the merchandise.</li> <li>Supplier Invoice to Payment continues the previous sub-process by registering the supplier invoices and closes it by paying supplier invoices.</li> </ol> <p></p>","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#configuration","title":"Configuration","text":"<p>The following setup needs to be done before performing the process:</p> <ul> <li>Products</li> <li>Costing rules</li> <li>Landed Cost Types</li> <li>Business Partners (Vendors and Suppliers).</li> <li>Price configuration</li> </ul> <p>Products need to be configured prior any purchase requisition is issued.</p> <p>Each product being purchased needs to have a price in the purchase price list in order to be selectable in any transactional document like a purchase order or a purchase invoice.</p> <p>Same way, each product that is being purchased needs to be defined in a unit of measure (UOM), and in an alternative unit of measure (AUM) if required.</p> <p>Info</p> <p>Please refer to Product Setup, Product and Pricing for more information.</p> <p>The cost of an input transaction such as a \"Goods Receipt\" can be calculated by using the product's purchase price excluding taxes.</p> <p>Besides that, the cost of the products included in a Goods Receipt can be adjusted as a result of allocating different types of Landed Costs in the receipt.</p> <p>The \"Costing Server\" process is the Etendo \"Costing Engine\" process that calculates and adjusts a product's transaction cost. This process requires that the legal entity/organization has a costing rule configured and applied to the products configured as \"Stocked\". Business Partners need to be configured prior to any purchase requisition can automatically turn into a purchase order.</p> <p>Info</p> <p>For more information, visit Business Partner Setup and Business Partner.</p> <p>Above configuration is part of the overall Business setup flow within the \"Master Data Management\" setup.</p> <p>Note</p> <p>You are not required to perform any additional setups for the Procurement Management application area if you are going to explore it based on Food &amp; Beverage (F&amp;B) sample client shipped with Etendo by default. The sample data set already contains the roles, business partners, products, warehouses and prices pre-configured.</p>","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#execution","title":"Execution","text":"<p>In Procurement Management, the Procure to Pay business process is executed as follows:</p> <p>Any member of the organization allowed to do so can directly issue a Requisition as a result of an organization or business unit need.</p> <ul> <li>The requestor creates a new document in the Requisition window, enters a \"Need by date\" and then looks for the product or service needed. If the product does not exist it can be entered at that time in the Product window.</li> <li>The requestor continues by adding for each product needed a new line with the need by date, the product, the quantity, the price if known and if needed its attribute (size and/or color, etc). A preferred supplier can also be added if known.</li> <li>Once done, the requisition is saved in \"Draft\" status allowing it could be changed later on by the user if needed.</li> </ul> <p>Requisitions notify the purchase staff of products to order, their quantity and the time frame for its delivery. Purchase staff is then in charge of managing already created purchase requisitions or even creating new ones, if required.</p> <ul> <li>Purchase staff manages requisitions in the Manage Requisitions window.</li> <li>Purchase staff can change any data of the requisitions created in draft status, and besides can look for the supplier to be used in the Business Partner field. if the Business Partner does not exist, it can be entered at that time in the Business Partner window.</li> <li>Purchase staff can also enter the purchase net unit price and discounts if any, once known.</li> <li>Once the requisition is ready, it is completed. The Document Status of the requisition changes to Completed and can then turn into a purchase order.</li> </ul> <p>Purchase staff:</p> <ul> <li>can massively create Purchase Order/s for the Completed Requisitions in the Requisition to Order window by searching and then adding requisition lines not linked to an order yet. The purchase order/s created that way are shown in the Purchase Order window in Booked status.</li> <li>and can also directly create Purchase Orders in the Purchase Order window. Purchase lines are filled as in the case of the Requisition. Once the Purchase Order is ready, it is processed clicking the Book button.</li> <li>To review past and present purchases of the supplier, purchase staff uses the Purchase Dimensional Report.</li> </ul> <p>Warehouse staff:</p> <ul> <li>Receives the merchandise as well as the delivery notes attached in 2 ways:<ul> <li>With the Goods Receipt window, Warehouse staff looks for the orders pending to be delivered one by one and then gets corresponding order lines quantity located in a warehouse and storage bin. This window also allows creating a receipt in a manual way.</li> <li>With the Pending Goods Receipt window. Warehouse staff can massively select the purchase order lines being delivered and locate the quantity receipt in a warehouse and storage bin.</li> </ul> </li> <li>Allocates landed cost, if any, to the products included in a receipt by:<ul> <li>selecting a landed cost type and entering an \"estimated\" landed cost amount which will be distributed among receipt lines</li> <li>or by selecting a landed cost type and entering a landed cost amount already invoiced which will also be distributed among receipt lines.</li> </ul> </li> <li>Completes the receipts.<ul> <li>Completed receipts updates stock information (product levels increase) and can be posted to the ledger therefore product assets accounting is being increased.</li> <li>A Goods receipt can only be posted if the cost of the products being received has been calculated. To do so, the Costing Background process needs to be run.</li> </ul> </li> <li>Matched Invoices window helps to manage and post the discrepancies, if any, between the accounting of the receipt and the accounting of the corresponding invoice later on, due to purchase price differences.</li> <li>Goods Receipts Dimensional Report is used to review past receipts of the Business Partner.</li> </ul> <p>Finance staff:</p> <ul> <li>Registers supplier invoices in different ways:<ul> <li>With the Goods Receipt window, Finance staff can generate an invoice from a Receipt in status Complete.</li> <li>With the Purchase Invoice window, Finance staff can enter supplier invoices:<ul> <li>in a manual way</li> <li>or by retrieving purchase orders or receipts lines pending to be invoiced</li> <li>or by copying invoice lines from existing purchase invoices.</li> </ul> </li> </ul> </li> <li>Registers landed cost invoices and match those \"invoiced\" landed costs with the landed costs:<ul> <li>booked directly in a receipt(s).</li> <li>or booked through a landed cost document.</li> </ul> </li> <li>Processes and Posts landed cost matching.</li> <li>Once a Purchase Invoice is Processed, a Payment Plan of the invoice is created based on the payment terms agreed with the supplier and the purchase invoice can be posted to create the accounting entries of the invoice. Afterwards, the payment plan can be modified.</li> </ul> <p>Additionally:</p> <ul> <li>The Matched Purchase Orders view helps Finance staff to have a look at the order or receipt lines which have not been invoiced yet by a supplier.</li> <li>Finance staff is able to review past supplier invoicing information in the Purchase Invoice Dimensional Report.</li> </ul> <p>Purchase expenses can be recognized in different ways:</p> <ul> <li>In most cases companies would recognize the expense as soon as the purchase is made. For instance, a company buying consumable products that are not capitalized. In Etendo, in this situation, the expense is generated as part of the accounting of the purchase invoice corresponding to the transaction.</li> <li>Under some circumstances, however, it is required to defer the expense recognition. For instance, a company purchasing a business insurance for the duration of a year would want to distribute that expense over 12 months. In Etendo, in this situation, the expense can be deferred within a given number of periods by entering an expense deferred plan in the purchase invoice lines.</li> </ul> <p>Info</p> <p>For a full description of this functionality, please visit the How to manage deferred revenue and expenses section.</p> <p>Finally, the finance staff is in charge of making and managing the supplier payments:</p> <ul> <li>Supplier payments can be made in the Purchase Invoice window by using the Add Payment button. It is also possible to make a prepayment against a Purchase Order. Detailed payment management documentation is available in the Financial Management / Receivables and Payables application area and in the How to manage prepaid invoices in payables section.</li> </ul>","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#supplier-returns-business-flow","title":"Supplier Returns Business Flow","text":"<p>This workflow manages the return of purchased goods back to the supplier. Due to the consequences of returning, it is convenient to split Supplier Returns down into two main sub-processes:</p> <ol> <li> <p>Supplier Return to Debit: This process manages the return of goods back to the vendor and the request of a debit.</p> </li> <li> <p>Supplier Return to Replacement: This process manages the return of goods back to the vendor and the request of a goods replacement.</p> </li> </ol> <p></p>","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#configuration_1","title":"Configuration","text":"<p>The Return reasons window is the only one that requires configuration before performing this process.</p>","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#execution_1","title":"Execution","text":"<p>In Procurement Management, the Return to Vendor business flow is executed as follows.</p> <p>Procurement staff:</p> <ul> <li>Creates a new document in the Return to Vendor window and looks for the vendor name in the Business Partner field.</li> <li>And continues by adding lines clicking the button Pick/Edit lines<ul> <li>It is possible to pick goods receipt lines and edit the quantity you want to return and the price</li> </ul> </li> <li>Once the Return Material document is accepted by the Vendor, you can process it by clicking the Book button. The status of the document changes from Draft to Booked.</li> <li>Only Booked documents can be shipped to the vendor</li> </ul> <p>Warehouse staff:</p> <ul> <li>Creates a new document in the Return to Vendor Shipment window and looks for the vendor name in the Business Partner field.</li> <li>And continues by adding lines clicking the Pick/Edit lines button<ul> <li>Return to Vendor lines are picked</li> <li>It is possible to edit the quantity to be shipped</li> </ul> </li> <li>Once the document is ready, process it by clicking the button Complete. The status of the document changes from Draft to Completed</li> <li>Completed shipment updates stock information (product levels decrease)</li> </ul> <p>Finance staff: To invoice these documents, go to the Purchase invoice window. All scenarios are covered:</p> <ul> <li>If the vendor sends an invoice just for that specific document, you need to select a Reverse purchase invoice document type and then select the lines through the Create lines from button</li> <li>If the vendor sends an invoice with the original purchase order plus the return materials order, you need to select a Purchase invoice document type and then select the lines through the Create lines from button</li> <li>If the vendor does not send an invoice for the return materials order but wants to keep it as credit so you can use it later, you have to:<ul> <li>Create a Reverse purchase invoice for these returned materials</li> <li>Leave it as credit to be used later through the Payment out window</li> <li>A new purchase invoice based on the original purchase order can consume that credit</li> </ul> </li> </ul>","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/getting-started/#relationship-with-other-application-areas","title":"Relationship with other application areas","text":"<p>Procurement Management has a relationship with other application areas: </p> <ul> <li>Warehouse Management as Goods Receipts changes items quantity on hand and its value.</li> <li>Financial Management in terms of managing account payable payments.</li> <li>MRP Management as purchase planning allows the creation of purchase orders based on material needs.</li> </ul>","tags":["getting started","procurement management","procure to pay","supplier returns"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/","title":"Procurement Management","text":"","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#overview","title":"Overview","text":"<p>Procurement management deals with all the activities related to the purchase of goods and services from external suppliers and the corresponding reporting.</p> <p>The process starts by the creation and management of purchase requisitions and corresponding purchase orders to the moment the merchandise is received in the warehouse.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#requisition","title":"Requisition","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Requisition</code></p> <p>A Requisition is a document that specifies a request to order products.</p> <p>The user can create requisitions and monitor them in this window:</p> <p></p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#header","title":"Header","text":"<p>Requisition header allows entering the following data:</p> <ul> <li>The business partner or supplier, this is an optional field that could be filled in by the requester in case it is known, therefore:</li> <li>The supplier entered in the header will be the one used for every requisition line unless it is changed at lines level for a particular line.</li> <li>If there is no supplier entered in the requisition header the one setup by default for the product in its master data window, Purchasing tab will be used.</li> <li>If there is no business partner or supplier in the header, or in the lines, or setup in the product, the user will have to enter it while creating the purchase order from the requisition.</li> <li>The purchase price list. This is also an optional field to be filled-in, in case it is known by the requester and its behaviour is the same as described above as it is linked to the Business Partner.</li> </ul> <p>Besides, the system populates the following data:</p> <ul> <li>The document No., which is the Requisition number.</li> <li>The requester, which is the user entering the requisition.</li> </ul> <p></p> <p>The requester can then move to the \"Lines\" tab to enter additional data.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#lines","title":"Lines","text":"<p>Each requisition line shows a product demand for a specific date.</p> <p>Requisition \"Lines\" tab collects the following demand data:</p> <ul> <li>The need by date, that is the date when the product is required to arrive.</li> <li>The product, items/products which need to be purchased.</li> <li>The quantity requested, or the operative quantity requested if the product has an alternative unit of measure (AUM) configured.</li> <li>The product's UOM, or product's Alternative UOM depending on product configuration in regards to measure unit.</li> <li>The business partner: This is an optional field the user can enter if the supplier entered at the requisition header needs to be changed for a particular line.</li> </ul> <p>Info</p> <p>If there is not a supplier entered at the requisition header, neither at the requisition line, the supplier used will be the one setup by default for the product, therefore this field at line level can also be used to overwrite that defaulted one.</p> <ul> <li>The purchase price list: This is also an optional field that can be entered if the price list entered at the header level or the default product price list information should be overwritten for a particular line.</li> <li>The net list price: This one is the price of the corresponding price list for a given date. It's an optional field that can be filled in automatically based on the price list entered at the header level or it could be overwritten by the user for a particular product line.</li> <li>The net unit price: This one can be either equal to the net list price or not, based on the formula: [net unit price = net list price - discount]. It is an optional field that can be filled in automatically based on the price list entered at the header level or it could be overwritten by the user for a particular product line.</li> <li>The discount, if any, is based on a used price list.</li> </ul> <p></p> <p>It is possible to enter as many requisition lines as products demand.</p> <p>The last step is to register the Requisition as Complete by using the header button \"Complete\", then:</p> <ul> <li>Requisition header status bar informs us that the Requisition is Completed.</li> <li>Requisition lines status bar informs us that the Matched purchase order quantity for each line is equal to 0, as there is no purchase order linked to each requisition line yet, and the requisition line/s status is Open.</li> </ul> <p>It is important to remark that Requisitions does not have any impact on:</p> <ul> <li>Items quantity on hand</li> <li>Items costing</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#manage-requisitions","title":"Manage Requisitions","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Manage Requisitions</code></p> <p>Manage Requisitions window is intended to be used to provide an overall picture of the items needed.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#header_1","title":"Header","text":"<p>This window allows the user to manage requisitions regardless of their current status, therefore they can change or close a requisition and create purchase orders for those demands.</p> <p></p> <p>A requisition with status \"Completed\" can always be changed, if required. The user needs to reactivate it and then change it and book it.</p> <p>It is also possible to close a requisition in case there is no need of the included item/s anymore, by using the menu button \"Close\" and then select the action \"Close\".</p> <p>Requisition lines status will then be changed to \"Cancelled\".</p> <p>Finally, it is also possible to create purchase orders for those requisitions in status \"Complete\", by using the menu button \"Create Purchase Order\".</p> <p>In this case, a new window is shown for the user to fill in some data by taking into account that:</p> <ul> <li>If there are different suppliers in the requisition lines as well as price list:</li> <li>the defaulted ones entered in the window \"Create Purchase Order\" will be the ones used in the purchase order.</li> <li>If there are different suppliers in the requisition lines as well as price list, and the user does not enter any defaulted ones in the window \"Create Purchase Order\":</li> <li>the ones in the requisition lines will be the ones used in the purchase orders.</li> <li>If all the requisition lines have the same supplier and price list:</li> <li>there will not be any need for selected defaulted ones in the window \"Create Purchase Order\", besides only one purchase order will be created.</li> </ul> <p></p> <p>Etendo provides information about the purchase order/s number/s created after pressing the OK button in the \"Create Purchase Order\" window.</p> <p>This action links the requisition and the purchase order, and besides a purchase order line is created for each requisition line:</p> <ul> <li>A requisition linked to a purchase order changes its status from Completed to Closed.</li> <li>A requisition line linked to a purchase order line changes its status from Open to Closed.</li> </ul> <p>Any purchase order created from a Requisition:</p> <ul> <li>will be listed in the \"Purchase Order\" window.</li> <li>will have a \"Booked\" status</li> <li>and will contain data inherited from the Requisition, data such as:</li> <li>Order Date</li> <li>Scheduled Delivery Date</li> <li>Business Partner</li> <li>Price List</li> <li>Product/s</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#lines_1","title":"Lines","text":"<p>The user can perform a set of actions regarding requisition lines. It is possible for them to either create lines or product demands or to cancel them.</p> <ul> <li>New product demands can be manually created within a requisition by just adding new requisition lines before creating a purchase order.</li> <li>Existing product demands or requisition lines can be cancelled, if they are not required anymore, by using the header button \"Change Status\".</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#matched-po-purchase-order-lines","title":"Matched PO (Purchase order) Lines","text":"<p>This tab allows the user to either review the purchase order line automatically linked to a requisition line or to manually link an existing purchase order line to the corresponding requisition line.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#requisition-to-order","title":"Requisition to Order","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Requisition to Order</code></p> <p>Requisition to Order window shows all the \"Completed\" requisitions which match the criteria used in the \"filter\" section and it also shows the requisition lines selected as locked, therefore the same product demand can not be included more than once in a purchase order.</p> <p></p> <p>In other words, the upper section of this window shows the requisition lines found that are not linked to an order yet. Those are the lines which can be added by the user to the \"Lock\" area in the bottom section of the window.</p> <p>A requisition line locked can not be changed by any other user, until the one who locked it gets it unlocked. That way, during the time that the requisition lines are locked:</p> <ul> <li>The same product demand will not be included in a purchase order, by mistake.</li> <li>The purchase team will have the opportunity to review the stock and contact different vendors if required to negotiate a price for the products.</li> <li>If there is no activity during 3 days, the system removes the lock from the lines.</li> </ul> <p>A requisition can be unlocked manually by the purchase manager or the one who locked it by moving it back to the upper part of the \"Requisition to Order\" screen by using the \"Remove\" button.</p> <p>Once the product demands are clear and locked, the last step to take in this window is to create a purchase order for those needs using the process button \"Create\".</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#purchase-order","title":"Purchase Order","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Purchase Order</code></p> <p>Purchase Order window allows the user to manage orders which once booked will be sent to the external suppliers. In other words, it is a document to register products and/or services to be purchased and documented.</p> <p></p> <p>Once the document is booked, it can be sent to the external supplier and it can be prepaid if required.</p> <p>Purchase orders can be created and booked in the header section of the purchase order window.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#header_2","title":"Header","text":"<p>The Purchase order header allows you to enter the following information:</p> <ul> <li>Organization: Organizational entity within client.</li> <li>Transaction Document, which in this case is defaulted as \"Purchase Order\".</li> <li>Document No, or the Company purchase order number.</li> <li>Order date: This date is also defaulted by Etendo based on the system date, but it can always be changed.</li> <li>Business Partner: End-user needs to select the supplier to which the purchase order is being issued.</li> <li>Partner Address: Automatically populated once the business partner is selected based on the address or location set us \"Ship to Address\".</li> <li>Warehouse: Regardless it is defaulted by Etendo based on the \"Profile\" selected options, it must be verified by the end-user.</li> <li>Scheduled Delivery Date: This is the date when the organization or legal entity requires the items to be delivered.</li> <li>Payment Method, Payment Terms and Price List: These ones are defaulted by Etendo once a business partner is selected.</li> <li>Order Reference, free text which can be found under \"More Information\" section, you can use it to save the supplier order number, if any.</li> </ul> <p>In the Status Bar of the header, the user can find the following information:</p> <ul> <li>Document Status: Document status of the order. The order can be in booked, draft, closed status, among others.</li> <li>Total Gross Amount: Total Gross amount of the order.</li> <li>Total Net Amount: Total Net amount of the order.</li> <li>Currency: Currency of the order.</li> <li>Delivery Status: It indicates in % how much quantity of the order has been received.  </li> <li>Invoice Status: It indicates in % how much quantity of the order has been invoiced.  </li> </ul> <p>Once header information is properly filled-in, you can go to the \"Lines\" tab in order to enter purchase order line/s information.</p> <p>Info</p> <p>To learn how to enter purchase order lines, visit the next section Lines.</p> <p>It is possible to take up to three possible actions regarding a purchase order, by using the header button \"Book\":</p> <ul> <li>Process it, in case you might want to process it but not to book it as final, because it could be you might need to change it later on.</li> <li>Void it, in case that purchase order is not required anymore and therefore needs to be voided.</li> <li>Book it, in case it is correct and final.</li> </ul> <p>Info</p> <p>If there are non-stockable BOM products and they have not been exploded, the Book button explodes them automatically.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#lines_2","title":"Lines","text":"<p>Once the purchase order header has been properly filled in and saved, each purchase order line can be created in this tab.</p> <p>Purchase order lines can be created in three different ways:</p> <p>1. By manually creating new record/s in the \"Lines\" tab.</p> <p>The purchase order fields you can fill in are described below:</p> <ul> <li>Product. You can select an item or product from the list or use the product selector icon.</li> <li>Ordered quantity, or Operative Quantity if the product has an alternative unit of measure (AUM) configured. This is the quantity needed of the product/item.</li> <li>Product's UOM, or product's Alternative UOM depending on product configuration in regards to unit of measure.</li> <li>Attribute Set Value. An attribute associated with a product as part of an attribute set.</li> <li>Net Unit Price. This one is coming from the Price List selected in the header, but it could always be changed.</li> <li>Line Net Amount. The final amount of a specified line, based only on quantities and prices.</li> <li>Tax. Purchase tax is normally filled in by the system, depending on Taxes setup.</li> </ul> <p>2. By retrieving all the lines from previously created purchase orders. In this case, you must use the process button \"Copy from Orders\".</p> <p>This process button enables the Copy from Orders Pick and Edit window.</p> <p>\"Copy from Orders Pick and Edit\" window allows you to search the orders to copy by using the filter options available.</p> <p>The lines information of the selected orders will be inserted in the purchase order line/s, then that information can be manually changed.</p> <p>3. By copying lines from other purchase orders.</p> <p>In this case, you must use the process button \"Copy Lines\".</p> <p>This process button enables a new window named \"Copy Lines from order\" which allows you to create order lines by selecting the products already purchased from the supplier of the order by taking into account the Consumption days configured for the supplier.</p> <p>In the Status Bar of each line, you can find information about:</p> <ul> <li>Delivered quantity: number of received products of the line.</li> <li>Invoiced quantity: number of invoiced product of the line.</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#explode-button","title":"Explode button","text":"<p>Explode button is shown when selecting a line with a non-stockable BOM product and the product has not already been exploded. When exploding a product, the bill of materials components the selected product consists of are shown in the order.</p> <p>Info</p> <p>Once you have exploded it, you cannot comprime it. You should delete all the lines (first bill of materials components and then the BOM product), and insert again the non-stockable BOM product.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#line-tax","title":"Line Tax","text":"<p>For each purchase order line, Etendo automatically populates the line tax related information in this tab.</p> <p>Line tax tab informs about each purchase order line:</p> <ul> <li>applied tax rate</li> <li>calculated tax amount</li> <li>taxable amount</li> </ul> <p>Info</p> <p>It is not possible to either manually create a new line or modify existing ones.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#basic-discounts","title":"Basic Discounts","text":"<p>Lists information about discounts automatically applied based on the supplier configuration and / or manually entered for the purchase order.</p> <p></p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#payment-plan","title":"Payment Plan","text":"<p>This shows the total amount expected to be paid upon order booking as well as the amount/s pre-paid or paid against the invoice/s for the order.</p> <p>Payment Plan information is required at order level because suppliers could ask for a pre-payment of all or part of a debt prior to its due date.</p> <p>Purchase order payment plans do not show nor manage valid due dates, but the payment plan of the corresponding purchase invoice/s.</p> <p>This tab also shows information about the regular payments received against the invoice/s for this order, as amounts paid.</p> <p>Finally, a payment plan of a purchase order will be removed:</p> <ul> <li>if the purchase order is reactivated</li> <li>or if the purchase order is voided</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#payment-details","title":"Payment Details","text":"<p>Displays the details of the payments (pre-payments or regular payments) made for the order or for the invoice/s of the order.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#how-to-reactivate-a-closed-purchase-order","title":"How to Reactivate a Closed Purchase Order","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>Etendo allows the user to reactivate closed purchase orders by selecting the needed one/s and clicking the Undo Close button.</p> <p></p> <p>Once the process is finished, the purchase order status turns to booked.</p> <p>Info</p> <p>Check the Technical documentation about Advanced Financial Docs Processing to extend the process.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#payment-removal","title":"Payment Removal","text":"<p>The aim of this functionality is to delete and reactivate payments in an agile and easy way. Also, it allows eliminating and reactivating bank transactions and reconciliations.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>From this window, it is possible to remove payments associated with a purchase order by selecting the corresponding document and then clicking on the Remove Payment button. If there is an invoice associated with the order, the relationship of this invoice to the payment in question will also be removed (Purchase Invoice window &gt; Payment Plan tab).</p> <p>If the payment is included in the financial account, i.e., if it is in Deposited/Withdrawn not cleared status, the transaction in it will also be deleted (Financial account window &gt; Transaction tab).</p> <p>If the payment is reconciled through an automatic method, then in addition to the transaction in the financial account, the line of the bank statement to which it was linked (Financial Account window &gt; Imported Bank Statements) and the corresponding line of the bank reconciliation (Financial Account &gt; Reconciliations) will be deleted.</p> <p>Info</p> <p>If the payment is posted, the accounting entry is deleted too.</p> <p></p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#intercompany","title":"Intercompany","text":"<p>In case the user has to create orders or invoices among two or more organizations that are different but belong to the same client, this functionality allows automatically generating the corresponding inverse document.</p> <p>Info</p> <p>For more information, visit the Intercompany module user guide.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-completion","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or close multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#advanced-bank-account-management","title":"Advanced Bank Account Management","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Bank Account Management module of the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This module adds a new field to the header of the Purchase Order window: Bank Account. This field is automatically filled with the bank account related to the adress or business partner of the order.</p> <p></p> <p>Info</p> <p>For more information, visit the Advanced Bank Account Management user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#goods-receipts","title":"Goods Receipts","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Goods Receipt</code></p> <p>A Goods Receipt is a document issued to acknowledge the receipt of the items listed in it. In other words, it is a document used to register in Etendo the specifics of items physically received in the warehouse.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#header_3","title":"Header","text":"<p>Goods Receipts can be issued and booked in the header section of the goods receipt window.</p> <p></p> <p>The fields to fill in the Goods Receipt header are:</p> <ul> <li>Document Type, which is filled in by default as \"MM Receipt\".</li> <li>Warehouse, where goods are going to be located.</li> <li>Business Partner, third party which delivers the goods.</li> <li>Movement Date, delivery date of the goods.</li> <li>Accounting Date, accounting date in case of posting the Goods Receipt.</li> <li>Purchase Order, purchase order number linked automatically by Etendo, in case the Goods Receipt is automatically created from a Purchase Order.</li> <li>Order Reference, Warehouse team can fill in here the Supplier's Delivery Note number, this way the internal Goods Receipt number and the Supplier's Delivery Note number are linked.</li> </ul> <p>In the Status Bar of the header, the user can find the following information:</p> <ul> <li>Document Status: Document status of the receipt.</li> <li>Invoice Status: It indicates in % how much quantity of the receipt has been invoiced. </li> </ul> <p>Once header information is properly filled-in, you can then go to the \"Lines\" tab in order to enter \"Goods Receipt Line/s\".</p> <p>Info</p> <p>To learn how to enter goods receipt lines, visit the next section Lines</p> <p>If a Goods Receipt is completed and therefore booked:</p> <ul> <li>The quantity on hand of the item/s received is increased by the quantity received.</li> </ul> <p>If a \"Completed\" Goods Receipt is voided because the goods have been returned to the supplier:</p> <ul> <li>The quantity on hand of the items/s returned is decreased by the quantity of the goods returned. Etendo automatically creates a new \"Goods Receipt\" for exactly the same items but with \"negative\" quantities.</li> </ul> <p>Info</p> <p>To learn more about Goods Returns, visit Return to Vendor and Return to Vendor Shipment.</p> <p>Supplier can send a \"Purchase Invoice\" together with the \"Delivery Note\" of the goods delivered, therefore:</p> <ul> <li>From the Goods Receipt window, it is possible to generate the corresponding supplier's invoice, by using the header process button \"Generate Invoice from Receipt\".</li> </ul> <p>This action implies a link between the goods receipt and the purchase invoice, the user can be aware of when inquiring about the corresponding purchase invoice.</p> <p>Info</p> <p>To learn more, visit Purchase Invoice.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#lines_3","title":"Lines","text":"<p>Once the goods receipt header has been properly filled in and saved, each item received can be listed as a separate goods receipt line.</p> <p>There are several ways of creating goods receipt lines.</p> <p>1.The user can always manually create goods receipt lines. That is the way the user could turn to in case there is not a booked purchase order nor a completed purchase invoice for the goods received they can retrieve data from.</p> <p>As a consequence, the information to manually fill in is:</p> <ul> <li>the goods or items received</li> <li>the quantity received</li> <li>the storage bin where the items are going to be stored</li> </ul> <p>Explode button is shown when selecting a line with a non-stockable BOM product and the product has not already been exploded. When exploding a product, the bill of materials components the selected product consists of are shown in the shipment. Once you have exploded it, you cannot comprime it. You should delete all the lines (first bill of materials components and then the BOM product), and insert again the non-stockable BOM product.</p> <p>2.On the other hand, it is also possible to \"automatically\" create goods receipt lines, by using the header process button \"Create Lines From\".</p> <p>This allows the user to select the orders or invoices pending to be received.</p> <p>For instance, once a purchase order is selected, the purchase order lines pending to be received are shown.</p> <p>Then, the user is able to select the purchase lines received, change the quantity if required, and get them located in the warehouse.</p> <p>Finally:</p> <ul> <li>If a purchase order/line is selected, this action links each good receipt line to the corresponding purchase order line, same applies to purchase invoice.</li> </ul> <p>In the Status Bar of each line, you can find information about the Invoiced quantity, the number of invoiced products of the line.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#accounting","title":"Accounting","text":"<p>Accounting information related to the material receipt.</p> <p>A \"Goods Receipts\" can be posted if the \"MaterialMgmtShipmentInOut\" table is set to Active for accounting in the [Active Tables] tab of the organization's general ledger configuration.</p> <p>A \"Goods Receipt\" posting looks like:</p> <p></p> <p>Posting a \"Goods Receipt\" requires the calculation of the cost of the contained product/s.</p> <p>In the case of a goods receipt, that is:</p> <ul> <li>the purchase price of the product/s</li> <li>or the default standard cost of the product/s in case of calculating cost by using an Standard costing algorithm.</li> </ul> <p>If there is not a related purchase order, the Costing Server process uses the newer of the following three values:</p> <ul> <li>the last purchase order price of the receipt's vendor for the product.</li> <li>the purchase price list of the product.</li> <li>or the default cost of the product.</li> </ul> <p>Moreover:</p> <ul> <li>The \"Legal Entity\" organization needs to have a validated Costing Rule configured.</li> <li>And the Costing Background Process needs to be scheduled for the Client, therefore it can search and allow that the Costing Server process calculates the cost of the transactions.</li> </ul> <p>Once the costs have been calculated, the Goods Receipt can be posted to the ledger.</p> <p>In the case of a receipt containing \"Expense\" product/s without the \"Sales\" checkbox selected, it is possible to use the product's purchase price instead of the product's cost to post the goods receipt.</p> <p>This works if the checkbox Book Using Purchase Order Price is selected for the product/s.</p> <p>In this case, it is required that a \"Purchase Order\" is related to the posted \"Goods Receipt\".</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#voiding","title":"Voiding","text":"<p>It is possible to totally void a goods receipt by using the header button \"Close\" and then selecting the action \"Void\".</p> <p>This action creates a new document that reverses the goods receipt.</p> <p>Void action allows to specify a \"Void Date\" and a \"Void Accounting Date\" of the new document:</p> <ul> <li>Void Date: that is the movement date of the new document that reverse the goods receipt.</li> <li>Void Accounting Date: that is the accounting date of the new document that reverse the goods receipt.</li> </ul> <p>Both fields above take original document dates as default date and validate that the dates entered are not prior to the \"Movement Date\" and the \"Accounting Date\" of the Goods Receipt, respectively.</p> <p>Void action implies that:</p> <ul> <li>Etendo automatically generates a new document in the \"Goods Receipt\" window, and informs about the document number created. The document number is also displayed in the description field of the Goods Receipt. This new document is created as described below:</li> <li>The \"transaction document\" used by Etendo is \"MM Receipt\".</li> <li>This document is exactly the same as the original one being reversed but the movement quantity is negative.</li> <li>Once the new document has been created, you can change both the \"Movement Date\" and the \"Accounting Date\" of the new document prior to getting it posted.</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#landed-cost","title":"Landed Cost","text":"<p>Landed Cost tab allows to allocate additional costs to the goods receipt.</p> <p></p> <p>It is possible to enter as many landed cost types/lines as required.</p> <p>Some relevant fields to note are:</p> <ul> <li>Landed Cost Type: that is the landed cost type that is going to be allocated to the goods receipt.</li> <li>Invoice line: that is to select the corresponding landed cost invoice line if any, that matches the landed cost type being entered.   If an invoice line is selected, the invoice line amount gets populated in the next field \"Amount\".</li> <li>Amount: that is the landed cost amount. This amount can be an \"estimation\" or a \"real\" amount in case of selecting an invoice line.</li> <li>Landed Cost Distribution Algorithm: that is the one distributed by Etendo \"Distribution by Amount\", which means that the landed cost amount is going to be distributed among the goods receipt lines proportionally by receipt line amount.</li> </ul> <p>Once all items above are filled in, including corresponding landed cost purchase invoice line, both \"Goods Receipt\" and Landed Cost process matching are executed by clicking on the \"Complete\" process button.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#how-to-reactivate-goods-receipts","title":"How to Reactivate Goods Receipts","text":"<p>Info</p> <p>To be able to include this functionality, the Warehouse Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Warehouse Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Warehouse Extensions - Release notes.</p> <p>From the Goods Receipt window, it is possible to reactivate a previously generated movement just by selecting the corresponding document and clicking the Reactivate button.</p> <p>Once the receipt is successfully reactivated, the state of the document changes to Draft as it can be observed in the status bar.</p> <p></p> <p>Warning</p> <p>Note: It is not possible to reactivate documents that include transactions with quantities exceeding the existing stock quantity for a certain product in a certain storage bin. The only exception is when the configuration of the storage bin allows Over Issue. For more information, visit Storage Bin.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-posting","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-completion_1","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or void multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#pending-goods-receipts","title":"Pending Goods Receipts","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Pending Goods Receipts</code></p> <p>This window allows the user to:</p> <ul> <li>Use the Filter options to narrow down the search of pending purchase orders to be delivered. It is possible to search by:<ul> <li>Business Partner</li> <li>From Purchase Order Date -&gt; To Purchase Order Date</li> <li>Purchase Order number</li> </ul> </li> <li>Enter a \"Reception date\".</li> <li>Select the \"Order line/s of a purchase order/s\" delivered which are shown grouped by Business Partner and Purchase Order.</li> <li>Change the \"Quantity\" of the goods being receipt if needed.</li> <li>Enter the \"Goods receipt location\" or storage bin within a warehouse.</li> <li>Process it in order to create the corresponding goods receipts.</li> </ul> <p></p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#purchase-invoice","title":"Purchase Invoice","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Purchase Invoice</code></p> <p>The Purchase Invoice window allows the user to register and manage supplier's invoices.</p> <p>This stage of the chain usually comes after \"Goods Receipts\" booking and management.</p> <p>A purchase invoice is an itemized statement of the goods or services provided by a vendor or supplier. It indicates the quantity and price of each product or service provided or to be provided.</p> <p>Suppliers could send the corresponding purchase invoice/s together with the delivery note/s attached to the goods, that implies that \"Purchase Invoices\" can be automatically generated from the \"Goods Receipt\" window, but it is possible that this is not the case, therefore a Purchase Invoice can also be created from scratch in the \"Purchase Invoice\" window.</p> <p>The purchase expenses can be recognized as soon as the purchase invoice is accounted, however if an expense deferred plan is configured, it is possible to defer the expense recognition as required.</p> <p>Supplier invoices can be registered, booked and managed in the header section of the purchase invoice window.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#header_4","title":"Header","text":"<p>Header lists the main terms and conditions related to the purchase invoice.</p> <p>Info</p> <p>In the majority of cases, the main (and the only) field needed to create a new purchase invoice document is the Business Partner field. All other fields will be pre-filled automatically based on the selected Business Partner, logged in User preferences and other system default parameters.</p> <p>Some other fields to note are:</p> <ul> <li>Transaction document defaulted as \"AP Invoice\" or purchase invoice document type which can be manually changed to either \"AP Credit Memo\" or \"Reversed Purchase Invoice\".</li> <li>\"AP Credit Memo\" and \"Reversed Purchase Invoice\" document types can be considered credit purchase invoices, the difference between them is that:<ul> <li>\"AP Credit Memo\" type must contain either an \"Invoiced Quantity\" &gt; 0 or \"line Net Amounts\" &gt;0.   Above implies that invoices set as \"Credit Memo\" should not be related to \"Orders\" or \"Shipments\".</li> <li>\"Reversed Purchase Invoice\" type must contain either an \"Invoiced Quantity\" &lt;0 or \"line Net Amounts\" &lt; 0. These are the invoice types that can be related to return \"Orders\" or \"Shipments\".</li> </ul> </li> <li>Document No. you could manually fill in the supplier's invoice number in this field, if the document sequence number associated with the transaction document \"AP Invoice\" is set up to allow you to do that; otherwise it will be automatically provided by the system as an \"Internal\" purchase invoice number.</li> <li>Invoice Date: the date the invoice is registered. It is used to calculate when the payment of the invoice is due. Defaults to the current date can always be changed.</li> <li>Accounting Date: the date to be used in the posting record of the Purchase Invoice to the general ledger. Defaults to the Invoice Date field can always be changed.</li> <li>Payment Terms: indicates how an invoice should be paid. Defaulted according to the Vendor/Creditor tab of the Business Partner window.</li> <li>Payment Method: defines when a purchase invoice needs to be paid. Defaulted according to the Vendor/Creditor tab of the Business Partner window.</li> <li>Supplier Reference: this is a not-mandatory field which can be used to enter the supplier invoice number.</li> </ul> <p>There are 3 ways of entering lines into the purchase invoice, two of them from the invoice header and the last one from the Lines tab:</p> <ol> <li>Selecting products from pending to be invoiced orders or receipts using the Create Lines From Order and Create Lines From Receipt buttons.</li> <li>Copying all products from the chosen invoice selected in the history of all invoices for different business partners using the Copy Lines button.</li> <li>Manually, line by line in the Lines tab. This option is used if the underlying document (Purchase Order or Goods Receipt) does not exist in the system prior invoicing takes place.</li> </ol> <p>The Complete button finishes the creation of the invoice document with the fulfillment of the Payment Plan tab and the Payment Monitor section in the Header. If there are non-stockable BOM products in the lines and they have not been exploded, the Complete button will explode them automatically.</p> <p>Once completed, a purchase invoice can be:</p> <ul> <li>posted to the ledger by using the button Post</li> <li>voided by using the button Reactivate</li> <li>and paid by using the button Add Payment.</li> </ul> <p></p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#lines_4","title":"Lines","text":"<p>Once the purchase invoice header has been properly filled in and saved purchase invoice lines can be registered in this tab.</p> <p>Lines list each product to be purchased and its characteristics.</p> <p>The fields to note are:</p> <ul> <li>Financial Invoice Line is selected when the invoice line is not a product but an account not set up as a product but as a G/L Item, or an asset not set up as a product.   When selected, the product field disappears from the screen and an account field appears related to the purchase invoice line.</li> <li>Attribute Set Value: field is displayed if the product in the line has attributes (color, size, serial number or several of them together etc).</li> <li>Purchase Order Line and Goods Receipt Line: references to the purchase order and goods receipt line that is being invoiced.</li> </ul> <p>As already mentioned, purchase expenses can be deferred therefore they are not recognized at the purchase accounting date but within a given number of accounting periods.</p> <p>When a purchase invoice line is created, it is possible to define at line level whether the line is going to cause the expense to be deferred. The relevant fields are:</p> <ul> <li>Deferred Expense: When this flag is checked, the Expense Plan field group becomes visible, allowing users to configure the next three fields.</li> <li>Expense Plan Type: This field specifies the frequency of the expense distribution which currently is \"monthly\".</li> <li>Period Number: This field specifies the duration of an expense plan.   For instance, if a company purchases business insurance for the duration of the year, the period number to enter would be 12 as the company would like to distribute that expense over 12 months.</li> <li>Starting Period: The first open period in which the expense is going to be recognized.</li> </ul> <p>These fields can be defaulted if configured for the product.</p> <p>If an expense plan is configured, it implies a specific purchase invoice accounting.</p> <p>Explode button is shown when selecting a line with a non-stockable BOM product and the product is not already exploded. When exploding a product, the bill of materials components the selected product consists of are shown in the invoice. Once you have exploded it, you cannot comprime it. You should delete all the lines (first bill of materials components and then the BOM product), and insert again the non-stockable BOM product.</p> <p>Match LC Cost button is shown when the purchase order line contains either an \"account\" or a \"product\" setup as landed cost type.</p> <p>This process button allows to match both the \"estimated\" landed cost booked in the landed cost window, and the one being invoiced in the invoice line. Both need to be of the very same landed cost type.</p> <p>Once selected, \"Match LC Cost\" button opens the \"Match LC Cost\" pick and edit window.</p> <p>Only processed Landed Cost documents will be shown in this Window. It allows you to pick the corresponding landed cost, to enter an amount to match in the field \"Matched Amt\", and then to select the \"Process Matching\" check-box.</p> <p>Warning</p> <p>Note that if the \"Process Matching\" check-box is not selected here, landed cost matching will have to be processed in the landed cost window by using Process Matching button.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#buttons","title":"Buttons","text":"","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#postunpost","title":"Post/Unpost","text":"<p>A purchase invoice can be posted to the ledger when required at a given Accounting Date by using this process button. Once posted, it can be unposted with the same button.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#reactivate","title":"Reactivate","text":"<p>Using this button, the user has two options: reactivating or voiding the Completed invoice.</p> <p>In the case of the Reactivate option, it turns the record from Completed into Draft status. </p> <p>With the Void option, it is possible to totally void a purchase invoice. This action creates a new document that reverses the invoice.</p> <p></p> <p>Voiding allows specifying a Void Date and a Void Accounting Date for the new document that reverses the invoice.</p> <p>Both \"date\" fields above take the current date as default date and validate that the dates entered are not prior to the invoice date and the invoice accounting date, respectively.</p> <p>Also, this process window includes a Supplier Reference field to enter the supplier reference number to refer to the reversed document resulting from the invoice voiding. Here, you can enter the corresponding number or leave the field blank to complete it later.</p> <p>This action implies that:</p> <ul> <li>Etendo automatically generates a new document in the Purchase Invoice window that reverses the original invoice.</li> <li>Etendo also informs about the new document number. This new document is created as described below: The transaction document used by Etendo is the Reversed Purchase Invoice. This document is exactly the same as the original one being reversed but the invoiced quantity is negative.</li> <li>Once the new document has been created, you can change both the Invoice Date and the Accounting Date of the new document prior to get it posted. You can also enter the Supplier Reference if not entered before or modify the existing one.</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#add-payment","title":"Add Payment","text":"<p>Payment/s can be made against a purchase invoice by using the Add Payment button which opens the Add Payment pop-up window.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-posting_1","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-completion_2","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or void multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p> <p>Warning</p> <p>The bulk voiding option fails when the Purchase Invoice Validation module is installed. This is because the module includes a default preference that prevents the duplication of invoices with the same business partner, accounting year, and supplier reference. Since massive voiding attempts to reverse invoices, it leads to duplication, as the supplier reference for each reversed invoice cannot be modified. As a result, the module prevents the bulk voiding process from functioning. </p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#remove-payment","title":"Remove Payment","text":"<p>The aim of the Payment Removal functionality is to delete and reactivate payments in an agile and easy way. Also, it allows eliminating and reactivating bank transactions and reconciliations.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>From this window, it is possible to delete payments associated with a purchase invoice by selecting the corresponding document and then clicking on the Remove Payment button. If there is an order associated with the invoice, the relationship of this order to the payment in question will also be deleted (Purchase Order window &gt; Payment Plan tab).</p> <p>If the payment is included in the financial account, i.e., if it is in Deposited/Withdrawn not cleared status, the transaction in it will also be deleted (Financial account window &gt; Transaction tab).</p> <p>If the payment is reconciled through an automatic method, then in addition to the transaction in the financial account, the line of the bank statement to which it was linked (Financial Account window &gt; Imported Bank Statements) and the corresponding line of the bank reconciliation (Financial Account &gt; Reconciliations) will be deleted.</p> <p>Info</p> <p>If the payment is posted, the accounting entry is deleted too.</p> <p></p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#unvoid","title":"Unvoid","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>Etendo allows the user to reactivate voided purchase invoices by selecting the needed one/s and clicking the Unvoid button.</p> <p></p> <p>Once the process is finished, the sales invoice status turns to Complete.</p> Note <p>In the case of the standard version of the module, it is necessary for the user to also unvoid the corresponding reversed invoice.</p> <p>Warning</p> <p>Remember that this reactivation process affects the accounting, since, if the original information is not manually removed from the reactivated document, the accounting information will be doubled.</p> <p>Info</p> <p>Check the Technical documentation about Advanced Financial Docs Processing to extend the process.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#modify-payment-plan","title":"Modify Payment Plan","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Bank Account Management module of the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Advance Bank Account Management module adds a new field to the header of the Purchase Invoice window: Bank Account. This field is automatically filled with the bank account related to the adress or business partner of the invoice. Also, the Modify Payment Plan button is added for better payment management.</p> <p></p> <p>Info</p> <p>For more information, visit the Advanced Bank Account Management user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#intercompany_1","title":"Intercompany","text":"<p>In case the user has to create orders or invoices among two or more organizations that are different but belong to the same client, this functionality allows automatically generating the corresponding inverse document.</p> <p>Info</p> <p>For more information, visit the Intercompany module user guide.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#matched-invoices","title":"Matched Invoices","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Matched Invoices</code></p> <p>This window helps the user to post the discrepancies between inventory and financial accounting of those items for which the corresponding goods receipts were posted.</p> <p>Above mentioned discrepancies are mainly caused by differences between:</p> <ul> <li>the item's net unit price registered when booking the purchase order and later on posting the corresponding Goods Receipt.</li> <li>and the \"final\" item's net unit price registered when posting the purchase invoice.</li> </ul> <p>In the window, there is a listing of all invoices that are matched to goods receipts. The matching of the documents is done when documents are created by using the information of the other document: for example by clicking the Generate Invoice from receipt on the goods receipt or by clicking the Create Lines from button when creating a goods receipt to select the invoice.</p> <p></p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#matched-invoice","title":"Matched Invoice","text":"<p>Matched invoice tab lists each invoice line posted linked to the corresponding goods receipt lines, which could also be posted or not.</p> <p>There is a \"Post\" header button which is the one that posts the discrepancies between inventory and financial accounting if any, once the proper line has been selected.</p> <p>The general process to post the discrepancies in accounting is detailed below:</p> <p>A Matching Invoice document can be posted if the cost of the products included in a Goods Receipt has been calculated. To obtain that:</p> <ul> <li>A validated Costing Rule is required in the Matched Invoice's legal entity,</li> <li>and the background process Costing Background Process must be run.</li> </ul> <p>In the case of \"Expense\" product/s do not having the \"Sales\" checkbox selected, it is possible to use the product's purchase price instead of the product's cost whenever the checkbox Book Using Purchase Order Price is selected. In this case, it is required that a \"Purchase Order\" is related to the \"Goods Receipt\".</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#accounting_1","title":"Accounting","text":"<p>Accounting information related to the matched invoices</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-posting_2","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#return-to-vendor-rtv","title":"Return to Vendor (RTV)","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Return to Vendor</code></p> <p>This window allows the user to create a Return Material document in case a given product needs to be sent back either to be returned for a refund or replacement, or to be repaired.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#header_5","title":"Header","text":"<p>The user can create a purchase order and process it.</p> <p>Once the Return Material document is accepted by the Vendor, the user can process it by clicking the button Book. The document changes from Draft to Booked.</p> <p></p> <p>Only Booked documents can be shipped to the vendor.</p> <p>Warning</p> <p>Notice the button Pick/Edit lines disappears when the Return to vendor document is in status Booked.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#lines_5","title":"Lines","text":"<p>Add products to be included in your purchase order. Each product is added by creating a line.</p> <p>The Lines tab is not editable, since the returned lines always come from receipt lines, to avoid:</p> <ul> <li>Seeing positive values while negative in the DB.</li> <li>Entering lines that are not linked to the original receipt lines.</li> <li>Editing attributes, products and so having either the products or attributes different from the shipment line.</li> </ul> <p>To enter new lines you need to click the process button PICK/EDIT Lines.</p> <p>Things to consider:</p> <ul> <li>The only editable fields are:</li> <li>Returned: Quantity you wish to return. When selecting the row, the quantity is not set by default since the system cannot know how many items return.</li> <li>Net Unit Price: Price of the original purchase order.</li> <li>Return reason: The reason why you return the item.</li> <li>and Returned UOM, only in case *alternative unit of measure (AUM)*preference is enabled.     In that case, product's \"primary\" AUM for the purchase flow is shown if any, otherwise product's UOM is shown. The user can always change it to product's UOM.</li> </ul> <p>You can define the Return Reason at header level. In this case when picking a line it inherits what selected in the header but you can modify it as you wish.</p> <ul> <li>Only Material receipt documents that have not been still returned can be picked it, in case a Receipt line has been fully returned it will not be shown.</li> <li>When a Receipt line has been partially returned you can still return the rest. What you have already returned for that line is shown in the field Return Qty other R.</li> </ul> <p>Validations:</p> <ul> <li>You are not allowed to return more quantity than the Ship/Receipt Qty. In case you do it a message is shown.</li> <li>Notice that this validation takes into account the Return Qty other RM field</li> </ul> <p>Info</p> <p>To edit a line you need to click again the Pick/Edit Lines button and the line appears selected and then you can modify any of the editable fields.</p> <p>Info</p> <p>To delete a line you need to unmark the line and then click Done.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-completion_3","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or close multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#return-to-vendor-shipment","title":"Return to Vendor Shipment","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Return to Vendor Shipment</code></p> <p>From this window, the user can deliver the returned goods to the vendor.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#header_6","title":"Header","text":"<p>The user can create and edit a goods receipt.</p> <p>The RMA vendor ref. field is populated automatically or not based on:</p> <ul> <li>If it is filled before selecting a line, then it will not be populated automatically to avoid override it.</li> <li>If you select a line/s where all of them belong to the same Return to Vendor document, it will be populated automatically.</li> <li>If you select a line/lines but one of them belongs to a different Return to Vendor document, then it will not be populated automatically.</li> </ul> <p>Once the document is ready, you can process it by clicking the button Complete. The document changes from Draft to Completed.</p> <p>Warning</p> <p>Notice the button Pick/Edit lines disappears when the Return to vendor document is in status Completed.</p> <p></p> <p>To invoice these documents you must use the Purchase invoice window. All scenarios are covered:</p> <ul> <li>If the vendor sends an invoice just for that specific document you need to select a Reverse purchase invoice document type and then select the lines through the Create lines from button.</li> <li>If the vendor sends an invoice with the original purchase order plus the return materials order you need to select a Purchase invoice document type and then select the lines through the Create lines from button.</li> <li>If the vendor does not send an invoice for the return materials order but wants to keep it as credit where you can use it later, you have to:</li> <li>Create a Reverse purchase invoice for these returned materials.</li> <li>Leave it as credit to be used later through the Payment out window.</li> <li>When you create the Purchase invoice for the original Purchase order you can consume that credit.</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#lines_6","title":"Lines","text":"<p>Add products which are included in your goods receipt. Each product is shown on its own line.</p> <p>The Lines tab is not editable, since the lines always come from return to vendor lines, to avoid:</p> <ul> <li>Seeing positive values while negative in the DB.</li> <li>Entering lines that are not linked to return lines.</li> <li>Editing attributes, products and so having either the products or attributes different from the return line.</li> </ul> <p>Info</p> <p>To enter new lines, the user needs to click the button PICK/EDIT Lines.</p> <p>Things to consider:</p> <ul> <li>Editable fields are:</li> <li>Ship Qty, that value is set automatically when you select the line,</li> <li>and Returned UOM, only in case an alternative unit of measure (AUM) preference is enabled, regardless product's UOM is always shown there by default.     The user can change it if required, to the product's primary AUM configured for the procurement flow.</li> <li>The user can only select Return to Vendor lines that are pending to be shipped to that specific vendor.</li> <li>The system proposes the different storage bins from where the item can be picked. Depending how the product is configured we could have three scenarios:</li> <li>Product with an instance attribute (i.e: Serial number): The system will propose only one storage bin as it is shown above.</li> <li>Product with a non-instance attribute (i.e: Colour): The system could propose several storage bins. See below image</li> <li>Product without attributes. Similar to second scenario.</li> </ul> <p>Validations:</p> <ul> <li>You are not allowed to ship more than the Available Qty.</li> <li>You are not allowed to ship more than the Pending quantity.</li> <li>The system also validates you cannot ship more than the Pending quantity when selecting both lines.</li> </ul> <p>Info</p> <p>To edit a line, you need to click the Pick/Edit Lines button again, the line appears selected and then you can modify any of the editable fields.</p> <p>Info</p> <p>To delete a line, you need to unmark the line and then click Done.</p> <p>If there is not enough available stock for a product in a selected line, then it will be possible to define a Ship Quantity and select it. if there is at least one storage bin with overissue inventory status for the Return To Vendor Shipment's warehouse, in this case the new line will use it as storage bin and it will create a negative stock when the document is processed.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#accounting_2","title":"Accounting","text":"<p>The RTV shipment can be posted if the table \"MaterialMgmtShipmentInOut\" is active for accounting in the corresponding general ledger configuration.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-posting_3","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#landed-cost_1","title":"Landed Cost","text":"<p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Landed Cost</code></p> <p>Landed Cost window allows the user to allocate additional costs such as freight, insurance or duties to goods receipt(s), therefore the cost of the products included in the receipt(s) is adjusted as applicable.</p> <p>All those costs are needed to place the product in the organization's warehouse.</p> <p>Every time that a landed cost is booked for a product receipt valued at \"Average\" cost, a landed cost adjustment is created.</p> <p>Landed costs distributed and allocated to products valued at \"Average\" cost imply a change in the inventory value of the product. In other words, the calculated cost (\"Total Cost\") of the product receipt will need to be adjusted the same as the \"Average\" cost of the product.</p> <p>Info</p> <p>Note that the \"Unit Cost\" of the receipt transaction will not change as this type of adjustment is not a unit cost adjustment type but an \"extra\" cost.</p> <p>All of the above will have an accounting impact, therefore product inventory value can be the same as product accounting value.</p> <p>On the other hand, if a landed cost is booked for a product receipt valued at \"Standard\" cost, no cost adjustment will be created but a \"Variance\" between the \"standard\" cost defined for the product and its \"actual\" cost. This variance will need to be posted to a \"Landed Cost Variance\" account, so it can be later on analysed.</p> <p>Landed cost window allows both:</p> <ul> <li>either to book \"estimated\" landed cost that can be later on matched against \"actual\" landed cost by landed cost type,</li> <li>or directly book \"actual\" landed cost by landed cost type.</li> </ul> <p>Landed cost window also allows to post landed costs once processed.</p> <p>\"Estimated\" Landed Cost scenario:</p> <ul> <li>A purchase order is booked and after that the corresponding goods receipt and purchase invoice.   The \"average\" cost of the products included in the receipt is calculated at this point.</li> <li>After that \"estimated\" landed costs (i.e freight costs) are allocated to the goods receipt and booked in the landed cost window.   The cost of the products included in the receipt is then adjusted the same as products asset accounting.</li> <li>After that, a purchase invoice including the actual amount of freight cost is booked and posted to the ledger.</li> <li>Then, it is possible to match \"estimated\" landed cost against \"invoiced\" landed cost.   The cost of the products included in the receipt is adjusted once more if there are differences between estimated and actual landed cost amounts.</li> </ul> <p>\"Actual\" Landed Cost scenario:</p> <ul> <li>A purchase order is booked and after that, the corresponding goods receipt and purchase invoice.   The \"average\" cost of the products included in the receipt is calculated at this point.</li> <li>After that, a landed cost document is created to record actual landed cost to the goods receipt.   The cost of the products included in the receipt is then adjusted the same as products asset accounting.</li> </ul> <p>In Summary, landed cost feature follows below detailed steps:</p> <ul> <li>Landed Cost Process:</li> <li>A landed cost document is created including as many different landed cost types and amounts as required.</li> <li>This landed cost document can be related to a single goods receipt, to several goods receipts or to specific goods receipts lines.</li> <li>This landed cost document can record \"actual\" landed cost in case of selecting the corresponding invoice, therefore the landed cost process and matching is done in one step.</li> <li>Landed cost is processed.<ul> <li>This action creates a landed cost adjustment linked to the landed cost document.   This cost adjustment has as many adjustment lines as products included in the goods receipt(s) selected, therefore the cost of those products is adjusted as applicable.</li> </ul> </li> <li>Landed Cost Post:</li> <li>Once a landed cost document is processed it can be posted to the ledger, therefore product(s) asset accounting is adjusted as well.</li> <li>Landed Cost Matching:</li> <li>Landed cost invoice is booked and posted to the ledger later on.</li> <li>After that the \"estimated\" landed cost booked in the landed cost document can be matched against actual landed costs by landed cost type in the landed cost invoice.</li> <li>Landed cost matching can generate an additional cost adjustment for the product(s) if estimated landed cost amounts were not the same as actual landed cost amounts.</li> <li>Landed Cost Matching Post:</li> <li>Once landed cost(s) are matched can be posted therefore:<ul> <li>product(s) asset accounting is adjusted once more if applicable,</li> <li>and landed cost posting gets landed cost invoice accounting dimensions.</li> </ul> </li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#header_7","title":"Header","text":"<p>A Landed Cost document can be created, processed and posted in this window.</p> <p></p> <p>Some fields to note are:</p> <ul> <li>Organization: that is the organization or legal entity for which landed cost needs to be booked.</li> <li>Reference date: that is the date when the landed cost document is being created.</li> </ul> <p>Cost</p> <p>A Landed Cost Document can have as many cost (lines) as landed cost types to allocate to the Goods Receipt(s) selected.</p> <p></p> <p>Some fields to note are:</p> <ul> <li>Landed Cost Type: that is the landed cost type that is going to be allocated to the receipt(s) or receipt line(s) selected in Receipt tab.</li> <li>Invoice line: that is to select the corresponding landed cost invoice line if already booked that matches the landed cost type being entered.   If an invoice line is selected,the invoice line amount gets populated in the next field \"Amount\".</li> <li>Amount: that is the landed cost type amount. This amount can be \"estimated\" or \"actual\" in case of selecting an invoice line.</li> <li>Currency: that is the currency of the landed cost type.</li> <li>It is important to remark that a landed cost document can include as many landed cost types as required in the currency required.     For instance, a landed cost document can include two landed cost type lines one in USD and the other one in EUR.     In this scenario, a landed cost adjustment will be created including two lines. Cost adjustment amounts will be calculated in the currency configured for the legal entity product transaction belongs to.</li> <li>Landed Cost Distribution Algorithm: there is one algorithm available distributed by Etendo that is \"Distribution by Amount\".   This algorithm distributes landed cost type amount proportionally by receipt line(s) amount among the receipt(s) selected.</li> </ul> <p>Once a receipt(s) has been selected in Receipt tab, landed cost document (header) can be processed by using the process button \"Process\".</p> <p>This action creates a landed cost adjustment linked to the landed cost document.</p> <p>This cost adjustment has as many adjustment lines as products included in the goods receipt(s) selected, therefore the cost of those products is adjusted as applicable.</p> <p>Once processed, a landed cost document can be:</p> <ul> <li>\"Reactivated\", this action voids the landed cost adjustment linked to the landed cost document.</li> <li>or \"Post\", therefore product asset accounting is also adjusted accordingly.</li> </ul> <p>Landed Cost posting creates the following accounting entries in case of a \"Product\" landed cost type:</p> Account Debit Credit Product Asset \"Estimated\" Landed Cost Amount.(*)This ledger entry gets goods receipt \"accounting dimensions\" such as \"Vendor\" or \"Product\". See \"Detail\" link. Product Expense \"Estimated\" Landed Cost Amount <p>Landed Cost posting creates the following accounting entries in case of an \"Account\" landed cost type:</p> Account Debit Credit [Product Asset] \"Estimated\" Landed Cost Amount.(*)This ledger entry gets goods receipt \"accounting dimensions\" such as \"Vendor\" or \"Product\". See \"Detail\" link. [G/L Item] \"Estimated\" Landed Cost Amount","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#process-matching","title":"Process Matching","text":"<p>Matching between an \"estimated\" landed cost and an \"invoiced\" landed cost can be processed in:</p> <p>1. The GOODS RECEIPT window before processing and by using the process button \"Complete\"</p> <p>This scenario takes place whenever all landed cost related information below is available and entered in the Landed Cost tab of the Goods Receipt :</p> <ul> <li>landed cost types</li> <li>landed cost amounts</li> <li>related landed cost invoice lines</li> </ul> <p>This scenario automatically creates:</p> <ul> <li>a landed cost document in the landed cost window related to the goods receipt that contains all the information entered in the \"Landed Cost\" tab of the Goods Receipt.   This landed cost document is already processed and matched, therefore only actions missing are to post the landed cost document (header) and to post the landed cost matching.</li> <li>a landed cost adjustment that adjusts the cost of each product included in the Goods Receipt.</li> </ul> <p>2. The Landed Cost PURCHASE INVOICE window, by using the process button Match LC Cost which can be found in each landed cost purchase invoice line. After that \"Process Matching\" check-box is selected.</p> <p>This scenario takes place whenever:</p> <ul> <li>all landed cost related data but landed cost invoice line information was entered in the Landed Cost tab of Goods Receipt window.</li> <li>all landed cost related data but landed cost invoice line information was entered in the Cost tab of Landed Cost window.</li> </ul> <p>This scenario automatically creates:</p> <ul> <li>a new landed cost adjustment that adjust once more the cost of each product included in the Goods Receipt if:</li> <li>the landed cost type amount booked is not the same as the one invoiced</li> <li>and the check-box \"Is matching adjusted\" is selected.</li> <li>only action missing is to post the landed cost matching.</li> </ul> <p>3. The LANDED COST window, by using the process button \"Process Matching\"</p> <p>This scenario takes place whenever the matching has been executed in the landed cost purchase invoice, see scenario 2 above, but the check-box \"Process Matching\" was not selected there.</p> <p>This scenario automatically creates:</p> <ul> <li>a new landed cost adjustment that adjusts once more the cost of each product included in the Goods Receipt if the landed cost type amount booked is not the same as the one invoiced and the check-box \"Is matching adjusted\" is selected.</li> <li>only action missing is to post the landed cost matching.</li> </ul> <p>4. The LANDED COST window, by using the process button \"Process\".</p> <p>This scenario takes place whenever all landed cost related information is entered in the landed cost window.:</p> <ul> <li>landed cost types</li> <li>landed cost amounts</li> <li>related landed cost invoice lines</li> <li>and goods receipt(s)</li> </ul> <p>This scenario automatically creates:</p> <ul> <li>a landed cost adjustment that adjust the cost of each product included in the Goods Receipt(s).</li> <li>only actions missing are to post the landed cost document (header) and to post the landed cost matching.</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#post-matching","title":"Post Matching","text":"<p>A landed cost matching can be posted, after being processed. This posting will have different ledger entries depending on the scenarios listed below:</p> <p>1. \"Estimated\" landed cost equal to \"invoiced\" landed cost</p> <ul> <li>In the case of a \"product\" landed cost type</li> </ul> Account Debit Credit [Product Expense] \"Estimated\"=\"Invoiced\" Landed Cost Amount [Product Expense] \"Estimated\"=\"Invoiced\" Landed Cost Amount(*)This ledger entry gets landed cost invoice \"accounting dimensions\" such as \"Business Partner\". See \"Detail\" link. <ul> <li>In the case of an \"account\" landed cost type</li> </ul> Account Debit Credit [G/L Item] \"Estimated\"=\"Invoiced\" Landed Cost Amount [G/L Item] \"Estimated\"=\"Invoiced\" Landed Cost Amount(*)This ledger entry gets landed cost invoice \"accounting dimensions\" such as \"Business Partner\". See \"Detail\" link. <p>The purpose of above ledger entries is to get that landed cost expense accounting gets invoice landed cost \"accounting dimensions\".</p> <p>2. \"Estimated\" landed cost not equal to \"invoiced\" landed cost &amp; \"Is matching adjusted\" = No.</p> <p>This last setup (\"Is matching adjusted\" = No) leads to NOT creating a landed cost adjustment which takes the difference to the product cost (product accounting), therefore that difference remains either in the credit side (estimated&gt;invoiced) or in the debit side (estimated&lt;invoiced) of the product expense account.</p> <ul> <li>In the case of a \"product\" landed cost type</li> </ul> Account Debit Credit [Product Expense] \"Invoiced\" Landed Cost Amount [Product Expense] \"Invoiced\" Landed Cost Amount(*)This ledger entry gets landed cost invoice \"accounting dimensions\" such as \"Business Partner\". See \"Detail\" link. <ul> <li>In the case of an \"account\" landed cost type</li> </ul> Account Debit Credit [G/L Item] \"Invoiced\" Landed Cost Amount [G/L Item] \"Invoiced\" Landed Cost Amount(*)This ledger entry gets landed cost invoice \"accounting dimensions\" such as \"Business Partner\". See \"Detail\" link. <p>3. \"Estimated\" landed cost higher than \"invoiced\" landed cost. \"Is matching adjusted\" = Yes</p> <p>This last setup (\"Is matching adjusted\" = Yes) leads to creating a landed cost adjustment which takes the difference to the product cost (credit side of product accounting).</p> <ul> <li>In the case of a \"product\" landed cost type</li> </ul> Account Debit Credit [Product Expense] \"Estimated\" Landed Cost Amount [Product Expense] \"Invoiced\" Landed Cost Amount(*)This ledger entry gets landed cost invoice \"accounting dimensions\" such as \"Business Partner\". See \"Detail\" link. [Product Asset] Difference (estimated&gt;invoiced) Landed Cost Amount <ul> <li>In the case of an \"account\" landed cost type</li> </ul> Account Debit Credit [G/L Item] \"Estimated\" Landed Cost Amount [G/L Item] \"Invoiced\" Landed Cost Amount(*)This ledger entry gets landed cost invoice \"accounting dimensions\" such as \"Business Partner\". See \"Detail\" link. [Product Asset] Difference (estimated&gt;invoiced) Landed Cost Amount <p>4. \"Estimated\" landed cost smaller than \"invoiced\" landed cost. \"Is matching adjusted\" = Yes</p> <p>This last setup (\"Is matching adjusted\" = Yes) leads to creating a landed cost adjustment which takes the difference to the product cost (debit side of product accounting).</p> <ul> <li>In the case of a \"product\" landed cost type</li> </ul> Account Debit Credit [Product Asset] Difference (estimated&lt;invoiced) Landed Cost Amount [Product Expense] Difference (estimated&lt;invoiced) Landed Cost Amount [Product Expense] \"Invoiced\" Landed Cost Amount(*)This ledger entry gets landed cost invoice \"accounting dimensions\" such as \"Business Partner\". See \"Detail\" link. <ul> <li>In the case of an \"account\" landed cost type.</li> </ul> Account Debit Credit [Product Asset] Difference (estimated&lt;invoiced) Landed Cost Amount [G/L Item] Difference (estimated&lt;invoiced) Landed Cost Amount [G/L Item] \"Invoiced\" Landed Cost Amount(*)This ledger entry gets landed cost invoice \"accounting dimensions\" such as \"Business Partner\". See \"Detail\" link.","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#cancel-matching","title":"Cancel Matching","text":"<p>A landed cost matched can be canceled by using header process button \"Cancel Matching\". Before that landed cost matching needs to be \"Unpost\".</p> <p>Cancel matching action implies that:</p> <ul> <li>Current matched amounts are not removed from Matched Amount tab.</li> <li>A new matching needs to be executed in the corresponding landed cost purchase invoice(s).</li> <li>Correct matching amounts will then be updated in Matched Amount tab.</li> </ul>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#matched-amount","title":"Matched Amount","text":"<p>Matched Amount tab is a read only tab that allows to review the purchase invoice lines matched against landed cost lines.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#accounting-cost","title":"Accounting Cost","text":"<p>This tab provides Landed Cost document accounting information.</p> <p>As any other accounting tabs, this tab shows the ledger journal entries of landed cost posting.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#receipt","title":"Receipt","text":"<p>Receipt tab allows the user to select either the receipt(s) or receipt line(s) to which landed cost types booked are going to be allocated.</p> <p>Once Landed Cost header has been properly filled in and saved, a receipt(s) line can be registered in this tab.</p> <p>Landed cost amounts entered in the \"Cost\" tab can then be allocated/distributed among the receipt(s) entered here.</p> <p>Some relevant fields to note are:</p> <ul> <li>Good Receipt: that is to select a goods receipt, therefore landed cost amounts will be distributed among all the lines of the goods receipt.</li> <li>Good Receipt Line: that is to select a specific good receipt line.</li> </ul> <p>Note that either a good receipt or a good receipt line needs to be selected in a record.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#receipt-line-amount","title":"Receipt Line Amount","text":"<p>Receipt Line Amount is a read only tab that shows detailed information about the landed cost type line allocated to each receipt line, as well as the landed cost amount distributed to each receipt line.</p> <p>It is important to remark that the \"Amount\" distributed is calculated by taking into account \"Costing\" precision defined for the Currency.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#accounting_3","title":"Accounting","text":"<p>This tab provides Landed Cost Matching accounting information.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/procurement-management/transactions/#bulk-posting_4","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button. In this case, this functionality can be used in the Landed Cost window and in the Cost tab.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p> <p>This work is a derivative of \"Procurement Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Procurement Process","Purchase Requisitions","Goods Receipts","Purchase Orders"]},{"location":"user-guide/etendo-classic/basic-features/production-management/getting-started/","title":"Production Management - Getting Started","text":"","tags":["getting started","production management","process plan","work requirement","work effort"]},{"location":"user-guide/etendo-classic/basic-features/production-management/getting-started/#production-management-getting-started","title":"Production Management - Getting Started","text":"","tags":["getting started","production management","process plan","work requirement","work effort"]},{"location":"user-guide/etendo-classic/basic-features/production-management/getting-started/#overview","title":"Overview","text":"<p>The Production Management module allows managing the standard productive process: production plan, work requirement, end products report and its direct and indirect costs. It is also possible to manage quality control and machine maintenance in production.</p> <p>The main documents to manage the production process are:</p> <ul> <li>Process Plan</li> <li>Work Requirement</li> <li>Work Effort</li> </ul> <p>Tip</p> <p>It is important to be clear about these concepts and windows before reading on. </p> <p></p>","tags":["getting started","production management","process plan","work requirement","work effort"]},{"location":"user-guide/etendo-classic/basic-features/production-management/getting-started/#initial-configuration","title":"Initial Configuration","text":"<p>Apart from the setup windows in the Production module, additional setups are required.</p> <ol> <li> <p>For Production, there are different products that are set up:</p> <ul> <li> <p>Raw material used in production:</p> <ul> <li>The production checkbox is selected to indicate that the product is used for production.</li> <li>The process plan is selected.</li> <li>The default storage bin used to store the raw materials used (P-),  is defined in the manufacturing tab.</li> </ul> </li> <li> <p>Any semi finished products are created directly in the process plan by copying the information of a raw material product used in the operation using the Create Product Copy button. Once created, the default storage bin is defined in the manufacturing tab.</p> </li> <li> <p>Finished products manufactured in production:</p> <ul> <li>The production checkbox is selected to indicate the product is manufactured in production.</li> <li>The process plan is selected.</li> <li>The default storage bin that is used for the finished products (P+),  is defined in the manufacturing tab.</li> <li>Based on cost calculations, a theoretical standard cost can be determined for the finished product.</li> <li>A safety stock level is determined and entered for the product.</li> </ul> </li> </ul> <p>Info</p> <p>For more information about the configuration of products, please refer to the Product section.</p> </li> <li> <p>Also, Business Partners are configured for production:</p> <ul> <li>In the Employee tab, any employees that are involved in the production process have the operator checkbox selected.</li> <li>The Salary category configured for employees is very important since they are included in the final cost calculations.</li> </ul> <p>Info</p> <p>For more information about the configuration of business partners, please refer to the Business Partner section.</p> </li> <li> <p>Work Efforts can be posted to the General Ledger Journal. In order to facilitate the posting, the MaterialMgmtProductionTransaction table is activated in the Active Tables tab of the General Ledger configuration.</p> </li> </ol>","tags":["getting started","production management","process plan","work requirement","work effort"]},{"location":"user-guide/etendo-classic/basic-features/production-management/getting-started/#execution","title":"Execution","text":"<ol> <li> <p>Sales staff enters Sales Order for the product with the quantity required and the date by when it needs to be delivered. If the product is not in stock, it needs to be produced. Also, if the stock level is below the safety stock level, products have to be produced.</p> <p>The information about the demand from sales orders and safety stock is handled in 2 ways:</p> <ul> <li>Automatically in Material Requirement Planning (MRP).</li> <li>Manually by a production manager.</li> </ul> </li> <li> <p>Ideally, the information is handled by MRP. If not, a production manager reviews if production of the product is required by reviewing the total demand:</p> <ul> <li>The outstanding sales orders</li> <li>The safety stock level</li> </ul> <p>and compare it with the total supply:</p> <ul> <li>The stock level.</li> <li>Scheduled Work Requirements.</li> </ul> </li> <li> <p>If the demand is higher than the supply, or the dates of scheduled Work Requirements are not matching the dates of the outstanding sales orders, the product needs to be produced and a production manager executes:</p> <ul> <li>Review of the stock of the raw material. If needed, the raw material will be requested and used in the Procurement Management process.</li> <li>Entry of the Work Requirement for the required quantity with the required quantity and the planned date.</li> <li>Generate Work Efforts from the Work Requirement.</li> </ul> </li> <li> <p>The staff responsible for executing the production can see on the Production Run Status Report what production has to be executed.</p> </li> <li> <p>At the end of each shift, the production managers enter the information of what is produced in the Production Run windows.</p> </li> </ol>","tags":["getting started","production management","process plan","work requirement","work effort"]},{"location":"user-guide/etendo-classic/basic-features/production-management/getting-started/#relationship-with-other-areas","title":"Relationship with other areas","text":"<p>Production Management interacts with the following modules:</p> <ul> <li>Procurement Management: raw material required for use in production is bought using the Procure to Pay process.</li> <li>Sales Management: demand for the products that are produced are generated through the Order to Cash process.</li> <li>Warehouse Management:<ul> <li>Raw material is taken from the warehouse to be used in production</li> <li>End products that come out of production are put into stock</li> </ul> </li> <li>Material Requirement Planning: Work Requirements can be a result of MRP</li> <li>Financial Management: Cost related to Production is calculated for finance.</li> </ul> <ul> <li> <p>This work is a derivative of \"Production Management\" by Openbravo S.L.U, licensed under CC BY-SA 2.5 ES.</p> </li> <li> <p>This work is licensed under   CC BY-SA 2.5 ES by Futit Services S.L..</p> </li> </ul>","tags":["getting started","production management","process plan","work requirement","work effort"]},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/","title":"Production Management Setup","text":""},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview","title":"Overview","text":"<p>This section describes the screens that are necessary to set up the components used in the production process in Etendo. The corresponding windows are:</p> <p> Section </p> <p> Work Center </p> <p> Process Plan </p> <p> Activity </p> <p> Toolset </p> <p> Machine Category </p> <p> Machine </p> <p> Manufacturing Cost Center </p> <p> Indirect Cost </p> <p> Periodic Quality Control </p> <p> Quality Control Point </p> <p> Work Incidence </p> <p> Maintenance Task </p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#section","title":"Section","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Section</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_1","title":"Overview","text":"<p>In this window, the user can edit the production area by dividing them into multiple sections.</p> <p>A manufacturing area can be split up in different sections in order to identify where the physical location is where a certain activity will take place. For instance, the Main Floor.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#section_1","title":"Section","text":"<p>Here, the user can create a production plant section to assign work centers to it.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#work-center","title":"Work Center","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Work Center</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_2","title":"Overview","text":"<p>In this window, the user can create and add machines to be used in a work center.</p> <p>The work center is a logical grouping of machines, processes or tool sets in a certain section of the production area.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#work-center_1","title":"Work Center","text":"<p>Here, the user can create work centers.</p> <p></p> <ul> <li>Section: to indicate where the work center is situated.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#machine-station","title":"Machine Station","text":"<p>In this tab, the user can add machines to be used in a selected work center.</p> <p>Here, all machines that are related to the work center are entered.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#activity","title":"Activity","text":"<p>In this tab, the user can view the activity related to a selected work center.</p> <p>Here, all activities that are referencing the work center are populated automatically.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#toolset","title":"Toolset","text":"<p>Here, the user can view the toolsets of a selected process.</p> <p>With the population of the activity information in the activity tab, all toolsets related to these activities are populated in this tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#process-plan","title":"Process Plan","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Process Plan</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_3","title":"Overview","text":"<p>Define the steps and processes to be completed for an intermediate or finished good, taking into account available resources.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#process-plan_1","title":"Process Plan","text":"<p>In this window, the user can create production process models.</p> <p>A key document in production management is the Process Plan. Each product that is produced has a process plan to define the exact operations and the input and output for each operation. Based on the effective use of raw material and machines a batch size (conversion rate) is used for the production of each product.</p> <p></p> <ul> <li>Organization: organization of the process plan</li> <li>Search Key: abbreviation or full name used to easily filter the record</li> <li>Name: name of the process plan</li> <li>Description: note field</li> <li>Process Unit: the outcome of the production process</li> <li>Conversion rate: batch size of the produced product</li> <li>Include Phases when inserting checkbox: when the checkbox is selected: in the Work Requirement, when the information from the process plan is copied, the operations and the products are included</li> <li>Copy version button: to copy the content of another version of the same process plan</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#version","title":"Version","text":"<p>In this tab, the user can create process plans valid for a specified time period.</p> <p>Changes may be needed for a process plan. To make sure the history of all changes is kept, different versions of the process plan are created. The copy version button is used to duplicate existing versions of the same process plan for re-use. The copied version is updated with the required changes.</p> <p></p> <p>Each version has a starting date and an ending date.</p> <p>The estimated time field is populated with the value of the accumulation of the estimated time of all the operations in the process plan. The information is updated by the application each time an estimated time is entered and saved on an operation.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#operation","title":"Operation","text":"<p>In this tab, the user can add processes to be performed for a specified process plan.</p> <p>Each stage of the production process is defined as an operation.</p> <p></p> <p>Name: name of the operation</p> <p>Activity: activity that is executed during the operation</p> <p>Estimated Time: information entered by the user to indicate what the estimated time in hours is to execute the operation.</p> <p>Cost Center Use Time: estimation of how long the cost center will be used during the operation</p> <p>Preparation Time: time indication of any preparations needed for the operations</p> <p>Description: note field</p> <p>Multiplier: indication of how many times the operation has to be executed in one production run</p> <p>Empty cells are zero checkbox: selection has the result that when the Work Requirement inserts the process plan information, the quantities on the products are left zero, so they can be entered manually.</p> <p>Global use checkbox: when selected, the application populates the product in the global use tab of the Work Effort when the create standards process is executed. When the work effort is validated, the application divides the entries in the global use tab between all production runs that use this product. It is inserted as an additional P- in order to be included in costs calculations.</p> <p>Outsourced checkbox: indication of the operation being executed by a third party</p> <p>Create Standards checkbox: the process plan is used to automatically generate information about operations and products in a work requirement. From the work requirement, work efforts can be created to document the work executed in production. In order to know what products were involved in the work effort, the create standards process is executed on the work effort. When the Create Standards checkbox is selected, at the moment that work efforts are created from the work requirement, also the create standard process is executed. By default, the checkbox is not selected.</p> <p>Info</p> <p>The Create Standards process is only completed successfully if there is sufficient stock for the used products (P-) of the operation. The stock has to be in a warehouse that is related to the organization of the Work Requirement.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#io-products","title":"I/O Products","text":"<p>In this tab, the user can define input and output products taking part in a specified process.</p> <p>For each operation, the products that are used (P-) and the products that are produced (P+) are defined.</p> <p>The fields that are displayed depend on the selected Product Type.</p> <p></p> <p>Product: product used in the operation. Only products that have the production checkbox selected in the product screen, appear in the list of products</p> <p>Product Type: indication of whether the product is used (P-) or produced (P+) during the operation</p> <p>Quantity: quantity of the product</p> <p>UOM: unit of measure of the product</p> <p>Unique attribute set consumption checkbox: field that only appears for product used (P-). When selected, the application will select stock with the same attribute only. For example, if the product has different lot numbers, all stock that is used during the operations will be taken from the same lot</p> <p>Component Cost: field that only appears on produced (P+) components. The input is a factor used to distribute the cost when an Operation has more than one P+ product. Example:</p> <p>An operation consumes 10 (P-) A and produces 5 (P+) B and 10 (P+) C.</p> <p>The cost process calculates a total cost of 15USD for the operation (including cost center related costs). That cost has to be distributed between P+ B and P+ C. If both B and C have a Component Cost of 1 the cost will be equally distributed between B and C. Resulting in a cost of 7.5USD/5 = 1.5USD/unit of B and 7.5USD/10 = 0.75$/unit of C.</p> <p>If B has a Component Cost of 1 and C of 2, the cost assigned to C has to be twice the cost of B. 5USD are assigned to B and 10USD to C resulting in a cost of 5USD/5 = 1USD/unit of B and 10USD/10 = 1USD/unit of C.</p> <p>The way to calculate the particular factor of any P+ is to divide the component cost of the particular P+ by the sum of the Component Costs (CC) of all the P+ products.</p> <p>Decrease: information only field</p> <p>Rejected: information only field</p> <p>Division group quantity: field that only appears on produced (P+) components. The value entered is the quantity that is produced with the same attribute value. For example if the attribute is lot number or serial number, the number entered in this field indicates how many products will get the same lot number or serial number during production. During production, the following attributes are automatically assigned to products in production:</p> <ul> <li>expiration date</li> <li>serial number</li> <li>lot number</li> </ul> <p>Create Product copy button: as indicated in the product configuration, semi finished products can be created by copying the product that is used to produce this particular semi finished product. This functionality can also be used to create other raw material products, in which case the selected Production Type is product used (P-). When copying the information, the search key and name are suggested in the format [original product][operation name][operation line number], but can be overwritten with a different value. Any attributes related to the original product can be copied also.</p> <p>Info</p> <p>Any changes to the automatically created product, such as unit of measure or cost type, can be updated in the Product screen.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#copy-from-attribute","title":"Copy From Attribute","text":"<p>In this tab, the user can define the relation between attributes to be copied.</p> <p>The Copy From Attribute tab is used for products of the production type P+. The tab is used to enter the different attributes to be inherited from different P-'s, that are used to produce the P+. This means that only P-'s used in this operation can be selected to be copied from. In the case that the P+ is created by copying a product, if the attributes were copied during the creation, the system populates the information in this tab:</p> <p></p> <ul> <li>Is special attribute checkbox: used for special attributes, which are lot, serial number and expiration date. When not selected, a regular attribute is selected to be copied.</li> </ul> <p>Info</p> <p>When attributes are copied over to a different product, the product that the attribute is copied to has to be configured with that attribute also.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#employee","title":"Employee","text":"<p>In this tab, the user can define the employees that can perform a specified process.</p> <p>The process to generate standard cost (theoretical) populates the cost information in the Employee, Machine and Indirect Cost tabs. For details, please refer to the Calculate Standard Costs section. The information is needed for the theoretical cost calculation of the P+.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#machine","title":"Machine","text":"<p>In this tab, the user can define machines that are used for a specific process. In the example, there is no machine defined.</p> <p>The process to generate standard cost (theoretical) populates the cost information in the Employee, Machine and Indirect Cost tabs. For details, please refer to the Calculate Standard Costs section. The information is needed for the theoretical cost calculation of the P+.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#indirect-cost","title":"Indirect Cost","text":"<p>In this tab, the user can define indirect costs related to a specified process.</p> <p>The process to generate standard cost (theoretical) populates the cost information in the Employee, Machine and Indirect Cost tabs. For details, please refer to the Calculate Standard Costs section. The information is needed for the theoretical cost calculation of the P+.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#activity_1","title":"Activity","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Activity</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_4","title":"Overview","text":"<p>In this window, the user can define activities (processes) to be performed as part of a process plan and their characteristics.</p> <p>An activity is a certain work that is executed during the production process. For example in the clothing industry, examples of activities for the production of shirts could be cutting of fabrics, dying of fabrics, sewing of the shirts.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#activity_2","title":"Activity","text":"<p>The user can create activities to be used in the production process.</p> <p>Each operation in the production process has one or more activities associated with it. Each activity can be associated with a Cost Center and a Work Center.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#toolset_1","title":"Toolset","text":"<p>In this tab, the user can add toolsets to be used for completion of a specified process.</p> <p></p> <ul> <li>Utilization Coefficient: the number of times the tool is used during the activity.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#toolset_2","title":"Toolset","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Toolset</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_5","title":"Overview","text":"<p>In this tab, the user can define tools and groups of tools to be used in the production process.</p> <p>Apart from machines that are used for production, there are also tools that are used and need to be set up. All tools that are used in production are included in the activity setup.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#toolset-type","title":"Toolset Type","text":"<p>Here, the user can create toolset types to group toolsets with similar characteristics.</p> <p></p> <ul> <li>Lifespan: number of years that the tool can be used</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#toolset_3","title":"Toolset","text":"<p>Here, the user can define structural trees to be used in the application.</p> <p></p> <ul> <li>Storage bin: warehouse location where the tool is stored</li> <li>Discarded checkbox: indication that the tool is no longer used. The field is entered manually and does not generate any transaction in the application.</li> <li>Utilization: when activities are entered, the associated toolsets are entered. This results in an automatic count of how many times the tools are used in production, based on validated work efforts.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#machine-category","title":"Machine Category","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Machine Category</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_6","title":"Overview","text":"<p>In this window, the user can create machine categories based on desired characteristics.</p> <p>A logical grouping of machines that can be used to categorize the different machines that are used during a production process.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#machine-category_1","title":"Machine Category","text":"<p>Here, the user can define machine categories to group machines with similar characteristics.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#maintenance","title":"Maintenance","text":"<p>Here, the user can define maintenance categories needed for a specified machine category.</p> <p>Once the maintenance task(s) is set up, it can be added to the machine category. By selecting the Insert in Machines checkbox, the maintenance plans are populated for all the machines that are related to the machine category when the Insert Maintenances process is executed. When the checkbox is not selected, a single maintenance plan for the machine category is created.</p> <p>Info</p> <p>By selecting the checkbox, the maintenance plans for the machines are created, but the maintenance information is not added to the maintenance tab of each machine. That tab is used to document any maintenance that is not related to the machine category, but only to that particular machine.</p> <p></p> <ul> <li>Maintenance Type: to indicate the nature of the maintenance:<ul> <li>preventive</li> <li>corrective</li> <li>corrective(urgent)</li> </ul> </li> <li>planned time: to indicate how long it takes to execute the maintenance task.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#periodicity","title":"Periodicity","text":"<p>The user can add interval timings to schedule and complete a specified maintenance.</p> <p>This tab is to define with which frequency and during which shift the maintenance is scheduled to take place:</p> <p></p> <p>Periodicity Type:</p> <ul> <li>Daily</li> <li>Bi-monthly: the Starting Day field appears to define when the first maintenance is scheduled</li> <li>Half-yearly: the Starting Day field appears to define when the first maintenance is scheduled</li> <li>Monthly: the Day of the Month field appears to define which day of the month the maintenance is scheduled</li> <li>Quarterly: the Starting Day field appears to define when the first maintenance is scheduled</li> <li>Weekly: the Weekday field appears to define which day of the week the maintenance is schedule</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#machine_1","title":"Machine","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Machine</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_7","title":"Overview","text":"<p>In this window, the user can create machines to be used in production.</p> <p>In this screen, all the different machines used in production are set up.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#machine_2","title":"Machine","text":"<p>Here, the user can add machines to be used in production processes.</p> <p></p> <ul> <li>Machine Category: which grouping of machines this particular machine belongs to</li> <li>Purchase Year: the date of purchase of the machine</li> <li>Lifespan: the estimated time that the machine can be used for the production process</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#cost","title":"Cost","text":"<p>In this tab, the user can set the full cost of a related machine.</p> <p>In the Cost tab, all cost and amortization information is entered:</p> <p></p> <ul> <li>Valid from Date: start date for the amortization</li> <li>Purchase Amount: the amount that is paid for the machine</li> <li>Cost: cost per UOM automatically populated after the above information about the machine is filled out, based on the calculation: Value/Year / UOM Annual Cost.</li> <li>Cost UOM: indication of how the cost should be calculated, per hour, per produced units, etc.</li> <li>Toolset Amount: extra amount for the machine, for example for components</li> <li>Amortization: number of years in which the amortization for the machine will take place</li> <li>Value/Year: amortization amount per year, based on the calculation: (Purchase Amount + Toolset Amount) / Amortization. The value is populated when the amount of year of amortization is entered.</li> <li>Work Days/Year: amount of days per year that the machine is used</li> <li>Work Hours/Day: number of hours per day that the machine is used</li> <li>Idle Time/Year: number of hours that the machine is not working in a year, for example because it is in maintenance.</li> <li>UOM Annual Cost: Populated field based on the calculation: (Work Days/Year x Work Hours/Day) - Idle Time/Year.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#maintenance_1","title":"Maintenance","text":"<p>In this tab, the user can define maintenance types needed for a specific machine.</p> <p>Any maintenance information required for the machine is entered in this tab.</p> <p></p> <ul> <li>Maintenance Type: to indicate the nature of the maintenance:<ul> <li>preventive</li> <li>corrective</li> <li>corrective (urgent)</li> </ul> </li> <li>Planned time: to indicate how long it takes to execute the maintenance task.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#periodicity_1","title":"Periodicity","text":"<p>In this tab, the user can add timing intervals to schedule and complete a specified maintenance.</p> <p>This tab is to define with which frequency and during which shift the maintenance is scheduled to take place:</p> <p></p> <ul> <li> <p>Periodicity Type:  </p> <ul> <li>Daily</li> <li>Bi-monthly: the Starting Day field appears to define when the first maintenance is scheduled</li> <li>Half-yearly: the Starting Day field appears to define when the first maintenance is scheduled</li> <li>Monthly: the Day of the Month field appears to define which day of the month the maintenance is scheduled</li> <li>Quarterly: the Starting Day field appears to define when the first maintenance is scheduled</li> <li>Weekly: the Weekday field appears to define which day of the week the maintenance is scheduled</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#manufacturing-cost-center","title":"Manufacturing Cost Center","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Manufacturing Cost Center</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_8","title":"Overview","text":"<p>The user can create and edit cost centers related to production to sum up charges associated with a specific transaction.</p> <p>All operations in the production process consists of activities. These activities have a cost center defined and how much time of that cost center is used. Each cost center has the employees that are part of the cost center defined, as well as the machines used in the cost center and the indirect costs such as electricity, etc. Based on these components, a cost per hour related to the cost center can be defined. Based on the use of the cost center during production, a cost per produced unit is added to the total cost of the unit.</p> <p>In order to set up the cost center, the following information has to be set up first:</p> <ul> <li>Salary categories and related cost for the employees that are related to the cost center</li> <li>All machines that are related to the cost center</li> <li>All indirect cost components are defined</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#manufacturing-cost-center_1","title":"Manufacturing Cost Center","text":"<p>The user can create cost centers to be used in production processes.</p> <p>In the main tab of the form, the name of the cost center is defined:</p> <p></p> <ul> <li>Calculated checkbox: when selected, a different value from 0 will be populated in the Production Run tab of the Work Effort window, regarding the 'By Default' checkbox value. When not selected, use time of the cost center in the Production Run tab of the Work Effort window will be 0.</li> <li>By Default checkbox: when selected, upon calculating the production cost, the cost center use time defined in Work Requirement will be populated in the Production Run tab of the Work Effort window. When not selected, upon calculating the production cost, the start and end time of the work effort is taken into account to determine the use time of the cost center.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#version_1","title":"Version","text":"<p>In this tab, the user can create cost center versions to be used with specified time periods.</p> <p>For the cost center, there is version control, so historic data can be reviewed.</p> <p></p> <ul> <li>Cost: based on the cost of employees, machines and indirect cost, a cost for the cost center is entered.</li> <li>Cost UOM: unit of measure of the entered cost: per produced units, per Hour of production, per kg (of produced products), percentage (of the produced units)</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#employee_1","title":"Employee","text":"<p>In the Employee tab, the user can add employees to a specific cost center version.</p> <p>In this tab, the information about how many employees per hours of a certain salary category are assigned to the cost center is entered:</p> <p></p> <p>The information in this tab populates the default information in the Salary Category/Employee tab of the Work Effort.</p> <p>Info</p> <p>The split checkbox is used when there are multiple lines for employees. For example, if there are 5 lines for production workers with a quantity of 1, if the split checkbox is not selected the Work Effort will display one line for production worker with a quantity of 5. When the split checkbox is selected, five separate lines for production worker with quantity 1 per line is displayed in the Work Effort.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#machine_3","title":"Machine","text":"<p>In the Machine tab, the user can add resources to a specific cost center version.</p> <p>In this tab, all machines related to the cost center are entered with an indication of how many times the machines are used (Usage Coefficient) during the production process:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#indirect-cost_1","title":"Indirect Cost","text":"<p>Here, it is possible to add indirect costs to a specific cost center version.</p> <p>Any indirect cost for the cost center is entered in this tab:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#indirect-cost_2","title":"Indirect Cost","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Indirect Cost</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_9","title":"Overview","text":"<p>In this window, it is possible to create and edit indirect costs to be used in production.</p> <p>Indirect cost are cost related to produced products that are not directly related to a specific production run, but are included in the cost calculation of these produced products. Examples are electricity cost, cost of packaging material, marketing cost, etc.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#indirect-cost_3","title":"Indirect Cost","text":"<p>Here, the user can create a new indirect cost.</p> <p>In the main screen, the name of the indirect cost is entered:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#value","title":"Value","text":"<p>Here, the user can create and edit values for this indirect cost.</p> <p>In this tab, the indirect cost for a certain time frame is entered in the Total field. Since the cost UOM is per produced units, the cost is calculated when clicking the Calculate Indirect Cost button by dividing the total cost by the number of units on all work efforts in the defined time frame.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#periodic-quality-control","title":"Periodic Quality Control","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Periodic Quality Control</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_10","title":"Overview","text":"<p>In this window, it is possible to define checkpoints to be used for quality control of a produced product.</p> <p>The periodic Quality Control is set up to ensure the quality of the end product of the production process. For example, a check to see if the size is correct, the color is correct or if all specifications of the product are correct.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#periodic-quality-control_1","title":"Periodic Quality Control","text":"<p>Here, the user can create checkpoints to be used for quality control of produced products.</p> <p>Another example is to see if for a product the label is in the correct language:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#check-point","title":"Check Point","text":"<p>Here, the user can add quality tests to be taken for a specified checkpoint.</p> <p></p> <ul> <li>Waiting Period: time (in days) that the execution of the quality control will take.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#quality-control-point","title":"Quality Control Point","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Quality Control Point</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_11","title":"Overview","text":"<p>In this window, it is possible to define quality control check points to be used for testing the product quality at any point in the production process.</p> <p>Quality Control Point is a point or stage of manufacturing where it is essential to control (reduce or eliminate) a risk to avoid downtime.</p> <p>For example, checking the temperature of oil every three hours. It is possible to set the frequency and list required tasks and accountable personnel.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#check-point-set","title":"Check Point Set","text":"<p>Here, it is possible to create check point sets and define tests frequencies.</p> <p></p> <ul> <li>Frequency: the number of hours between checks.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#check-point_1","title":"Check Point","text":"<p>Here, it is possible to create check points for a related set.</p> <p></p> <ul> <li>Name: the name of the exact control that is defined.</li> <li>Number of Measurements: the number of times this concrete control has to be executed. For example the number of times temperature needs to be measured.</li> <li>Value: the type of value of the outcome of the check that is executed.</li> <li>Critical checkbox: information only field to indicate a check is critical.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#shift","title":"Shift","text":"<p>In this tab, the user can define shifts when the tests for a related group will be performed.</p> <p>The information in this tab is used for the automatic population of check point set information when the results are reported in the Quality Control Report. In the main section of the report, the shift is selected.</p> <p>Info</p> <p>The starting date in this set up is used for the automatic population of the time information of the Quality Control Report.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#work-incidence","title":"Work Incidence","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Work Incidence</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_12","title":"Overview","text":"<p>In this window, it is possible to define types of work incidences that may occur during production.</p> <p>Standard work incidences are set up for later reference in the work effort. A possible work incidence is that a machine component breaks and needs to be replaced or some other unplanned machine outage.</p> <p>Warning</p> <p>If machine maintenance is managed in an external system, go to the Internal Consumption window to keep the spare parts stock updated in Etendo, even when another software is used.  </p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#work-incidence_1","title":"Work Incidence","text":"<p>Here, the user can create work incidence types that may occur during production.</p> <p></p> <ul> <li>Work Incidence Downtime: the total work incidence downtime. This information is not taken into account for any cost calculation, so it is up to the user to decide the unit of measure of the field (seconds, minutes, hours, etc.)</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#maintenance-task","title":"Maintenance Task","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Maintenance Task</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#overview_13","title":"Overview","text":"<p>In this window, it is possible to define a scheduled maintenance task to be completed during the production process.</p> <p>Maintenance tasks can be created to be executed to the machines in Production.</p> <p>Warning</p> <p>If machine maintenance is managed in an external system, go to the Internal Consumption window to keep the spare parts stock updated in Etendo, even when another software is used.  </p> <p>The maintenance process is as following:</p> <ul> <li>The created maintenance tasks are added either to the machine category, with the possibility to apply that tasks to all machines belonging to that machine category, or directly to the machine.</li> <li>Run the insert maintenance process.</li> <li>Review the Maintenance Plan and select the confirmation checkbox for all maintenance tasks that need to be executed.</li> <li>If applicable, all consumptions of products used during the execution of the maintenance task is entered in the Internal Consumption screen.</li> <li>The execution of maintenance tasks is registered in the Maintenance Order screen. Once added in this screen, the maintenance task no longer appears on the Maintenance Plan.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/setup/#maintenance-task_1","title":"Maintenance Task","text":"<p>Here, the user can define general maintenance tasks to be used in production.</p> <p>All maintenance tasks that are scheduled for the machines in production are entered in this screen:</p> <p></p> <ul> <li> <p>This work is a derivative of \"Production Management\" by Openbravo S.L.U, licensed under CC BY-SA 2.5 ES.</p> </li> <li> <p>This work is licensed under   CC BY-SA 2.5 ES by Futit Services S.L..</p> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/","title":"Production Management","text":""},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#work-requirement","title":"Work Requirement","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Work Requirement</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview","title":"Overview","text":"<p>In this window, the user is able to create and manage an order for a Process Plan to be executed a certain number of times to satisfy the production requirements.</p> <p>Warning</p> <p>Important: Before creating a work requirement, it is necessary to have a Process Plan defined.</p> <p>A work requirement is a document indicating what has to be produced and by what date. The work requirement is created based on a process plan. The operations with the related details are populated in the work requirement. Once the operations are populated, the information can be overwritten if needed.</p> <p>A work requirement can be created in two ways:</p> <ul> <li>manually in the screen</li> <li>automatically as an outcome of the manufacturing plan in MRP.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#header","title":"Header","text":"<p>Here, it is possible to create production orders by choosing dates and the previously defined work requirement model.</p> <p></p> <p>Organization: organization in which the production will be executed.</p> <p>Document Type: used for easy filtering, for example separate production department names can be set up as document types.</p> <p>Document No.: number of the work requirement.</p> <p>Process Plan: name of the process plan that is used for this production.</p> <p>Quantity: number of batches to be produced. The field is automatically populated based on the entered process quantity and conversion rate.</p> <p>WR Creation Date: the date the document is created. This date is used as a reference to define the corresponding process plan version.</p> <p>Starting Date: date that the production is planned to start</p> <p>Ending Date: date that the production is planned to end</p> <p>Conversion Rate: batch size for production</p> <p>Include Phases when inserting checkbox: when the checkbox is selected: in the Work Requirement, when the information from the process plan is copied, the operations and the products are included. The setup is also in the process plan, but that set up can be overwritten in this screen if needed.</p> <p>Process Quantity: total quantity to be produced</p> <p>Process Unit: the product to be produced</p> <p>Estimated Time: information of the estimated execution time, that is populated when the work requirement is processed. The calculation is: estimated time taken from the process plan x process quantity on the work requirement.</p> <p>Run Time: populated information of the real execution time, taken from the work effort.</p> <p>Process Work Requirement button: to insert the information from the process plan in the work requirement</p> <p>Create Work Effort button: to create work related to the work requirement once the work requirement is processed. Work efforts related to all operations are created at once, so depending on the amount of operations, one or more work efforts are created. If the create standards checkbox is selected in the operation, the create standards process is executed also, to insert the product information in the work effort. In all cases, the processing of the work effort is executed manually.</p> <p>Note</p> <p>The Create Standards process will only complete successfully if there is sufficient stock for the used products (P-) of the operation. If there is no sufficient stock, not only will the Create Standard process fail, but also no Work Effort is created.When there is sufficient stock, the Create Standards process is executed successfully and by default the Completed Quantity in the Production Run tab is set to the full quantity on the operation.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#operation","title":"Operation","text":"<p>In this tab, the user can add or edit operations and activities to be performed for the related work requirement.</p> <p>After processing the Work Requirement, the information in the operation tab is populated from the Process Plan. The main tab of the Work Requirement is showing that the Work Requirement is processed and the Estimated Time is showing the total of estimated times of all operations.</p> <p></p> <p>The fields in these two tabs are mostly taken from the Process Plan, but can be overwritten in the Work Requirement. For a description of these fields, please see the Process Plan section.</p> <p>The Starting Date and Ending Date of the operations are defaulting from the main tab of the Work Requirement, but can be overwritten.</p> <p>The Estimated Time on the operation is calculated using the formula: estimated time of the operation taken from the process plan x quantity on the operation.</p> <p>The Run Time information is populated based on total actual hours populated from the Work Effort for the operation.</p> <p>Close Phase: With this process, the work requirement phase is closed. If all the phases are closed the work requirement will also be closed.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#product","title":"Product","text":"<p>In this tab, it is possible to add or edit I/O products to be used for the selected operation of the work requirement.</p> <p>The information in the Product tab is populated from the information in the I/O Products tab of the Process Plan, upon processing of the Work Requirement.</p> <p></p> <ul> <li>Movement Quantity: value populated from the Quantity field in the I/O Products tab of the Process plan.</li> </ul> <p>Info</p> <p>For a description of the rest of the fields, please refer to the Process Plan.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#work-effort","title":"Work Effort","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Work Effort</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_1","title":"Overview","text":"<p>In this window, the use can edit precisely what has been produced from a selected product order.</p> <p>The work effort records the work executed by employees during a production shift. The document is used for the following purposes:</p> <ul> <li>to calculate the real cost related to the production of a product.</li> <li>to keep track of the remaining effort on work requirements.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#work-effort_1","title":"Work Effort","text":"<p>Here, it is possible to create a report for the completed work requirement for a desired date and time.</p> <p></p> <ul> <li>The Movement Date, Starting Time and Ending Time indicate on which date and during which shift the production took place.</li> <li>The Create Standards button (displayed in the \"Production Run\" tab) is used to execute the process that loads all the P- and P+ information as well as global used products, machines, salary categories, indirect cost, toolsets. When the standards are created, also stock of all P- products is checked and an error appears if any products do not have stock. For the Create Standards process to complete successfully, the Completed Quantity has to be greater than zero.</li> <li>Once the standards are created and all the correct information concerning the production is entered, the work effort is validated by clicking the Validate Work Effort button. At this point, the stock information is updated. For P-, the stock decreases and, for P+, it increases.</li> <li>Optionally, the Work Effort can be posted to the general ledger journal once the configuration is added. If done, information related to the cost of the raw material and produced products is posted.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#employee","title":"Employee","text":"<p>Here, it is possible to add employees that took part in the completion of a related work requirement.</p> <p>Any business partners that are set up as operator in the Employee tab of the Business Partner screen, can be selected as employee that worked on the production of the product.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#incidence","title":"Incidence","text":"<p>Here, it is possible to add work incidences that might have occurred during the completion of a related work requirement.</p> <p>This tab is used to register any incidence that occurs during the production run, the amount of downtime that it caused, and a description.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#global-use","title":"Global Use","text":"<p>Here, it is possible to add global use of products used for completion of a related work requirement.</p> <p>In this tab, any products that are not specified in the process plan but are used in production are entered. For example, packaging material:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#production-run","title":"Production Run","text":"<p>Here, it is possible to add progress details of the specified work requirements.</p> <p>The information related to the executed operation is entered in this tab:</p> <p></p> <ul> <li>Required Quantity: required quantity of the operation. Populated information when the work requirement phase is selected.</li> <li>Completed Quantity: the quantity of units produced.</li> <li>Starting Time: actual start time of the production run</li> <li>Ending Time: actual end time of the production run</li> <li>Rejected Quantity: information only field of any rejected quantities during production of the operation.</li> <li>Cost Center Use: the actual use of the cost center for this operation</li> <li>Outsourced checkbox: indication of the operation being executed by a third party</li> <li>Close Phase checkbox: selected if a partial quantity was built, but the operation needs to be closed indicating that the remaining quantity will not be built.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#toolset","title":"Toolset","text":"<p>Here, it is possible to add or edit toolsets used to complete a specific part of a work requirement.</p> <p>The information in this tab is populated automatically when the create standards process is executed. The information is taken from toolset information in the activity screen. The toolset uses is populated based on the utilization coefficient in the activity screen multiplied by the completed quantity on the work effort. The information that is populated can be updated with the actual information of the toolsets used during production, before validating the work effort.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#product_1","title":"Product","text":"<p>Here, it is possible to add and edit I/O products related to a completed part of a work requirement.</p> <p>The information is populated automatically when the create standards process is executed, based on the work requirement phase information and the completed quantity on the work effort. The information that is populated can be updated with the actual product information before validating the work effort.</p> <p></p> <p>Info</p> <p>For details about the fields, please refer to the Process Plan section.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#salary-category-employee","title":"Salary Category / Employee","text":"<p>Here, the user can add or edit salary category workers that took part in a work requirement.</p> <p>Info</p> <p>The information in this tab is populated automatically when the create standards process is executed, taking the employee information on the process plan into account. The information that is populated can be updated with the actual information of the employee effort during production before validating the work effort.</p> <p></p> <ul> <li>Salary Category: information taken from the cost center setup. The populated information can be updated, for example, to enter another line for additional employees with different salary categories.</li> <li>Business Partner: the name of the employee that executed the production.</li> <li>Quantity: the number of employees of this salary category that executed the production. In the cost center set up, the number of employees of a concrete salary category that are related to the cost center is defined. The value can be overwritten here to reflect a different number of employees.</li> <li>Estimated Cost: the cost calculated when the production costs are calculated, which takes into account the cost center use time.</li> <li>Runtime:the time dedicated per employee to the production.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#indirect-cost","title":"Indirect Cost","text":"<p>Here, it is possible to add and edit indirect costs related to a specified completed part of a work requirement.</p> <p>Info</p> <p>The information in this tab is populated automatically when the create standards process is executed, based on the indirect cost entered on the process plan. The information that is populated can be updated with the actual information of any indirect cost related to the production, before validating the work effort.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#machine","title":"Machine","text":"<p>Here, it is possible to add and edit resources used to complete a specified part of a work requirement.</p> <p>Info</p> <p>The information in this tab is populated automatically when the create standards process is executed, based on the machine information entered on the process plan. The information that is populated can be updated with the actual information of machines used during the production, before validating the work effort.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#outsourced","title":"Outsourced","text":"<p>Here, it is possible to add invoices corresponding to the outsourced part of a completed work requirement.</p> <p>Info</p> <p>Any outsourced cost for the production is entered manually in this tab based on purchase invoices received from the company that executed the outsourced work.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#how-to-reactivate-work-efforts","title":"How to Reactivate Work Efforts","text":"<p>Info</p> <p>To be able to include this functionality, the Production Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Production Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Production Extensions - Release notes. </p> <p>This functionality is useful when the user needs to reactivate a work effort.</p> <p>From the Work Effort window, the user is able to reactivate a previously generated effort just by selecting the corresponding record and clicking the Reactivate button.</p> <p>Once the effort is successfully reactivated, the state of the document changes to Not processed as it can be observed in the status bar.</p> <p></p> <p>Info</p> <p>Note: It is not possible to reactivate documents that include transactions with quantities exceeding the existing stock quantity for a certain product in a certain storage bin. The only exception is when the configuration of the storage bin allows Over Issue. For more information, visit Storage Bin.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#bulk-posting","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit Bulk Posting in the Financial Extensions Bundle Documentation.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#production-run_1","title":"Production Run","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Production Run</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_2","title":"Overview","text":"<p>Here, the user can edit precisely what has been produced from a selected product order.</p> <p>The Production Run screen displays the work efforts that are not validated. The listed work efforts are either created from the Work Requirement screen or directly in the Work Effort screen. The screen gives an overview to production workers of the production tasks that are scheduled to be executed.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#production-run_2","title":"Production Run","text":"<p>In this window, it is possible to add progress details of the specified work requirements.</p> <p>The screens are identical to the Work Effort, with the exception that the work effort main tab is not displayed, but directly the information in the Production Run tab. This way, the screen gives an easy-to-read overview of the planned production runs. The Incidence information is a tab on the Production Run. The Production Run number is corresponding to the Work Effort number.</p> <p></p> <p>Info</p> <p>For details on the fields, please refer to the Work Effort Production Run section.</p> <p>Warning</p> <p>Deleting a production run is done in the corresponding Work Effort, not in this screen.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#incidence_1","title":"Incidence","text":"<p>In this tab, it is possible to add work incidences that might have occurred during the completion of a related work requirement.</p> <p></p> <p>Info</p> <p>Please, refer to the Work Effort Incidence section for details.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#toolset_1","title":"Toolset","text":"<p>Here, it is possible to add or edit toolsets used to complete a specified part of a work requirement.</p> <p></p> <p>Info</p> <p>Please, refer to the Work Effort Toolset section for details.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#product_2","title":"Product","text":"<p>Here, it is possible to add and edit I/O products related to a completed part of a work requirement.</p> <p></p> <p>Info</p> <p>Please, refer to the Work Effort Product section for details.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#salary-category-employee_1","title":"Salary Category / Employee","text":"<p>Here, it is possible to add or edit salary category workers that took part in a work requirement.</p> <p></p> <p>Info</p> <p>Please, refer to the Work Effort Salary Category/Employee section for details.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#indirect-cost_1","title":"Indirect Cost","text":"<p>Here, it is possible to add and edit indirect costs related to a specified completed part of a work requirement.</p> <p></p> <p>Info</p> <p>Please, refer to the Work Effort Indirect Cost section for details.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#machine_1","title":"Machine","text":"<p>Here, it is possible to add and edit resources used to complete a specified part of a work requirement.</p> <p></p> <p>Info</p> <p>Please, refer to the Work Effort Machine section for details.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#outsourced_1","title":"Outsourced","text":"<p>Here, it is possible to add invoices corresponding to the outsourced part of a completed work requirement.</p> <p></p> <p>Info</p> <p>Please, refer to the Work Effort Outsourced section for details.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#quality-control-report","title":"Quality Control Report","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Quality Control Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_3","title":"Overview","text":"<p>In this window, it is possible to create and edit measurements and report findings at predefined checkpoints. The goal is to ensure output quality during production.</p> <p>For the production cycle, a Quality Control Point can be set up, in order to execute a check related to the production process. For example, checks on machinery or tools that are used in production.</p> <p>The execution of the checks is documented in the Quality Control Report.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#date-and-shift","title":"Date and Shift","text":"<p>Here, it is possible to create measurements and insert gathered values or a specific date and shift.</p> <p>The date and shift during which a particular quality control point is documented, as well as the time when the check took place. Also, a contact name is entered:</p> <p></p> <p>The Create CCP button is used to automatically populate the information in the Check Point Set and Time tabs about the check(s) that are configured to take place during the selected shift.</p> <p></p> <p>Once the action above has been executed, the Edit CCP Measured Values button appears. When clicked, a popup appears in which the value of the check is entered:</p> <p></p> <p>After entering the value and clicking the OK button, the entered value appears in the Values tab.</p> <p>Once the value has been entered this way, the Input Time Measurement button appear. When clicked, a popup appears to process the information entered in the time tab:</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#check-point-set","title":"Check Point Set","text":"<p>In this tab, it is possible to create and edit checkpoints for the related measurement.</p> <p>The information is populated with any checks that take place during the shift.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#time","title":"Time","text":"<p>Here, it is possible to create and edit times for related checkpoints.</p> <p>The information is automatically populated when the CCP button is clicked: the time that appears is the shift start date that is configured in the Quality Control Point Shift information. When populated automatically, the status is processed.</p> <p>In the case that the information is entered manually, the information is processed by clicking the Input Time Measurement button.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#values","title":"Values","text":"<p>Here, it is possible to create and edit values for a related measurement.</p> <p>Info</p> <p>The information in this tab is automatically populated when the button of the Edit CCP Measured Values is clicked and a value is entered in the pop up screen. Alternatively, a value of what was measured during the check can be entered manually.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#periodic-quality-control-data","title":"Periodic Quality Control Data","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Periodic Quality Control Data</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_4","title":"Overview","text":"<p>In this window, the user can create and edit data collection and measurements related to quality control. This is done at predefined checkpoints for a manufactured product.</p> <p>Info</p> <p>The results of the executed Periodic Quality Control is documented in this screen.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#periodic-quality-control-data-window","title":"Periodic Quality Control Data window","text":"<p>It is possible to create measurements at a predefined checkpoint for produced products.</p> <p>All relevant general information about the executed quality control is entered in this screen, such as which check was executed when and for which product:</p> <p></p> <p>After the main tab information is filled out, the Run Periodic Control button is clicked to populate information in the Result tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#result","title":"Result","text":"<p>In this tab, it is possible to create and edit quality tests for a specified checkpoint, and add test results of the performed tests.</p> <p>Info</p> <p>All information is this tab is automatically populated by the Run Periodic Control process, except for the Test Result field, which is entered manually.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#internal-consumption","title":"Internal Consumption","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Internal Consumption</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_5","title":"Overview","text":"<p>In this window, it is possible to define products which are only to be used inside the company.</p> <p>The Internal Consumption screen is used to administer any products that are used during the execution of maintenance tasks. When processed, the stock is reduced. The products are purchased through the procurement process. The products are set up as a regular item, without the Production checkbox being selected, since they are not part of the production process.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#header_1","title":"Header","text":"<p>Here, it is possible to create products which are to be used inside the organization, and not sold to customers.</p> <p></p> <p>The name is a selectable value in the task tab of the Maintenance Order.</p> <p>Info</p> <p>Optionally, the Internal Consumption can be posted to the general ledger journal once the configuration is added. If done, information related to the cost of the product is posted.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#lines","title":"Lines","text":"<p>Here, it is possible to add internal consumption lines. Each line corresponds to one product.</p> <p>The information of the product, its location in the warehouse and the quantity used during the maintenance task is entered. When clicking the Process Internal Consumption, the stock level is decreased with the selected movement quantity.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#bulk-posting_1","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit Bulk Posting in the Financial Extensions Bundle Documentation.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#maintenance-order","title":"Maintenance Order","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Maintenance Order</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_6","title":"Overview","text":"<p>In this window, it is possible to create and edit the results of a scheduled maintenance order.</p> <p>This document is used to register the execution and results of maintenance tasks. Any tasks that are confirmed in the maintenance plan are selectable in this screen.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#order","title":"Order","text":"<p>Here, it is possible to add previously scheduled maintenance for a specific date and report observations.</p> <p>In the main section of the document, the date and shift during which the tasks were executed is selected.</p> <p></p> <ul> <li>the Insert Maintenances button is clicked to populate the information in the Task tab. In the following case, no scheduled maintenances are found.</li> </ul> <p></p> <ul> <li>OK checkbox: to indicate that the maintenance ended successfully. In the task tab, this results in the Result checkbox showing as selected.</li> <li>Time: time in hours to execute the maintenance.</li> <li>Observations: the results of the maintenance task are entered here.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#worker","title":"Worker","text":"<p>In this tab, it is possible to add or edit workers that took part in a specified maintenance part.</p> <p>The employee that executed the maintenance task is entered in this tab. As per the information in the set up section, all employees that have the operator checkbox selected appear in the value list of the business partner field in this screen.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#task","title":"Task","text":"<p>In this tab, it is possible to edit maintenance tasks of a specified order.</p> <p>Info</p> <p>Most of the information in this tab is automatically populated by clicking the Insert Maintenances button, apart from the Internal Consumption field. Only the Internal Consumption field and the Comments field are updatable. In this screen, any products that were used for the execution of the maintenance tasks are entered in the Internal Consumption field. For more information, please refer to the Internal Consumption section.</p> <p></p> <ul> <li>Result checkbox: indication that the maintenance task is executed successfully. If the result is not successful, the task is still considered completed. For any follow up actions, a new maintenance plan is created.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#insert-maintenances","title":"Insert Maintenances","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Insert Maintenances</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_7","title":"Overview","text":"<p>The insert maintenances process executes population of the scheduled maintenance tasks to the Maintenance Plan based on the maintenance information in the machine category and/or machine screen.</p> <p>The creation of the maintenance plan is based on a date range that is entered upon launching the process.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#maintenance-plan","title":"Maintenance Plan","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Maintenance Plan</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_8","title":"Overview","text":"<p>Here, it is possible to add and edit predefined maintenance plans.</p> <p>The Maintenance Plan information is created in 2 possible ways:</p> <ul> <li>populated automatically by the insert maintenances process</li> <li>manually: for example, to enter data when a machine breaks down and needs corrective maintenance.</li> </ul> <p>Any maintenance tasks that have a Maintenance Order linked, are hidden by a default filter that is applied to the screen.</p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#maintenance","title":"Maintenance","text":"<p>Here, it is possible to create and edit maintenance tasks for a specific date.</p> <p>The Maintenance Plan gives an overview of all the maintenance tasks for a certain time period that are entered by the insert maintenances process or manually. Regardless of how the records were created, the information can be updated to change dates or add comments.</p> <p>Once the maintenance task is correctly reflected, the confirmation checkbox is selected.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#calculate-standard-costs","title":"Calculate Standard Costs","text":"<p> <code>Application</code> &gt; <code>Production Management</code> &gt; <code>Transactions</code> &gt; <code>Calculate Standard Costs</code></p>"},{"location":"user-guide/etendo-classic/basic-features/production-management/transactions/#overview_9","title":"Overview","text":"<p>The Calculate Standard Costs process is run to generate the standard (= theoretical) cost of manufactured products.</p> <p>Cost information is set up in several screens:</p> <ul> <li>in the Process Plan, the use of the Cost center is defined</li> <li>in the cost center, the following cost is defined:</li> <li>Employee information: salary category information as well as the quantity used per hour for the cost center. Based on these, the cost of the employee is calculated. The salary category cost is entered in the Salary Category screen.</li> <li>Machine information: the machine and usage information is entered in the cost center screen. The machine cost is entered in the Machine screen.</li> <li>Indirect cost information: all indirect cost items related to a cost center are list. The indirect cost is entered in the Indirect Cost screen.</li> <li>in the process plan, the quantities and cost of the materials used in the production process are defined.</li> </ul> <p>For raw material, the price list information is used for the cost of the P-. The purchase price list that is used for the raw material cost is marked as default.</p> <p>The cost information that is calculated for a product P+ is used when that product is a P- for another operation.</p> <p>The formula that is used by the process is the following:</p> <p>(Cost of Cost Center + Cost Employees + Cost Machines + Indirect Costs) + (Quantity P- x Cost P-) = the cost per unit.</p> <p>When the costs of the cost center, machines, employees and indirect costs are calculated, they are multiplied by different values depending on their unit of measure:</p> <ul> <li>If per Hour is used, the cost is multiplied by the Use of the cost center in the Process Plan</li> <li>If per Unit is used, the cost is multiplied by the sum of the quantities of the P+'s of the sequence.</li> <li>If per Kilogram is used, the cost is multiplied by the sum of the weight of all the P+'s of the sequence.</li> </ul> <p>For Indirect costs, the additional unit of measure percentage is available. This adds the defined percentage to the total cost calculated (cost center, employee, machine, indirect costs and P- products). For example, if defined as 1.15, an additional 15% is added to the cost.</p> <p>Info</p> <pre><code>For the Indirect Cost to be included correctly, the following configuration is important in the [Indirect Cost](setup.md#indirect-cost_2) screen:&lt;br&gt;\n    -select Cost Type = Production,&lt;br&gt;\n    -a date range that includes the date of the standard cost calculation in the Value tab.&lt;br&gt;\nThis way, the standard cost for each operation is calculated.\n</code></pre> <p></p> <p>The outcome of the calculation appears in the tabs of the Process Plan:</p> <p>In the Employee, Machine and Indirect Cost tabs, the result of the costs are automatically populated.</p> <ul> <li> <p>This work is a derivative of \"Production Management\" by Openbravo S.L.U, licensed under CC BY-SA 2.5 ES.</p> </li> <li> <p>This work is licensed under   CC BY-SA 2.5 ES by Futit Services S.L..</p> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/","title":"Project and Service Management Analysis Tools","text":"","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/#overview","title":"Overview","text":"<p>This section describes the windows related to project and service management reports in Etendo. These are:</p> <p> Project Progress </p> <p> Project Profitability </p> <p> Expense Report </p> <p> Invoiceable Expenses </p> <p> Employee Expenses </p>","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/#project-progress","title":"Project Progress","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Project Progress</code></p> <p>The Project Progress report allows to track the progress of projects with useful indicators such as the time burned or the completion percentage. It is used to monitor to timelines of projects.</p> <p>The main information that can be retrieved from the report is:</p> <ul> <li>days delay for each task and each phase</li> <li>cumulative delay for the whole project</li> </ul> <p></p>","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/#project-profitability","title":"Project Profitability","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Project Profitability</code></p> <p>The Project Profitability report is used to monitor the planned and real cost related to a project.</p> <p>The following information is displayed on the report:</p> <p>Planned Services and Expenses:</p> <ul> <li>Revenue: the amount from the field Service Revenue on the multiphase project.</li> <li>Cost: the amount from the field Services Provided Cost on the multiphase project.</li> <li>Outsource: the amount from the field Outsourced Cost on the multiphase project.</li> <li>Margin%: the margin from the field Planned Service Margin % on the multiphase project. The planned service margin % is calculated using the formula: (Service Revenue - Services Provided Cost - Outsourced Cost) x 100/Service Revenue.</li> <li>Reinvoicing: the amount from the field Reinvoiced Expenses on the multiphase project.</li> <li>Expenses: the amount from the field Planned Expenses on the multiphase project.</li> <li>Margin%: the margin from the field Planned Expenses Margin % on the multiphase project. The planned expenses margin % is calculated using the formula: (Reinvoiced Expenses - Planned Expenses) x 100/Reinvoiced Expenses.</li> <li>Gross margin: overall planned margin for the project<ul> <li>Gross margin amount: calculated using the formula: (Service Revenue - Services Provided Cost - Outsourced Cost) + (Reinvoiced Expenses - Planned Expenses).</li> <li>Gross margin percentage: calculated using the formula: ((Service Revenue - Services Provided Cost - Outsourced Cost) + (Reinvoiced Expenses - Planned Expenses)) x100/(Service Renevue + Reinvoiced Expenses)</li> </ul> </li> </ul> <p>Real Services and Expenses:</p> <ul> <li>Revenue: cost reflected on sales invoices for the customer for:<ul> <li>reinvoicing of outsourced work by a third party.</li> <li>invoicing of the cost for completed project phases.</li> <li>only sales invoice lines with service type products will be taken into account.</li> </ul> </li> <li>Cost: cost of worked hours based on processed time sheets multiplied by the cost that is linked to the salary category of the employee at the expense date.</li> <li>Outsource: cost of worked hours executed by a third party based on purchases invoices.</li> <li>Margin%: real margin for services based on the formula: (Revenue - Cost -Outsource) x 100/Revenue</li> <li>Reinvoicing: expenses invoiced to the customer on sales invoices for:<ul> <li>purchased goods related to the project.</li> <li>invoiceable item expenses.</li> <li>only sales invoice lines with products whose type is not service will be taken into account.</li> </ul> </li> <li>Expenses: real expenses based on purchase invoices for:<ul> <li>purchased goods related to the project from a vendor.</li> <li>reimbursement for item expenses for an employee.</li> </ul> </li> <li>Margin%: real margin for expenses based on the formula: (Reinvoicing - Expenses) x 100/Reinvoicing</li> <li>Gross margin: overall real margin for the project.<ul> <li>Gross margin amount: calculated using the formula: (Revenue - Cost - Outsource) + (Reinvoicing - Expenses)</li> <li>Gross margin percentage: calculated using the formula: ((Revenue - Cost - Outsource) + (Reinvoicing - Expenses)) x 100/(Revenue + Reinvoicing)</li> </ul> </li> <li>Collected: amount that was collected from the customer for the sales invoices related to the project.</li> </ul> <p></p>","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/#expense-report","title":"Expense Report","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Expense Report</code></p> <p>The Expense Report shows a listing of expense sheets with their details. Filters can be applied to show expense reports for certain business partners, projects or employees. Also a filter to select time sheets or expense sheets can be applied.</p> <p></p>","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/#invoiceable-expenses","title":"Invoiceable Expenses","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Invoiceable Expenses</code></p> <p>In this window, the user can view expenses before invoicing them to customers. This is a read-only overview of all invoiceable cost related to projects. The costs that appear are marked as reinvoicing in expense sheets that are processed. All items that are displayed are for invoicing to the customers related to the projects.</p> <p>Customer</p> <p>In the grid view an overview of all customers for which expenses related to projects have to be invoiced is listed. In the records, the Price List and Payment Terms to be used for the creation of the Sales Order are displayed.</p> <p></p>","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/#lines-tab","title":"Lines Tab","text":"<p>In this tab, the user can view each expense line to be included in the sales invoice.</p> <p>The information displayed in the lines tab is taken from the lines tab from the Expense Sheets. All lines are related to the selected business partner, but different lines can be related to different projects.</p> <p></p>","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/#employee-expenses","title":"Employee Expenses","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Employee Expenses</code></p> <p>In this window, the user can view internal employee expenses before processing them. This is a read-only overview of all expenses that need to be reimbursed to an employee.</p> <p>Employee</p> <p>In the grid view an overview of all employees that have expenses pending to be reimbursed is listed. Each record has the Purchase Price List and the Purchase Order Payment Terms displayed, to be used for the creation of the Purchase Invoice.</p> <p></p>","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/analysis-tools/#lines-tab_1","title":"Lines Tab","text":"<p>In this tab, the user can view each expense line for the employee.</p> <p>The information displayed in the lines tab is taken from the lines tab in the Expense Sheet. All lines are related to the employee, but different lines can be related to different projects.</p> <p></p> <p>This work is a derivative of \"Project and Service Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Multiphase Project","Service","Planned Services and Expenses","Analysis Tools","Project Progress","Expense Report","Employee Expenses"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/getting-started/","title":"Project and Service Management - Getting Started","text":"","tags":["Getting Started","Multiphase Project","Expense Sheets","Project Progress","Project Type"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/getting-started/#project-and-service-management-getting-started","title":"Project and Service Management - Getting Started","text":"","tags":["Getting Started","Multiphase Project","Expense Sheets","Project Progress","Project Type"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/getting-started/#overview","title":"Overview","text":"<p>The Project and Service Management functionality is essential for businesses to handle projects, services, or both. It helps organizations plan, execute, monitor, and optimize projects and services efficiently by integrating them with other functionalities such as Procurement Management, Sales Management, Financial Management, etc.</p> <p>The Project and Service Management module consists of:</p> <ul> <li>Multiphase Project to manage project with phases and tasks.</li> <li>Expense Sheets to manage cost related to projects.</li> </ul> <p></p> <p>As seen in this diagram, after setting up the information shown below, in order to manage a project, the user should enter a Multiphase project in the corresponding window. This window allows registering the progress of a project in different phases. Each project includes one or more phases and, in each phase, one or more tasks. For each of these phases, it is possible to perform a Procure to Pay process, for necessary purchases in the project, or an Order to Cash process  for necessary sales in the project. For registering required project expenses, the expense sheet window is used. Once one phase is closed, the user can review profitability by using the available analysis tools. This flow is done for each of the phases of a project, and once all the phases are completed, the project can be closed.</p>","tags":["Getting Started","Multiphase Project","Expense Sheets","Project Progress","Project Type"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/getting-started/#key-concepts","title":"Key Concepts","text":"<p>The key project and service management concepts mentioned in this chapter are:</p> <ul> <li>Business Partner:<ul> <li>Supplier: third party that supplies goods and/or services. In project and service management the supplier is the vendor of provided goods related to the project, the consultancy company that consultancy services were outsourced to and the employee that is reimbursed for expenses related to a project.</li> <li>Customer: the party that goods or services are sold to. In project and service management the customer is who gets charged for the cost and expenses of the project.</li> <li>Employee: person that works in the company.In project and service management, the employee information is used for the cost calculation of the project, based on time sheets.</li> </ul> </li> <li>Sales Order: document that lists goods and/or services provided to a customer and the conditions of the sale.</li> <li>Sales Invoice: document used to administer a right to collect. The document lists the goods and/or services provided to a customer and the conditions of the sale.</li> <li>Purchase Invoice: document used to administer an obligation to pay. The document lists goods and/or services provided by a supplier.</li> <li>Project Type: template used to easily create phases and tasks on a multiphase project. This is specially useful to automatically complete phases and tasks according to the template without doing the process manually.</li> <li>Multiphase Project: form used to registrate a project, the planned expenses, margins, who the project will be executed for and the phases and tasks of the project.</li> <li>Project Phase: a time period during which certain activities are executed.</li> <li>Project Task: activities that are executed during a project phase.</li> <li>Expense Sheet: form used to register item expenses and time for a project.</li> </ul>","tags":["Getting Started","Multiphase Project","Expense Sheets","Project Progress","Project Type"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/getting-started/#configuration","title":"Configuration","text":"<p>The following is entered in the application for the project and service management module:</p> <ul> <li> <p>Project Dimension: in order to be able to select projects on orders and invoices, the project dimension is created as a new record with type Project in the Dimension tab of the General Ledger Configuration window.</p> </li> <li> <p>Product:</p> <ul> <li>Service and Expense Type Products Types: for the expense sheet products with product type Service (for time) and product type Expense Type (for expenses) are set up.</li> <li>Item Product type: the standard procure to pay process is used for the purchase or products related to the project.</li> </ul> </li> <li> <p>Business Partner:</p> <ul> <li>Customer: the third party for whom the project is executed is set up as a customer.</li> <li>Vendor: the third party that supplies products related to the project is set up as a vendor.</li> <li>Employee:<ul> <li>The vendor information is filled out in order to create purchase invoices to reimburse expenses.</li> <li>The salary category is filled out to calculate cost for the time spend on the project as documented in time sheets.</li> </ul> </li> </ul> </li> <li> <p>Project Type: a template with standard phases and tasks can be created to easily generate phases and tasks on a multiphase project.</p> </li> </ul>","tags":["Getting Started","Multiphase Project","Expense Sheets","Project Progress","Project Type"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/getting-started/#execution","title":"Execution","text":"<p>The Multiphase Project has the following sequence of events:</p> <ul> <li>The creation of the Multiphase Project with the following information:<ul> <li>Planned amounts and margins related to the project in the Amounts section of the header.</li> <li>Information needed to create a Sales Order in the More Information section of the header.</li> <li>Optionally, with the Set Project Type button, an existing Project Type is used to create the phases and tasks. Alternatively without using a project type, phases and tasks are created manually on the Multiphase Project.</li> <li>Start and end dates for the overall project and for phases and tasks.</li> <li>Once this information is entered, the project status is changed to Order.</li> </ul> </li> <li>Planned versus actual cost is monitored on the Project Profitability report based on the following:<ul> <li>Time sheets and item expenses are reported in Expense Sheets related to the project. Based on the salary category of the employee at the time of the project, the cost of the time spend is calculated by the application.</li> <li>Purchase invoices are created for any purchases, outsourcing cost or expenses reimbursement related to the project. This is done through the Create AP Expense Invoices.</li> <li>Sales invoices are created as a result of the Expense Sheets of the project. This is done through the Create Sales Orders from Expenses process.</li> <li>At the end of each phase, a Sales Order related to the phase is created from the Multiphase Project using the Create Sales Order from Project Phase process. The information for the creation of the Sales Order is taken from the definition of the Project and it is made for the customer of the project. Later, this results in the creation of a Sales Invoice.</li> </ul> </li> <li>The progress of the project is monitored in two ways. For each project, the phases and tasks can be marked as completed in the checkbox for this purpose. Also, the Project Progress report can be used. Remember the accuracy of the information in the report depends on the Complete checkboxes use in the Phase and Task tabs.</li> <li>After completion of all phases, the Multiphase Project status is changed to Order Closed.</li> </ul> <p>Info</p> <p>Remember this is a general overview of the Project and Service Management, visit the Setup, Transactions and Analysis Tools sections for more specific information.</p>","tags":["Getting Started","Multiphase Project","Expense Sheets","Project Progress","Project Type"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/getting-started/#relationship-with-other-areas","title":"Relationship with other areas","text":"<p>Project and Service Management interacts with the following modules:</p> <ul> <li>Procurement Management:<ul> <li>Materials related to the project are ordered using the Procure to Pay process.</li> <li>Purchase invoices are generated for expenses paid to employees and for good ordered from vendors.</li> </ul> </li> <li>Sales Management: Sales orders and sales invoices are generated for the customer for whom the project is executed.</li> <li>Warehouse Management: Materials ordered for the project may be received into stock.</li> <li>Financial Management: The information of the created sales and purchase invoices is send to accounts payables and receivables.</li> </ul> <p>This work is a derivative of \"Project and Service Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Getting Started","Multiphase Project","Expense Sheets","Project Progress","Project Type"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/setup/","title":"Project and Service Setup","text":"","tags":["Multiphase Project","Project Type","Setup","Project Template"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/setup/#overview","title":"Overview","text":"<p>This section describes the window that is used to set up the Project and Service Management process in Etendo: Project Type.</p>","tags":["Multiphase Project","Project Type","Setup","Project Template"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/setup/#project-type","title":"Project Type","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Setup</code> &gt; <code>Project Type</code></p>","tags":["Multiphase Project","Project Type","Setup","Project Template"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/setup/#overview_1","title":"Overview","text":"<p>This window is used to define projects types with typical phases and tasks to be used in projects.</p> <p>A Project Type is a template with the typical phases and tasks that are applicable for a certain type of project. During the entry of a multiphase project, a project type can be selected to automatically add the phases and tasks associated with that project type.  This is essential for companies that use the same standard processes on many occasions.</p> <p>Info</p> <p>The use of this window is not mandatory, but it is recommended since it enables to complete the multiphase project in an easier way. If not used, each multiphase project, its phases and tasks, should be completed manually.</p>","tags":["Multiphase Project","Project Type","Setup","Project Template"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/setup/#header","title":"Header","text":"<p>Here, a project type can be defined and, for this, the main field is the Name of the project type. An intuitive name should be given so that once the multiphase project is entered, the user can easily recognize the project type that could be used to generate the phases and tasks.</p> <p></p>","tags":["Multiphase Project","Project Type","Setup","Project Template"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/setup/#standard-phase-tab","title":"Standard Phase Tab","text":"<p>In this tab, the user can define phases and products required during each phase, to be included in this type. Each phase is added by creating a line.</p> <p></p> <p>The fields on this tab are:</p> <ul> <li>Sequence number: numbering of the entered lines. By default 10,20,30,..etc.</li> <li>Name: name of the phase.</li> <li>Product: product or service that is sold in the phase.</li> <li>Standard Quantity: quantity of the product to be sold in the phase. For example, if the product is Sales Consultancy with a unit of measure set to hours, the quantity 10 entered in this field indicates that 10 hours of Sales Consultancy is sold in this phase.</li> <li>Standard Duration in Days: the scheduled duration of the phase. Based on this setup, when the project type is used for a multiphase project, the begin and end dates of each phase is based on this setup.When left blank at the phase level, the begin date will be populated based on the start date of the project and the end date will be left blank.</li> <li>Active checkbox: indication of validity of the line.</li> <li>Description: note field for the phase.</li> </ul>","tags":["Multiphase Project","Project Type","Setup","Project Template"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/setup/#standard-task-subtab","title":"Standard Task Subtab","text":"<p>Here, the user can define tasks to be completed during each phase. Each task is added by creating a line.</p> <p></p> <p>The fields on the tasks are:</p> <ul> <li>Sequence number: numbering of the entered lines. By default 10,20,30,..etc.</li> <li>Name: name of the task.</li> <li>Product: product or service that is sold related to this task.</li> <li>Standard Quantity: quantity of the product to be sold for the task. For example if the product is Sales Consultancy with a unit of measure set to hours, the quantity 10 entered in this field indicates that 10 hours of Sales Consultancy is sold related to this task.</li> <li>Standard Duration in Days: the scheduled duration of the task.</li> <li>Active checkbox: indication of validity of the line.</li> <li>Description: note field for the phase.</li> </ul> <p>This work is a derivative of \"Project and Service Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Multiphase Project","Project Type","Setup","Project Template"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/","title":"Project and Service Transactions","text":"","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#overview","title":"Overview","text":"<p>This section describes the different windows that are used for transactions included in the Project and Service Management process in Etendo. These are:</p> <p> Multiphase Project </p> <p> Expense Sheet </p> <p> Create Sales Orders from Expenses </p> <p> Create AP Expense Invoices </p>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#multiphase-project","title":"Multiphase Project","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Transactions</code> &gt; <code>Multiphase Project</code></p>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#overview_1","title":"Overview","text":"<p>This window is used to manage a project, its related phases and tasks and to populate the related sales invoices. The following aspects are monitored for projects:</p> <ul> <li>The cost overview: based on the planned cost overview entered in the multiphase project once documents are created referencing the project, the actual cost can be compared with them.</li> <li>The schedule: based on planned start dates and end dates, the progress of the project can be monitored.</li> </ul> <p>Important</p> <p>From the multiphase project window, sales orders, in draft status, are generated at the end of each completed phase. This is done with the Create Sales Order from Project Phase button at Project Phase tab level.</p>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#header","title":"Header","text":"<p>Here, the fields to note are:</p> <ul> <li>Organization: organization of the project.</li> <li>Search Key: field used to easily filter records.</li> <li>Name: name of the project. The name has to be unique between Service Projects and Multiphase projects.</li> <li>Current Phase: field to manually keep track of the current phase of the project.</li> <li>Starting Date: start date of the project.</li> <li>Planned End Date: scheduled end date of the project.</li> <li>Real End Date: actual end date of the project.</li> <li>Description: note field.</li> <li>Sales Representative: sales contact related to this project.</li> <li>Person in Charge: project manager.</li> </ul> <p>In the Amounts section:</p> <ul> <li>Legally Binding Contract: If checked, it indicates if the document is legally binding.</li> <li>Price Ceiling: Only shown if Legally Binding Contract is checked. The commitment amount and quantity is the maximum amount and quantity to be charged. Ignored, if the amount or quantity is zero.</li> <li>Contract Amount: Only shown if Legally Binding Contract is checked. The commitment amount is independent from the planned amount. You would use the planned amount for your realistic estimation, which might be higher or lower than the commitment amount.</li> <li>Contract Quantity: Only shown if  Legally Binding Contract is checked. The commitment amount is independent from the planned amount. You would use the planned amount for your realistic estimation, which might be higher or lower than the commitment amount.</li> <li>Service Revenue: expected revenue for services (consulting).</li> <li>Planned Expenses: expected expenses.</li> <li>Services Provided Cost: expected internal cost of the services (labour x hours x cost).</li> <li>Outsourced Cost: expected cost of services executed by third party.</li> <li>Total Service Cost: populated information of the Services Provided Cost + Outsourced Cost.</li> <li>Reinvoiced Expenses: defaults to the planned expenses, but can be overwritten by the actual amount that will be invoiced to the business partner.</li> <li>Planned Service Margin %: populated information with the profit or loss percentage on the services: (Service Revenue - Services Provided Cost - Outsourced Cost) x 100/Service Revenue.</li> <li>Planned Expenses Margin %: Populated information with the profit or loss percentage on the expenses: (Reinvoiced Expenses - Planned Expenses) x 100/Reinvoiced Expenses.</li> </ul> <p>In the More Information section:</p> <ul> <li>Business Partner: the customer that is being charged for the project.</li> <li>Partner Address: address of the business partner.</li> <li>User/Contact: user working for the business partner.</li> <li>Order Reference: reference number of the business partner to appear on the sales order.</li> <li>Payment Method: payment method of the business partner to appear on the sales order.</li> <li>Payment Terms: payment terms of the business partner to appear on the sales order.</li> <li>Price List: price list related to the business partner.</li> <li>Currency: currency related to the business partner.</li> <li>Warehouse: warehouse used to ship to the business partner.</li> </ul>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#process-buttons","title":"Process Buttons","text":"<ul> <li>Set Project Type: to select a project type in order to copy the phases and tasks from that particular project type to the multiphase project. Based on the durations of the phases and tasks in the project type, the starting date and end date on the multiphase project are overwritten.</li> <li>Change Project Status: to change the status of the project. The statuses of the multiphase project are:<ul> <li>Open: initial status, comparable with the Draft status on other documents.</li> <li>Order: status to indicate that the sales orders can be generated.</li> <li>Order closed: final status of the project. When changed to this status, the Real End Date field information gets automatically populated with the system date. Once the project status is Order closed, the project can not be opened again.</li> </ul> <p>Info</p> <p>In order to use this button, the Business Partner and the Sales Representative fields of the header must be completed.</p> </li> <li>Copy Details : the project phase(s) and project task(s) information from another multiphase project is copied.</li> </ul>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#project-phase-tab","title":"Project Phase Tab","text":"<p>In this tab, the individual phases of the project can be defined.</p> <p></p> <p>The following fields are displayed in this tab:</p> <ul> <li>Organization: organization of the phase</li> <li>Sequence Number: numbering of the entered lines. By default 10,20,30,..etc.</li> <li>Name: name of the phase.</li> <li>Product: product or service that is sold in the phase.</li> <li> <p>Quantity: quantity of the product to be sold in the phase.</p> <p>Note</p> <p>Above fields are copied from the Project Type if the Set Project Type functionality is used.</p> </li> <li> <p>Net Unit Price: When filled out, this is the new unit price that will appear for the phase on the sales order, thus overwriting the price list net unit price.</p> </li> <li>Starting Date: Planned starting date of the phase.</li> <li> <p>Planned End Date: Planned ending date of the phase.</p> <p>Note</p> <p>Starting Date and Planned End Date of the phase are calculated based on the start date and the Standard Duration in Days defined in the Project Type if the Set Project Type functionality is used.</p> </li> <li> <p>Ending Date: actual ending date to be filled out manually. This date does not get populated when selecting and saving the Phase Complete checkbox.</p> </li> <li>Phase Complete checkbox: to set the phase to complete. In order to set the phase to Phase Complete, it is not mandatory that the task(s) related to this phase are set to complete first. However, once the Phase Complete checkbox is marked, the tasks of this phase are also marked as completed.</li> </ul> <p>In the More Information section:</p> <ul> <li>Price Ceiling: The commitment amount and quantity is the maximum amount and quantity to be charged. Ignored, if the amount or quantity is zero.</li> <li>Contract Amount: The commitment amount is independent from the planned amount. You would use the planned amount for your realistic estimation, which might be higher or lower than the commitment amount.</li> <li>Description: A description is limited to 255 characters.</li> <li>Standard Phase: Phase of the project with standard performance information with standard work.</li> <li>Sales Order: Unique identifier and a reference to a Sales Order originating from the document sequence defined for this document type.</li> </ul>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#process-button","title":"Process Button","text":"<ul> <li> <p>Create Sales Order from Project Phase: to create a sales order upon completion of a phase. From the sales order, a sales invoice is created to document that the customer has to pay for the executed work on the project.</p> <p>Info</p> <p>The created sales order includes all the lines from the phase and its related tasks.</p> </li> </ul>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#project-task-subtab","title":"Project Task Subtab","text":"<p>In this subtab, the individual tasks that are necessary to complete the phase of the project are defined.</p> <p></p> <p>The following fields are displayed in this subtab:</p> <ul> <li>Organization: organization of the task</li> <li>Sequence Number: numbering of the entered lines. By default 10,20,30,..etc.</li> <li>Name: name of the task</li> <li>Product: product or service that is sold related to this task.</li> <li> <p>Quantity: quantity of the product to be sold for the task.</p> <p>Note</p> <p>Above fields are copied from the Project Type if the Set Project Type functionality is used.</p> </li> <li> <p>Net Unit Price: when filled out, this is the new unit price that will appear for the task on the sales order, thus overwriting the price list net unit price.</p> </li> <li>Starting Date: planned starting date</li> <li> <p>Planned End Date: planned ending date</p> <p>Note</p> <p>Starting Date and Planned End Date of the task are calculated based on the start date and the Standard Duration in Days defined in the Project Type if the Set Project type functionality is used.</p> </li> <li> <p>Ending Date: actual ending date to be filled out manually. This date does not get populated when selecting and saving the Task Complete checkbox.</p> </li> <li>Task Complete checkbox: to set the task to completed.</li> </ul> <p>In the More Information section:</p> <ul> <li>Standard Task: Standard Project Task in a Project Phase with standard effort</li> <li>Price Ceiling: The commitment amount and quantity is the maximum amount and quantity to be charged. Ignored, if the amount or quantity is zero.</li> <li>Contract Amount: The commitment amount is independent from the planned amount. You would use the planned amount for your realistic estimation, which might be higher or lower than the commitment amount.</li> <li>Description: A description is limited to 255 characters.</li> </ul>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#expense-sheet","title":"Expense Sheet","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Transactions</code> &gt; <code>Expense Sheet</code></p>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#overview_2","title":"Overview","text":"<p>An Expense Sheet is used to register time sheets and item expenses.</p> <p>Based on time sheets, the cost related to assigned employees to the project is calculated and can be viewed on the Project Profitability report.</p> <p>For item expenses, the cost employees made related to projects is documented. Based on this, the follow up to reimburse the cost to the employee is done with the creation of a Purchase Invoice. To link the corresponding invoices to the project, there is a project dimension field in the header of the Purchase Invoice window.</p> <p>For both time sheets and item expenses, it can be indicated whether the customer related to the project is invoiced for these costs. The follow up of this is that a Sales Order is created in order to create a Sales Invoice.</p>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#header_1","title":"Header","text":"<p>In this window, the user can create and process an expense sheet.</p> <p></p> <p>The fields on this tab are:</p> <ul> <li>Organization: organization of the expense.</li> <li>Document No.: populated number of the expense sheet.</li> <li>Employee: employee that made the expense related to a project or spend time on a project. It is important to remark that employees:<ul> <li>need to be created as Employee in Business Partner window,</li> <li>need to be created as Etendo users in the User window,</li> <li>and finally, employee and user need to be related to each other. That relationship can be set by selecting Employee business partner record in the employee User record, as shown in the image below.</li> </ul> </li> <li>Report Date: date for which the expense is entered.</li> </ul> <p></p>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#lines-tab","title":"Lines Tab","text":"<p>In this tab, the user can add time and regular expense lines to the sheet. Each expense is added to an individual line and may or may not be invoiced to customers.</p> <p></p> <p>The fields to note in this tab are:</p> <ul> <li>Time Sheet checkbox: to indicate if the expense is for time or item expenses.</li> <li>Product: product related to the expense line. As seen in the configuration section, for time sheets, the products set up with Service type appear. For item expenses, products set up with Expense type appear.</li> <li>Quantity: quantity for the registered product.</li> <li>UOM: unit of measure of the product.</li> <li>Line No.: numbering of the line. By default 10,20,30,...etc.</li> <li>Expense Amount: not visible on time sheet. Populated field with the amount information.</li> <li>Converted Amount: not visible on time sheet. Amount of the expense converted to the currency of the client.</li> <li>Currency: currency of the entered expense.</li> <li>Reinvoicing checkbox: checkbox to indicate if the customer (the business partner related to the project) will be invoiced for this expense.</li> <li>Business Partner: only visible when the Reinvoicing checkbox is selected. The Business Partner that is invoiced for the expense. The value will be populated based on the entered project information.</li> <li>Net Unit Price: price related to the product.</li> <li>Expense Date: date related to the reported expense.</li> <li>Project: project that the expense relates to.</li> <li>Project Phase: project phase that the expense relates to.</li> <li>Project Task: project task that the expense relates to.</li> </ul>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#process-button_1","title":"Process Button","text":"<ul> <li>Process/Unprocess Expenses: Once the corresponding information of the sheet is entered, you can process the expense. If the document is processed, it is possible to select it and unprocess it to edit it if necessary.</li> </ul>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#create-sales-orders-from-expenses","title":"Create Sales Orders from Expenses","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Transactions</code> &gt; <code>Create Sales Orders from Expenses</code></p> <p>This is a process which automatically generates sales orders per customer for all outstanding expenses to be invoiced. In order for the process to create the sales order with the correct information, the customer needs to be set up with the [Customer] tab in the Business Partner window filled out. This process is integrated with the Sales Management Module:</p> <ul> <li>All the sales orders generated can be checked and modified through that module.</li> <li>The invoice process can be run afterwards.</li> <li>There is a checkbox Complete and Process Sales Orders automatically to indicate whether the Sales Orders should be created in booked state or not.</li> </ul> <p>A Sales Order type Warehouse order with a corresponding Goods Shipment is created by the process if the checkbox Complete and Process Sales Orders automatically is selected.</p> <p></p>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/project-and-service-management/transactions/#create-ap-expense-invoices","title":"Create AP Expense Invoices","text":"<p> <code>Application</code> &gt; <code>Project and Service Management</code> &gt; <code>Transactions</code> &gt; <code>Create AP Expense Invoices</code></p> <p>This is a process which automatically generates Purchase Invoices for Accounts Payable based on all expenses to be reimbursed to the employee. Separate Purchase Invoices will be generated for each project. </p> <p>In order for the process to complete successfully the employee needs to have the Vendor tab in the Business Partner filled out including the following information:</p> <ul> <li>A Purchase Price List</li> <li>The PO Payment Method</li> <li>The PO Payment Terms</li> <li>The PO Financial Account</li> </ul> <p>This process is directly integrated with the Procurement Management module: all the purchase invoices generated can be checked and modified through that module.</p> <p></p> <p>This work is a derivative of \"Project and Service Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>","tags":["Pultiphase Project","Expense Sheet","Create Sales Orders from Expenses","Create AP Expense Invoices"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/","title":"Sales Reports","text":""},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#overview","title":"Overview","text":"<p>This section describes the windows related to sales reports in Etendo. These are:</p> <p> Sales Dimensional Report </p> <p> Shipments Dimensional Report </p> <p> Discount Invoice Report </p> <p> Stock for Open Orders </p> <p> Orders Awaiting Invoice Report </p> <p> Orders Awaiting Delivery Report </p> <p> Sales Invoice Dimensional Report </p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#sales-dimensional-report","title":"Sales Dimensional Report","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Sales Dimensional Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#overview_1","title":"Overview","text":"<p>This is a dimensional type of report that shows information mainly about the \"Total Net Amount\" of registered sales orders (Sales Orders in a status Booked or Closed) during a selected period of time.</p> <p>This report can display best-selling products and top customers and answer many other questions related to the company's sales booking activity.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#parameters-window","title":"Parameters Window","text":"<p>Fields to note:</p> <ul> <li>Warehouse: It narrows down results for a particular warehouse from where an order is shipped (Warehouse filed in the Sales Order).</li> <li>Commercial Document: allows the user to filter results by Sales Representative field from the Sales Order window, which normally reflects the person who booked the order.</li> <li>Commercial File: allows the user to filter results by Sales Representative field from the Customer tab of the Business Partner window, which normally contains the person responsible for this customer (for example, account manager).</li> </ul> <p>Info</p> <p>In the majority of cases, filtering by the fields mentioned above gives the same results. They could differ if a customer has one main responsible person, but different sales team members can book orders. Or if a customer is moved from one sales representative to another. The new sales representatives might want to use the second filter to see the activities of all their customers (regardless of who closed the deal) while the old sales representatives might want to use the first filter to see the orders they closed, regardless of who manages the customer at present.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#sample-report-output","title":"Sample Report Output","text":"<p>Information to note:</p> <ul> <li>Amount: is the net amount from the Sales Order converted to the report Currency.</li> <li>Weight: of the sold product if specified in the Product window.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#shipments-dimensional-report","title":"Shipments Dimensional Report","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Shipments Dimensional Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#overview_2","title":"Overview","text":"<p>This report shows information about goods shipped to the customers (Goods Shipments in a status Completed or Voided) during a selected period of time. It is a dimensional type of report.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#parameters-window_1","title":"Parameters Window","text":"<p>There is no specific field to note, but just the dimensional primary and secondary filters which can be used to narrow down the information to be displayed.</p> <p></p> <p>The outcome of this report can be viewed in HTML format, XLS format, and PDF format.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#sample-report-output_1","title":"Sample Report Output","text":"<p>Some information to note:</p> <ul> <li>Amount: is the net amount (cost of the goods for customers) shipped to them converted to the report Currency. This amount is retrieved from the Sales Order that corresponds to the Goods Shipment. If a Goods Shipment is not linked to any Sales Order, this field will be empty.</li> <li>Weight: of the shipped product, if specified in the Product window.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#discount-invoice-report","title":"Discount Invoice Report","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Discount Invoice Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#overview_3","title":"Overview","text":"<p>This report shows information about registered sales invoices (Sales Invoices in a status Completed or Voided) during a selected period of time, grouping the information by Business Partner and Product.</p> <p>The report displays information about the average price by product, the net price and the discount applied in each product.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#parameters-window_2","title":"Parameters Window","text":"<p>Fields to note:</p> <ul> <li>From Date: allows filtering results by Invoice Date field from the Sales Invoice window. It is mandatory and the result report will show information about sales invoices with a date invoice bigger than the parameter.</li> <li>To Date: allows filtering results by Invoice Date field from the sales invoices window. It is also mandatory, and the result report will show information about sales invoices with a date invoice less than the parameter.</li> <li>Currency: the amounts will be shown in the selected currency. For invoices in other currency, the amount will be converted to the selected currency, taking into account the conversion rate for the invoice date.</li> <li>Business Partner: allows filtering results by Business Partner. The result report will only show information about sales invoices of the selected Business Partners. It is not a mandatory parameter, so if no Business Partner is selected, the sales invoices will not be filtered by that field.</li> <li>Show only Discounted: if checked, only articles with discount will be shown.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#sample-report-output_2","title":"Sample Report Output","text":"<p>For the example in the above image, according to the filters, the result will show information about sales invoices for the business partner \u201cAlimentos y Supermercados, S.A.\u201d from the date \u201c01-06-2021\u201d to the date \u201c01-01-2022\u201d. The amounts will be in USD.</p> <p>Columns to note:</p> <ul> <li>Quantity: is the total quantity sold for each product and business partner.</li> <li>Avg. Pr: is the average price for one product and business partner without taking into account discounts.</li> <li>Amt: is the Avg. Pr. multiplied by the quantity.</li> <li>Avg. Net Pr.: is the real average price for one product and business partner, taking into account discounts.</li> <li>Real amount: the real amount sold for one product and business partner without taxes.</li> <li>Discount (%): is the discount applied for the product and business partner.</li> </ul> <p>In the image below, the same report is shown, but having checked the filter \u201cShow only Discounted\u201d. In comparison to the previous report, this report shows only those lines in which the discount is not equal to zero.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#stock-for-open-orders","title":"Stock for Open Orders","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Stock for Open Orders</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#overview_4","title":"Overview","text":"<p>This section shows the lines of the pending orders with the actual stock of each product.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#orders-awaiting-invoice-report","title":"Orders Awaiting Invoice Report","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Orders Awaiting Invoice Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#overview_5","title":"Overview","text":"<p>Orders Awaiting Invoice Report shows the information about the Sales Orders that are not fully invoiced yet.</p> <p>Only Sales Orders with Do Not Invoice Invoice Term are not displayed in the report, but all other orders are present in the output, independently if the Invoice Term condition is met or not. For example, if Invoice Term is \"After Delivery\" and products are not shipped yet, Sales Order is displayed.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#parameters-window_3","title":"Parameters Window","text":"<p>All filters refer to corresponding fields of the Sales Order.</p> <p>All monetary values (like Amount, Price, Base) in the report are displayed in two currencies. The first one is the Sales Order currency, and the second one is regulated by the Currency parameter field (defaulted to the system currency).\u00a0</p> <p>Warning</p> <p>Please note that Conversion Rate to the report Currency should be specified for the report to work.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#sample-report-output_3","title":"Sample Report Output","text":"<p>Info</p> <p>Please note that the report gives information about sales orders and products included in it without reflecting the information of already delivered and invoiced quantities.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#orders-awaiting-delivery-report","title":"Orders Awaiting Delivery Report","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Orders Awaiting Delivery Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#overview_6","title":"Overview","text":"<p>Orders Awaiting Delivery Report shows the information about the Sales Orders that are awaiting (pending) to be delivered (shipped).</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#parameters-window_4","title":"Parameters Window","text":"<p>All filters refer to corresponding fields of the Sales Order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#sample-report-output_4","title":"Sample Report Output","text":""},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#sales-invoice-dimensional-report","title":"Sales Invoice Dimensional Report","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Sales Invoice Dimensional Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#overview_7","title":"Overview","text":"<p>This is a dimensional type of report that shows information about registered sales invoices (Sales Invoices in a status Completed or Voided) during a selected period of time.</p> <p>This report can display ratings of products and top customers based on the sales revenue, show profit and margin of sales and answer many other questions related to the company\u00b4s sales invoicing activity.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#parameters-window_5","title":"Parameters Window","text":"<p>Fields to note:</p> <ul> <li>Commercial Document: allows the user to filter results by Sales Representative field from the Sales Invoice window, which is normally inherited from Sales Order.</li> <li>Commercial File: allows the user to filter results by Sales Representative field from the Customer tab of the Business Partner window, which normally contains the person responsible for this customer (for example, account manager).</li> </ul> <p>Info</p> <p>In the majority of cases, filtering by the fields mentioned above gives the same results. They could differ if a customer has one main responsible person, but different sales team members can book orders. Or if a customer is moved from one sales representative to another. The new sales representatives might want to use the second filter to see the activities of all their customers (regardless of who closed the deal) while the old sales representatives might want to use the first filter to see the orders they closed, regardless of who manages the customer at present.</p> <ul> <li>Project: allows the user to show invoicing information for a particular project.</li> <li>Product Type: filter that displays results for selected Product Types.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/analysis-tools/#sample-report-output_5","title":"Sample Report Output","text":"<p>Columns to note:</p> <ul> <li>Currency column, ex. (EUR-\u20ac): percentage of the particular row Amount in the report Total Amount. All rows should sum up to 100%.</li> <li>Amount: is the net amount from the Sales Invoice converted to the report Currency.</li> <li>Cost: cost of the goods sold (as per the corresponding cost of the product).<ul> <li>There could be product transactions whose cost has not yet been calculated yet, therefore the cost of that transactions is estimated as a \"proportional\" cost based on the known transaction's cost.<ul> <li>In this case, the estimated cost is shown in red color.</li> </ul> </li> </ul> </li> <li>Profit: is the difference between Amount and Cost.</li> <li>M.%: sales margin as a ratio of Profit to Amount.</li> <li>Weight: of the invoiced product if specified in the Product window.</li> </ul> <p>How the estimated cost is calculated:</p> <p>In case there is not a calculated cost for some of the retrieved records, it is necessary to estimate it. In order to do so, a generic Unitary Cost for the records with calculated cost is retrieved and, using it, the estimation is performed. The formula works in the following way:</p> <p>Example: If there is a Product with an Invoice Line of 100\u20ac and it has a calculated cost of 30\u20ac, for a line of 200\u20ac, the estimated cost should be 60\u20ac.</p> <p>200\u20ac line net amount * (30\u20ac calculated cost/100\u20ac transactions with calculated cost) = 60\u20ac. (30\u20ac calculated cost/100\u20ac transactions with calculated cost) is the Unitary Cost.</p> <p>In a generic scenario, that is not dependent on any dimension like Product:</p> <p>Estimated Cost = Total Line Net Amount * (Total Calculated Cost/Total Line Net Amount of Transactions with Calculated Cost). Being (Total Calculated Cost/Total Line Net Amount of Transactions with Calculated Cost) the Unitary Cost</p> <p>This means that the estimation is dependent on the retrieved records. The more records there are and the more grouped they are, the more precise the estimation will be. If the report is split by different dimensions, the estimations can be different and, therefore, the totals can have a minor variation.</p> <p>There is also possibility to export this report to a PDF or a XLS file:</p> <p></p> <p>PDF format shows the same fields explained before, but in XLS format new fields are added related to selected invoice:</p> <ul> <li>Organization</li> <li>Business Partner Group</li> <li>Business Partner</li> <li>Document No.</li> <li>Invoice Date</li> <li>Product Category</li> <li>Product</li> <li>Product Search Key</li> <li>Unit Price</li> <li>Sales Representative</li> <li>Project</li> <li>Ship to Address</li> </ul> <p>At the top of the report, the secondary filters are now shown.</p> <p>Also, this report now shows the total of cost, profit, margin-% and quantity.</p> <p>At the end of the report, there is a new table showing the number of documents per document type.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/","title":"Sales Management - Getting Started","text":"","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#sales-management-getting-started","title":"Sales Management - Getting Started","text":"","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#overview","title":"Overview","text":"<p>Sales Management deals with all activities related to the customer sales process and corresponding reporting.</p> <p>This application area of Etendo covers Order to Shipment and Invoicing parts of Order to Cash business flow and Customer Returns business process. </p> <p>Info</p> <p>For Payments Management of Order to Cash see the Financial Management application area.</p>","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#order-to-cash-business-flow","title":"Order to Cash Business Flow","text":"<p>Order to Cash workflow manages the life-cycle of a sales process.</p> <p>Due to its complexity and different roles involved, it is convenient to split Order to Cash down into two main sub-processes:</p> <ol> <li> <p>Order to Shipment process starts when a customer requests a quotation or orders goods to the moment the warehouse staff ships the merchandise.</p> <p></p> </li> <li> <p>Customer Invoice to Cash continues the previous sub-process by invoicing customer deliveries and closes it by receiving payments from buyers.</p> </li> </ol> <p></p>","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#configuration","title":"Configuration","text":"<p>The following setup needs to be done before performing the process:</p> <ul> <li>Sales Products.</li> <li>Price configuration.</li> <li>Business Partners (Customers).</li> <li>Sales Quotation document type configuration.</li> </ul> <p>Sales products need to be configured prior to any sale in the application. Each product that is being sold needs to have a price in the sales price list in order to be selectable in any transactional document like a sales order or a sales invoice. Same way, each product that is being sold needs to be defined in a unit of measure (\"UOM\"), and in an alternative unit of measure (AUM) if required.</p> <p>Info</p> <p>For more information, visit Product Setup, Product and Pricing. </p> <p>Business Partners (customers) need to be configured prior any sales can automatically turn into a sales quotation or sales order. </p> <p>Info</p> <p>For more information, visit Business Partner Setup and Business Partner.</p> <p>Above configuration is one part of the overall business setup flow within the Master Data Management setup.</p> <p>Finally, the Quotation document type requires a sales order document type (i.e. Standard Order) to be defined as Document Type for Order to allow the conversion of a sales quotation into a sales order.</p> <p>Note</p> <p>It is not required to perform any additional setup for the Sales Management application area if Food &amp; Beverage (F&amp;B) sample client shipped with Etendo by default is going to be used to explore it. The sample data set already contains the roles, warehouses, business partners, products and prices pre-configured.</p>","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#execution","title":"Execution","text":"<p>In Sales Management the Order to Cash business process is executed as follows.</p> <p>Customers can ask directly for a Sales Order or request a Quotation. If the Business Partner asks for a quotation, the sales staff:</p> <ul> <li>Creates a new document in the Sales Quotation window and looks up the customer name in the Business Partner field. If the Business Partner does not exist, it is entered in the application with the Business Partner window.</li> <li>Then Sales staff fills the Sales Quotation window. The transaction document is set to Quotation by default. And continues by adding for each product a line with the product, quantity and if needed its attribute (size and/or color and/or serial number, etc.).</li> <li>Once the quotation is ready, it is booked. The Document Status of the quotation changes to Under Evaluation. The Quotation can be printed and sent to the Business Partner by email.</li> <li>When the Quotation is accepted by the Business Partner a sales order can be created based on this quotation. When this is done the status of the quotation changes to Closed - Order created and the Sales Order can be printed and sent to the Business Partner by email as a confirmation.</li> </ul> <p>If the Business Partner places an order directly, the sales staff:</p> <ul> <li>Creates it with the same Sales Order window setting the Transaction Document to the desired type of Order (Standard Order, Warehouse Order). Lines are filled as in the case of the Quotation. Once the Sales Order is ready, it is processed by pressing on the Book button.</li> <li>When the Sales Order is processed, it reserves the material for its shipment.</li> <li>To review past sales of the Business Partner Sales staff uses Sales Dimensional Report.</li> </ul> <p>Warehouse staff:</p> <ul> <li>Looks for orders pending for preparation in the Create Shipments from Orders window or with the help of Orders Awaiting Delivery Report.</li> <li>The Warehouse staff can create a Shipment in 2 ways:</li> </ul> <p>With the Create Shipments from Orders window. It creates a shipment completed for the selected Sales Orders.</p> <p>With the Goods Shipment window in which the Warehouse staff creates the shipment in a manual way.</p> <ul> <li>Completed shipment updates stock information (product levels go down) and can be posted to create the accounting entries of the shipment.</li> <li>Shipments Dimensional Report is used to review past shipments to the Business Partner.</li> </ul> <p>Finance staff can generate invoices in different ways:</p> <ul> <li>With the Generate Invoices window, in which it generates invoices in bulk for all pending to be invoiced (based on their invoicing rules) Sales Orders.</li> <li>With the Create Invoices from Orders window. It shows Orders pending to be invoiced and creates invoices for the selected Sales Orders.</li> <li>With the Sales Invoice window in which the Finance staff creates the invoice in a manual way.</li> <li>Processed Sales Invoice creates the Payment Plan of the invoice, the Tax of the invoice and can be posted to create the accounting entries of the invoice. Afterwards, the payment plan can be modified.</li> <li>Orders Awaiting Invoice Report helps Finance staff to plan and verify invoicing of the Business Partners.</li> <li>Finance staff is able to review past customer invoicing information in the Sales Invoice Dimensional Report.</li> </ul> <p>Sales revenues expenses can be recognized in different ways:</p> <ul> <li>In most cases companies would want to recognize revenues as soon as an invoice is completed. For instance a food and beverage distributor selling beverages would want to recognize the revenue as soon as the goods leaves the warehouse. In Etendo, in this situation, revenue is generated as part of the accounting of the sales invoice corresponding to the transaction.</li> <li>Under some circumstances, however, it is required to defer the revenue recognition. For instance, a food and beverage distributor selling and invoicing a product that they will only be able to deliver to their customers in 3 months needs to defer revenue recognition till the delivery.</li> </ul> <p>In Etendo, in this situation, the revenue can be deferred until a given starting period and within a given number of periods by entering a revenue deferred plan in the sales invoice lines.</p> <p>Info</p> <p>For a full description of this functionality visit How to manage deferred revenue and expenses article.</p> <p>Credit limit for business partner</p> <ul> <li>Each Business Partner can be set up with a Credit Line Limit. When customer balance (amount that is outstanding for payment for the customer) is higher than the credit line limit a corresponding information message is shown when a business partner is selected during the creation of a sales order, sales invoice or goods shipment. This way Etendo assists in risk analysis while placing customer orders or executing other steps in the Order to Cash business flow.</li> </ul> <p>Finally, the finance staff is in charge of recording and managing the customer payments:</p> <ul> <li>When a payment is received against an invoice it can be recorded in the Sales Invoice window by using the Add Payment button. It is also possible to receive a prepayment for the Sales Order.  For more information about payment management documentation visit the Financial Management and in the How to manage prepaid invoices in receivables.</li> </ul>","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#customer-returns-business-flow","title":"Customer Returns Business Flow","text":"<p>Customer Returns workflow manages the business processes for returning items back from customers either for credit</p> <p></p> <p>or for replacement.</p> <p></p>","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#configuration_1","title":"Configuration","text":"<p>The following configuration options are available in this process:</p> <ul> <li>Return reasons</li> <li>Condition of the goods</li> <li>Accounts for Cost of Goods Sold (COGS) for returns and Revenue for returns</li> </ul>","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#execution_1","title":"Execution","text":"<p>In Sales Management the Customer Returns business process is executed as follows. Customers can request a return material for whatever reason. Sales staff:</p> <ul> <li>Creates a new document in the Return from Customer window and looks for the customer name in the Business Partner field.</li> <li>And continues by adding lines clicking the button Pick/Edit lines. Picks Goods shipment lines and edits the quantity the customer wants to return, price and return reasons.</li> <li>Once the Return Material document is accepted, process it by clicking the button Book. The status of the document changes from Draft to Booked.</li> </ul> <p>Warehouse staff:</p> <ul> <li>Creates a new document in the Return Material Receipt window and looks for the vendor name in the Business Partner field.</li> <li>And continues by adding lines clicking the button Pick/Edit lines. Picks lines created in the Return from Customer window. If needed, edit the quantity received and its location (storage bin).</li> <li>Once the document is ready, process it by clicking the button Complete. The status of the document changes from Draft to Completed</li> <li>Completed receipt updates stock information (product levels go up).</li> </ul> <p>Finance staff: To invoice these documents can do it from several windows / processes:</p> <ul> <li>With Return from Customer window where a new button Create Credit might appear or not based on the original sales order. If the order is already invoiced then it will be present, if not - it won't. Using this button it is possible to invoice the return order following the standard process, that is, depending on the invoice terms.</li> <li>With the same Create Credit button it is also possible to create an invoice and leave it as credit to be used later.</li> <li>Using Generate Invoices process: if the invoice terms is Customer Schedule After Delivery and both sales orders and RMAs exist the process groups all of them in one standard Sales Invoice (not in a Return Material Sales Invoices).</li> <li>With the Sales Invoice window by picking lines and either grouping them from standard sales orders and return orders or by creating individual Return Material Sales Invoices only from return orders.</li> <li>With the Sales Invoice window creating a Return Material Sales Invoice making sure that the amount of the Invoice is negative.</li> </ul>","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/getting-started/#relationship-with-other-application-areas","title":"Relationship with other application areas","text":"<p>Sales Management has a connection with other application areas:</p> <ul> <li>Warehouse Management as shipment changes stock quantity and its value.</li> <li>Financial Management in terms of managing payments.</li> <li>Material Requirement Planning (MRP) because pending sales orders are one of the inputs for the production process.</li> </ul>","tags":["getting started","sales management","invoice","quotation"]},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/","title":"Sales Management Setup","text":""},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#overview","title":"Overview","text":"<p>This section describes the different windows that are necessary to set up the sales process in Etendo. These are:</p> <p>Condition of the Goods </p> <p>Sales Region </p> <p>Commission </p> <p>Channel </p> <p>Sales Campaign </p> <p>Reject Reason </p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#condition-of-the-goods","title":"Condition of the goods","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Setup</code> &gt; <code>Condition of the goods</code></p> <p>In this window, the user defines in which status the goods come from the customer. These values are used in the Return Material Receipt window.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#sales-region","title":"Sales Region","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Setup</code> &gt; <code>Sales Region</code></p> <p>In this section, the user can create sales regions to be used in sales operations and define a sales region to be used in the sales process.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#commission","title":"Commission","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Setup</code> &gt; <code>Commission</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#overview_1","title":"Overview","text":"<p>The Commission functionality in Etendo begins with the Commission window, where users configure the general settings for commission calculation which allows defining how and when commissions are going to be calculated and to whom they are going to be paid. Commissions can be calculated based on the sales defined in two documents: Sales Orders and Sales Invoices. From the Commission window, more detailed criteria are defined, including filters by business partner, product, or region, along with the actual commission structure. A key feature is the ability to assign a sales representative directly when creating sales documents (orders and/or invoices), which allows Etendo to link those transactions to the appropriate commission plan and ensures accurate filtering. </p> <p>Once all conditions are set, the system generates the corresponding commission, which is displayed in the Commission Payment window, where users can review a detailed breakdown of the calculation and even generate a purchase invoice to process the commission payment to the sales representative.</p> <p>To sum up, the overall flow is:</p> <ul> <li>Define the commission in the Commission window.</li> <li>Create the Sales Orders and Sales Invoices linked to a sales representative.</li> <li>Generate the commission in the Commission window for a given sales representative by using the process button Generate Commission.</li> <li>and then from the Commission Payment window, create an invoice if required by using the process button Create Invoice.\u00a0</li> </ul> <p>Prior to use commissions, some configurations need to be done:</p> <ul> <li>Create a sales representative. The way to do that is:<ul> <li>First it is possible to create an Etendo user, as the sales representative can be an Etendo user who logs in in Etendo and issues sales orders/invoices.</li> <li>Then create a Business Partner. It is required to create a business partner because the sales representative could be someone who is going to issue an invoice in order to get the commissions paid.\u00a0 If that is the case,\u00a0 that business partner should be marked as Vendor in the Vendor tab and have a PO Payment Method, a PO Payment Term and a Purchase Pricelist defined for it. Besides, it is required to mark the Business Partner as Sales Representative in the Employee tab.</li> <li>And finally if the user was created, link them both. The way to do that is to select the business partner just created in the field Business Partner of the User window. </li> <li>Create a Product and get it part of a Price List without pricing information as part of the required concept when the commission purchase invoice is created. </li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#header","title":"Header","text":"<p>The user can define a sales commission to be used in the sales process. The header lists main terms that will be used to calculate the commission:</p> <ul> <li>Business partner / Sales representative: Used to create a purchase invoice or used to calculate the commission</li> <li>Frequency: The process takes the orders/invoices that fits the corresponding period.</li> <li>Invoice product: If an invoice is required, the new invoice will have this product.</li> <li>Basis Document: Whether the commission is calculated based on invoices or orders.</li> <li>Last Run Date: Last date when the process Generate Commission was performed.</li> <li>Basis Status: Whether the commission is calculated based on all documents or fully paid documents.</li> <li>Basis Amount: Whether the commission is calculated based on net amount or margin.</li> <li>List details: See the result of the commission grouped or line by line. When the commission is calculated based on margin the list details is always checked.</li> <li>Cascade: Able to manage complex commissions (exclude some invoice/order lines, apply different multiplier quantity/amount for some invoice/order lines, exclude products from already defined product cathegories). When this field is checked the result of the commission is grouped on line by line.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#lines","title":"Lines","text":"<p>The user can edit the selected commission amount.</p> <p>Line tab allows the user to define in deep the conditions of the commission:</p> <p></p> <ul> <li>Exclude: order/invoice lines that meet the conditions set in the commission line will not be taken into account for calculating the commission. This flag will only be visible when the Cascade field is checked in the header.</li> <li>Based on Sales Rep.: If the flag is marked, only orders/invoices that have the same sales representative as in the header are taken into account to calculate the commission.</li> <li>Business partner category: Only orders/invoices with business partners that belong to that category are taken into account to calculate the commission.</li> <li>Business partner: Only orders/invoices with that business partner are taken into account to calculate the commission.</li> <li>Product category: Only orders/invoices with products that belong to that category are taken into account to calculate the commission.</li> <li>Product: Only orders/invoices with that product are taken into account to calculate the commission.</li> <li>Subtract Quantity: The total quantity calculated based on the above criteria is subtracted by this quantity therefore from this number Etendo begins to calculate the commission.</li> <li>Multiplier Quantity: Price multiplying the result of the above quantity.</li> <li>Subtract Amount: The total net amount calculated based on the above criteria is subtracted by this amount therefore, from this number Etendo begins to calculate the commission.</li> <li>Multiplier Amount: cohefficient (percentage) multiplying the result of the above amount. </li> </ul> <p>Let's see some examples:</p> <ul> <li> <p>I want to pay 10 euros per unit sold over 3000 units:  Subtract Quantity: 3000 Multiplier Quantity: 10 Subtract Amount: The total amount calculated based on the above criteria (business partner, etc) is subtracted by this amount therefore, from this number Etendo begins to calculate the commission. Multiplier Amount: percentage multiplying the result of the above amount</p> </li> <li> <p>I want to pay 15% per amount sold over 25000 euros: Subtract Amount: 25000 Multiplier Quantity: 0.15 Positive Only: If the result of, for example, (Total amount - Subtract Amount) is lower than zero then it is not taken into account for the commission.</p> </li> </ul> <p>Info</p> <p>Please note that quantity and amount fields can be used in combination.</p> <ul> <li>A complex commission example:</li> </ul> <p>I want to calculate commission at 5% for business partner Healthy Food Supermarkets, Co.. I want to exclude soft drinks products. For 'Cola 0.5L' I want the commission to be 10%. Not 10% plus the 5% calculated in the first line. So this line will remove what was calculated previously for 'Cola 0.5L'. So, in the header you will have to check Cascade. In lines tab, the first line will have in business partner Healthy Food Supermarkets, Co. and multiplier amount 0.05. In lines tab, the second line will have exclude marked and in product 'Cola 0.5L'. In lines tab, the third line will have in product 'Cola 0.5L' and multiplier amount 0.10.</p> <p>Finally, the result of the commission will be the combination of these three lines.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#buttons","title":"Buttons","text":"<ul> <li>Copy Lines: Allows to copy the configuration of other commissions.</li> <li>Generate Commission: Based on the header and lines, the commission is generated. For example, if Monthly frequency is defined and the starting date is 01/03/2025 only orders/invoices of March will be taken into account.     </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#channel","title":"Channel","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Setup</code> &gt; <code>Channel</code></p> <p>In this section, the user can create specific sales channels to be used in sales operations and define a sales channel to be used in the sales process.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#sales-campaign","title":"Sales Campaign","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Setup</code> &gt; <code>Sales Campaign</code></p> <p>In this section, the user can create specific sales campaigns to be used in sales operations and define a sales campaign to be used in the sales process.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/setup/#reject-reason","title":"Reject Reason","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Setup</code> &gt; <code>Reject Reason</code></p> <p>In this window, the user defines the reasons to reject quotations. These values are used in the Sales Quotation window.</p> <p></p> <p>This work is a derivative of Sales Management by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/","title":"Sales Management","text":""},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#overview","title":"Overview","text":"<p>Sales Management deals with all activities related to the customer sales process and corresponding reporting.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#sales-quotation","title":"Sales Quotation","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Sales Quotation</code></p> <p>A Quotation is not a sales order document type but a different document type named \"Quotation\" linked to a specific document sequence.</p> <p>In order to be able to create a sales order from a sales quotation, the quotation document type needs to be properly configured. That means that it requires a document type (i.e. Standard Order) to be defined in the field \"Document Type for Order\".</p> <p>The overall flow is the following:</p> <ul> <li>Create a sales quotation.</li> <li>Create a sales order from the sales quotation or reject the quotation.</li> </ul> <p></p> <p>1. Actions in quotations:</p> <ul> <li>Book: This action allows the user to process the quotation.</li> <li>Reactivate: This action allows the user to add, remove or modify a quotation line/s.</li> <li>Create a sales order: This action converts the quotation into a sales order.</li> <li>Reject: This action cancels/rejects the quotation</li> </ul> <p>2. Statuses of the quotation:</p> <ul> <li>Draft: Enter, remove and modify lines is allowed in this status. This status is reached after clicking New or reactivating the document.</li> <li>Under evaluation: After booking the quotation. In this status the document cannot be changed. Further actions are:  <ul> <li>Reactivate </li> <li>Create a sales order </li> <li>Reject the quotation</li> </ul> </li> <li>Closed - Order created: After creating the sales order the document turns into this status. No further actions are allowed.</li> </ul> <p>Info</p> <p>One quotation, one sales order. Several sales orders cannot be created from the same quotation.</p> <ul> <li>Closed - Rejected: When the quotation is finally not accepted by the customer. It is mandatory to enter a reject reason. No further actions are allowed.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#header","title":"Header","text":"<p>The user can create a sales quotation and process it when ready.</p> <p></p> <p>The header lists the main terms and conditions related to the customer quotation that are used in the heading of its printed copy and further in its order, shipment and invoicing process. In the majority of cases, the main and the only field needed to create a new quotation is the Business Partner field. All other fields are automatically populated based on the selected Business Partner, logged in User preferences and other system default parameters.</p> <p>Some other fields to note are:</p> <p>Valid Until: This field provides information about the deadline of the validity of the quotation. Reject Reason: This field informs about the reason why a quotation has been rejected by a customer. It is mandatory when rejecting a quotation.</p> <p>Things to consider:</p> <p>A new button Create Order appears when the status is Under Evaluation. When pressing the button, a sales order is created based on the quotation.</p> <p>Info</p> <p>Taxes are always recalculated based on the transaction date (Date you execute the button).</p> <p>The status of the newly created sales order is Booked. It is possible to change the \"Invoice Terms\" of the sales order as well as to \"Reactivate\" it if the sales order needs to be modified.</p> <p>Prior to create a sales order, the system shows a flag named Firm Quote which is marked as default:</p> <p></p> <ul> <li>If selected, it establishes a commitment with the customer for the supply of a given quantity of goods at a quoted price, therefore the sales order will be identical as the quote.</li> <li>If not selected, a change in the price list later on will modify the quoted prices, same way in the sales order. Discounts and Promotions will also be recalculated applying the new ones based on the transaction date (the Date the button is executed).</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#lines","title":"Lines","text":"<p>Add products to be included in your sales quotation. Each product can be added by creating a new line. Lines tab lists each product to be quoted and its characteristics. Book button completes the sales quotation when all the products are entered.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#line-tax","title":"Line Tax","text":"<p>This tab shows the taxes related to the quotation line. Line Tax read-only tab details tax information for each line of a sales order based on its Tax field which is automatically pre-filled according to the Taxes Setup.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#basic-discounts","title":"Basic Discounts","text":"<p>This sales quotation tab lists information about the discounts automatically applied and/or manually entered for the document.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#tax","title":"Tax","text":"<p>The user can edit the taxes applied to the quotation. It summarizes tax related information for the whole sales quotation. Contains as many records as tax rates used in the quotation.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#advanced-sales-quotation","title":"Advanced Sales Quotation","text":"<p>Info</p> <p>To be able to include this functionality, the Sales Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Sales Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Sales Extensions - Release notes.</p> <p>Through this window, the user can generate sales quotations and create the corresponding orders from those quotations.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#header_1","title":"Header","text":"<p>The main header numerates the terms and conditions related with the sales quotation which are used in the printed copy header and, later on, in its order, goods receipt and invoice process.</p> <p></p> <p>The main tab lists the main terms and conditions related to the sales quotation that are used in the header of the hard copy and later in the order, packing slip and invoicing process. In this section, the fields to fill in are the following:</p> <ul> <li>Transaction document: this will be the specific document type to use. In this case, it is called \"Quotation\".</li> <li>Document No: quotation identification number is generated automatically.</li> <li>Quotation date: the date of the quotation. By default, it will be the current date.</li> <li>Business partner: the client to whom the quotation is being made will be selected.</li> <li>Partner address: in the drop-down list, select those customer addresses that have the \"Shipping address\" option checked.</li> <li>Price list: select among all the available sales rates. By default, it brings the rate configured for that business partner in its master.</li> <li>Link Order (Check box): if this check is checked, when executing the \"Change customer, rate and currency\" process, the \"Origin Order\" field of the new quotation is created modifying the previous one. It will be set with the number of the original quotation, i.e. the one being modified, which will be in \"Closed-rejected\" status. In turn, a record will be generated in the History tab of this last (original) quotation, each time there are modifications related to it.</li> <li>Quantity/Time Unit: the validity date of the quotation is defined based on a period of time: 10 days, 1 week, 2 months, etc.</li> <li>Valid Until: expiration date of the quotation stipulated according to the Quantity and Time Unit fields.</li> <li>Delivery time/Unit of Measure of Delivery Time: the delivery date is defined from a period of time. For example: 3 weeks.</li> <li>Payment method: filled by default with the payment method associated to the selected business partner with the possibility to be edited.</li> <li>Payment terms: filled by default with the payment method associated with the selected business partner with the possibility to be edited.</li> <li>Warehouse: the warehouse from which the products to be delivered to the customer will be shipped.</li> <li>Reject reason: this is a drop-down menu where a rejection reason can be selected in case the quotation is rejected. The different rejection reasons will be defined by the user.</li> <li>Sales representative: you can select from a drop-down list the employee who is making the quotation to the customer. It must be configured as a business partner with the check \"Employee\" and \"Is sales representative\".</li> <li>Origin order: when the \"Change customer, rate and currency\" button is executed and the \"Link order\" check is checked, the new quotation created is set in this field, modifying the previous one, with the number of the original quotation, that is, the one being modified; which will be in \"Closed-rejected\" status.</li> <li>Description: This is a space to write additional related information.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#status-bar","title":"Status bar","text":"<p>This bar shows the following information:</p> <ul> <li>The possible document statuses for a quotation will be:</li> </ul> <p>Draft: allows entering, delete and modify lines in this status. This status is reached after clicking on the new button or when reactivating the document. Under evaluation: this status is reached after registering the quotation. At this stage, the document cannot be modified. Closed - Order created: after creating the sales order, the document reaches this status. Once reached, no further actions are allowed. Closed - Rejected: this status appears in case the quotation is rejected by the customer. It is mandatory to enter a reason for rejection. Once this status is reached, no further actions are allowed. </p> <ul> <li>Total gross amount: indicates the final monetary amount of the quotation, including taxes.</li> <li>Total net amount: indicates the final monetary amount of the quotation, excluding taxes.</li> <li>Currency: shall indicate in which currency the quotation is defined. This field is filled in according to the selected tariff.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#lines-tab","title":"Lines tab","text":"<p>Once the header is completed, the lines must be added.</p> <p>Basic discounts  -Basic discount: this is the percentage reduction applied to the list price. -Cascade: this is any additional discount based on the total remaining after applying previous discounts. Active: this is a check that indicates whether this record is available for use or disabled.</p> <p>Tax  This tab summarizes the information related to the taxes involved in the quotation. It contains as many records as there are tax categories involved in the quotation.</p> <ul> <li>Line number: indicates the position of the line in the document.</li> <li>Tax: indicates the tax rate that is applicable to a given product.</li> <li>Taxable amount: indicates the amount on which the tax will be calculated.</li> <li>Tax amount: indicates the amount of tax resulting from the Tax and Taxable amount fields.</li> </ul> <p>History tab When the \"Change customer, rate and currency\" button is clicked on a quotation and the \"Link order\" check is checked, a record is created in this tab with the data of the new quotation created and, in turn, one for each of the successive modifications to the original quotation.</p> <p>The information shown in each record is as follows:</p> <ul> <li>Document number of the new quotation.</li> <li>Date of quotation.</li> <li>Original amount of the quotation.</li> </ul> <p></p> <p>Actions</p> <ul> <li>Register: this action allows the user to generate the budget.</li> <li>Reactivate: this action allows the user to add, remove or modify one or more lines of the quotation.</li> <li>Create a sales order: this action converts the quotation into a sales order. To do so, the document type of the quotation must be configured correctly. This means that it requires a document type (i.e. standard order) to be defined in the \"Order document type\" field. This button appears when the status of the quotation is \"In evaluation\".</li> </ul> <p>The status of the newly created sales order will be \"Registered\". In this instance, it is possible to change the \"Billing Terms\" as well as \"Reactivate\" it if it needs to be modified.</p> <p>Info</p> <p>Only one sales order can be created for the same quotation.</p> <ul> <li>Reject: this action allows to cancel or reject the quotation. A reason for rejection is mandatory for this action.</li> </ul> <p>Etendo also allows generating partial sales orders either for the lines the user needs to convert, or for the amount of the product needed to convert. Apply this functionality by selecting the necessary line/s and by editing the product amount in the Amount to generate tab.</p> <p></p> <p></p> <p></p> <p>The budget will be kept available to generate future orders with the remaining amount. To create an order with the remaining amount, follow the same procedure from the Sales Quotation window.</p> <p></p> <p></p> <p>Change customer, rate and currency button</p> <p>This process allows changes to be made to the business partner, rate and/or currency of the document, whether the document is in draft or registered. One or several variables can be modified at the same time. If the business partner is changed, the tax will be updated in the lines (If necessary).</p> <p>In the pop-up window opened when this process is executed, the user will see the \u201cdo not apply conversion rate\u201d check. If changing the quotation currency is intended, with the conversion to the official exchange rate included, the box must be unchecked when selecting the Currency option. Otherwise, the box must be checked in order for the system to show the quotation amount in the intended currency, defining prices in accordance with the price list configured by default in such currency.</p> <p>Info</p> <p>Once executed, the quotation will be closed and a new one will be created with the changes made in the state \u201cunder evaluation\u201d. In the quotation closed, a default rejection reason is set and if there is none, the first one found is set.</p> <p></p> <p>Adjust button</p> <p>This process allows the user to adjust the price of one or more budget lines, either by applying discount or surcharge through an adjustment factor.</p> <p>Info</p> <p>This can only be executed while the document is in draft status.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#bulk-completion","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or close multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#sales-order","title":"Sales Order","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Sales Order</code></p> <p>A sales order is a document that specifies products and/or services ordered by a specific business partner (customer), as well as the price and terms and conditions.  </p> <p>The Sales Order window allows the user to register sales related documents with different purposes which is regulated by the Transaction Document field. Depending on the chosen value, the consequences when booking the sales order are different. These are the types of sales order documents that are available:</p> <p>Standard Order: When the transaction document is standard upon booking of the document, there are no additional documents created. Goods shipment and sales invoice still have to be created.</p> <p></p> <p>Warehouse Order: A warehouse order is used for the situation where the good shipment takes place at the time that the sales order is booked (for example, the customer is taking goods right away directly from the warehouse). This also means that both Documents have the same Order/Delivery dates.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#header_2","title":"Header","text":"<p>The sales order header allows the user to create a sales order and process it when ready. This header lists the main terms and conditions related to the customer order that are used in the heading of its printed copy and further in its shipment and invoicing process.</p> <p></p> <p>It is possible to create new Standard Sales Order, Warehouse and POS Orders as a conversion from an existing Sales Quotation.</p> <p>While creating a new sales order in this window:</p> <p>Info</p> <p>In the majority of cases, the main and the only field needed to create a new sales transaction document is the Business Partner field. All other fields are automatically populated based on the selected Business Partner, logged in User preferences and other system default parameters.</p> <p>Some other fields to note are:</p> <p>Scheduled Delivery Date: indicates the date that the order should be shipped to the customer. Defaulted to the current date. Warehouse: indicates from which warehouse an order must be shipped. Defaulted to the session value from the top navigation User Preferences menu. Delivery Status: indicates in % how much quantity has been delivered. Invoice Status: indicates in % how much quantity has been invoiced. Reservation Status: defines whether the sales order is fully reserved (all lines fully reserved) or partially reserved.</p> <p>Info</p> <p>Reservations are disabled by default. To be able to use them please insert a new Preference using property Enable Stock Reservations with value Y. For more information, see the Stock Reservations section.</p> <p>Payment Status: indicates in % how much of the total of the order has been paid.</p> <p>Below fields are defaulted according to the Customer and Location tabs of the Business Partner window.</p> <p>Payment Method: indicates how an order (and invoice) should be paid.</p> <p>Payment Terms: defines when a sales invoice generated from this order needs to be paid.</p> <p>Invoice Terms: defines how a Business Partner is invoiced and the frequency of invoicing. It is used by automated processes: Generate Invoices and Create Invoices from Orders and by Create Lines From button in the Sales Invoice.</p> <p>Different Invoice Terms are:</p> <p>After Delivery: Products of the sales order are invoiced as soon as they are shipped, for example, if there is partial shipment of the order it is invoiced. In this case several sales invoices might be created for one sales order corresponding to all goods shipped before each invoicing run. After order Delivered: The invoice will be generated after all products on the sales order have been shipped, so one order - one invoice. Customer Schedule After Delivery: Instead of sending out invoices each time any sales order product gets delivered, one invoice is created that is combining the different deliveries for a certain customer according to the defined schedule (weekly or monthly on a particular day). Do Not Invoice: No invoice is generated automatically. Normally used when there is some external event that triggers creation of the invoice (for example, the VIP customer tells that it is okay to do so). Immediate: The invoice is generated with the next run of the automated generation of invoices regardless of whether any shipment of ordered products took place or not. Sales Representative: Sales person responsible for the customer in the order. It is normally used to reflect the person who booked the order. Invoice Address: Address that is used upon generating an invoice. Delivery Location: Address that is used when generating a shipment. If it is not specified, the Partner Address field is used.</p> <p>There are 3 ways of entering lines into a sales order:</p> <ul> <li>Copying selected products from a history of products ordered by this customer using the Copy Lines button.</li> <li>Copying all products from the chosen orders selected in the history of all orders for different business partners using the Copy from Orders button.</li> <li>Manually, line by line, in the Lines tab.</li> </ul> <p></p> <p>Sales order prepayment Once a sales order is booked, it is possible to prepay an order by using the process button \"Add Payment\".</p> <p>Same as described for Sales Invoice Payment, \"Add Payment\" window allows to fully or partially prepay the order created more than once, and even pay other orders and/or invoices at the same time.</p> <p></p> <p>It is also possible to add any type of expense related to the payment of that order as a G/L item and even use available credit previously generated for the customer.</p> <p></p> <p>Once all of the above is properly fulfilled, the payment can be processed and deposited from the financial account.</p> <p>Warning</p> <p>It is important to notice that the sales invoice created from the order will inherit the payment done for the order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#sales-order-cancel-and-replace-process","title":"Sales Order Cancel and Replace Process","text":"<p>Sales order cancel and replace is an advanced feature hidden by default, which can be enabled through a preference named \"Enable Cancel and Replace\u201d.</p> <p>Once enabled, a new process button named \"Cancel and Replace\" is displayed only for booked sales orders.</p> <p>Cancel and Replace feature allows to close a booked sales order and to replace it by a \"copy\" of it in \"Temporal\" status, so it can be modified.</p> <p>For instance:</p> <ul> <li>\"Payment Terms\", \"Order Date\" and some other fields can be changed if required</li> <li>and, at \"Lines\" tab level, it is possible to add new order lines. It is also possible to modify or remove existing lines which do not have ordered quantities already shipped/delivered.</li> </ul> <p>Once a temporary new order has been changed, it is possible to confirm the changes by clicking the \"Confirm Cancel and Replace\" process button.</p> <p>Sales order cancel and replace process ends with three documents:</p> <ul> <li>The Original Order (or replaced order) in status \"Closed\".   This order is the order cancelled and replaced by a new one. No further action can be executed on this order.</li> <li>A New Order (or replacement order) in status \"Booked\".   This order is a copy of the original order, created to replace the original one by including the changes required.</li> <li>And an Inverse Order in status \"Closed\".   This order cancels the original one, therefore it is a copy of it but with the opposite sign. No further action can be executed on this order.</li> </ul> <p>Replacement order document number is the replaced order document number and a suffix that is the number of times the order has been cancelled and replaced.</p> <p>In case the number of times is only one, the replacement order document number is [Replaced/Original order document number-1].</p> <p>It is also possible to cancel and replace a replacement order. In that case, the new replacement order document number is [Replaced/Original order document number-2].</p> <p>Same way, inverse order document number is replaced with order document number and a suffix, that is R.</p> <p>There are some flags and fields located under the \"More Information\" section, at sales order level, that have information about the relations between the different orders involved in the cancel and replace process.</p> <p>The Replaced (original) Order has the below listed flag and field:</p> <ul> <li>IsCanceled, this is the flag that indicates that the original order has been cancelled.</li> <li>Replacement Order, this field stores the document number of the order that replaces the original order cancelled.</li> </ul> <p>The Replacement (new) Order has the below listed fields:</p> <ul> <li>Replaced Order, this field stores the document number of the order replaced, that is the original order.</li> </ul> <p>The Inverse Order has the below listed fields:</p> <p>IsCanceled, this is the flag that indicates that this is as well, a canceled order.</p> <p>Canceled Order, this field stores the document number of the original order canceled by the inverse order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#lines_1","title":"Lines","text":"<p>Lines tab allows the user to add the products to be included in your sales order. Each product is added by creating a line. Lines tab lists each product ordered and its characteristics.</p> <p></p> <p>Fields to note:</p> <ul> <li>Ordered quantity, or Operative Quantity if the product has an alternative unit of measure (AUM) configured. This is the quantity needed of the product/item.</li> <li>Product's UOM, or product's Alternative UOM depending on product configuration in regards to unit of measure.</li> <li>Attribute Set Value: this field is displayed if the product in the line has attributes (color, size, serial number or several of them together, etc).</li> <li>Discount: it indicates the discount applied as a percentage of the List Price.</li> <li>Invoiced Quantity and Delivered Quantity: these are shown on the Status Bar when the line with a product is saved and gets updated when an invoice or shipment related to this line is issued.</li> <li>Warehouse Rule: Definition of a Warehouse Rule to be applied when the goods shipment is automatically generated. This rule overwrites any one defined in the warehouse. If no warehouse rule is defined in the sales order, the rule defined in warehouse is applied.</li> <li>Cancel Discounts and Promotions: With this checkbox, it is possible to cancel promotions previously defined in the Discounts and Promotions window. Only these ones, not the discounts defined in the Basic Discount window.  If this box is checked, these promotions for this line are cancelled; otherwise, they are calculated normally.</li> </ul> <p>Explode button is shown when selecting a line with a non-stockable BOM product and the product has not already been exploded. When exploding a product, the bill of materials components that the selected product consists of are shown in the order. Once you have exploded it, you cannot comprime it. You should delete all the lines (first bill of materials components and then the BOM product), and insert again the non-stockable BOM product.</p> <p>Book button completes the sales order when all the products are entered. If there are non-stockable BOM products and they have not been exploded, the Book process will explode them.</p> <p>Close button actions closes an order, which implies that :</p> <ul> <li>no further actions can happen but to prepay that order if applicable, if a fully delivered sales order is closed</li> <li>ordered quantity changes to delivered quantity and no further actions can happen but to prepay that order, if a partially delivered sales order is closed</li> <li>ordered quantity changes to 0 and no further actions can happen, if a not delivered sales order is closed</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#stock-reservations","title":"Stock Reservations","text":"<p>Sales Order lines can be reserved when the sales order is booked and is pending to deliver.</p> <p>Fields to be noted:</p> <ul> <li> <p>Stock Reservation: Defines if it is desired to automatically reserve the sales order line when it is booked. Available values are:</p> <ul> <li>Manual: No reservation needs to be generated automatically. So when the order is booked you manually create the reservation</li> <li>Automatic: The reservation is automatically created and processed, reserving the available stock. This option reserves stock from any of the available warehouses belonging to the organization of the created sales order, not only from the warehouse defined in the order header.</li> <li> <p>Automatic - Only default warehouse: The reservation is limited only to the warehouse specified in the header of the order. This allows optimizing inventory allocation and ensuring that products are allocated according to the warehouse preferences defined in each transaction.</p> <p>Info</p> <p>This last option is only available if the Automated Warehouse Reservation module is installed, part of the Warehouse Extensions Bundle. To do that, follow the instructions from the marketplace: Warehouse Extensions Bundle.</p> </li> </ul> </li> <li> <p>Reservation Status: Defines whether the line is Fully Reserved or Partially Reserved or Not Reserved.</p> </li> </ul> <p>Manage Reservation: Pick and Execute</p> <p>Using the Manage Reservation button is possible to open a Pick and Execute window to create and modify reservation for the Sales Order Line. The grid shows all the available stock that can be delivered and the pending to receive purchase orders.</p> <p>In the grid, it is possible to select and set the desired quantity on any available stock. There are validations to avoid setting quantities higher than the available for the specific stock or than the ordered quantity. The Done button will create and process a reservation if none exists with the selected options, note that if the reservation does not exist and the Done button is pressed without selecting any stock or selecting a quantity below the ordered quantity, when the reservation is processed the system will reserve the remaining quantity with the available stock. If a reservation already exists, the reserved stock will appear automatically selected and the Done button will update the reservation with the changes done. It is also possible to flag a stock as allocated.</p> <p>Warning</p> <p>When the selected Product has the flag Variable Quantity set as true, it is possible to Reserve more Quantity than the Quantity ordered. But be careful, when a Shipment is generated against this Order Line and it is Completed (with the same Quantity or more than in the Order Line), the Reservation will be closed and the Reserved Quantity will be set as the same amount as the Order Quantity to prevent further inconsistency problems. So, it is possible to Reserve more Quantity than Ordered when a Product is set as Variable Quantity, but the Reservation will be set as the original Ordered Quantity when a Shipment is made.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#line-tax_1","title":"Line Tax","text":"<p>For each sales order line, Etendo automatically populates the line tax related information in this tab.</p> <p>Line Tax read-only tab details tax information for each line of a sales order based on its Tax field which is automatically pre-filled according to the Taxes Setup.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#reserved-stock","title":"Reserved Stock","text":"<p>Relation of reserved stock and pre-reserved purchase orders related to the Sales Order Line.</p> <p>For each reserved Sales Order line, it is possible to review the reserved stock. The quantity, storage bin and attribute set value are shown when it applies. If there is part of the sales order preserved, the purchase order line will also be shown. When a pre-reservation is converted to a reserve, it will still have the original Purchase Order Line, but the later will also have a Storage Bin defined. All pre-reservations have the Storage Bin blank.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#related-products","title":"Related Products","text":"<p>In this table, the Order Lines related to an Order Line of 'Service' type are added.</p> <p>This tab will only be displayed for those lines with a Linked to Product service. It will display the related product lines of a service. The grid has the same fields that the Pick &amp; Edit uses to add the lines. This tab is not editable.</p> <p>In order to relate product lines to service lines, there is a Select Order Line button. This button will be displayed when a line with a Linked to Product service is selected.</p> <p>By clicking the button, it displays a Pick &amp; Edit showing records of the same order of products that could be related to the service. By default, it shows records of the same order, but when removing the filter expression, it shows records of already booked orders that could also be related to the Service.</p> <p>For each line selected in this tab, a new relation is created between the service and the selected product line. If a relation already exists, it will appear as selected in the grid. To delete the relation just unselect the desired record. Some requirements have to be satisfied in order to be able to create a relation:</p> <ul> <li>The service needs to have a price on the price list.</li> <li>If the service is marked as Is Price Rule Based:</li> <li>To have a valid Price Rule Version.</li> <li>To have correct Price Rule Ranges, if it is the case.</li> <li>If the selected line belongs to an already completed Sales Order, the service has to be marked as Allow Deferred Sale.</li> </ul> <p>If these conditions are not satisfied, the selected line will be unselected, not permitting to be selected to relate to the service.</p> <p>Fields of the Pick &amp; Edit:</p> <ul> <li>Document No: Document number of the order that belongs to the order line.</li> <li>Order Date: Order date of the order.</li> <li>Line No: Line number of the selected order line.</li> <li>Product: Related product.</li> <li>Attribute Set Value: Attribute Set Value of the product.</li> <li>Amount: Line Amount to be related.</li> <li>Discount Amount: Amount of discounts applied to the line. This amount will be used to calculate the service amount, depending on the value in the \u201cAfter Discounts\u201d field in Service Price Rules (if applied).</li> <li>Ordered Quantity: Quantity of the product in the Sales Order Line.</li> <li>Related Quantity: Quantity to be related to the Service. This field is editable, it is possible to relate less quantity than the original ordered quantity, never more. If more is assigned an error will appear. When a record is selected it automatically sets the Ordered Quantity in this field.</li> <li>Returned Qty Other RM: It does not apply in this workflow (Only for returns window).</li> </ul> <p>Totals section:</p> <ul> <li>Summed Line Amount: Sum of the selected line amounts.</li> <li>Summed Discounts Amount: Sum of the selected line discount amounts.</li> <li>Summed Service Amount: Price of the service based on selected lines in the grid. This amount will be added to the total amount of the service line when creating the relations.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#modify-tax","title":"Modify Tax","text":"<p>If the service is configured to modify tax, new taxes are applied automatically during the operation so, after linking the configured service to a product, the new taxes configuration will be applied.</p> <p>It is not recommended to modify the tax manually afterwards, as the system can create inconsistencies. However, it is possible to remove the service product and then the Tax reverts back to its original value.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#related-services","title":"Related Services","text":"<p>In this table, the 'Service' type product Order Lines related to an Order Line are displayed.</p> <p>This tab is only displayed for those lines with products related to services. It displays the related services. The grid has the same fields that the Pick &amp; Edit uses to add the lines. This tab is not editable.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#basic-discounts_1","title":"Basic Discounts","text":"<p>This section lists information about discounts automatically applied based on the customer configuration and / or manually entered for the sales order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#tax_1","title":"Tax","text":"<p>The user can edit taxes applied to their order. It summarizes tax related information for the whole sales order. It contains as many records as tax rates used in the order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#payment-plan","title":"Payment Plan","text":"<p>This section shows the total amount expected to be collected upon order booking, as well as the amount/s pre-paid or paid against the invoice/s for the order.</p> <p>It shows the total payment amount expected for the order and its fulfillment. This tab is read-only and is populated after processing the document.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#payment-details","title":"Payment Details","text":"<p>Displays the details of the payments (pre-payments or regular payments) received for the order or for the invoice/s of the order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#replacement-orders","title":"Replacement Orders","text":"<p>Set of orders replacing a canceled order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#how-to-reactivate-a-closed-sales-order","title":"How to Reactivate a Closed Sales Order","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>Etendo allows the user to reactivate closed sales orders by selecting the needed one/s and clicking the Undo Close button.</p> <p></p> <p>Once the process is finished, the sales order status turns to booked.</p> <p>Info</p> <p>Check the Technical documentation about Advanced Financial Docs Processing to extend the process.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#payment-removal","title":"Payment Removal","text":"<p>The aim of this functionality is to delete and reactivate payments in an agile and easy way. Also, it allows eliminating and reactivating bank transactions and reconciliations.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>From this window, it is possible to remove payments associated with a sales order by selecting the corresponding document and then clicking on the Remove Payment button. If there is an invoice associated with the order, the relationship of this invoice to the payment in question will also be removed (Sales Invoice window &gt; Payment Plan tab).</p> <p>If the payment is included in the financial account, i.e., if it is in Deposited/Withdrawn not cleared status, the transaction in it will also be deleted (Financial account window &gt; Transaction tab).</p> <p>If the payment is reconciled through an automatic method, then in addition to the transaction in the financial account, the line of the bank statement to which it was linked (Financial Account window &gt; Imported Bank Statements) and the corresponding line of the bank reconciliation (Financial Account &gt; Reconciliations) will be deleted.</p> <p>Info</p> <p>If the payment is posted, the accounting entry is deleted too.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#intercompany","title":"Intercompany","text":"<p>In case the user has to create orders or invoices among two or more organizations that are different but belong to the same client, this functionality allows automatically generating the corresponding inverse document.</p> <p>Info</p> <p>For more information, visit the Intercompany module user guide.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#bulk-completion_1","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or close multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#advanced-bank-account-management","title":"Advanced Bank Account Management","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Bank Account Management module of the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This module adds a new field to the header of the Sales Order window: Bank Account. This field is automatically filled with the bank account related to the adress or business partner of the order.</p> <p></p> <p>Info</p> <p>For more information, visit the Advanced Bank Account Management user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#goods-shipment","title":"Goods Shipment","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Goods Shipment</code></p> <p>In this section, you can create and manage goods shipments to your customers. A Goods Shipment is a document registering the specifics of items sent to a customer.</p> <p>This window allows the user to browse information about all Goods Shipments registered in the system and manually create new shipment documents. It is useful if execution of some scenario is required that is not supported by automatic shipments generation process (for example, partial shipment of the order or grouping of several orders and / or invoices in one shipment). For automatic creation use Create Shipments from Orders.</p> <p>As described in the Costing Server article, the cost of a \"Goods Shipment\" is calculated as any other output transaction depending on the Costing Algorithm used.</p> <p>The calculated cost of a \"Goods Shipment\" is used while posting it to the ledger.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#header_3","title":"Header","text":"<p>The user can create and process a shipment.</p> <p></p> <p>The Header lists main terms and conditions related to the customer delivery that apply to all products (Lines) included in it.</p> <p>In the majority of cases, the main and the only field needed to create a new Goods Shipment is the Business Partner field. All other fields are automatically populated based on the selected Business Partner, logged in User preferences and other system default parameters.</p> <p>Some other fields to note:</p> <ul> <li>Warehouse: The warehouse from where the goods are shipped. Defaulted to the session value from the top navigation.</li> <li>Movement Date: The date the goods physically ship out of the warehouse. Defaulted to the current date.</li> <li>Delivery Location: Address that will be used when generating a shipment. If it is not specified, a Partner Address field will be used. Defaulted according to the Customer and Location tabs of the Business Partner window.</li> <li>Accounting Date: Date to be used in the posting record of the Goods Shipment to the general ledger.</li> <li>Sales Order: Reference to an order that is being shipped. If Goods Shipment includes products from several Sales Orders fields are left empty (still trace-ability is present at Lines level).</li> <li>Invoice Status: indicates in % how much quantity has been invoiced.   If we create two or more lines in goods shipment related to a sales invoice line, only one of those goods shipment lines will show \"Invoice Status\" 100% and the rest will show \"Invoice Status\" 0%.</li> </ul> <p>There are 2 ways of entering lines into the sales order:</p> <ol> <li>Selecting products from pending to be shipped orders or invoices and specifying Storage Bin (Warehouse field) from where it should be shipped using the Create Lines From button. This option can be used several times to group several orders and / or invoices in one shipment. This is the most common approach.</li> <li>Manually, line by line. It is used if the underlying document (Sales Order or Invoice) does not exist in the system prior shipment takes place.</li> </ol> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#lines_2","title":"Lines","text":"<p>The user can add or see products included in their shipment. Each product is shown on its own line. Lines list each product to be delivered and its characteristics.</p> <p>Fields to note:</p> <ul> <li>Attribute Set Value: This field is displayed if the product to be shipped in the line has attributes (color, size, serial number or several of them together etc).</li> <li>Storage Bin: From where the product is taken for shipment. Populated automatically based on the Product field which includes storage bin as the part of its selector.</li> <li>Sales Order Line: Reference to the sales order line that is being shipped.</li> </ul> <p>In the Status Bar of each line, you can find information about the Invoiced quantity, the number of invoiced products of the line.</p> <p>Explode button is shown when selecting a line with a non-stockable BOM product and the product has not already been exploded. When exploding a product, the bill of materials components that the selected product consists of are shown in the shipment. Once you have exploded it, you cannot comprime it. You should delete all the lines (first bill of materials components and then the BOM product), and insert again the non-stockable BOM product.</p> <p>Complete button finishes shipment of the products to the customer and stock information gets updated accordingly (product levels go down).</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#accounting","title":"Accounting","text":"<p>Accounting information related to the material shipment.</p> <p>A \"Goods Shipment\" can be posted if the \"MaterialMgmtShipmentInOut\" table is set to Active for accounting in the Active Tables tab of the organization's general ledger configuration.</p> <p>Goods Shipment posting creates the following accounting entries.</p> <p>Posting record date: Accounting Date.</p> Account Debit Credit Comment Product COGS (Cost of Goods Sold) Shipment Line Cost Amount One per Goods Shipment Line Product Asset Shipment Line Cost Amount One per Goods Shipment Line <p>Posting a Goods Shipment requires the user to calculate the cost of the product/s contained in it.</p> <p>In the case of a goods shipment that is the average or the standard cost calculated depending on the Costing Algorithm used.</p> <p>Moreover:</p> <ul> <li>The \"Legal Entity\" organization needs to have a validated Costing Rule configured</li> <li>and the Costing Background Process needs to be scheduled for the Client, therefore it can search and then allow that the Costing Server process calculates the cost of the transactions.</li> </ul> <p>Once the cost has been calculated, the Goods Shipment can be posted to the ledger.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#automatic-invoice-from-goods-shipment","title":"Automatic Invoice from Goods Shipment","text":"<p>When completing a goods shipment, the confirmation popup shows\u00a0 a checkbox called Invoice if possible. If checked, the UI allows the user to enter a valid Price List, Invoice Date and whether to complete the newly created sales invoice or to leave it as draft.</p> <p></p> <p>The lines not linked to a sales order will always be automatically invoiced. For the lines linked to a sales order, their respective invoice terms will be taken into account, thus generating the invoice lines only for the valid order lines. In both cases, only the non-invoice-yet quantity will be invoiced.</p> <p>Besides, the window shows a new button Generate Invoice from Shipment which allows the user to invoice the goods shipment at any time as long as the goods shipment is not fully invoiced yet. The Invoice Date, Price List and Process Invoice fields are also provided in this process following the same logic explained above.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#how-to-reactivate-goods-shipments","title":"How to Reactivate Goods Shipments","text":"<p>Info</p> <p>To be able to include this functionality, the Warehouse Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Warehouse Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Warehouse Extensions - Release notes.</p> <p>From the Goods Shipment window, it is possible to reactivate a previously generated movement just by selecting the corresponding document and clicking the Reactivate button.</p> <p>Once the shipment is successfully reactivated, the state of the document changes to Draft as it can be observed in the status bar.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#bulk-posting","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#bulk-completion_2","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or void multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#return-from-customer","title":"Return from Customer","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Return from Customer</code></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#header_4","title":"Header","text":"<p>The user can create a sales order and process it when ready.</p> <p></p> <p>Once the Return document is accepted you can process it by clicking the button Book. Following the standard, the document changes from Draft to Booked.</p> <p>Only Booked documents can be receipt.</p> <p>Warning</p> <p>Notice the button Pick/Edit lines disappears when the Return to customer document is in status Booked.</p> <p></p> <p>Things to consider:</p> <ul> <li>Delivery Status: indicates in % how much quantity has been delivered.</li> <li>Invoice Status: indicates in % how much quantity has been invoiced.</li> <li>A new button Create credit might appear or not based on the original sales order. If the order is already invoiced then it will be present, if not, it will not.   Through this button, you are able to invoice the return order following the standards, that is, depending on the invoice terms.</li> <li>Using this button you can also create an invoice and leave it as credit to be used later. The way to do so is:</li> <li>There is a new execution process named Leave as credit. You can configure a new payment method with this process.</li> <li>If the payment method used in the Return material order has this execution process, a Reverse sales invoice is created but leaving it as credit so the credit can be later settled with another invoice.</li> <li>The button Create credit is no longer shown once the document is fully invoiced.</li> <li>Besides the Create credit button you can follow the standards (Invoice terms) to invoice these documents. All scenarios are covered:</li> <li>Process Generate Invoices: If the invoice terms is Customer Schedule After Delivery and you have sales orders and RMAs the process will group all in one standard Sales Invoice and not in a Reversal Sales Invoice.</li> <li>You can also use the Sales Invoice window to pick lines and either gather lines from standard sales order and return orders lines or create individual Reversal Sales Invoice for return orders.</li> <li>You can also create a Return Material Sales Invoice through the Sales Invoice window and leave it as credit and later on use it. Keep in mind that this Invoice should be created with negative amounts.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#lines_3","title":"Lines","text":"<p>The user can add products to be included in their sales order. Each product is added by creating a line.</p> <p>The Lines tab is not editable, since the returned lines always come from shipment lines, to avoid:</p> <ul> <li>To see positive values while negative in the DB.</li> <li>To enter lines that are not linked to the original shipment line.</li> <li>To edit attributes, products and so, having the products or attributes different from the shipment line.</li> </ul> <p>To enter lines that come from a goods shipment, you need to click the button \u201cPick/Edit Lines\u201d</p> <p>Things to consider:</p> <ul> <li>The only editable fields are:<ul> <li>Returned: Quantity you wish to return. When selecting the row, the quantity is not set by default since the system cannot know how many items are being returned.</li> <li>Net Unit Price: Price of the original sales order.</li> <li>Return reason: The reason why you return the item.</li> <li>Returned UOM, only in case alternative unit of measure (AUM) preference is enabled.   In that case, the product's \"primary\" AUM for the sales flow is shown if any, otherwise the product's UOM is shown. The user can always change it to product's UOM.</li> </ul> </li> <li>You can define the Return Reason at header level. In this case when picking a line it inherits what selected in the header but you can modify it as you wish.</li> <li>Only Goods shipment documents that have not been still returned can be picked. In case a goods shipment line has been fully returned, it won't be shown.</li> <li>When a goods shipment line has been partially returned, the rest\u00a0can still be returned. What you have already returned for that line is shown in the field Return Qty other RM.</li> </ul> <p>Validations:</p> <ul> <li>You are not allowed to return more quantity than the Ship/Receipt Qty. In case you do it a message is shown.</li> <li>Notice that this validation takes into account the Return Qty other RM field.</li> </ul> <p>A restriction has been added in Pick/Edit Lines in order to prevent adding non \u201cReturnable\u201d service lines to Return From Customer documents.</p> <p>To enter lines that do not come from any document present in the system,\u00a0 you need click the \u201cInsert Orphan Line\u201d button.</p> <p>Tip</p> <p>Since this flow is not common, the button is hidden by default. In order to display it, it is necessary to configure a preference named RM Allow Orphan Line. To do so, go to the preference window and select it from the list. The value must be Y. Then log out and log in.</p> <p>Things to consider:</p> <ul> <li>Product: It is mandatory.</li> <li>Returned: The quantity returned.</li> <li>Net Unit Price: It can be left blank. In that case the system calculates the price based on the price list defined in the header of the document.</li> <li>Tax: It can be left blank. In that case the system will calculate the tax.</li> <li>Return reason: The reason why the good was returned.</li> </ul> <p>This flow (Insert orphan line) does not support products with attributes</p> <p>Info</p> <p>To edit a line you need to click again the Pick/Edit Lines button and the line appears selected and then you can modify any of the editable fields.</p> <p>Info</p> <p>To delete a line you need to unmark the line and then click Done.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#line-tax_2","title":"Line Tax","text":"<p>Taxes related to the order line.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#related-products_1","title":"Related Products","text":"<p>In this table, the Order Lines related to an Order Line of 'Service' type are added.</p> <p>It has been added the possibility to select the service related to which original product lines is desired to be returned. In order to do it, the new button \u201cSelect Order Line\u201d has been added in Return From Customer Line tab. This button is\u00a0 displayed when a line with a Service \u2018Linked to Product\u2019 is selected.</p> <p>The tab is similar to the one implemented in the Sales Order Line window. The only difference is that the relations are created with negative values (amount, quantity), but the window has been adapted to see those values in positive (in the database, they are negative).</p> <p>The grid implemented in this Pick&amp;Edit is the same as used in the Sales Order Line window, with a few differences:</p> <ul> <li>Related Quantity: Quantity to be related to the Service. This field is editable, it is possible to relate less quantity than the original ordered quantity, never more. An error appears if more quantity is assigned. This field takes into account Returned Qty Other RM field, so it never allows to return more than ordered taking into account qty returned on other return documents. When a record is selected, it automatically sets 0 in this field.</li> <li>Returned Qty Other RM: It displays the returned qty of the line on other different return documents.</li> <li>Deferred Sales: They do not apply in this window because returns are being made, not sales.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#basic-discounts_2","title":"Basic Discounts","text":"<p>It shows the discount applied to the original invoice of the returned product.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#tax_2","title":"Tax","text":"<p>The user can edit taxes applied to the order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#bulk-completion_3","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or close multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#return-material-receipt","title":"Return Material Receipt","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Return Material Receipt</code></p> <p>In this window, the user receives the material that has been returned from the customer.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#header_5","title":"Header","text":"<p>The user can create and process a return material receipt.</p> <p></p> <p>Once the document is ready you can process it by clicking the button Complete. Following the standard, the document changes from Draft to Completed.</p> <p>The field Invoice Status: indicates in % how much quantity has been invoiced.</p> <p>Warning</p> <p>Notice the button Pick/Edit lines disappears when the document is in status Completed.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#lines_4","title":"Lines","text":"<p>The user can add or see products which are included in the receipt. Each product is shown in its own line.</p> <p>The Lines tab is not editable, since the lines always come from Return from Customer lines, to avoid:</p> <ul> <li>To see positive values while negative in the DB</li> <li>To enter lines that are not linked to return lines</li> <li>To edit attributes, products and so, having the products or attributes different from the return line</li> </ul> <p>To enter new lines, the user needs to click the button \u201cPick/Edit Lines\u201d</p> <p></p> <p>Things to consider:</p> <ul> <li>The only editable fields are:</li> <li>Receiving: Quantity you are receiving in the warehouse. This value is set by default with the pending quantity when you select the row.</li> <li>Storage bin: This value is set by default with the return bin configured in the warehouse.</li> <li>Condition of the goods: The user can define it at header level. In this case, when picking a line, it inherits what is selected in the header but the conditions can be modified.</li> <li>Returned UOM, only in case an alternative unit of measure (AUM) preference is enabled.     In that case, the product's \"primary\" AUM for the sales flow is shown if any, otherwise the product's UOM is shown. The user can always change it to the product's UOM.</li> </ul> <p>Validations</p> <ul> <li>The user is not allowed to receive more quantity than the Pending quantity. In case they do it, a message is shown.</li> </ul> <p>Info</p> <p>To edit a line, it is necessary to click again the Pick/Edit Lines button and the line appears selected. Then, the user can modify any of the editable fields.</p> <p>Info</p> <p>To delete a line, the user needs to unmark the line and then click Done.</p> <p>Accounting</p> <p>Return Material Receipt posting creates following accounting entries.</p> <p>Posting record date: Accounting Date.</p> Account Debit Credit Comment Product COGS Return (Cost of Goods Returned) or if not defined Product COGS Product Cost x Movement Quantity One per Return Material Receipt Line Product Asset Product Cost x Movement Quantity One per Return Material Receipt Line"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#configuration","title":"Configuration","text":"<ul> <li>Activate MaterialMgmtShipmentInOut table in the Active Tables tab of General Ledger Configuration screen.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#accounting_1","title":"Accounting","text":"<p>Accounting information related to the return material receipt.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#bulk-posting_1","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#create-shipments-from-orders","title":"Create Shipments from Orders","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Create Shipments from Orders</code></p> <p>Create Shipments from Orders allows the user to see Sales Orders pending to be shipped and automatically generate Goods Shipments based on them.</p> <p></p> <p>All Sales Orders of the Standard Order type and in a status Booked are treated as meeting the criteria to be shipped.</p> <p>Goods Shipment can be generated for one or more Sales Orders or for all the Sales Orders that are pending to be shipped. Filters are available to narrow down the shown results.</p> <p>One Goods Shipment is created for one selected Sales Order but for the whole order (for all its lines). Partial shipment is not possible through this window\u00a0 (use Goods Shipments instead).</p> <p>Info</p> <p>Note the Relative Priority field in the Storage Bin tab of the Warehouse and Storage Bins window that is used to determine which storage bin to use in the generated Goods Shipments Lines. The warehouse to use is inherited from the originated Sales Order.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#form","title":"Form","text":"<p>Fields to note:</p> <ul> <li>From Date and To Date: specify Order Date field ranges for filtering.</li> <li>Lines Amt: Total net amount of the sales order (of all its lines).</li> <li>Pending Delivery: The net amount still pending to be delivered for the specific order (for example, when there was a partial delivery before).</li> </ul> <p>Select the order(s) you want to ship and click the Process button to generate the underlying Goods Shipment document(s). Process execution message displays sales order number(s) and corresponding shipment number(s) that was just created.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#sales-invoice","title":"Sales Invoice","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Sales Invoice</code></p> <p>Sales Invoice is an itemized statement of goods or services provided to a business partner. It indicates the quantity and price of each product delivered.</p> <p>The Sales invoice window allows the user to issue and manage customer's invoices. It also allows the user to browse information about all sales invoices registered in the system and manually create new invoice documents. It is useful if execution of some specific scenario is required that is not managed by automatic invoice generation processes like Generate Invoices or Create Invoices from Orders.</p> <p>The sales revenues can be recognized as soon as the sales invoice is accounted for, however if a revenue deferred plan is configured it is possible to defer the revenue recognition as required.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#header_6","title":"Header","text":"<p>Customer invoices can be registered, booked and managed in the header section of the sales invoice window.</p> <p>Header lists main terms and conditions related to the sales invoice that will be used in the heading of its printed copy and further in its collection process.</p> <p></p> <p>In the majority of cases, the main and the only field needed to create a new sales invoice document is the Business Partner field. All other fields are automatically populated based on the selected Business Partner, logged-in User preferences and other system default parameters.</p> <p>Some other fields to note are:</p> <ul> <li>Transaction document defaulted as \"AR Invoice\" or Sales Invoice document type, which can be manually changed to either \"AR Credit Memo\" or \"Reversed Sales Invoice\".</li> <li>\"AR Credit Memo\" and \"Reversed Sales Invoice\" document types can be considered credit sales invoices, the difference between them is that:<ul> <li>\"AR Credit Memo\" type must contain either an \"Invoiced Quantity\" &gt; 0 or \"line Net Amounts\" &gt;0.   The above implies that invoices set as \"credit memo\" should not be related to \"Orders\" or \"Shipments\".</li> <li>\"Reversed Sales Invoice\" type must contain either an \"Invoiced Quantity\" &lt;0 or \"line Net Amounts\" &lt; 0.   These are the invoice types that can be related to return \"Orders\" or \"Shipments\".</li> </ul> </li> <li>Invoice Date: The date the invoice is issued. It is used to calculate when the payment of the invoice is due. Defaulted to the current date.</li> <li>Accounting Date: Date to be used in the posting record of the Sales Invoice to the general ledger. Defaulted to the Invoice Date field.</li> <li>Payment Method: indicates how an invoice should be paid. Defaulted according to the Customer tab of the Business Partner window.</li> <li>Payment Terms: defines when a sales invoice needs to be paid. Defaulted according to the Customer tab of the Business Partner window.</li> <li>Sales Order: Reference to an order that is being invoiced. If Sales Invoice includes products from several Sales Orders field is left empty (still trace-ability is present at Lines level)</li> </ul> <p>There are 3 ways of entering lines into the sales invoice, two from the invoice header and the last one from the Lines tab:</p> <ol> <li>Selecting products from pending to be invoiced orders or shipments (meeting Invoice Term criteria of the Sales Order) using the Create Lines From Order and Create Lines From Shipment buttons. These options can be used several times to group several orders and / or shipments in one invoice. This is the most common approach. It is only possible to create lines from Documents that share the same Currency and business partner.</li> <li>Copying all products from the chosen invoice selected in the history of all invoices for different business partners using the Copy Lines button.</li> <li>Manually, line by line in the Lines tab. This option is used if the underlying document (Sales Order or Shipment) does not exist in the system prior invoicing takes place.</li> </ol> <p>The Complete button finishes the creation of the invoice document with the fulfillment of the Payment Plan tab and the Payment Monitor section in the Header. If there are non-stockable BOM products in the lines and they have not been exploded, the Complete button will explode them automatically.</p> <p>Once completed a sales invoice can be:</p> <ul> <li>posted to the ledger by using the button Post</li> <li>voided by using the button Reactivate</li> <li>paid by using the button Add Payment.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#lines_5","title":"Lines","text":"<p>Lines lists each product to be delivered and its characteristics.</p> <p>Once the sales invoice header has been properly filled in and saved, each sales invoice line can be registered in this tab one by one.</p> <p></p> <p>Fields to note:</p> <ul> <li>Attribute Set Value: field is displayed if the product in the line has attributes (color, size, serial number or several of them together etc).</li> <li>Sales Order Line and Goods Shipment Line: references to the sales order and goods shipment line that is being invoiced.</li> <li>Financial Invoice line: is selected when the invoice line is not a product but an account not set up as a product but as a G/L item, or an asset not set up as a product. When selected, the product field disappears from the screen and an account field appears that will be related to the sales invoice line.</li> <li>Cancel Discounts and Promotions: With this checkbox, it is possible to cancel promotions previously defined in the Discounts and Promotions window. Only these ones, not the discounts defined in the Basic Discount window.  If this box is checked, these promotions for this line are cancelled; otherwise, they are calculated normally.</li> </ul> <p>As already mentioned, sales revenue can be deferred therefore they are not recognized at the sales accounting date but within a given number of accounting periods.</p> <p>When a sales invoice line is created, it is possible to define at line level whether the line is going to cause the revenue to be deferred or not. The relevant fields are:</p> <ul> <li>Deferred Revenue: When this flag is checked, the Revenue Plan field group becomes visible, allowing users to configure the next three fields.</li> <li>Revenue Plan Type: This field specifies the frequency of the revenue distribution which currently is \"monthly\".</li> <li>Period Number: This field specifies the duration of a revenue plan.     For instance, if a company sells and invoices a product that will only be available to be delivered to their customers in 3 months, they would like to recognize the revenue all at once but in 3 months.     In this situation the period number to enter would be 1.</li> <li>Starting Period: The first open period in which the revenue is going to be recognized.     In our example, the starting period to enter would be the one corresponding to 3 accounting periods after accounting the sales invoice.</li> </ul> <p>These fields can be defaulted if configured for the product.</p> <p>If a revenue plan is configured, that implies a specific sales invoice accounting.</p> <p>Explode button is shown when selecting a line with a non-stockable BOM product and the product is not already exploded. When exploding a product, the bill of materials components that the selected product consists of are shown in the invoice. Once you have exploded it, you cannot comprime it. You should delete all the lines (first bill of materials components and then the BOM product), and insert again the non-stockable BOM product.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#line-tax_3","title":"Line Tax","text":"<p>Line tax information is automatically populated for each sales invoice line upon completion of the invoice.</p> <p>Line Tax read-only tab details tax information for each line of a sales invoice based on its Tax field which is automatically pre-filled according to the Taxes Setup.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#tax_3","title":"Tax","text":"<p>This section summarizes tax related information for the whole sales invoice. It contains as many records as tax rates used in the invoice.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#basic-discounts_3","title":"Basic Discounts","text":"<p>This tab lists information about the discounts automatically applied based on the customer configuration and / or manually entered for the sales invoice.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#payment-plan_1","title":"Payment Plan","text":"<p>The payment plan tab lists the scheduled payments expected against the invoice.</p> <p>The payment plan of a non paid invoice can be changed:</p> <ul> <li>the payment \"expected date\" can be directly changed if required in this tab</li> <li>the payment \"expected date\", the \"payment method\" and the \"outstanding amount to be paid\", among others can be changed if required by using the Editable Payment Plan advanced feature.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#payment-details_1","title":"Payment Details","text":"<p>This tab displays the details of the payments made against the invoice.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#reversed-invoices","title":"Reversed Invoices","text":"<p>This tabs allows the user to select the invoices (if any) being reversed by the invoice being created. When the user voids an existing invoice, the reverse invoice is automatically created by Etendo and linked to the original invoice being reversed. In case of creating a Reverse Sales Invoice which partially voids an existing invoice/s, the user must manually select the invoice/s being reversed in this tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#exchange-rates","title":"Exchange Rates","text":"<p>The exchange rate tab allows the user to enter an exchange rate between the organization's general ledger currency and the currency of the customer's invoice to be used while posting the invoice to the ledger.</p> <p>Etendo allows the user to manage different currencies within an organization or business unit.</p> <p>Nowadays, it is very common for the organizations located in a country to make business with third parties located abroad, and even more, it could also happen that an organization needs to post the transactions to general ledgers configured in different currencies.</p> <p>Above described business scenario, implies the need of managing exchange rates between the organization's general ledger/s currency and the customer's invoice currency to be used while posting the customer's invoice to the ledger/s.</p> <p>This tab allows the user to enter:</p> <ul> <li>either an exchange rate between the organization's general ledger/s currency and the customer's invoice currency</li> <li>or the total foreign invoice amount/s, therefore Etendo can calculate the corresponding exchange rates.</li> </ul> <p>Additionally, Etendo has a \"central\" repository of exchange rates which are used in case there is not an exchange rate defined at document level.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#payment","title":"Payment","text":"<p>Payments can be received against a sales invoice by using the Add Payment button which opens the Add Payment window.</p> <p></p> <p>All fields of the Add Payment window are automatically populated from the Invoice. The \"Transaction Type\" field is also defaulted to \"Invoices\".</p> <p>The \"Expected Payment\", the \"Actual Payment\" and the \"Amount\" fields get the same value which is the grand total of the invoice (Total Gross Amount).</p> <p>Other important fields to note are:</p> <ul> <li>Received From: It is the Payee of the invoice. Defaulted to the Business Partner from the Invoice.</li> <li>Deposit to: It is the financial account to which the amount is going to be deposited.</li> <li>Payment Date: It is the date of the payment event. It is used in the posting record of the Payment to the general ledger. Defaulted to the Invoice Date field.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#adding-orderinvoice","title":"Adding Order/Invoice","text":"<p>If the \"Add Payment\" window is opened from a \"Sales Invoice\", all invoice scheduled payments are selected by default if there are more than one.</p> <p>Besides that the \"Expected Payment\" amount and the \"Actual Payment\" amount are set as equal as the (Invoice) \"Amount\", and the \"Transaction Type\" field is set to \"Invoices\".</p> <p>The reason for the above is that Etendo understands that the invoice is going to be fully paid, but obviously that could not be the case. Therefore the most common field to change is the Actual Payment received from the customer:</p> <ul> <li>In case the \"Actual Payment In\" amount is bigger than the grand total of the invoice selected, then it will be spread between the next documents pending to be paid till the whole amount is consumed.   If there are no documents pending to be paid the system offers the options to:</li> <li>\"Leave the credit to be used later\" which means that there will be available credit for the customer.</li> <li>or \"Refund the amount to the customer\" which means that a refund payment is created besides the invoice payment in the Payment In window.     A refunded payment has a negative amount which means the creation of a withdrawal transaction in the financial account instead of a deposit.</li> <li>In case the \"Actual Payment In\" amount is less than the grand total of the invoice selected, then the system offers the options to be managed in the order/invoice grid.</li> <li>Write of the difference (by just checking the field Writeoff) which implies that:<ul> <li>the customer's invoice is set as fully paid.</li> <li>The invoice posting to the ledger settles the total customer receivable amount.</li> <li>While the payment posting to the ledger uses the Write-off account to post the amount written-off.</li> </ul> </li> <li>\"Leave the amount as an underpayment\" (if the field Writeoff is not checked) which implies that the remaining amount will be paid later on by the customer in a new payment.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#adding-gl-items","title":"Adding G/L items","text":"<p>GL Items section allows the user to enter any type of expense related to the payment but not included in the invoice, by clicking on [Add New] .</p> <p>First thing to do is to select the G/L item for the expense and then enter the expense amount in the field \"Received In\" as shown in the image below:</p> <p>Once done,</p> <ul> <li>the invoice posting to the ledger settles the total customer receivable amount,</li> <li>while the payment posting to the ledger uses besides the G/L item account to post the paid expense amount.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#reviewing-the-totals-and-processing-the-payment","title":"Reviewing the totals and processing the payment","text":"<p>As already mentioned, \"Totals\" section allows to review:</p> <ul> <li>the total amount to be paid on G/L items,</li> <li>the total amount to be paid on Invoices and/or Orders,</li> <li>the grand total,</li> <li>and the difference between the \"Actual Payment\" and the \"Expected Payment\" (only in the case of overpayment)</li> </ul> <p>Also, \"Totals\" section allows the user to process a payment by selecting an option in the field \"Action Regarding Document\".</p> <ul> <li>Process Received Payment(s): The Payment is processed.</li> <li>Process Received Payment(s) and Deposit: The Payment is processed and the payment amount is deposited in the Financial Account.</li> </ul> <p>The number of options above depends on the setup of the payment method:</p> <ul> <li>If Automatic Deposit option had already been selected within the payment method for Payment, only the option Process Received Payment(s) and Deposit is shown. However,</li> <li>if the Automatic Deposit option had not been selected, both actions are offered giving the user an option to choose whether they want the deposit to be executed as well or not.</li> </ul> <p>Finally, any of these actions updates the Payment Monitor section of the Invoice Header. The Paid amount is also reflected in the Payment Plan tab of the Sales Invoice (and the Sales Order if it exists). Details of the payment can be found in the Payment Details tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#credit-payment","title":"Credit Payment","text":"<p>Whenever there is available credit for a customer, a new window is automatically opened upon completion of a new customer's sales invoice in order to allow the user to either select the credit available to pay that new invoice or not.</p> <ul> <li>If the available credit is used:</li> <li>the payment status of the invoice changes to Payment Complete = Yes,</li> <li>a literal such as \"Invoice paid using credit:Payment N\u00ba (Credit Payment)\" is automatically populated in the description field of the invoice,</li> <li>a new payment is automatically created in the Payment In window. This payment clearly states the invoice paid in the \"Description\" field and the credit payment used is shown in the Used Credit Source tab of the payment out.</li> <li>If the available credit is not used:</li> <li>nothing happens, the new invoice is still not paid and the available credit amount remains the same.</li> </ul> <p>Moreover, it is also possible to use the available credit generated for that particular customer later on while \"Adding a Payment\" for that customer.</p> <p>If that is the case, a new section is shown in the \"Add Payment\" window, that is \"Credit to Use\" section.</p> <p>\"Credit to Use\" section shows all credit payments created for a given customer (if more than one), therefore it is possible to select one or more, and even change the credit amount to be used for the payment, in the field \"Payment Amount\".</p> <p></p> <p>Once the payment is processed, a new payment is created in the Payment In window. That payment states at the very top the \"Used Credit\" amount.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#payments-in-multiple-currencies","title":"Payments in multiple currencies","text":"<p>Etendo allows the user to receive payments in a different currency than the financial account currency.</p> <p>To do this, the payment method assigned to the financial account used to receive the payment needs to be configured to allow it, that implies to select the check-box \"Receive Payments in Multiple Currencies\".</p> <p>Example</p> <p>Let's take for instance an organization such as \"F&amp;B US Inc\".</p> <p>This organization is located in USA, therefore it is likely that the organization's general ledger currency as well as the financial account currency is set as USD.</p> <p>F&amp;B US Inc makes business with a customer located abroad. This customer requires to pay the invoice/s issued to it in EUR currency. This means that:</p> <ul> <li>F&amp;B US Inc organization needs to issue the customer's invoice in EUR same as the payment received from the customer.</li> </ul> <p>If the customer's payment is registered in the \"Add Payment\" window shown from this \"Sales Invoice\" window, Etendo allows the user to enter an exchange rate, therefore the \"Actual Converted\" amount to be paid in EUR can be changed if required.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#accounting_2","title":"Accounting","text":"<p>Accounting information related to the sales invoice.</p> <p>A sales invoice can be posted to the ledger when required at a given \"Accounting Date\" by using the button \"Post\".</p> <p>Sales Invoice posting creates the following accounting entries:</p> <p>Posting record date: Accounting Date.</p> Account Debit Credit Comment Customer Receivable Total Gross Amount One per Payment Plan Line (TB verified) Discount Product Revenue Discount Amount One per Invoice Line (if discount exists) Product Revenue Line Net Amount One per Invoice Line Tax Due Tax Amount One per Tax Line <p>Same way, a Sales Invoice including a sales invoice line with a revenue plan configured creates the following accounting entries.</p> <p>For instance, a food and beverage distributor selling and invoicing a product that will only be able to deliver to their customers in 3 months would want to defer the revenue recognition till the delivery.</p> <p>Posting record date: Accounting Date:</p> Account Debit Credit Comment Customer Receivables Total Gross Amount Product Deferred Revenue Line Net Amount Tax Due Tax Amount <p>Posting record date: Accounting Date + 3 months:</p> Account Debit Credit Product Deferred Revenue Line Net Amount Product Revenue Line Net Amount <p>Return Material Sales Invoice posting creates the following accounting entries.</p> <p>Note</p> <p>Notice that this Invoice should be created with negative amounts.</p> <p>Posting record date: Accounting Date.</p> Account Debit Credit Comment Customer Receivable Total Gross Amount One per Payment Plan Line (TB verified) Product Revenue Return or if not defined Product Revenue Line Net Amount One per Invoice Line Tax Due Tax Amount One per Tax Line."},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#voiding","title":"Voiding","text":"<p>It is possible to totally void a sales invoice by using the header button \"Reactivate\" and then the action \"Void\", this action implies:</p> <ul> <li>Etendo automatically generates a new reversed document in the \"Sales Invoice\" window, and informs about the reversed document number created. This new reversed document is created as described below:</li> <li>The \"transaction document\" used by Etendo is \"Reversed Sales Invoice\".</li> <li>This document is exactly the same as the original one being reversed but the invoiced quantity is negative.</li> <li>You can change both the \"Invoice Date\" and the \"Accounting Date\" of the reversed document prior to get it posted.</li> <li>The \"Reversed Invoices\" tab lists the original invoice being reversed as now both of them are linked.</li> </ul> <p>The reversed document posting creates the following accounting entries:</p> Account Debit Credit Comments Product Revenue Line Net Amount One per invoice line Tax Due Tax Amount One per tax line. Customer Receivables Total Gross Amount One per invoice Discount Revenue Discount Amount One per Invoice Line (if discount exits) <p>It is also possible to partially void a customer's invoice by:</p> <ul> <li>manually creating any of the available reversed sales documents, in the \"Sales Invoice\" window:</li> <li>\"AR Credit Memo\" or</li> <li>\"Reversed Sales Invoice\"</li> <li>which must be manually linked to the invoice/s being reversed in the \"Reversed Invoices tab\".</li> </ul> <p>The \"AR Credit Memo\" posting looks the same as the \"Reversed Purchase Invoice\" posting.</p> <p>The main difference between those two purchase reversed document types is:</p> <ul> <li>AR Credit Memo invoiced quantity is a positive quantity</li> <li>and Reversed Sales Invoice quantity is a negative quantity.</li> </ul> <p>We strongly recommend the user to use the \"Reversed Sales Invoice\" document type while partially voiding customer's invoices.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#how-to-reactivate-a-voided-sales-invoice","title":"How to Reactivate a Voided Sales Invoice","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>Etendo allows the user to reactivate voided sales invoices by selecting the needed one/s and clicking the Unvoid button.</p> <p></p> <p>Once the process is finished, the sales invoice status turns to Complete.</p> <p>Important</p> <ul> <li>In the case of the standard version of the module, it is necessary for the user to also unvoid the corresponding reversed invoice.</li> <li>Remember that this reactivation process affects the accounting, since, if the original information is not manually removed from the reactivated document, the accounting information will be doubled.</li> </ul> <p>Info</p> <p>Check the Technical documentation about Advanced Financial Docs Processing to extend the process.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#payment-removal_1","title":"Payment Removal","text":"<p>The aim of this functionality is to delete and reactivate payments in an agile and easy way. Also, it allows eliminating and reactivating bank transactions and reconciliations.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>From this window, it is possible to delete payments associated with a sales invoice by selecting the corresponding document and then clicking on the Remove Payment button. If there is an order associated with the invoice, the relationship of this order to the payment in question will also be deleted (Sales Order window &gt; Payment Plan tab).</p> <p>If the payment is included in the financial account, i.e., if it is in Deposited/Withdrawn not cleared status, the transaction in it will also be deleted (Financial account window &gt; Transaction tab).</p> <p>If the payment is reconciled through an automatic method, then in addition to the transaction in the financial account, the line of the bank statement to which it was linked (Financial Account window &gt; Imported Bank Statements) and the corresponding line of the bank reconciliation (Financial Account &gt; Reconciliations) will be deleted.</p> <p>Info</p> <p>If the payment is posted, the accounting entry is deleted too.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#intercompany_1","title":"Intercompany","text":"<p>In case the user has to create orders or invoices among two or more organizations that are different but belong to the same client, this functionality allows automatically generating the corresponding inverse document.</p> <p>Info</p> <p>For more information, visit the Intercompany module user guide.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#bulk-posting_2","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#advanced-rappels","title":"Advanced Rappels","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Rappels module of the Sales Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Sales Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Sales Extensions - Release notes.</p> <p>When using this functionality, in the Sales Invoice window, the user can find the sales invoices corresponding to the created rappels.</p> <p></p> <p>These sales invoices have a negative amount that represents the discount of the rappel, can include a prefix in its code to distinguish them from the rest and their status is \u201cdraft\u201d.</p> <p>Info</p> <p>For more information, visit Advanced Rappels.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#bulk-completion_4","title":"Bulk Completion","text":"<p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essential Extensions - Release notes.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate or void multiple records by selecting them and clicking the Bulk Completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit the Bulk Completion module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#advanced-bank-account-management_1","title":"Advanced Bank Account Management","text":"<p>Info</p> <p>To be able to include this functionality, the Advanced Bank Account Management module of the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Financial Extensions - Release notes.</p> <p>This module adds a new field to the header of the Sales Invoice window: Bank Account. This field is automatically filled with the bank account related to the adress or business partner of the invoice. Also, the Modify Payment Plan button is added for better payment management.</p> <p></p> <p>Info</p> <p>For more information, visit the Advanced Bank Account Management user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#create-invoices-from-orders","title":"Create Invoices from Orders","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Create Invoices from Orders</code></p> <p>Create Invoices from Orders allows the user to see the Sales Orders pending to be invoiced and it automatically generates the corresponding Sales Invoices based on them.</p> <p>With this window, Sales Invoices can be generated for one or more Sales Orders or for all Sales Orders that are pending to be invoiced.</p> <p>Info</p> <p>By default, this process filters records in accordance with the defined Organization in the session configuration variables. This means, only these records are shown.</p> <p></p> <p>As seen above, it is possible to navigate directly to the corresponding order from the document number under the Document number column.</p> <p>Filters such as Business Partner, Document Type and Organization, among others, are available to narrow down the shown results.</p> <p>Overall, this form shows:</p> <ul> <li>Sales Orders having an Immediate Invoice Term, without the need of having a Goods Shipment related.</li> <li>Sales Orders having an After Delivery Invoice Term, whenever there is a Goods Shipment related to at least some products contained in Sales Order that have been already delivered.</li> <li>Sales Orders having an After Order Delivery Invoice Term, whenever there is a Goods Shipment/s related to all the products contained in Sales Order, that have been already delivered.</li> <li>Sales Orders having a Customer Schedule After Delivery Invoice Term, whenever there is a Goods Shipment/s according to the defined schedule agreed with the customer.</li> </ul> <p>Same way, this form does not show Sales Orders having a Do not invoice Invoice Term, as those sales orders are not supposed to be invoices for whatever kind of reason.</p> <p>For all Invoice Terms but Customer Schedule After Delivery, Sales Invoice is created for all Goods Shipment sent to the customer at the same date which are related to one Sales Order.</p> <p>If there are several Goods Shipments that take place on different dates - several Sales Invoices are generated for each Goods Shipment date. If there are no Goods Shipments, a Sales Invoice is created for a full Sales Order.</p> <p>If the Invoice Term is Customer Schedule After Delivery, then a sales invoice is created grouping deliveries from different orders for the same customer.</p> <p>Lines include taxes: If this box is checked, the amounts of the orders shown include taxes.</p> <p>Invoice Date: The Invoice Date for the generated Sales Invoices (and so the Accounting Date field that is used in the posting record of the invoice to the general ledger) is taken first from Invoice Date field. If this field is not populated, it is inherited from the Movement Date field of the Goods Shipment related to the Sales Order. If there are no Goods Shipments, then the Order Date field from the original Sales Order is used as Invoice Date.</p> <p>Important</p> <p>This process uses the values specified at product level for deferring the sales revenue of the corresponding sales invoice lines.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#buttons","title":"Buttons","text":"<ul> <li> <p>Refresh: To refresh the orders shown in this window, use the Refresh process button.</p> </li> <li> <p>Done: Then, select the order(s) you want to invoice and click the Done button to generate corresponding Sales Invoice document(s). Process execution message displays sales order number(s) and corresponding invoice number(s) that was just created.</p> </li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#generate-invoices","title":"Generate Invoices","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Generate Invoices</code></p> <p>Generate Invoices executes automatic bulk generation of Sales Invoices for all Sales Orders pending to be invoiced that belong to the selected Organization or, if the Include Child Organizations checkbox is checked, to the selected Organization and its children. The Invoices generated are going to be created against the selected Organization.</p> <p>Main criteria for this process is a Sales Order Invoice Term field. For example, if Invoice Term is After Order Delivered then an invoice will be generated only if all products of this sales order have been already shipped. If Invoice Term is Customer Schedule After Delivery certain customer schedule is checked.</p> <p>All the Documents created are going to be Invoiced against the Organization set in the Invoice Organization Parameter.</p> <p></p> <p>Filters are available to narrow down the inputs for the generation process:</p> <p>Invoice Organization:The Organization against which the Invoices are going to be created.</p> <p>Sales Order: leave blank to consider all sales orders or select a specific one to generate an invoice for. Note that only pending orders are included inside this drop-down.</p> <p>Date Invoice To: only sales orders with Order Date field up to this date are included in generation process.</p> <p>Business Partner: If none is selected, all business partners with pending invoicing are considered. If a specific customer is selected here, only sales orders to that business partner are considered for automatic invoicing. The business partners that are available to select must have orders with invoice rule 'After delivery' or 'Customer Schedule After Delivery'.</p> <p>Include Child Org: a flag indicating whether the child organizations of the Organization field value are going to be taken into account when generating invoices or not. When Include Child Org is checked and the invoice Rule is 'Customer Schedule After Delivery', the invoices will group the child organization.</p> <p>Info</p> <p>Note that the Invoice Organization filter is also used to set the Organization of the Invoices that are going to be created. This is important while generating Invoices for Child Organizations, because all of them are going to be created against the parent Organization.</p> <p>For all Invoice Terms but Customer Schedule After Delivery one Sales Invoice is created for all Goods Shipment sent to the customer at the same date which are related to one Sales Order that meets Generate Invoices process criteria. If there are several Goods Shipments that take place on different dates - several Sales Invoices are generated for each Goods Shipment date. If Goods Shipment does not exist one Sales Invoice is created for one full Sales Order that meets Generate Invoices process criteria. If the Invoice Term is Customer Schedule After Delivery then only one sales invoice is created grouping deliveries from different orders for the same customer.</p> <p>Finally, it is important to remark that the Generate invoices process also uses the values specified at product level for deferring the sales revenue of corresponding sales invoice lines.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#form_1","title":"Form","text":"<p>An important field to note is Invoice Date. If specified, this date is transferred as the Invoice Date to the generated Sales Invoices (and so to Accounting Date field that is used in the posting record of the invoice to the general ledger). If not defined then Movement Date field from the Goods Shipment related to the original Sales Order is set as Invoice Date. If Goods Shipment does not exist then the Order Date field from the original Sales Order is used as Invoice Date.</p> <p>OK button launches the process and all orders pending to be invoiced that match the filters are automatically invoiced.</p> <p>When the process is finished, a message is shown with the total number of created invoices and their document numbers.</p>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#commission-payment","title":"Commission Payment","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Commission Payment</code></p> <p>In this section, the user can create commissions and create corresponding invoices.</p> <p>This window is not editable since commission records are calculated in the Commission window, however this window allows to create an invoice for the commissions previously calculated.</p> <p>This window needs to be read as follows:</p> <ul> <li>The header shows the commission document, the starting date and total net amount. In case an invoice is created then both documents are linked to each other later on.</li> <li>The amounts tab groups the result of all lines taken into to calculate this amount. Therefore, for each line defined in the commission\u00a0window the user has one entry in this tab.</li> <li>The Details tab shows all the Order lines/Invoice lines taking into account to calculate the amount.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#header_7","title":"Header","text":"<p>From this window it is possible to visualize the commissions created. </p> <p></p> <ul> <li>Commission field indicates which is the defined commission and therefore the conditions used to calculate the commission amount.</li> <li>Starting date as the date used when running the process, for instance an starting date of 1st of March with a Monthly frequency implies to take orders/invoices created and booked in March.</li> <li>Total amount field shows the commission amount after applying the configured conditions. Commission amount is calculated based on amounts excluding taxes.</li> <li>Invoice field shows the invoice created if any.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#amounts","title":"Amounts","text":"<p>The user can edit individual sales order lines that yielded a selected commission.</p> <p>Amounts tab shows the amount calculated per each line defined in the commission\u00a0 window.</p> <p></p> <p>For example if the commission has two lines:</p> <ul> <li>First line:</li> <li>Product category: Alcoholic</li> <li>Multiplier amount: 0.20</li> <li>Second line:</li> <li>Product category: Bio</li> <li>Subtract amount: 12000</li> <li>Multiplier amount: 0.10</li> </ul> <p>Then two lines would appear in this tab.</p> <p>Fields to note:</p> <ul> <li>Commission line: The line used to calculate the amount.</li> <li>Amount: The result of the commission.</li> <li>Converted Amount: The total amount without applying the conditions of the commission line in the corresponding currency.</li> <li>Actual quantity: The total quantity. When UOM is different among products this info is not relevant.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#details","title":"Details","text":"<p>Create and edit the calculation and invoicing of sales commission.</p> <p>Details tab shows all the sales/invoice lines took into account to calculate the corresponding commission line.</p> <p></p> <p>Fields to note:</p> <ul> <li>Reference: Document number</li> <li>Sales Order Line: Link to the order line took to calculate the commission</li> <li>Sales Invoice Line: Link to the invoice line took to calculate the commission</li> <li>Comments: Name of the product</li> <li>Actual Amount: Net amount of the line in the currency of the Order/Invoice document</li> <li>Currency: Currency of the commission. Remember that currency is defined in the commission window</li> <li>Converted Amount: Amount in the currency of the commission</li> <li>Actual Quantity: Quantity ordered in the order/invoice line</li> <li>Is Cost Calculated: This field's default value is 'YES'. It is only taken into account when the commission is calculated based on the margin. When this flag is not marked the cost of the transaction is not calculated. That means it hasn't been possible to calculate its margin. This flag must be marked in all the details in order to be able to generate the invoice of the commission.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/sales-management/transactions/#buttons_1","title":"Buttons","text":"<ul> <li>Create Invoice: A purchase invoice can be created from here in case it is required for paying the sales representative, by using the process button.</li> </ul> <p>This work is a derivative of Sales Management by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/","title":"Warehouse Reports","text":""},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#overview","title":"Overview","text":"<p>This section describes the windows related to warehouse reports in Etendo. These are:</p> <p> Pareto Product Report </p> <p> Material Transaction Report </p> <p> Stock Report </p> <p> Stock History </p> <p> Valued Stock Report </p> <p> Product Movements Report </p> <p> Product Operations </p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#pareto-product-report","title":"Pareto Product Report","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Pareto Product Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#overview_1","title":"Overview","text":"<p>Pareto Product Report distributes products into three classes (A, B or C) according to the cost value that each product inventory has in the warehouse. Based on this classification the frequency of counting cycle can be decided (e.g. A products are counted weekly, B products monthly and C products yearly).</p> <p>Following distribution is used: A products represent 80% value of the warehouse, B - 15% and C- 5%.</p> <p>Info</p> <p>The classification is based on the cost of the product. That is why it is needed to have a Costing Rule validated and the Material Transaction costs of the product calculated up to date.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#parameters-window","title":"Parameters window","text":"<p>Currency field defines currency in which all monetary values (like Cost, Value) of the report are shown. Field is defaulted to the system currency.</p> <p>Warning</p> <p>Please note that Conversion Rate to the report Currency should be specified for the report to work.</p> <p>Update ABC button fills in ABC field (updates value if the record exists or creates new record otherwise) of Org. Specific tab of the Product window for the organizations of the report output.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#sample-report-output","title":"Sample Report Output","text":"<p>Columns to note:</p> <ul> <li>Quantity: is the current stock of the product (Quantity on Hand) in the warehouse selected.</li> <li>Value: that is the sum of all the material transaction costs of the product.</li> <li>Cost: this cost is calculated as the ratio between the product value and the product quantity above</li> <li>Percentage: that percentage is the ratio between the product value and the Total Value of the warehouse (which is the sum of all report lines).</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#persisted-information","title":"Persisted information","text":"<p>Aggregated information calculated for the Valued Stock can be used. Please refer to the\u00a0 Valued Stock Report documentation for more details about how to generate the aggregated information.</p> <p>Note</p> <p>Exactly as for the Valued Stock Report, the Pareto Product Report can also be launched without aggregated data. However, this feature is specially useful in high volume environments when you experience performance issues launching the report.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#material-transaction-report","title":"Material Transaction Report","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Material Transaction Report</code></p> <p>Material Transaction Report lists all documents (outgoing shipments and incoming receipts) grouped by Business Partner and document. For each document number data, product, warehouse, bin and quantity are shown.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#window-parameters","title":"Window Parameters","text":"<p>Information on this report can be filtered using movement date, business partner, warehouse and project. Reports can be generated on HTML and PDF format.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#sample-report-output_1","title":"Sample Report Output","text":""},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#stock-report","title":"Stock Report","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Stock Report</code></p> <p>Stock Report shows a stock level of all products (that have quantity on hand different from zero) and their location (warehouse and storage bin) grouped by product category. For each row product, quantity, unit, attribute, shelves, column, height and warehouse.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#parameters-window_1","title":"Parameters window","text":"<p>The outcome of this report can be filtered by using movement date, product category, product and warehouse locators.</p> <p></p> <p>The outcome of this report can be viewed in HTML and PDF format.</p> <p>Shelves (x), Column (y), Height (z) fields correspond to Row (X), Stack (Y) and Level (Z) of the Storage Bin.</p> <p>Sample Report output</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#stock-history","title":"Stock History","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Stock History</code></p> <p>Info</p> <p>To be able to include this functionality, the Warehouse Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Warehouse Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Warehouse Extensions - Release notes.</p> <p>This is a read-only window in which the user is able to consult the daily stock. This functionality updates the daily information collected by the process in Background which was previously created for this purpose. </p> <p>The Stock History window is filled only by the background process \"Create Stock History\". It can be programmed from the 'Request Processing' window, where it can be assigned for which role and organization it is executed, and the periodicity with which it is executed.</p> <p>Info</p> <p>Check the Technical documentation about Stock History to extend the process to calculate the registers for the daily stock history. </p> <p>No data will be displayed in the window until search filters are applied to the window. Once the filters are applied, click the button on the right to complete the process. </p> <p></p> <p>The window shows the following fields from which the user is able to filter and get the needed data:  - Stock date  - Product - Attribute set value - Warehouse - Storage Bin - Quantity on hand - Reserved QtY - Allocated Quantity - Quantity in draft transaction</p> <p></p> <p>This functionality includes a process to close the stock and save the historical information.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#valued-stock-report","title":"Valued Stock Report","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Valued Stock Report</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#overview_2","title":"Overview","text":"<p>Valued Stock Report shows the stock for a particular warehouse as well as the value of the stock.</p> <p>The cost is calculated as a sum of the cost of each material transaction of the product in the warehouse. The cost of the product transactions is calculated by the Costing Server process.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#parameters-window_2","title":"Parameters Window","text":"<ul> <li>Organization: This field allows the user to select among\u00a0 Organizations of type \"Legal with Accounting\" and \"Generic\".</li> <li>Warehouse: If the selected organization is \"Generic\", then lists all warehouses that belong to it, else if the organization is \"Legal with accounting\" then no warehouse is displayed to be selected.</li> <li>Date: The report is going to show information up to the selected date.</li> <li>Consolidated Warehouse: If checked the information of the stock will be consolidated at Organization Level, otherwise, the information will be broken down by Warehouse.</li> <li>Product Category: Allows to show information of only the Product Category selected.</li> <li>Currency: Defines currency in which all monetary values (like Cost, Valuation) of the report are shown.</li> </ul> <p>Warning</p> <p>Please note that Conversion Rate to the report Currency should be specified for the report to work.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#output-window","title":"Output Window","text":"<ul> <li>Product: Name of the Product.</li> <li>Quantity: Stock of the Product on the selected date.</li> <li>Unit : Unit in which the stock is measured.</li> <li>Unit Cost: Cost of each particular unit. Ii is the result of dividing the Valuation between the Stock.</li> <li>Valuation: Valuation of the Stock. It is calculated by adding up all the valuations of each transaction that has happened in the Warehouse.</li> <li>Actual Average/Standard Algorithm Cost: Current Average/Standard Cost, the latest calculation of it's value.</li> <li>Actual Average/Standard Algorithm Valuation: Valuation of the Stock based on the Actual Average/Standard Cost. Ii is the result of multiplying the Stock by the Actual Cost.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#persisted-information_1","title":"Persisted Information","text":"<p>This step is not necessary in order to launch the Report. However, if there are performance problems, this can help to greatly improve the performance of the Report.</p> <p>It is possible to aggregate information that allows for faster queries. This information is aggregated for each Closed Accounting Period, that means that accounting periods must be defined and, at least some of them, must be in a Closed or Permanently Closed Status. </p> <p>The information will persist until the first not closed Period. By doing so, it is possible to avoid looping through many records. However, no information will be aggregated after the first closed period and this can result in a non optimal performance of the report if it needs to retrieve plenty of information.</p> <p>Info</p> <p>In order to use this functionality it is necessary to schedule the Background Process named Generate Aggregated Data Background. This can be done through the Process Request Window.</p> <p></p> <p>Info</p> <p>It is recommended to schedule it daily, at a moment when the System does not have plenty of activity. It will aggregate data only when a new Period is Closed or Permanently Closed.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#limitations","title":"Limitations","text":"<p>By aggregating the information per each Closed Period, it is not possible to keep the date of each Transaction. So, when the Report is launched for a different Currency, all that information will be converted at the Period's Closing Date. This can result in minor discrepancies with the previous version due to conversions between currencies at different dates.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#product-movements-report","title":"Product Movements Report","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Product Movements Report</code></p> <p>Product Movements Report shows all receipts, shipments, moves and physical inventories grouped by Transaction Type and Business Partner. For each row, document number, date, description, locators and quantity are shown.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#parameters-window_3","title":"Parameters Window","text":"<p>The outcome of this report can be filtered using movement date, product, attribute and business partner.</p> <p>Additionally, the user can include or exclude these documents:</p> <ul> <li>Shipment/Receipt</li> <li>Physical Inventory</li> <li>Inventory Movements</li> <li>and Production.</li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#sample-report-output_2","title":"Sample Report Output","text":""},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/analysis-tools/#product-operations","title":"Product Operations","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Analysis Tools</code> &gt; <code>Product Operations</code></p> <p>Info</p> <p>To be able to include this functionality, the Warehouse Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Warehouse Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Warehouse Extensions - Release notes.</p> <p>This functionality centralizes of all the transactions associated with the product selected allowing the visualization of every movement and actions such as goods shipment/receip line, tax original cost, unit cost, storage bin and many other related actions to the products. </p> <p>This centralization facilitates the analysis and a complete understanding of the product operation performance.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/getting-started/","title":"Warehouse Management - Getting Started","text":"","tags":["getting started","warehouse management","inventory accuracy"]},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/getting-started/#warehouse-management-getting-started","title":"Warehouse Management - Getting Started","text":"","tags":["getting started","warehouse management","inventory accuracy"]},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/getting-started/#overview","title":"Overview","text":"<p>In Etendo, most of the warehouse movements are created automatically based on the transactions of Sales and Procurement processes. However, operating a warehouse also involves several manual activities, such as physical inventory, goods movements and their tracking and inventory valuation. These activities are executed in the Warehouse Management application area and are gathered in the Inventory Accuracy business flow which is described below.</p>","tags":["getting started","warehouse management","inventory accuracy"]},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/getting-started/#inventory-accuracy","title":"Inventory Accuracy","text":"<p>Main sub-processes of the Inventory Accuracy business flow are:</p> <ul> <li>Physical Inventory: This is a process where a business physically counts individual items in stock at a particular point in time and updates their inventory count within the system (if needed). It represents an opportunity to correct any inaccuracies in the records. Here are several reasons to conduct a physical inventory:<ul> <li>To initiate the stock</li> <li>To verify the physical amount, condition, and location of inventory items</li> <li>To identify, document, and add items to its inventory list that are on-hand and meet qualifying criteria, but are not currently shown as part of the inventory</li> <li>To ensure that legitimately transferred or disposed items are no longer carried on the inventory listing</li> <li>To identify any missing or damaged items that need to be located, repaired, or replaced.</li> </ul> </li> <li>Goods Movement: Transfers inventory between storage bins or warehouses. Possible reasons for goods movement are:<ul> <li>Goods received at warehouse from another party or warehouse.</li> <li>Inventory movement due to conversion of goods.</li> </ul> </li> <li>Goods Tracking: Displays all of the different movement types that happen in warehouse to verify the history, location, or application of an item by means of documented recorded identification.</li> <li>Inventory Valuation: Allows a company to provide a monetary value for items that make up their inventory.</li> <li>Inventory Update: Allows a company to change either current inventory amount or current unit cost of products in stock.</li> <li>Cost Adjustments Review: Allows a company to review product cost adjustments caused by changes in purchase prices, landed cost allocation or manual / negative cost corrections.</li> </ul>","tags":["getting started","warehouse management","inventory accuracy"]},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/getting-started/#configuration","title":"Configuration","text":"<p>Warehouse and Storage Bins need to be created and configured before performing the business flow. In addition to this, a Costing Rule needs to be defined and validated for the legal entity. Each costing rule requires a starting date from when it is going to be valid as well as a Costing Algorithm to be used by the Costing Background Process, which has to be scheduled.</p> <p>Besides, Landed Cost Types need to be configured here therefore can be selected while allocating this type of cost to goods receipts.</p> <p>Finally, Warehouse Rules can be configured to be applied while retrieving stock from the inventory automatically.</p> <p>Note</p> <pre><code>It is not required to do any additional setup for the Warehouse Management application area if Food &amp; Beverage (F&amp;B) sample client shipped with Etendo by default is going to be used to explore it. The sample data set already contains the roles, warehouses, and products pre-configured.\n</code></pre> <p>Above configuration is part of the overall Business setup flow within \"Warehouse\" setup.</p>","tags":["getting started","warehouse management","inventory accuracy"]},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/getting-started/#execution","title":"Execution","text":"<p>In Warehouse Management, main Inventory Accuracy operations are executed as follows.</p> <p>To get the Physical Inventory, Warehouse Staff:</p> <ul> <li>Starts with the products classifications and runs Pareto Product Report which distributes products into three classes (A, B or C) according to their cost percentage in the warehouse. Based on the classification, the frequency of counting cycle can be decided (e.g. A products are counted weekly, B products monthly and C products yearly). The ABC classification is then populated to the Manufacturing tab of the Product window by clicking the Update ABC button.<ul> <li>Note that the ABC classification is based on the cost of the product's transactions. That is why a Costing Rule for the legal entity must be configured and validated and the Costing Background Process process has to be scheduled.</li> </ul> </li> <li>After this procedure, the Warehouse Staff creates the physical inventory document in the Physical Inventory window by selecting the Warehouse where to execute this activity and pressing the Create Inventory Count List button. They define the criteria for the products to be included in the count-list (for example ABC classification) and it results in the list of products with their current quantities that is brought to the warehouse and verified against physical inventory.</li> <li>In order to update Etendo stock, if differences are found, first the Warehouse Staff selects the Physical Inventory that was previously created. Then in the Lines tab, they find the required products and update the Quantity Count field with a new value. After that, they finish the inventory count by clicking the Process Inventory Count button which updates inventory and triggers document posting (if configured).</li> </ul> <p>To execute Goods Movement Warehouse Staff:</p> <ul> <li>In the Goods Movements window, lists products to be moved with source and destination information and the respective quantity and then processes the document which updates all product quantities listed under Lines tab in the warehouse and triggers document posting (if configured).</li> </ul> <p>For Goods Tracking Warehouse Staff uses:</p> <ul> <li>Stock Report that gives a stock level of all products (that have inventory different from zero) and their location (warehouse and storage bin) grouped by product category.</li> <li>Goods Transaction window that offers a read-only view with extensive filtering capabilities that shows all inventory transactions.</li> <li>Product Movements Report shows all receipts, shipments, moves and physical inventories grouped by Transaction Type and Business Partner.</li> <li>Material Transaction Report lists all documents (shipments or receipts) grouped by Business Partner.</li> </ul> <p>Inventory Valuation is done with the help of the Valued Stock Report. This report shows the cost of the stock calculated by the Costing Server process.</p> <p>Inventory Update is done with the help of the Inventory Amount Update window. This window allows changing either the total inventory value or the unit cost of a product(s) at a given reference date, therefore a closing and an opening inventory are automatically created in the Physical Inventory window.</p> <p>For Cost Adjustments Review, Warehouse Staff uses the Cost Adjustment window. This window allows reviewing different types of cost adjustment sources together with the product's transactions whose costs are being adjusted, as well as adjustment amounts.</p>","tags":["getting started","warehouse management","inventory accuracy"]},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/getting-started/#relationship-with-other-application-areas","title":"Relationship with other application areas","text":"<p>Warehouse Management has a connection with other application areas:</p> <ul> <li>Procurement Management as goods received change stock quantity and its value.</li> <li>Sales Management as shipment changes stock quantity and its value.</li> <li>Production Management because raw materials are taken out of warehouse and produced goods are sent back to the stock during production process.</li> </ul>","tags":["getting started","warehouse management","inventory accuracy"]},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/","title":"Warehouse Management Setup","text":""},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#overview","title":"Overview","text":"<p>This section describes the steps that need to be performed to configure the warehouse management sections in Etendo. The corresponding windows are:</p> <p>Process Price Difference Adjustment </p> <p> Warehouse and Storage Bins </p> <p> Shipping Company </p> <p> Freight Category </p> <p> Costing Rules </p> <p> Costing Algorithm </p> <p> Landed Cost Type </p> <p> Warehouse Rules </p> <p>Referenced Inventory Type </p> <p>EAN 128 Type </p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#process-price-difference-adjustment","title":"Process Price Difference Adjustment","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Process Price Difference Adjustment</code></p> <p>Price difference adjustments can be performed \"automatically\" by scheduling the \"Price Correction Background Process\" or manually for a given product or set of products by running this process.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#warehouse-and-storage-bins","title":"Warehouse and Storage Bins","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Warehouse and Storage Bins</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#overview_1","title":"Overview","text":"<p>The user can create warehouses and organize them using storage bins.</p> <p>Warehouse represents the physical location of the stock in the application, and it is divided into Storage Bins in order to define a more exact location of goods inside the warehouse.</p> <p>This window allows the user to create and set up warehouses and get information about goods available in the warehouse as well as\u00a0 information related to transactions.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#warehouse","title":"Warehouse","text":"<p>The user can create warehouses for their organizations.</p> <p>It is important to have a previous overview before creating warehouses. Warehouse tab contains essential details of the warehouse, meaningful ones are Name and Location / Address.</p> <p></p> <p>Fields to note:</p> <ul> <li>Search Key: It is important to define a proper search key to warehouses so they can be identified easily later from other windows and reports.</li> <li>Returned Bin: Default value for the Return Material Receipt Lines Storage Bin field to which returned from customer products are placed.</li> <li>Warehouse Rule: Definition of a\u00a0Warehouse Rule to be applied when getting stock from the warehouse.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#storage-bin","title":"Storage Bin","text":"<p>The user can create storage bins for a selected warehouse.</p> <p>It defines Storage Bin position in the warehouse: Row (X), Stack (Y) and Level (Z) fields and other parameters.</p> <p></p> <p>Other fields to note:</p> <ul> <li>Relative priority: in terms of retrieving and taking out stock. Normal sequence of products shipment from the warehouse is first in first out (FIFO), but in this field a priority related to storage bins with the same product is indicated (0 = highest priority). The field is used by automatic processes that need to determine which storage bin to use, for example Create Shipments from Orders. It also defines sorting of storage bins in the Locator (Storage Bin) Selector.</li> <li>Default: when selected, this storage bin appears by default in documents.</li> <li>Barcode: There is no logic behind this field. It has been created in order to be used/implemented by other modules such as Etendo Mobile Application.</li> <li>Inventory Status: It is the current Inventory Status of the selected Storage Bin. It can be changed by clicking on Change Status button.  For more information, visit Inventory Status.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#product-transactions","title":"Product Transactions","text":"<p>The user can view all products transactions related to the selected warehouse and the history of transactions (materials receipt, shipment, used in production, etc.) that influence selected storage bin.</p> <p>The content of this tab is the same as of the Goods transaction window.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#bin-contents","title":"Bin Contents","text":"<p>The user can view the stored products of a selected storage bin.</p> <p>Bin Contents read-only tab lists products stored in a particular storage bin.</p> <p></p> <p>Fields to note:</p> <ul> <li>Attribute Set Value: This field is displayed if the product in the line has attributes (color, size, serial number or several of them together, etc).</li> <li>Last Inventory Count Date: The last date this product was checked during Physical Inventory Count process.</li> <li>Quantity on Hand: Current stock of the product.</li> <li>Quantity in Draft Transactions: Product quantity that is in warehouse transactions (like Goods Receipt, Goods Shipment, Physical Inventory, Goods Movements) in Draft status.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#accounting","title":"Accounting","text":"<p>The user can create and edit G/L accounts to be used in transactions including a selected warehouse.</p> <p>This tab specifies the Warehouse Differences account for each organization's general ledger configuration.</p> <p>It is automatically populated when a new warehouse is created as it is taken from the corresponding account of the Defaults tab of the corresponding general ledger configuration.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#shipping-company","title":"Shipping Company","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Shipping Company</code></p> <p>The user can create shipping companies and define freight costs to be used in product logistics.</p> <p>Shippers to be used in other application transactions can also be created.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#freight","title":"Freight","text":"<p>The user can define freights to be used for a specified shipper.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#freight-category","title":"Freight Category","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Freight Category</code></p> <p>The user can define and create freight categories to be used by shippers.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#costing-rules","title":"Costing Rules","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Costing Rules</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#overview_2","title":"Overview","text":"<p>A costing rule can be applied during cost calculation. Each costing rule requires a costing algorithm and a valid from date to properly calculate the cost of material's transactions. The \"Warehouse\" can be configured as a dimension to take into account while calculating costs.</p> <p>Costing rules can only be created for legal entities, that is either \"legal with accounting\" organizations or \"legal without accounting\" organizations.</p> <p>Product transactions costs can be calculated for both legal entities types, however only \"legal with accounting\" organizations support \"perpetual\" inventory posting as \"legal without accounting\" organizations do not support any type of posting.</p> <p>Note</p> <p>A costing rule can be validated if a \"Currency\" is configured for the legal entity in the organization window, therefore costs are calculated in that given currency.</p> <p>A valid costing rule once created and validated for a legal entity organization will automatically be assigned to the products of that organization, therefore it can be reviewed in the Costing Rule tab of \"Product\" window.</p> <p>Costing rules allow the user to define whether backdated transactions booked for products on a later date need to be adjusted therefore corresponding \"backdated transaction\" cost adjustments are also created and booked to get the correct cost of those products.</p> <p>Warning</p> <p>\"Costing Rules\" is a feature implemented by the new Costing Engine, therefore a costing rule can be created and validated within an Etendo instance managing costs only if it has been migrated to the new \"Costing Engine\".</p> <p>Etendo recommends to migrate instances using the \"legacy\" costing engine to the new costing engine.</p> <p>In order to create and validate a \"Costing Rule\", the user has to take into account that:</p> <ul> <li>First costing rule created does not allow entering any date in the field \"Starting Date\", which means that all existing product transactions are going to be cost calculated.<ul> <li>A blank date in the field \"Starting Date\" implies also a blank date in the field \"Fix Backdated From\" date unless a different date is entered in this field. \"Fix Backdated From\" date can be same or later than \"Starting Date\".</li> <li>Etendo will show an error in case there are product transactions whose costs need to be calculated with a movement date on a \"Closed\" period. In those cases, it will not be possible to post any cost transaction to the ledger unless the corresponding period is open for legal with accounting entities.</li> </ul> </li> <li>First costing rule created allows also specifying a date in the field \"Starting Date\", i.e. 01-01-2022:<ul> <li>In that case, all transactions with a transaction process date prior to that date will also be cost calculated at a zero cost.</li> <li>All transactions with a transaction process date on January 1st, 2022 and later on are going to be cost calculated at the corresponding cost.</li> </ul> </li> <li>Second costing rule does not allow entering a \"Starting Date\" as current date is taken by default, therefore first costing rule ends when second costing rule starts and so on.<ul> <li>Same applies to \"Fix Backdated From\" date defaulted to current date unless a specific date later than \"current\" date is entered.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#costing-rule","title":"Costing Rule","text":"<p>The costing rule window allows the user to define and validate costing rules.</p> <p></p> <p>As shown in the image above, a \"Costing Rule\" can be defined and assigned to an organization for which the cost of the transactions need to be calculated.</p> <p>There can only be one rule valid at a time for an organization which besides needs to be a \"Legal Entity\" organization type. The valid time period of the costing rule is set by the Starting Date entered.</p> <p>Note</p> <p>Once assigned, the costing rule applies to every product transaction recorded on the Legal Entity and all its children.</p> <p>The main property to set in a costing rule is the Costing Algorithm to used while calculating costs.</p> <p>The Standard and the Average algorithms are available by default. Additional algorithms such as FIFO, LIFO can be implemented by extension modules.</p> <p>Moreover, costs are calculated at organization level by default, however it is also possible to have the costs calculated for each Warehouse's organization.</p> <p>This can be achieved by using the Warehouse Dimension flag of the costing rule.</p> <p>Costing rules need to be validated to start using them. That is done by using the button \"Validate Costing Rule\".</p> <p>Warning</p> <p>Once a Costing Rule is validated, it is not possible to modify or delete it.</p> <p>If a costing rule needs to be changed, the user needs to create a new costing rule with the new setup required.</p> <p>Let us imagine that an organization requires a new costing algorithm to be used for cost calculation. In that case, a new costing rule needs to be created.</p> <p>The new rule overwrites the existing one, starting from a new and later \"Starting Date\".</p> <p>In this case:</p> <ul> <li>it is necessary to close the existing costing rule, that means to close the inventory valuated at the \"old\" rule</li> <li>and to initialize the inventory which will be valuated at the \"new\" costing rule starting from a given date</li> </ul> <p>The closing and initialization inventory balances are managed as Physical Inventories in the new costing engine.</p> <p>Two physical inventories are created for each organization and warehouse the costing rule applies to:</p> <ul> <li>the closing physical inventory empties the stock of products, therefore the Quantity Count is set to 0.     The cost of the products is the one calculated using the costing rule configured so far, regardless it is not shown in the physical inventory.</li> <li>The opening inventory fills in again the stock, therefore the Quantity Count is once again set to the Quantity on-hand.     The cost of the products is shown and it is the one calculated using the costing rule configured so far.     Note that the cost of the new transactions of those products will be calculated by using the new costing rule.</li> </ul> <p>The costing rule validation process does several checks:</p> <ul> <li>for instances managing cost which have not been migrated to the new costing engine will not be able to validate costing rules</li> <li>for instances do not managing cost do not need to migrate therefore will be able to create and validate costing rules</li> <li>and finally, for instance already managing cost under the new costing engine infrastructure:<ul> <li>in the case of products included in transactions which were cost calculated using a rule, if a new rule is configured all their transactions need to be calculated first according to that previous rule.</li> <li>in the case of products included in transactions which were not cost calculated by any rule, if a new rule is configured all their transactions must not be cost calculated.</li> </ul> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#fix-backdated-transactions","title":"Fix Backdated Transactions","text":"<p>As already described, a costing rule can also define whether backdated transactions booked for a product need to be fixed therefore the corresponding backdated transaction cost adjustment are created and booked for that product in order to get the correct cost of the product.</p> <p>To make this work, one of the following two actions can be taken:</p> <ol> <li>use an existing and validated Costing Rule.     This way fix backdated transactions feature gets activated by using the process button \"Fix Backdated Transactions\".     This option allows entering a \"Fix Backdated From\" date as starting date, before running the process.</li> </ol> <p> </p> <p>2. create and validate a new Costing Rule. This way fix backdated transactions feature gets activated by checking Backdated Transactions Fixed check-box and filling in a Fix Backdated From date before validating the costing rule.</p> <p>Both ways:</p> <ul> <li>\"Starting date\" of the costing rule will be set as \"Fix Backdated From\" date whenever the end-user does not enter a \"Fix Backdated From\" date.</li> <li>\"Fix Backdated From\" date needs to be a valid date within an open period.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#initialization","title":"Initialization","text":"<p>The initialization tab is a read-only tab which allows to review the \"Closing\" / \"Opening\" physical inventory created to validate a costing rule. Every time that a costing rule is validated a new record is created for each Organization and Warehouse. This record contains links to the physical inventories created.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#costing-algorithm","title":"Costing Algorithm","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Costing Algorithm</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#overview_3","title":"Overview","text":"<p>A costing algorithm defines the method to use to calculate the cost of the transactions.</p> <p>Etendo delivers the Standard and the Average costing algorithms as part of the new Costing Engine.</p> <p>Each costing algorithm needs to contain and implement all what is required to calculate the costs and store them.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#header","title":"Header","text":"<p>The main feature of a costing algorithm is the java class which includes all what is required to implement it.</p> <p>The costing algorithms need to be loaded through a \"System\" dataset therefore can be available to every Client of the Etendo instance.</p> <p>The costing algorithms can then be listed in this window once the corresponding system dataset has been applied.</p> <p>It is recommended to apply this type of system datasets to the (* organization) therefore are available for every organization of the Client.</p> <p>If no record is shown in this window please contact your \"System Administrator\" to ensure that the \"System\" datasets have been properly applied by using the following \"ant\" command: ant apply.module -DforceRefData=true</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#landed-cost-type","title":"Landed Cost Type","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Landed Cost Type</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#overview_4","title":"Overview","text":"<p>Landed Cost Types window allows the user to define different types of Landed Costs that can be assigned to Goods Receipts and therefore allocated to the products included in the receipts.</p> <p>Landed cost is the total cost of a landed shipment including purchase price, freight, insurance, custom duties and other costs up to the port of destination.</p> <p>Etendo handles landed costs not as part of the \"unit cost\" of a product but as a part of its total cost.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#header_1","title":"Header","text":"<p>Landed Cost Types can be defined either as a \"Product\" or as an \"Account\" (G/L Item). Besides that a distribution algorithm can be defined to configure the way landed costs are going to be allocated to products.</p> <p>Some fields to note are:</p> <ul> <li>Name: that is the name of the landed cost type, for instance \"Insurance\", \"Freight\", \"Duties\" or \"Taxes\".</li> <li>Landed Cost Distribution Algorithm: that is the algorithm to be used to distribute or allocate Landed Costs among all the receipt Lines related to that landed costs.</li> </ul> <p>Etendo delivers a \"Landed Cost Distribution Algorithm\" that is \"Distribution by Amount\" as part of the costing adjustment feature.</p> <p>This algorithm distributes landed costs to receipt lines proportionally by receipt line amount.</p> <p>The main feature of a landed cost distribution algorithm is the java class which includes all what's required to implement it.</p> <p>Landed cost distribution algorithm needs to be loaded through a \"System\" dataset therefore can be available to every Client of the Etendo instance.</p> <p>Once applied, \"Distribution by Amount\" costing algorithm is listed in this window.</p> <p>It is recommended to apply this type of system datasets to the (* organization) therefore are available for every organization of the Client.</p> <p>If no record is shown in this window please contact your \"System Administrator\" to ensure that the \"System\" datasets have been properly applied by using the following \"ant\" command: ant apply.module -DforceRefData=true</p> <p>A landed cost type can either be created as an \"Account\" or as a \"Product\".</p> <ul> <li>\"Account\" landed cost types requires a GL Item to be created, for instances \"Duties\".<ul> <li>G/L Item needs to be configured as \"Enabled in Financial Invoices\" and related to a tax category, therefore this type of landed costs can be booked through a purchase financial invoice.</li> <li>\"Expense\" type ledger account used while posting a purchase financial invoice including a landed cost of this type are the ones setup in the Accounting tab of the G/L Item.</li> </ul> </li> <li>\"Product\" landed cost types requires a Product to be created, for instance \"Freight\", therefore this type of landed costs can be booked through a purchase invoice.<ul> <li>\"Expense\" type ledger account used while posting purchase invoice including a landed cost of this type are the ones setup in the Accounting tab of the Product.</li> </ul> </li> </ul> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#warehouse-rules","title":"Warehouse Rules","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Warehouse Rules</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#overview_5","title":"Overview","text":"<p>Warehouse rules window allows the user to review the warehouse rules available.</p> <p>Warehouse rules are used to restrict the stock available in the warehouse.</p> <p>The rules are applied when the stock is retrieved automatically by processes like good shipment generation.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#rule","title":"Rule","text":"<p>New warehouse rules can only be applied by extension modules which must include a dataset with the definition of the rule and a procedure that implements it.</p> <p>Etendo ships three different rules by default:</p> <ul> <li>Unique Attribute: All the stock proposed to be used must be of the same attribute set value. It returns the first attribute set value that is found with enough quantity to fulfill the requirement. If there is not any attribute set value with enough stock no stock is proposed. This is an excluding rule.</li> <li>Unique Storage Bin: All the stock proposed must come from the same storage bin. It returns the stock from the first storage bin found with enough quantity. If there is no storage bin with enough quantity then the stock is obtained from any storage bin. This is a preference rule and not a excluding rule</li> <li>and Default Warehouse Rule: The default rule does not restrict anything and all the available stock from the on hand warehouses is returned. This rule can be used in Sales Orders whenever it is desired to overwrite a rule defined in the warehouse to not apply any rule.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#referenced-inventory-type","title":"Referenced Inventory Type","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>Referenced Inventory Type</code></p> <p>This section defines different types of containers or boxes, which include any kind of object that can contain goods.</p> <p>Referenced Inventory Type window fields</p> <ul> <li>Organization : Organizational entity within client</li> <li>Name : A non-unique identifier for a record/document often used as a search tool.</li> <li>Shared : Shared or Unique References</li> <li>Sequence : The order of records in a specified document.</li> <li>Description : A space to write additional related information.</li> <li>Active : A flag indicating whether this record is available for use or deactivated.</li> <li>Referenced Inventory Type</li> <li>Client : Client for this installation.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#ean-128-type-window","title":"EAN 128 Type Window","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Setup</code> &gt; <code>EAN 128 Type</code></p> <p>In this window you can add different types of barcodes. They store information about the product in this code, either: Date, Product, Physical Inventory Line, and when you scanned, you can obtain this information from the barcode.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#header_2","title":"Header","text":"<ul> <li> <p>EAN 128 Type header fields:</p> </li> <li> <p>Module : Module to export the data.</p> </li> <li> <p>Organization : Organizational entity within client.</p> </li> <li> <p>Name : A non-unique identifier for a record/document often used as a search tool.</p> </li> <li> <p>Description : A description describing the usefulness of this new type is placed here.</p> </li> <li> <p>Default : When selected, this EAN 128 Type will appears by default.</p> </li> <li> <p>Active : A flag indicating whether this record is available for use or deactivated.</p> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#lines","title":"Lines","text":"<p>In the lines you can add a record referring to the parent already created. Here you will create a data that will be received when scanning a barcode.</p> <p></p> <ul> <li> <p>EAN 128 Type lines fields:</p> </li> <li> <p>Module : Module to export the data.</p> </li> <li> <p>Organization : Organizational entity within client.</p> </li> <li> <p>Active : A flag indicating whether this record is available for use or deactivated.</p> </li> <li> <p>Content : Name of the line content.</p> </li> <li> <p>Al : Application identifier, that refers to the extra numbers in the code.</p> </li> <li> <p>Content Length : Longitude of the ean type content.</p> </li> <li> <p>Data Type : Type of the EAN 128 type data.</p> </li> <li> <p>Fixed Length : This check is set if the code only contains the data or not.</p> </li> <li> <p>Lot : indicator that determines if the EAN code corresponds to a \"lot\" or \"lot number\".</p> </li> <li> <p>Serial No. : A unique number of products.</p> </li> <li> <p>Expiration Date : Determinants if is an expiration date.</p> </li> <li> <p>Sequence Number : The order of records in a specified document. The Sequence indicates the order of records.</p> </li> <li> <p>Attribute: An attribute to define an item.</p> </li> <li> <p>Entity: The group the scanned item refers to.</p> </li> <li> <p>Entity Field : Property of the entity that the value is obtained. Refears the HQL field of the entity.</p> </li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/setup/#example","title":"Example","text":"<p>For example we will see a record created here:</p> <p></p> <ul> <li> <p>Content : The name of this new type that is being created will be added here.</p> </li> <li> <p>Al : AI gives a number of decimal places in the following value. The represented value is the following integer divided by 10X. For example, a net weight of 22.7 kg could be coded as 3101 000227, 3102 002270, 3103 022700, or 3104 227000. Registered AI should be 310X.</p> </li> <li> <p>Content Length :This will be the length of the code, depending on what it will be used for, it can be longer or shorter.</p> </li> <li> <p>Data Type : This refers to the type of data to be stored in the barcode. These can be: Date, String, Integer or Decimal.</p> </li> <li> <p>Fixed Length : This check leaves only the relevant information in the scanned code.</p> </li> <li> <p>Lot : the lot attribute appears to be a flag or indicator that determines whether the current content extracted from the EAN code corresponds to a \"lot\" or \"lot number\".</p> </li> <li> <p>Serial No. : A unique number, this represents a serial number.</p> </li> <li> <p>Expiration Date : This field defines that the value of the barcode is an expiration date.</p> </li> <li> <p>Sequence Number : This field helps keep track of the sequence number for each entry. If there are multiple entries with the same entityFieldName, the code uses the sequence number to determine which has the most recent number and, based on that, decides whether or not to update the content stored in the object.</p> </li> <li> <p>Entity: in this field you can assign the entity to which this value corresponds. it has 5 options:</p> </li> <li> <p>Attribute: when this option is selected, the \"Attribute\" field will appear on the screen. If you do not have any created, you can go to this window and create it. An attribute is a characteristic that can be added to the scanned value, to have a better reference to it.</p> <ul> <li>Order Line.</li> <li>Physical Inventory Line.</li> <li>Product Line.</li> <li>Shipment/Receipt Line.</li> </ul> </li> </ul> <p>These last 4 options show the Entity Field therefore by selecting one of these 4 options. </p> <ul> <li>Entity Field: In this selector you can choose the specific field to the entity field that it references.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/","title":"Warehouse Management","text":""},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#overview","title":"Overview","text":"<p>Warehouse Management deals with all activities related to the warehouse actions necessary for sales and procurement processes.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#physical-inventory","title":"Physical Inventory","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Transactions</code> &gt; <code>Physical Inventory</code></p> <p>Physical Inventory window allows the user to execute goods count process in Etendo.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#header","title":"Header","text":"<p>Goods count process requires creating an inventory count to check or to update stock quantities.</p> <p>These are the steps that must be followed in order to create an inventory count:</p> <p>1. The Header section identifies the \"Physical Inventory\" process and lists its main parameters.</p> <p></p> <p>All fields are pre-filled automatically when a new record is created.</p> <p>Some of the fields to note are:</p> <ul> <li>Name: This field is used to reference the physical movement not only in warehouse reports but also on general ledger, therefore it is important to use a significant name.</li> <li>Movement Date: This is the date when the movement is created and it is defaulted to the current date. This date is also used in the posting record of the Physical Inventory document to the general ledger, if any. It can always be changed, but the user should keep in mind that it is not possible to register physical inventories in the past (the \"Process Inventory Count\" always takes the current date and not the Movement Date to update the stock). The Movement Date should be the current date unless the user can ensure that no warehouse transactions have been processed in the meanwhile.</li> <li>Warehouse: warehouse in which the physical inventory takes place. Defaulted to the session value from the top navigation User Preferences menu.</li> </ul> <p>2. There are 2 ways of entering lines into the physical inventory document:</p> <ol> <li>Automatically, by creating a list of the products available in the warehouse and storage bins defined in the physical inventory header that fulfill the filtering conditions specified by the Create Inventory Count List button.</li> <li>Manually, line by line for certain products. This is used whenever only some products need updating.</li> </ol> <p>Create Inventory Count List process can be executed more than once for the same physical inventory. Although lines are created automatically by using the Create Inventory Count List process, these lines can later on be updated manually. Create Inventory Count List filter dialog has the following parameters:</p> <p></p> <p>The fields to note are:</p> <ul> <li>Storage Bin: Only products on this storage bin will be filtered.</li> <li>Product Category: Only products belonging to a given product category will be filtered, otherwise all products will be shown.</li> <li>Inventory quantity: Includes or excludes products on physical inventory depending on actual quantities. The options available are:<ul> <li>empty - all product on physical inventory will be shown regardless its quantity</li> <li>0 - only products on physical inventory having 0 quantity in stock will be shown.</li> <li>&lt;0 - only products on physical inventory having a positive quantity in stock will be shown.</li> <li>&gt;0 - only products on physical inventory having a negative quantity in stock will be shown.</li> <li>not 0 - only products on physical inventory having a quantity in stock different to 0 will be shown.</li> </ul> </li> <li>Set Book Quantity to Zero: this checkbox sets the Quantity Count field on the count list to zero. When the checkbox is not selected, the Quantity Count is defaulted to the same value as the Book Quantity (On Hand Quantity) of the product.<ul> <li>First option is used for blind physical inventories where people who are counting items in the warehouse do not need to know the expected quantities.</li> <li>First option is used to allow the user to enter the \"real\" quantity count on the warehouse and storage bin. Once the inventory count is processed, the book quantity shown by the system will be updated to the quantity count entered by the user.</li> </ul> </li> <li>ABC: Pareto Product Report</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#lines","title":"Lines","text":"<p>Lines tab allows\u00a0 the user to add or to edit individual products to be included in the inventory count list. It represents the inventory count list of a given warehouse.</p> <p>Some relevant fields to note are:</p> <ul> <li>Quantity Count: that is the actual (physically counted) product stock in the Storage Bin of the warehouse.</li> <li>Book Quantity: that is the product stock in the Storage Bin according to Etendo.</li> <li>Cost: that is the unit cost of the product.   This field is optional. It can be filled in with the cost if known whenever the stock of a product is increased, otherwise the Default Cost method is used to valuate that transaction which increases the stock of the product.</li> </ul> <p>The process buttons are:</p> <ul> <li>Update Quantity updates current Book Quantity field with latest product quantity from the application. This is used in case it has changed since the count list was generated. It is useful for situations when there is a significant amount of time in between generating physical inventory in Etendo and real physical count.</li> <li>Process Inventory Count finishes Physical Inventory count process after all corrections have been entered and updates the stock.</li> <li>Post allows to account the inventory count once processed.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#accounting","title":"Accounting","text":"<p>A physical inventory can only be posted to the ledger in case there is a difference between \"Quantity count\" and \"Book Quantity\" for a product. Otherwise there will not be anything to post to the ledger.</p> <p>For instance, a product whose \"Quantity count\" is 6700 units at a given date, while \"Book Quantity\" in Etendo is 6000 units.</p> <p>That physical inventory can be posted once processed, if the cost of the product has been calculated.</p> <p>Physical Inventory posting creates the following accounting entries if inventory increases:</p> Account Debit Credit** Product Asset (Quantity Count - Book Quantity) * Cost of the Product Warehouse Differences (Quantity Count - Book Quantity) * Cost of the Product <p>Physical Inventory posting creates the following accounting entries if inventory decreases:</p> Account Debit Credit Warehouse Differences (Quantity Count - Book Quantity) * Cost of the Product Product Asset (Quantity Count - Book Quantity) * Cost of the Product"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#how-to-reactivate-physical-inventories","title":"How to Reactivate Physical Inventories","text":"<p>Info</p> <p>To be able to include this functionality, the Warehouse Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Warehouse Extensions Bundle.</p> <p>From the Physical Inventory window, it is possible to reactivate a previously generated inventory just by selecting the corresponding document and clicking the Reactivate button.</p> <p>Once the Inventory is successfully reactivated, the state of the document changes to Not processed as it can be observed in the status bar.</p> <p></p> <p>Warning</p> <p>It is not possible to reactivate documents that include transactions with quantities exceeding the existing stock quantity for a certain product in a certain storage bin. The only exception is when the configuration of the storage bin allows Over Issue. For more information, visit Storage Bin.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#bulk-posting","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#goods-movement","title":"Goods Movement","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Transactions</code> &gt; <code>Goods Movement</code></p> <p>Goods Movement window allows the user to make internal inventory movements among warehouses and storage bins.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#header_1","title":"Header","text":"<p>Internal inventory movements can be made by adding products to the lines tab or by moving all items at once.</p> <p></p> <p>All fields are automatically pre-filled in when a new record is created. Some of them to note:</p> <ul> <li>Name: This field will be used to reference this goods movement, not only in warehouse reports but also in the general ledger, therefore it is important to use a significant name.   This field is defaulted to the current date but it can always be changed as required.</li> <li>Movement Date: that is the date of the goods movement transaction.   This field is defaulted to the current date but it can always be changed as required.   From an accounting point of view, goods movement will be reflected on this date.</li> </ul> <p>As already mentioned, there are 2 ways of entering lines (or products to be moved between warehouses and storage bins):</p> <ol> <li>By adding individual products to the Lines tab.</li> <li>By moving all items from one bin (Storage Bin From) to another (Storage Bin To) by using the Move Storage Bin button.     The system automatically inserts one line per every storage bin and product.</li> </ol> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#lines_1","title":"Lines","text":"<p>Lines tab is a list of the products moved between warehouses and storage bins.</p> <p>This tab also includes information about the source, destination and the respective quantity.</p> <p></p> <p>Some fields to note:</p> <ul> <li>Movement Quantity: that is the product amount to be moved.   Defaulted to the total quantity of the Product in the Storage Bin.</li> <li>Storage Bin: that is the bin products are taken from.   Defaulted to the Storage Bin selected in the Product selector.</li> <li>New Storage Bin: that is the destination bin for the products.</li> <li>New Attribute Set Instance: Read only field which is only visible for Referenced Inventory\u00a0 related box/unbox transactions. It shows the new attribute set instance after the boxing/unboxing process takes place.</li> </ul> <p>Once Process Movements process is executed, the stock is updated.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#accounting_1","title":"Accounting","text":"<p>Info</p> <p>A Goods Movement can be posted to the ledger if the MaterialMgmtInternalMovement table is set to Active in the Active Tables tab of the organization's general ledger configuration.</p> <p>Goods Movement posting creates following accounting entries.</p> <p>Posting record date: Movement Date.</p> Account Debit Credit Comment Product Asset Movement Line Cost Amount One per Goods Movement Line Product Asset Movement Line Cost Amount One per Goods Movement Line <p>Posting a Goods Movement implies to have its cost calculated:</p> <ul> <li>A validated Costing Rule in the Goods Movement legal entity is required.</li> <li>The background process Costing Background Process must be run.</li> <li>Once the cost has been calculated, the Goods Movement can be posted.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#how-to-reactivate-goods-movements","title":"How to Reactivate Goods Movements","text":"<p>Info</p> <p>To be able to include this functionality, the Warehouse Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Warehouse Extensions Bundle</p> <p>From the Goods Movement window, the user is able to reactivate a previously generated movement just by selecting the needed movement and clicking the Reactivate button.</p> <p>Once the movement is successfully reactivated, the state of the document changes to Not processed as it can be observed in the status bar.</p> <p></p> <p>Warning</p> <p>It is not possible to reactivate documents that include transactions with quantities exceeding the existing stock quantity for a certain product in a certain storage bin. The only exception is when the configuration of the storage bin allows Over Issue. For more information, visit Storage Bin.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#bulk-posting_1","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#bill-of-materials-production","title":"Bill of Materials Production","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Transactions</code> &gt; <code>Bill of Materials Production</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#overview_1","title":"Overview","text":"<p>Create and run production processes using the previously defined bills of materials.</p> <p>Unlike the name suggests, this process is not part of production. This setup is used to combine different end products into another bundled product. For example, for a computer that is shipped with different keyboards or products that are shipped with different power cables. There is no actual production involved for the creation of the new product.</p> <p>The set up of this screen is combined with setups in the product screen:</p> <ul> <li>the bill of materials checkbox is selected for the product</li> <li>the bill of materials tab is filled out</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#bom-production","title":"BOM Production","text":"<p>In this section the organization is selected, a name of the bundling that will be executed, as well as a date on which it will occur.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#production-plan","title":"Production Plan","text":"<p>Add bills of materials to be produced in a specified production plan.</p> <p>In this section, the product is selected and the number that is executed. Also, the storage bin in which the result of the Production will be stored must be selected.</p> <p>As indicated in the Overview, the product that is selected needs to be set up correctly first:</p> <ul> <li>the bill of materials checkbox is selected</li> <li>the bill of materials tab is filled out with the information of the components that are combined plus the quantity for each component</li> <li>the Verify Bom button was clicked to set the product ready to be used</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#io-products","title":"I/O Products","text":"<p>Create and edit the products that are going to be used in the production.</p> <p>After the Production Plan tab is filled out, the Create/Process Production button is clicked to generate the information in this section. Based on the setup of the information in the bill of materials tab of the product combined with the production quantity in the production plan tab, the information of the components to be used and which quantity was generated.</p> <p>After clicking the Create/Process Production button for the second time, the changes are executed.</p> <p>In the popup, the checkbox 'Product quantity must be on stock' can be selected, so the process is only executed if the components are in stock. After successfully processing, the stock of the components decreases and the stock of the bundled product increases.</p> <p>Warning</p> <p>Currently, processes involved in the Bill Of Materials Production do not support negative stock. For this reason, if the checkbox 'Product quantity must be on stock' is not selected and there is not enough stock of the consumed products, the available quantity in stock will be used to fill the quantities in the [I/O Products] tab lines.</p> <p>There is a check named Force Use Of Warehouse Of Selected Storage Bin. When enabled, the same Warehouse of the selected Storage Bin will be used to retrieve the stock to be consumed. If it is not enabled, the process will take into account all available Warehouses for the set in the header of the Document.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#bulk-posting_2","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#goods-transaction","title":"Goods Transaction","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Transactions</code> &gt; <code>Goods Transaction</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#overview_2","title":"Overview","text":"<p>Goods Transaction window provides a read-only view with extensive filtering capabilities that shows all inventory transactions.</p> <p>All real warehouse movements can be seen in this window: incoming, outgoing, movements between warehouses, physical inventories, etc.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#stock-reservation","title":"Stock Reservation","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Transactions</code> &gt; <code>Stock Reservation</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#overview_3","title":"Overview","text":"<p>In this window, it is possible to review and manage existing Reservations.</p> <p>Stock reservations are mainly used to ensure the stock availability when delivering a Sales Order. With this feature, it is also possible to lock stock not related to any Sales Order to avoid its consumption.</p> <p>A reservation identifies certain stock in the warehouse that is reserved and cannot be consumed by anyone except the owner of the reservation. Currently, there are two possible owners, a Saler Order line or the System. A reservation for a Sales Order line identifies stock that can only be consumed in shipments related to the Sales Order. A System reservation is a special reservation type that cannot be consumed by anyone. System reservations are used for Hold reservations when some stock needs to be blocked in the warehouse.</p> <p>Note</p> <p>Reservations are disabled by default. To be able to use them, please insert a new Preference using property Enable Stock Reservations with value Y. Then, end session and log in again to continue with the process.</p> <p>This functionality comes with two types of reservations:</p> <ul> <li>Pre-Reservation: These are reservations that are not physically in the warehouse but ordered to a supplier and when there is a relationship between the line of the purchase order and a sales order line. Once the purchase order line is received, this pre-reservation is automatically converted to a reservation.</li> <li>Reservation: Refers to stock stored in the warehouse that is already reserved by a sales order line.</li> </ul> <p>A reservation is always defined by the product that is desired to be reserved but other dimensions can be defined such as the warehouse, storage bin and attribute (i.e Colour, lots, serial number).</p> <p>Another interesting thing is the possibility of allocating or not the reservation:</p> <ul> <li>Allocated stock means that specific stock is reserved for a sales order, rather than it being a general reservation. That particular stock can not be reserved for any other sales order.</li> <li>A Not Allocated reserved stock can be changed at any time by other existing stock but always ensuring that the Sales Order line keeps the reservation.</li> </ul> <p>This functionality tries to cover several flows:</p> <ol> <li>Sales</li> <li>Procurement</li> <li>Purchasing plan (MRP)</li> </ol>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#sales-flow","title":"Sales Flow","text":"<p>A sales order can be reserved when the document is booked and pending to be delivered. The way to make the reservation is:</p> <ul> <li> <p>Manual: No reservation is generated automatically. So when the order is booked the reservations needs to be done manually selecting the storage bin, attribute, etc.</p> </li> <li> <p>Automatic: The reservation is automatically created and processed, reserving the available stock.  This option reserves stock from any of the available warehouses belonging to the organization of the created sales order, not only from the warehouse defined in the order header.</p> </li> <li> <p>Automatic - Only default warehouse: The reservation is limited only to the warehouse specified in the header of the order. This allows optimizing inventory allocation and ensuring that products are allocated according to the warehouse preferences defined in each transaction.</p> <p>Info</p> <p>This last option is only available if the Automated Warehouse Reservation module is installed, part of the Warehouse Extensions Bundle. To do that, follow the instructions from the marketplace: Warehouse Extensions Bundle.</p> </li> </ul> <p>For more information, visit Sales Order.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#procurement-flow","title":"Procurement Flow","text":"<p>Pre-reservations can also be made from the Purchase Order. Being in the purchase order line, there is the possibility of selecting any sales order line pending to be delivered that is waiting to receive the goods in the warehouse. Once the items are received the pre-reservation is converted to reservation and the goods are reserved for that sales order line.</p> <p>For more information, visit Purchase Order.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#purchasing-plan-mrp","title":"Purchasing Plan (MRP)","text":"<p>When launching the purchasing plan there is now the possibility of making reservations for Sales Order and pre-reservations, that is, create purchase orders linked to sales orders.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#reservation-consumption","title":"Reservation Consumption","text":"<p>When a Good Shipment of a reserved Sales Order is automatically created, it will consume reserved stock. The process will propose first the possible allocated stock and later any available stock based on the standard rules to retrieve stock, including reserved stock but NOT allocated (even from other reservations). If the related Sales Order does not have any reservation, only not reserved stock is proposed.</p> <p>When the Goods Shipment is processed the reservation is updated to reflect the stock that has been finally delivered and update the released quantity. In this step, there are several cases:</p> <ul> <li>All the stock of the shipment matches the reserved stock. The released quantity is updated accordingly.</li> <li>A different stock is shipped.</li> <li>The stock is not reserved by any other reservation. The reservation is updated to reserve the shipped stock and if there was other stock reserved it is deleted from the reservation so the reserved quantity remains equal.</li> <li>The stock is reserved and not allocated in another reservation. The other reservation is updated to search for other available stock.<ul> <li>If available stock is found, the other reservation is updated to reserve the found stock and the stock is reassigned to the current reservation.</li> <li>If no available stock is found, an error is shown as the stock is not available. The user should change the stock of the good shipment or edit the other reservation to manually search or free the conflicting stock.</li> </ul> </li> <li>The stock is reserved and allocated in another reservation. An error is shown as the stock is not available. The user should change the stock of the good shipment or edit the other reservation to manually search or free the conflicting stock.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#reservation","title":"Reservation","text":"<p>The desired product to be reserved is defined in the main tab.</p> <p></p> <p>The reservation header defines each reservation. First, the Organization where the reservation is done and the Product and Quantity desired to be reserved are defined. When the reservation is for a Sales Order line, these fields are inherited from the line. Later, the owner of the reservation is defined, currently it is only possible to define Sales Order lines. If this is left blank, the reservation is considered a System reservation where the owner is the Organization. Finally, it is possible to define certain dimensions to restrict the stock that can be used to fulfill the reservation:</p> <ul> <li>Warehouse</li> <li>Storage Bin</li> <li>Attribute Set Value</li> </ul> <p>Note</p> <p>It is only possible to select warehouses that are defined as on hand warehouses of the organization and storage bins that belong to them.</p> <p>The reservation might have different statuses:</p> <ul> <li>Draft: The reservation might already have some stock lines, but those are not yet considered as reserved stock and are available to everyone.</li> <li>Completed: The reservation has been processed. If some stock was still pending to be reserved the Complete process will try to reserve the available stock. This automatically reserved stock is left as not allocated.</li> <li>Hold: Any reservation can be set in hold status. This means that the stock is completely blocked and it is not even possible to generate a shipment for the sales order consuming the reserved stock. In this status, the button previously named \u201cPut on Hold\u201d changes to \u201cUnhold\u201d and gives the user the possibility to undo the action.</li> <li>Closed: A closed Reservation can not be reactivated afterwards. Also, when a Reservation is Closed, it's Quantity is set as the same value as the Released Quantity, preventing further inconsistency problems.</li> </ul> <p>A reservation has 3 main quantities:</p> <p>Quantity</p> <p>Determines the quantity that is desired to be reserved. If the reservation is related to a Sales Order line this quantity must be the same as the Ordered Quantity.</p> <p>Reserved Qty</p> <p>It is the total quantity that is really reserved. When there is not enough stock available it is possible to have a lower Reserved Qty than the Quantity.</p> <p>Released Qty</p> <p>It is the quantity that has been delivered and released from the reservation. When a Good Shipment for a reserved Sales Order is processed the Released Qty of the reservation is increased by the delivered quantity.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#stock","title":"Stock","text":"<p>The Stock tab identifies each existing Stock or Purchase Order selected to fulfill the reservation.</p> <p></p> <p>In the Stock tab, the actual reserved stock is shown. The stock should meet the dimensions defined in the header. When the stock is physically in the warehouse the reserved stock is identified by the Storage Bin and the Attribute Set Value when applied. In case of pre-reservations the stock is still not in the warehouse, so the Storage Bin property is blank and the Purchase Order line is set. When a pre-reservation is receipt and converted to reservation the storage bin where the stock has been stored is set keeping the purchase order line.</p> <p>The reserved stock has 2 quantities:</p> <p>Quantity</p> <p>The quantity reserved.</p> <p>Released Qty</p> <p>The quantity that has been released or delivered.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#manage-stock","title":"Manage Stock","text":"<p>When the reservation is in Draft or Completed status, it is possible to modify the reserved stock using a pick and execute process.</p> <p></p> <p>This window shows all the already reserved stock plus other available stock and not receipt Purchase Order Lines that can be used to fulfill the reservation. The available stock is filtered by the on hand warehouses of the reservation's organization and the dimensions that might be set. The Purchase Order lines are also filtered by these dimensions. For each selected line the quantity to reserve has to be set and if the stock is allocated or not. The quantity must be lower than the available quantity considering as well the quantity that might be reserved in other reservations and the sum of all the selected lines must be lower than the quantity desired to be reserved. If the reservation already has some released quantity, the quantity of the released stock must be higher or equal than the released stock</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#goods-movement_1","title":"Goods Movement","text":"<p>It is allowed to move an item that is reserved from its current storage bin to another one. The button Goods movement shows all the bins where the product is reserved, that is, the stock lines and it\u00a0 is also possible to edit the quantity to be moved and the new storage bin.</p> <p></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#inventory-amount-update","title":"Inventory Amount Update","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Transactions</code> &gt; <code>Inventory Amount Update</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#overview_4","title":"Overview","text":"<p>Inventory Amount Update window allows the user to change either current inventory amount or current unit cost of products in stock at a given reference date.</p> <p>Once created and processed, it generates a closing and an opening inventory for the product(s), which can be reviewed in the Inventories tab.</p> <ul> <li>Closing inventory removes product \"current\" inventory value (at current cost, either \"average\" or \"standard\")</li> <li>Opening inventory adds product \"new\" inventory value (at current cost, either \"average\" or \"standard\")</li> </ul> <p>Whenever an inventory amount update is created on the current date, therefore movement date is the same as transaction process date, all existing transactions remain valued at the existing cost but new ones booked starting from current date, that will be valued at the new cost.</p> <p>Whenever an inventory amount update is created in the past, those closing/opening inventories will have a movement date in the past and a transaction process date. These inventories will be set as \"Backdated\" transactions by the Costing Background process, therefore the corresponding backdated cost adjustment can be created.</p> <p>These two inventory transactions, opening/closing inventory can be reviewed in the Transactions tab of the product window and can be posted to the ledger in the Physical Inventory\u00a0 window.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#header_2","title":"Header","text":"<p>An inventory Amount Update can be created and processed in the header section of the Inventory Amount Update window.</p> <p>An inventory amount update can be created, managed and processed in the header section of the Inventory Amount Update window.</p> <p></p> <p>Some fields to note are:</p> <ul> <li>Document type: that is inventory amount update document type</li> <li>Document No.: that is inventory amount update document sequence</li> <li>Document Date: that is inventory amount update date.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#lines_2","title":"Lines","text":"<p>Once an inventory amount update header has been properly created and saved, inventory amount update lines can be created in this tab.</p> <p>An inventory amount update can have as many lines as products whose current cost or inventory amount needs to be modified for whatever kind of reason.</p> <p>When selecting a product and entering a given reference date current inventory amount, on hand qty and current unit cost for the product are automatically filled in.</p> <p>To complete the line it is necessary to fill in either the \"Inventory Amount\" or the \"Unit Cost\".</p> <p>Info</p> <p>It is important to remark that product quantity on hand shown in an \"Inventory Amount Update\" can vary if the \"Fix Backdated Transaction\" flag is active/not active in the corresponding Costing Rule.</p> <p>For instance, a receipt of 100 units is booked for a product at the current date, and after that another receipt of 50 units is booked for a product with a movement date in the past. This last one receipt is a \"backdated\" transaction.</p> <p>An Inventory Amount Update is launched for the product dated on between, before current date:</p> <ul> <li>if the \"Fix Backdated Transaction\" is active, the \"Inventory Amount Update\" launched for the product, will then consider the \"backdated\" transactions booked for that product, therefore the stock shown will be 50 units. Backdated transaction \"movement date\" is considered in this case.</li> <li>if the \"Fix Backdated Transaction\" is not active, the \"Inventory Amount Update\" launched for the product, will then not consider the \"backdated\" transactions booked for that product, therefore the stock shown will be 0 units. Backdated transaction \"movement date\" is not considered in this case but transaction \"process date\" (current date).</li> </ul> <p>Some fields to note are:</p> <ul> <li>Reference Date: that is the date when inventory amount update needs to be booked/posted to the ledger, therefore it could impact the cost of product transactions dated on a later date.</li> <li>Product: that is the product whose inventory amount needs to change.</li> <li>Current Inventory Amount: once product has been selected this field shows product current inventory value at given reference date.</li> <li>Current Unit Cost: once product has been selected this field shows product current unit cost.</li> <li>On hand qty: once product has been selected this field shows product on hand quantity at given reference date.</li> <li>Inventory Amount: this field allows to enter a \"new\" inventory amount for the product. Once entered \"Unit Cost\" field is populated accordingly by taking into account On hand quantity field.</li> <li>Unit Cost: this field allows to enter a \"new\" unit cost for the product. Once entered, the \"Inventory Amount\" field is populated accordingly by taking into account On hand quantity field.</li> </ul> <p></p> <p>Once created, an inventory amount update can be processed by using the process button \"Process\".</p> <p>That action creates a closing and an opening inventory transaction that can be reviewed in the\u00a0 inventories tab.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#inventories","title":"Inventories","text":"<p>A closing and an opening inventories are created for every product whose unit cost or inventory value have been modified.</p> <p>This \"read-only\" tab contains links to detail information such as:</p> <ul> <li>Warehouse: that is the warehouse where inventory amount update has taken place.</li> <li>Close Inventory: that is the closing inventory transaction that removes current product inventory at current unit cost.</li> <li>Init Inventory: that is the opening inventory transaction that adds new product inventory at new unit cost.</li> </ul> <p></p> <p>Opening and closing inventory can be reviewed and posted to the ledger in the Physical Inventory \u00a0window.</p> <p>Closing inventory posting creates following accounting entries:</p> Account Debit Credit Warehouse Differences Current Inventory Amount Product Asset Current Inventory Amount <p>Opening inventory posting creates following accounting entries:</p> Account Debit Credit Product Asset New Inventory Amount Warehouse Differences New Inventory Amount"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#cost-adjustment","title":"Cost Adjustment","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Transactions</code> &gt; <code>Cost Adjustment</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#overview_5","title":"Overview","text":"<p>Cost Adjustment window allows the user to review product transaction's cost adjustments caused by changes in purchase prices, landed cost allocation or manual/negative cost corrections.</p> <p>Once the cost of a \"Product Transaction\" has been calculated by the costing background process and according to what is configured for the product(s) in the corresponding Costing Rule, it cannot be recalculated or deleted.</p> <p>However, and under some circumstances, the calculated cost of a product transaction would need to be adjusted, for instance the purchase price of a purchase transaction changes after receiving the product.</p> <p>If that is the case,\u00a0 the calculated cost of the receipt would need to be adjusted to the new purchase price.</p> <p>Cost Adjustments feature is in charge of managing adjustments created on an already calculated transaction's cost.</p> <p>It is important to remark that this feature takes into account the \"costing algorithm\" used to calculate costs, therefore it behaves differently depending on:</p> <ul> <li>If the costing algorithm used is \"Average\", the cost of a transaction changes and as a consequence of that the cost of the product involved changes.   In that case, a cost adjustment transaction is created in this window to reflect that change, cost adjustment transaction that can be posted to the ledger so the inventory value of the product is the same as its accounting value.</li> <li>However, if the costing algorithm used is \"Standard\", the cost of a transaction cannot change and be adjusted, same way the \"Standard\" cost of the product involved remains the same.   In that case, no cost adjustment transaction will be created in this window.</li> </ul> <p>As a consequence of the above \"Cost Adjustment\" window manage cost adjustments created for products and therefore products transactions valued at \"Average\" cost algorithm.</p> <p>There are different types of \"cost adjustments sources\" which lead to the correct \"average\" cost of a product.</p> <p>For instance, receipt transactions that were not booked in the same order than happened or receipt transactions that require to add landed costs to its already calculated cost, all of that will impact and therefore require that the \"average\" cost of the product changes.</p> <p>It is important to remark that:</p> <ul> <li>cost adjustments are cumulative, therefore a product transaction can have more than one adjustment of any type if required to get that the average cost of that product transaction is the correct one.</li> <li>there are two types of transactions:</li> <li>those transactions whose costs need to be adjusted as \"source\" of the adjustment, i.e a goods receipt whose cost needs to be adjusted due to a change of the purchase price</li> <li>those transactions whose costs need to be adjusted \"not as source\" but because of adjusting source ones, i.e a goods shipment whose cost needs to be adjusted because the corresponding goods receipt cost changed.</li> </ul> <p>Above implies that, for instance, a \"Price Difference Correction\" cost adjustment header can have two adjustment lines, one set as \"Is Source\" = Yes and the other one set as \"Is Source\" = No.</p> <ul> <li>beside that, there are two types of adjustments:</li> <li>those set as \"Unit Cost\" = \"Yes\", which means that the adjustment is going to change the \"Unit Cost\" of the transaction being adjusted besides its \"Total Cost\".     That is the case of adjustments such as \"Price Difference Correction\", \u201cBackdated Transactions\" and \"Manual Cost Correction\" set as \"unit cost\", as those ones change the \"basic\" cost of a transaction.</li> <li>those set as \"Unit Cost\" = \"No\", which means that the adjustment is not going to change the \"Unit Cost\" of the transaction being adjusted but just its \"Total Cost\".     That is the case of \"extra\" costs such as \"Landed Cost\", or adjustments done to manage the cost under \"Negative Stock\" scenarios or \"Manual Cost Correction\" do not set as \"unit cost\", but as an \"extra\" cost.</li> </ul> <p>Let us imagine a scenario when there is only one receipt transaction of 1 unit of a product, valued at 10.00 \u20ac/unit. In that case receipt costs are the ones below, which can be reviewed in the \"Product\" window, Transactions tab:</p> <ul> <li>Trx Orginal Cost: 10.00</li> <li>Total Cost : 10.00</li> <li>Unit Cost : 10.00</li> </ul> <p>A manual cost correction set as \"Unit Cost\" = \"Yes\" is booked for the receipt for an amount of 2.00 \u20ac. That correction creates a cost adjustment that changes the cost of the receipt as shown below:</p> <ul> <li>Trx Orginal Cost: 10.00</li> <li>Total Cost : 12.00 (10.00 + 2.00)</li> <li>Unit Cost : 12.00 (10.00 + 2.00)</li> </ul> <p>New average Cost of the product = Total Cost / Stock = 12.00 \u20ac / 1 unit = 12.00 \u20ac/unit</p> <p>After that purchase price changes from 10.00 \u20ac/unit to 12.00 \u20ac/unit.</p> <p>That change in the price is a unit cost adjustment, which creates a 0.00 \u20ac adjustment because the unit cost of the transaction is already 12.00.</p> <p>This implies no change in the average cost of the product, it remains as 12.00 \u20ac/unit</p> <p>However, let us imagine now that the manual cost correction booked for the receipt for an amount of 2.00 \u20ac was set as \"Unit Cost\" = No, that is an extra cost which needs also to be taken into account. That correction changes the cost of the receipt as shown below, unit cost does not change:</p> <ul> <li>Trx Orginal Cost: 10.00</li> <li>Total Cost : 12.00 (10.00 + 2.00)</li> <li>Unit Cost : 10.00</li> </ul> <p>After that, purchase price changes from 10.00 \u20ac/unit to 12.00 \u20ac/unit.</p> <p>That change in the price creates a cost adjustment in the receipt of 2.00 = 12.00 - 10.00 \u20ac, therefore calculated costs of the receipt change:</p> <ul> <li>Trx Orginal Cost: 10.00</li> <li>Total Cost : 14.00 (12.00 + 2.00)</li> <li>Unit Cost : 12.00 (10.00 + 2.00)</li> </ul> <p>Now this new scenario, implies a change in the average cost to 14.00 \u20ac/unit, this new average cost includes an extra cost of 2.00 \u20ac/unit.</p> <p>As briefly mentioned above, Etendo\u00a0 supports different sources of cost adjustments with the aim of covering different live scenarios. Those different types of cost adjustments sources are explained in the next section.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#header_3","title":"Header","text":"<p>Cost adjustment documents are automatically created by either the \"Costing Background\" Process or the \"Price Correction Background\" process as applicable, depending on the source of the adjustment.</p> <p>Once automatically created, it can be reviewed in this window.</p> <p></p> <p>Some relevant fields to note are:</p> <ul> <li>Document Type: this is the \"Cost Adjustment\" document type.</li> <li>Reference Date: this is the date when the cost adjustment is created</li> <li>Source Process: the options available are:<ul> <li>Backdated Transaction</li> <li>Landed Cost</li> <li>Manual Cost Correction</li> <li>Negative Stock Correction</li> <li>Price Difference Correction</li> </ul> </li> </ul> <p>All of them are going to be explained in detail in the following sections.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#backdated-transaction","title":"Backdated Transaction","text":"<p>The source of this cost adjustment is a product transaction (i.e a goods receipt) that should have been booked on a previous date, but it was not.</p> <p>As a consequence, the calculated cost of the transactions dated on a date after that given previous date need to be adjusted, same as the calculated \"Average\" cost of the product.</p> <p>This cost adjustment source type does not apply to products valued at \"Standard\" cost.</p> <p>The \"Standard\" cost of a product remains as it was defined because the cost of a \"Standard\" valued product is always the same, regardless of the date when a transaction of that product is booked.</p> <p>In case of a product valued at \"Average\" costing algorithm:</p> <ul> <li>A goods receipt dated on 06/01/2015 (Movement date) is booked dated on 06/01/2015 (Transaction date). This goods receipt once booked implies that the cost of the product (based on the corresponding purchase order price) is 105,00 \u20ac/unit.</li> <li>A goods shipment dated on 07/01/2015 (Movement Date) is also booked in Etendo dated on 07/01/2015 (Transaction Date). This goods shipment once booked implies that the cost of the product sold is 105,00 \u20ac/unit.</li> <li>Later on a goods receipt of the same product dated on 02/01/2015 (Movement date) is booked in Etendo dated on 07/01/2015 (Transaction date). Once booked this goods receipt implies that the cost of the product (based on the corresponding purchase order price) is 100.00, starting from 02/01/2015.</li> <li>This last receipt with movement date 02/01/2015 is the source of a backdated transaction cost adjustment that adjust the cost of the product sold dated on 07/01/2015 from 105,00 \u20ac/unit to 102,50 \u20ac/unit, besides that the calculated average cost changes from 105,00 to 102,50 starting from 06/01/2015.</li> </ul> <p>Transactions that should have been booked on a previous date, lead to the creation of \"Backdated Transaction\" cost adjustments.</p> <p>Info</p> <p>A header and line(s) in the Cost Adjustment window are automatically created with the corresponding adjustments.</p> <p>This adjustment type changes the \"Unit Cost\" of the product's transactions as well as the \"Total Cost\" and therefore the \"Average\" cost of the product.</p> <p>Backdated transaction cost adjustments are created by:</p> <ul> <li>either running \"Fix Backdated Transactions\" process in existing costing rules</li> <li>or by checking \"Backdated Transactions Fixed\" check-box while creating a new costing rule.</li> </ul> <p>Both ways, it is possible to enter a \"Fix Backdated From\" date which should not be part of a closed period.</p> <p>Once Fix Backdated Transaction process is enabled in the corresponding costing rule, backdated transaction cost adjustments are automatically calculated by the Costing background process if applicable.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#backdated-adjustments-posting","title":"Backdated Adjustments Posting","text":"<p>A backdated cost adjustment can be posted to the ledger in this window.</p> <p>In our example above, the last receipt with movement date 02/01/2015 is the source of a backdated transaction cost adjustment that adjust the cost of the product sold from 105,00 \u20ac/unit to 102,50 \u20ac/unit</p> <p>That adjustment can be posted to the ledger. Posting will look as shown below:</p> Account Debit Credit Product Asset Adjustment amount Cost of Goods Sold Adjustment amount"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#landed-cost","title":"Landed Cost","text":"<p>The source of this cost adjustment is booking additional costs that need to be distributed and therefore allocated as additional product costs.</p> <p>Landed cost are costs such as shipping, insurance, customs charges and other costs needed to place the product in the organization's warehouse.</p> <p>Landed cost adjustments change the calculated cost of receipt transactions by changing its \"Total Cost\", same way the \"Average\" cost of the product involved also changes.</p> <p>The \"Unit Cost\" of the receipt transaction does not change as this type of adjustment is not a unit cost adjustment but an extra cost.</p> <p>This cost adjustment source type do not apply to products valued at \"Standard\" cost, in the sense that:</p> <ul> <li>whenever a landed cost is added to a product valued at standard cost, no cost adjustment is created but the \"Variance\" between the \"standard\" cost defined for the product and its \"actual\" cost is posted to a \"Landed Cost Variance\" account, so it can be later on analysed.</li> </ul> <p>For instance:</p> <ul> <li>a purchase order containing a product is booked. After that the corresponding goods receipt and purchase invoice of the product are booked and posted to the ledger.</li> <li>Later on a purchase invoice including additional costs such as transportation cost and custom charges is booked and post to the ledger</li> <li>Landed Cost window allows to allocate the transportation costs and custom charges to the goods receipt, landed cost which are also matched to the invoice already booked.</li> </ul> <p>There is no need to run any specific background process or enable any preferences to get a \"Landed Cost\" cost adjustment.</p> <p>\"Landed Cost\" cost adjustments are created after processing the corresponding landed cost document in the Landed Cost window, or after processing landed cost matching.</p> <p>Info</p> <p>A header and line(s) in the Cost Adjustment window of this cost adjustment type is automatically created with the corresponding adjustment.</p> <p>As already mentioned, landed cost adjustment does not change the \"Unit Cost\" of a product's transactions but its \"Total Cost\", same way as the \"Average\" cost of the product. This means that:</p> <ul> <li>the unit cost of each transaction is the original one (price * units)</li> <li>and the total cost of each transaction includes the adjustments needed to get the desired product average cost.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#landed-cost-adjustments-posting","title":"Landed Cost Adjustments Posting","text":"<p>Landed cost adjustments can be posted to the ledger in the Landed Cost window, whenever those adjustments have been created for products included in a Goods Receipt transaction.</p> <ul> <li>In this case, Goods Receipt transaction is the source of the adjustment.</li> </ul> <p>Moreover, landed cost adjustments can also be created for products included in a Goods Shipment transaction.</p> <ul> <li>In this case, Goods Shipment transaction is not the source of the adjustment but the Goods Receipt.</li> <li>In this case landed cost adjustments need to be posted in the Cost Adjustment window.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#manual-cost-correction","title":"Manual Cost Correction","text":"<p>The source of this cost adjustment is a manual change of the cost of a specific product transaction.</p> <p>This adjustment type only applies to product transactions valued at \"Average\" cost. It does not make sense to manually change the cost of a transaction valued at \"Standard\" cost.</p> <p>For instance:</p> <ul> <li>a goods movement between warehouses needs to be adjusted, therefore \"movement from\" transaction cost is changed (increased) manually by the end-user</li> <li>above change implies that the cost of the \"movement to\" transaction needs also to be changed (increased), therefore the corresponding \"Manual Cost Correction\" cost adjustment is created.</li> </ul> <p>There is no need to run any specific background process or enable any preference to get a \"Manual Cost Correction\" cost adjustment.</p> <p>\"Manual Cost Correction\" cost adjustments are created after changing the cost of a product transaction in the Product window, \"Transactions\" tab, by using \"Manual Cost Adjustment\" process button.</p> <p>A header and line(s) in the Cost Adjustment window of this cost adjustment type is automatically created with the corresponding adjustment.</p> <p>This adjustment type changes the \"Total Cost\" of the product transaction, however product transaction \"Unit Cost\" can either be changed or not, depending on what the end-user wants to get.</p> <p>There is a check-box named \"Unit Cost\" that it shown whenever \"Incremental\" check-box is selected:</p> <ul> <li>If the user does not select the check-box \"Incremental\" that means booking a new total cost of the transaction which will remain as \"Permanent\". That means it will not be changed anymore.</li> <li>If the user does select the check-box \"Incremental\" that means booking an additional cost to allocate to the total cost of the transaction. Besides, this additional cost can either be part of the unit cost (Unit Cost check-box = Yes) of the transaction or not (Unit Cost check-box = No). Last case means an extra cost such as a landed cost.</li> </ul> <p>Manual Cost Correction Adjustment Posting</p> <p>This type of adjustment can be posted to the ledger in this window.</p> <p>In our example above, \"movement from\" transaction cost is changed (increased) manually by the end-user, therefore the cost of the \"movement to\" transaction needs also to be changed (increased).</p> <p>That adjustment can be post to the ledger. Posting will look as shown below:</p> <p>\"Movement From\" transaction adjustment:</p> Account Debit Credit Warehouse Differences Adjustment amount of \"Movement From\" transaction Product Asset Adjustment amount of \"Movement To\" transaction <p>\"Movement To\" transaction adjustment:</p> Account Debit Credit Product Asset Adjustment amount of \"Movement To\" transaction Warehouse Differences Adjustment amount of \"Movement To\" transaction"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#negative-stock-correction","title":"Negative Stock Correction","text":"<p>The source of this cost adjustment is booking a transaction, i.e a goods shipment, that turns the stock of a product into a negative quantity. This type of correction is only implemented for \"Average\" costing calculation.</p> <p>At the time of booking a new receipt of that item, regardless if that receipt turns item stock to a positive/negative/zero value, a negative cost correction adjustment is created and related to that new receipt, to get that the stock remaining of that product is valued at the last purchase price, in the case of \"Average\" cost calculation.</p> <p>For instance:</p> <ul> <li>a purchase order of 100 units is booked at a given purchase price</li> <li>after that goods are receipt and the cost of goods is calculated based on the order purchase price</li> <li>then a shipment of 100 units is booked</li> <li>and another shipment of 5 units is booked afterwards, leading to a negative stock of the product.</li> </ul> <p>A negative stock correction cost adjustment will be created whenever an incoming transaction for the product such as a goods receipt is booked. That adjustment will be allocated to the goods receipt.</p> <p>This adjustment type does not change the \"Unit Cost\" of the receipt but its \"Total Cost\" same way as the \"Average\" cost of the product involved. This means that:</p> <ul> <li>the unit cost of each transaction is the original cost (price * units)</li> <li>and the the total cost of each transaction includes the adjustments needed to get the desired average cost.</li> </ul> <p>There are two actions to take to get negative stock correction cost adjustments:</p> <ul> <li>To configure Enable Negative Stock Corrections preference with Value=Y in Preference window</li> <li>To schedule Costing Background process in Process Request window</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#negative-stock-correction-adjustment-posting","title":"Negative Stock Correction Adjustment Posting","text":"<p>This type of adjustment can be posted to the ledger in this window.</p> <p>In our example above, an adjustment of this type is created whenever a new incoming transaction such as a goods receipt is booked for the product having a negative stock.</p> <p>That adjustment can be post to the ledger. Posting will look as shown below in the case of a negative adjustment amount, otherwise in case of a positive adjustment amount:</p> Account Debit Credit Warehouse Differences Adjustment amount Product Asset Adjustment amount"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#price-difference-correction","title":"Price Difference Correction","text":"<p>The source of this cost adjustment is a change in either the purchase price of an order or the purchase price of an invoice after receiving the goods.</p> <p>Price Difference Correction is launched only for Transactions of Type Receipt. Other Transactions, such as Return Material our Outgoing Transactions are not taken into account, since they should not modify the Average Cost due to a Price Correction.</p> <p>Those goods were received at a price that has changed, therefore the calculated cost of the receipt needs to be adjusted, same as the calculated \"Average\" cost of the product.</p> <p>\"Standard\" cost would remain as it was set.</p> <p>For instance:</p> <ul> <li>a purchase order is booked for a product at a given purchase price</li> <li>after that the product is receipt and the \"Average\" cost of the product is calculated based on the corresponding order purchase price.</li> <li>a goods shipment of that product is booked, therefore that output transaction gets the calculated \"Average\" cost of the product.</li> <li>then a purchase invoice is received and booked for the product at a higher price than the order purchase price</li> <li>a price difference correction cost adjustments needs to be created to adjust the Goods Receipt and then affect the Goods Shipment transaction based on the new calculated Average Cost of the product.</li> </ul> <p>Changes in purchase price leads to the creation of \"Price Difference Correction\" cost adjustments.</p> <p>A header and line(s) in the Cost Adjustment window of this cost adjustment type is automatically created with the corresponding adjustment.</p> <p>This adjustment type changes the \"Unit Cost\" and the \"Total Cost\" of the transactions, same as the \"Average\" cost of products.</p> <p>\"Price Difference\" correction adjustments can be performed automatically or manually:</p> <ul> <li>to get that Etendo automatically performs price difference correction cost adjustments, it is necessary to activate and schedule the Price Correction Background Process</li> <li>to get that the user can manually perform price difference correction cost adjustments, it is necessary to manually run the \"Process Price Difference Adjustment\"</li> </ul> <p>As shown in the image below, this process allows to select the Organization for which this process needs to be run, enter a given movement date and select a product or set of products for which price difference correction cost adjustments would need to be created.</p> <p></p> <p>Additionally, the Costing Background Process can also create price difference correction cost adjustments, only if:</p> <ul> <li>the \"Enable Automatic Price Difference Corrections property preference is set to \"Y\"</li> <li>and the Costing Background Process is run after booking the corresponding Purchase order, Goods Receipt and Purchase Invoice including the price difference.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#price-difference-correction-adjustment-posting","title":"Price Difference Correction Adjustment Posting","text":"<p>This type of adjustment can be posted to the ledger in this window.</p> <p>In our example above, a change in the purchase order price (increase) implies that both the calculated cost of the \"Goods Receipt\" and the calculated cost of the \"Goods Shipment\" need to be adjusted same as the \"Average\" cost of the product.</p> <p>That adjustment can be posted to the ledger. Posting will look as shown below :</p> <p>Goods Receipt adjustment</p> Account Debit Credit Product Asset Goods Receipt Adjustment amount Invoice Price Difference Goods Receipt Adjustment amount <p>Goods Shipment adjustment</p> Account Debit Credit Cost of Goods Sold Goods Shipment Adjustment amount Product Asset Goods Shipment Adjustment amount"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#line","title":"Line","text":"<p>A cost adjustment document can have as many adjustment lines as products included in the receipts to which landed cost have been allocated.</p> <p>There are two types of cost adjustments transactions:</p> <ul> <li>\"source\", for instance a vendor receipt (V+) whose purchase price has changed</li> <li>\"not source\", for instance a customer shipment (C-) whose cost needs to be adjusted because of vendor receipt cost being adjusted.</li> </ul> <p></p> <p>Some relevant files to note are:</p> <ul> <li>Inventory Transaction: Transactions available are:<ul> <li>Vendor receipt (V+)</li> <li>Customer shipment (C-)</li> <li>Inventor in (I+)</li> <li>Inventory out (I-)</li> <li>Movement from (M-)</li> <li>Movement to (M+)</li> <li>Production (P+)</li> <li>Production (P-)</li> <li>Internal consumption (D-)</li> <li>Internal consumption (D+)</li> </ul> </li> <li>Adjustment Amount: that is the cost adjustment amount.   An adjustment amount can also be reviewed in the Product window, \"Transaction\" tab, \"Transaction Cost\" tab always related to a \"Cost Adjustment Line\".</li> <li>Is source: options available are \"Yes\" or \"No\" as a product transaction can be the source of an adjustment or not.</li> <li>Parent Cost Adjustment Line: In the case of a cost adjustment that is not the source, this field shows the source cost adjustment line.</li> <li>Needs Posting: options available are \"Yes\" or \"No\". Most cost adjustments needs to be posted to the ledger as they mean an increase/decrease of product asset value, however there are other whose cost adjustment is 0,00 that does not need any posting.</li> <li>Unit Cost:options available are \"Yes\" or \"No\".</li> <li>There are cost adjustments such a price difference correction which impact product unit cost</li> <li>There are cost adjustment such as landed cost which does not impact product unit cost.     It is important to remark that each Product Transaction has below listed cost:<ul> <li>\"Trx Original Cost\", that is the original cost of the product transaction</li> <li>\"Total Cost\", that is the sum of the original cost and all adjustment costs</li> <li>\"Unit Cost\", that is the sum of the original cost and all adjustment of the unit cost, that is the cost which does not include landed cost.</li> </ul> </li> <li>Is Backdated Trx: a cost adjustment can be marked as backdated transaction if applicable.   For instance a backdated transaction cost adjustment can have two lines, one that is the backdated transaction as source and another one that is not the source neither a backdated transaction.</li> <li>Is Negative Stock Correction: a cost adjustment can be marked as negative stock correction if applicable.   For instance a backdated transaction cost adjustment can have two lines, one that is the backdated transaction as source and another one that is not the source but a negative stock correction.</li> </ul>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#accounting_2","title":"Accounting","text":"<p>This tab provides Cost Adjustment accounting information.</p> <p></p> <p>Ledger entries shown in this tab are different depending on the source of the adjustment but landed cost posting that it is managed in the Landed Cost window.</p> <p>Landed cost adjustment lines are always created as \"Need Posting\" = No.</p> <p>See below some examples of each cost adjustment type:</p> <p>Price correction cost adjustment caused by a decrease in the purchase price</p> Account Debit Credit Invoice Price Variance Cost Adjustment amount Product Asset Cost Adjustment amount <p>Price correction cost adjustment caused by an increase in the purchase price</p> Account Debit Credit Product Asset Cost Adjustment amount Invoice Price Variance Cost Adjustment amount <p>Backdated Transactions adjustment on a product's goods receipt transaction.</p> <p>Product's cost gets decreased.</p> Account Debit Credit Warehouse Differences Cost Adjustment amount Product Asset Cost Adjustment amount <p>Backdated Transactions adjustment on a product's goods shipment transaction.</p> <p>Product's cost gets decreased.</p> Account Debit Credit Product COGS Cost Adjustment amount Product Asset Cost Adjustment amount <p>Negative correction adjustment which implies an increase of product's cost.</p> Account Debit Credit Product Asset Cost Adjustment amount Warehouse Differences Cost Adjustment amount <p>Manual Cost correction adjustment caused by a manual increase of product's cost.</p> Account Debit Credit Product Asset Cost Adjustment amount Warehouse Differences Cost Adjustment amount"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#bulk-posting_3","title":"Bulk Posting","text":"<p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button.</p> <p>Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p>Info</p> <p>For more information, visit the Bulk Posting module user guide.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#referenced-inventory","title":"Referenced Inventory","text":"<p> <code>Application</code> &gt; <code>Warehouse Management</code> &gt; <code>Transactions</code> &gt; <code>Referenced Inventory</code></p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#overview_6","title":"Overview","text":"<p>In this window, it is possible to define the containers or boxes, which includes any kind of object that can contain goods.</p> <p>Many companies move and store goods grouped in a RollTainer, Case or Box. The boxes may be reusable or maybe disposable and have different sizes and purposes and are suitable for different types of goods.</p> <p>Referenced Inventory is the functionality that identifies one or multiple storage details (Stock records) by using a \"Reference Number\".</p> <p>Referenced Inventory for Core includes the very basic functionality to box/unbox stock.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#referenced-inventory_1","title":"Referenced Inventory","text":"<p>This tab shows any referenced inventory, also known as box, declared into the system regardless if it is empty or has any stock inside.</p> <p>The user can create new boxes at any time. It is mandatory to define an organization, search key and the referenced inventory type.</p> <p>It is important to highlight that:</p> <ol> <li>It will not be possible to delete a record if the referenced inventory is linked to any box/unbox transaction.</li> <li>The search key is unique per client. To bypass this limitation you could declare a different prefix/suffix to the referenced inventory type\u2019s sequence.</li> <li>The organization limits the stock that can be boxed (only stock declared at this organization or any child organization).</li> </ol> <p>From this window it is possible to link/unlink stock to/from a Referenced Inventory using the Box and Unbox buttons respectively.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#box","title":"Box","text":"<p>Shows a P&amp;E with the stock not yet linked to any referenced inventory (it is not possible to box a stock already boxed).</p> <p></p> <p>The user can select one or several records and specify the quantity to be boxed. It is also mandatory to declare the New Storage Bin where the boxed stock will be stored.</p> <p>If the current storage bin of any of the selected records is different from the New Storage Bin, a goods movement will be automatically performed by the system when confirming the action to move the stock.</p> <p>The box action can be run in different batches at any time, i.e. the user can select any referenced inventory not empty to add more stock.</p> <p>Info</p> <p>A specific Referenced Inventory can only be present in one bin, not in multiple bins at the same time. In case you want to add more stock to a not-empty Box, the New Storage Bin selector will ask the user\u00a0 to select the current referenced inventory bin.</p> <p>When a stock is boxed, the referenced inventory search key will be automatically appended at the end of the Attribute Set Value surrounded by square brackets [] (graphical representation of a box). Example: L582[1000584]</p> <p>If the stock does not have an attribute, the referenced inventory will be shown anyway in the Attribute Set Value field to indicate the stock is currently boxed. Example: [1000584]</p> <p>This way, the information about the referenced inventory is clearly visible at any place where it is necessary, like the Stock Report .</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#unbox","title":"UnBox","text":"<p>Shows a P&amp;E with the stock currently linked to the selected referenced inventory.</p> <p></p> <p>The user can select one or several records and specify the quantity to be unboxed (so it is possible to run partial unboxing) and the new storage bin where the stock will be stored after unboxing (by default it will be unboxed to the current location).</p> <p>Note</p> <p>In contrast to the boxing process explained before, unboxing different storage bins can be selected for each record.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#reservation-management-behavior","title":"Reservation Management Behavior","text":"<p>When running a boxing/unboxing process, the system will always try to work with not reserved quantities first. Example: if we have 10 units on hand of a product where 2 of them are reserved and we try to box/unbox 1 unit, the system will try to box/unbox first any of the 8 units not reserved.</p> <p>If the box/unbox process needs to work with already reserved quantities (in the example above because we are boxing/unboxing 9 or 10 units), the system will try to reallocate on the fly any reservation or it will show an error when the reallocation is not possible. The latter might happen, for example, because the reservation is forced to a concrete bin and the box/unbox process tries to move the stock to another bin.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#contents","title":"Contents","text":"<p>Stock currently linked to this Referenced Inventory.</p> <p>Please note any boxed stock will have an attribute set value linked to the referenced inventory.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#box-transactions","title":"Box Transactions","text":"<p>Shows any box transaction executed in the past for this referenced inventory.</p> <p>This kind of transactions are actually Goods Movements created on the fly when confirming the boxing, where the user can browse to at any time to see the details.</p>"},{"location":"user-guide/etendo-classic/basic-features/warehouse-management/transactions/#unbox-transactions","title":"UnBox Transactions","text":"<p>Shows any unbox transaction executed in the past for this referenced inventory.</p> <p>This kind of transactions are actually Goods Movements created on the fly when confirming the unboxing, where the user can browse to at any time to see the details.</p> <p>This work is a derivative of \"Warehouse Management\" by Openbravo Wiki, used under CC BY-SA 2.5 ES. This work is licensed under CC BY-SA 2.5 by Etendo.</p>"},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/","title":"How to manage deferred revenue and expenses","text":"","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#introduction","title":"Introduction","text":"<p>In most situations, a company would want to recognize revenues as soon as an invoice is completed. For example, when a food and beverage distributor sells beverages, the revenue for the transaction is recognized as soon as the goods leave the warehouse. In Etendo, in this situation, revenue is generated as part of the accounting of the sales invoice corresponding to the transaction.</p> <p>Under some circumstances, however, you need to defer revenue, either in part or in total, to subsequent periods. For example:</p> <ul> <li>A publisher selling an annual subscription to a magazine would want to recognize revenue for the value of the subscription over 12 months.</li> <li>A ski resort selling a season pass during the summer (June) for the following ski season needs to wait till the beginning of the season (December) before recognizing revenue and distributing that revenue throughout the duration of the ski seasons (December to April).</li> <li>A food and beverage distributor selling and invoicing a product that will only be able to be delivered to their customers in 3 months, needs to defer revenue recognition till the delivery.</li> </ul> <p>Similarly on the expense side, in most cases companies would recognize the expense (for non asset purchases and non-stockable products) as soon as the purchase is made. For example, if you buy office supplies (a consumable product that is not capitalized), the expense is recognized at the time of purchase. In Etendo, in this situation, the expense is generated as part of the accounting of the purchase invoice corresponding to the transaction.</p> <p>Under some circumstances, however, you need to defer the expense recognition. For example:</p> <ul> <li>A company purchasing business insurance for the duration of a year would want to distribute that expense over 12 months.</li> <li>A company paying rent in advance on a quarterly basis would want to distribute that expense over 3 months.</li> </ul>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#overview","title":"Overview","text":"<p>Etendo allows supporting these situations with the deferred revenue and expense capabilities.</p> <p>On the revenue side:</p> <ul> <li>When creating sales invoices, at line level, users are able to specify:<ul> <li>Whether the revenue for this line needs to be deferred</li> <li>If so, the number of periods across which revenue needs to be distributed</li> <li>The starting period for revenue recognition</li> </ul> </li> <li>The above values can be controlled on an invoice line by invoice line basis.</li> <li>For products that customarily require revenue deferral, users are able to specify at product level the revenue recognition rules<ul> <li>Whether the product requires revenue deferral</li> <li>The duration of the deferral period</li> <li>The most common starting period for revenue recognition, which could be defined to be either the current period, the next period after the sales invoice, or a manually specified period.</li> </ul> </li> <li>The values specified at product level are automatically defaulted on sales invoice lines when the product is used.</li> <li>These values are also used when an invoice is created from another document (for example: the Generate Invoices process that creates invoices from sales orders).</li> </ul> <p>Similarly, on the expense side:</p> <ul> <li>When creating purchase invoices, at line level, users are able to specify:<ul> <li>Whether the expenses for this line need to be deferred</li> <li>If so, the number of periods across which expenses need to be distributed</li> <li>The starting period for expense recognition</li> </ul> </li> <li>The above values can be controlled on an invoice line by invoice line basis.</li> <li>For products that customarily require expense deferral, users are able to specify at product level the expense recognition rules<ul> <li>Whether the product requires expense deferral</li> <li>The duration of the deferral period</li> <li>The most common starting period for expense recognition, which could be defined to be either the current period, the next period after the invoice, or a manually specified period.</li> </ul> </li> <li>The values specified at product level are automatically defaulted on purchase invoice lines when the product is used.</li> <li>These values are also used when an invoice is created from another document.</li> </ul>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#example","title":"Example","text":"<p>Consider the following situation.</p> <p>Company F&amp;B Publishing sells a 1 year subscription to F&amp;B Magazine to Healthy Foods Supermarkets on October 17th, 2022. The value of the subscription is $120 and the subscription covers the period from November 2022 to October 2023.</p> <p>On October 17th, an invoice is recorded in the system with a line for the subscription. The line is flagged as requiring revenue deferral, with a deferral period of 12 months starting from November 2023.</p> <p>The following accounting entries are created based on this invoice:</p> Date Account Debit Credit 17-OCT-2022 Account Receivables 120.00 Unearned Revenue 120.00 30-NOV-2022 Unearned Revenue 10.00 Revenue 10.00 31-DEC-2022 Unearned Revenue 10.00 Revenue 10.00 ... ... ... ... 31-OCT-2023 Unearned Revenue 10.00 Revenue 10.00","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#accounting-configuration","title":"Accounting Configuration","text":"","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#general-ledger-configuration","title":"General Ledger Configuration","text":"<p>In order to use revenue and expense deferrals, you first need to properly define the default accounts to be used to post deferred revenues and deferred expenses.</p> <p>This configuration is executed in the General Ledger Configuration window.</p> <p>In this window in the Default tab, you can find two relevant fields:</p> <ul> <li>Product Deferred Expense: this field stores the default account to be used to record deferred expenses. This account is typically an asset account.</li> <li>Product Deferred Revenue: this field stores the default account to be used to record deferred revenues. This account is typically a liability account.</li> </ul> <p></p>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#product-category","title":"Product Category","text":"<p>The accounts selected in the General Ledger Configuration window are defaulted to every Product Category. Users can override these defaults at product category level allowing deferred revenues and expenses for different product groups to be posted to different accounts and appear as separate entries in the company balance sheet.</p> <p></p>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#execution-steps-revenues","title":"Execution Steps - Revenues","text":"","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#configuring-products-for-revenue-deferral","title":"Configuring Products for Revenue Deferral","text":"<p>In order to defer revenue, you need to properly configure the products that will generate the deferral when sold. In Etendo, products are created and maintained in the Product window.</p> <p>Product window: in this window, the configuration related to revenue deferral is in the Header and in the Accounting tab of the Product window.</p> <p>Header tab:</p> <ul> <li>Deferred Revenue: this flag is visible only for products having the Sale flag checked and indicates that by default, revenues for sales of this product need to be deferred. When this flag is checked, the Revenue Plan field group becomes visible, allowing users to configure the next two fields.</li> <li>Revenue Plan Type: this field specifies the default frequency of the revenue distribution. At the moment, only monthly revenue plans are supported and additional frequencies such as quarterly or yearly are planned for future releases.</li> <li>Period Number: this field specifies the default duration of a revenue plan. For example, an annual subscription to a magazine will be defined with a revenue plan of 12 monthly periods, while a season ski pass will have a revenue plan of 5 monthly periods.</li> </ul> <p>It is important to notice that the values that the revenue plan you define at product level is the default revenue plan and it can be modified on a transaction by transaction basis.</p> <p>Accounting tab:</p> <ul> <li>Product Deferred Revenue: this is the account used to post deferred revenue for sales of this product. It is inherited from the product category and can be further defined at product level.</li> </ul> <p></p>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#manual-invoice-creation","title":"Manual Invoice Creation","text":"<p>When you create a sales invoice line, you can define at line level, whether the line is going to cause the revenue to be deferred.</p> <p>The relevant fields are:</p> <ul> <li>Deferred Revenue: When this flag is checked, the Revenue Plan field group becomes visible, allowing users to configure the next three fields.</li> <li>Revenue Plan Type: this field specifies the frequency of the revenue distribution.</li> <li>Period Number: this field specifies the duration of a revenue plan.</li> <li>Starting Period: the first period in which revenue is going to be recognized.</li> </ul> <p></p>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#automatic-generation-of-invoices","title":"Automatic Generation of Invoices","text":"<p>If the invoice is created automatically, either from a sales order or from any other document, the product configuration is taken into account and, if appropriate, the revenue plan is defined for the invoice lines based on the product configuration defaults.</p>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#accounting-results","title":"Accounting Results","text":"<p>Regardless of how the invoice is created - manually or automatically - when it is completed and posted,  a number of accounting entries are created:</p> <ul> <li>The first accounting entry, dated on the accounting date of the invoice, debits account receivables and credits unearned revenue.</li> <li>For each period, an additional accounting entry is created debiting unearned revenue and crediting revenue.</li> </ul>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#execution-steps-expenses","title":"Execution Steps - Expenses","text":"","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#configuring-products-for-expense-deferral","title":"Configuring Products for Expense Deferral","text":"<p>In order to defer expenses, you need to properly configure the products that will generate the deferral when purchased. In Etendo, products are created and maintained in the Product window.</p> <p>Product window: in this window, the configuration related to expense deferral is in the Header and in the Accounting tab of the Product window.</p> <p>Header tab:</p> <ul> <li>Deferred Expense: this flag is visible only for products having the Purchase flag checked and indicates that by default, revenues for sales of this product need to be deferred. When this flag is checked, the Expense Plan field group becomes visible, allowing users to configure the next two fields.</li> <li>Expense Plan Type: this field specifies the default frequency of the expense distribution.</li> <li>Period Number: this field specifies the default duration of an expense plan.</li> </ul> <p>It is important to notice that the values that the expense plan you define at product level are the default expense plan and they can be modified on a transaction by transaction basis.</p> <p>Accounting tab:</p> <ul> <li>Product Deferred Expense: this is the account used to post deferred or prepaid expenses for purchases of this product. It is inherited from the product category and can be further defined at product level.</li> </ul> <p></p>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#manual-invoice-creation_1","title":"Manual Invoice Creation","text":"<p>When you create a purchase invoice line, you can define at line level whether the line is going to cause the expense to be deferred.</p> <p>The relevant fields are:</p> <ul> <li>Deferred Expense: When this flag is checked, the Expense Plan field group becomes visible, allowing users to configure the next three fields.</li> <li>Expense Plan Type: this field specifies the frequency of the expense distribution.</li> <li>Period Number: this field specifies the duration of an expense plan.</li> <li>Starting Period: the first period in which expense is going to be recognized.</li> </ul> <p>These fields are defaulted based on the product configuration but the Starting Date field.</p>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#automatic-generation-of-invoices_1","title":"Automatic Generation of Invoices","text":"<p>If the invoice is created automatically, either from a purchase order or from any other document, the product configuration is taken into account and, if appropriate, the expense plan is defined for the invoice lines based on the product configuration defaults.</p>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-deferred-revenue-and-expenses/#accounting-results_1","title":"Accounting Results","text":"<p>Regardless of how the invoice is created - manually or automatically - when it is completed and posted, a number of accounting entries are created:</p> <ul> <li>The first accounting entry, dated on the accounting date of the invoice, debits deferred expenses and credits account payables.</li> <li>For each period, an additional accounting entry is created debiting the product expense account and crediting the deferred expense account.</li> </ul>","tags":["How to","Deferred Revenue","Expense Management","Accounting Processes","Invoice Handling"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/","title":"How to manage prepaid invoices in payables","text":"","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#overview","title":"Overview","text":"<p>There are vendors which do not wish to extend credit to their customers:</p> <ul> <li>It could be a matter of trust at the beginning of a commercial relationship</li> <li>Or it could be a matter of a temporary lack of financial capacity.</li> </ul> <p>In these situations, a particular payment term is agreed upon by the Company and the vendor which implies a payment against a Purchase Order or Purchase Invoice, otherwise the vendor will not deliver the goods to the company. The parties could agree to a total prepayment or a partial prepayment.</p> <p>Note</p> <pre><code>A purchase invoice created from the prepaid purchase order will inherit the payment information whatever it is, whether it is a total prepayment or a partial prepayment.\n</code></pre>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#recommended-articles","title":"Recommended articles","text":"<p>Managing prepaid invoices requires a clear understanding on how to create a Purchase Order and a Purchase Invoice as well as how to register a Vendor Payment.</p> <p>It is recommended as well to understand how to set up a Payment Term and how to launch the Payment Report.</p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#order-prepayment-execution-steps","title":"Order prepayment: execution steps","text":"<p>In Etendo, the company in this example will have to acknowledge a specific payment term agreed with its vendor, create a Purchase Order and make a payment before the goods are delivered to it.</p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#payment-term-configuration","title":"Payment term configuration","text":"<p>As already mentioned, the company in this example needs to create a specific payment term to reflect what was agreed with its vendor.</p> <p>A \"Prepay\" payment term can be created as shown in the image below:</p> <p></p> <p>Above means that the Company will have to pay 25% of the total order amount and the rest 30 days after the vendors Invoice Date.</p> <p>Please note that, prepay payment term has a header and a line:</p> <ul> <li>in the line, the 25% pre-pay is configured and the \"Overdue payment days rule\" is set to 0 days.</li> <li>in the header, the second part of this payment is configured; this time the \"Overdue payment days rule\" is 30 days for the amount remaining.</li> </ul>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#purchase-order-creation","title":"Purchase Order creation","text":"<p>As already mentioned, the first step is to create a Purchase Order which contains the goods that the company needs.</p> <p>In this scenario, the parties have agreed a specific payment term which can be filled in the corresponding field of the purchase order header.</p> <p>Once every required data is filled in as appropriate, the Purchase Order needs to be booked as every time an order is completed a Payment Plan is created for that Order.</p> <p></p> <p>Note</p> <pre><code>It is not possible to record payments against orders which are not completed and therefore do not already have a payment plan linked to them.\n</code></pre>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#payment-creation-and-accounting","title":"Payment creation and accounting","text":"<p>Payments made to a vendor are registered in the payment out window. Etendo allows to register vendor payments created against purchase orders and/or invoices.</p> <p>The main fields to fill in the header section of the payment in window are:</p> <ul> <li>Business Partner, the vendor who the company is paying to</li> <li>Paying From, the financial bank account where the money is taken out from.</li> <li>and the Payment Method which in the example is \"Wire Transfer\"</li> </ul> <p></p> <p>Then, it is possible to register vendor payment details by using the process button named \u201cAdd Details\u201d.</p> <p>A new window is shown where it is required to specify the \"transaction type\" to which the payment is related to, that could be orders and/or invoices.</p> <p>The company in this example needs to choose \"Orders\" and then the order which is going to be partially paid.</p> <p></p> <p>Once everything is filled in, press the button Process.</p> <p>The payment is made and withdrawn from the bank at the same time, that means that a withdrawal transactions is created in the Financial Account window, in the \"Transaction\" tab.</p> <p>Just created payment can be posted in the Payment Out window by pressing the process button Post if:</p> <ul> <li>the \"Payment Method\" used has the proper configuration in the Payment Method tab of the Financial Account used to make the payment.<ul> <li>the company in this example needs to set the field \"Upon Payment Use\" as \"In Transit Payment Account\"</li> </ul> </li> <li>besides, there should be an \"In Transit Payment Out Account\" in the Accounting Configuration tab of the financial account used to make the payment.</li> </ul> <p>The posting will look like:</p> Account Debit Credit Vendor Prepayment 50 In Transit Payment Out Account 50 <p>It is possible to check once more the Payment Out Plan of the purchase order in this example.</p> <p>The purchase order payment plan includes the payment registered in the Payment Out Details tab.</p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#payment-check","title":"Payment check","text":"<p>Back to the Purchase Order, it is possible to check the recently created Payment Plan with its Payment Details.</p> <p></p> <p>To summarize:</p> <ul> <li>the Payment Plan tab inform us about:<ul> <li>the Expected Amount to be paid</li> <li>the paid amount if any</li> <li>and the outstanding amount to be paid in case of a partial payment registered already.</li> </ul> </li> <li>and the Payment Details tab registers every payment made against the order.</li> </ul>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#pre-paid-invoice-management-and-accounting","title":"Pre-Paid invoice management and accounting","text":"<p>The company in this example can register the Goods Receipt before registering the vendor invoice by using the process Pending Goods Receipts.</p> <p>This process allows introducing the exact amount of goods received from the vendor against each purchase order line.</p> <p></p> <p>Once processed, Etendo informs about the Goods Receipt number just registered.</p> <p>Next step is to enter the vendor invoice. There are several ways of entering a vendor invoice.</p> <p>The company in this example uses, for instance, the process \"Create Lines From\" which can be found in the Purchase Invoice window. This process can be used once the purchase invoice header information has been properly entered. It retrieves either order or goods receipt information to be copied to the entered invoice.</p> <p></p> <p>The invoice created once completed will inherit the payment plan of the order.</p> <p>In this example:</p> <ul> <li>the invoice payment plan will already reflect the amount already paid against the order, which is USD 50</li> <li>and besides, it will also reflect the outstanding amount to be paid, which is USD 60</li> </ul> <p></p> <p>Above situation it is also reflected in accounting, as purchase invoice posting will look like:</p> Account Debit Credit Product Expense 110 Vendor Liability 60 Vendor Prepayment 50 <p>There is a report named Payment Report which allows monitoring every payment received or made.</p> <p>In this example, this report shows in an intuitive way:</p> <ul> <li>the status of the payment made against the order and later on inherited by the invoice as \"Withdrawn not Cleared\", that means that the payment has been withdrawn from a financial bank account but it is not reconcile yet</li> <li>and the invoice outstanding amount to be paid as \"Awaiting payment\".</li> </ul> <p></p> <p>In this example, the last step is to register the remaining amount payment of the vendor invoice 30 days after the invoice date. A payment made to a vendor invoice can be registered in the system two ways:</p> <ul> <li>in the Payment Out window, same way as described here but this time the payment must be related to a \"Transaction Type\" equal to \"Invoices\"</li> <li>or in the Purchase Invoice window, by using the process button \"Add Payment\".</li> </ul> <p></p> <p>Once this new payment is processed, the purchase invoice changes to fully paid. In other words, the \"Payment Complete\" check box of the invoice is now selected.</p> <p>Finally, the \"Payment Report\" now shows the invoice as fully paid, in Etendo terms it is shown as \"Withdrawn not Cleared\".</p> <p></p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#invoice-prepayment-execution-steps","title":"Invoice prepayment: Execution steps","text":"<p>In Etendo, the company in this example will have to configure a payment method which allows to post the prepayment as soon as it is made, create a purchase invoice for the goods required and register the prepayment of the invoice earlier than the invoice date.</p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#payment-method-configuration","title":"Payment method configuration","text":"<p>The payment method to be used needs to be configured in order to allow the posting of the prepayment as soon as it is made, therefore the \"Withdrawn Payment Account\" can be specified in the field 'Upon Payment Use'.</p> <p></p> <p>Note</p> <p>The checkbox \"Automatic Withdrawn\" is also selected. That means that the payment will be automatically withdrawn from the financial account.</p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#purchase-invoice-creation","title":"Purchase invoice creation","text":"<p>First step is to issue the purchase invoice dated on November 6th, 2023 for instance. The issued invoice can be completed as soon as it is properly filled in.</p> <p></p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#payment-creation-and-accounting_1","title":"Payment creation and accounting","text":"<p>Next step is to register the prepayment of the invoice in an earlier date than the invoice date, for instance Novermber 1st, 2023.</p> <p>Above is done by using the \"Add Payment\" button. The \"Payment Date\" field needs to be modified as required.</p> <p></p> <p>Once processed,  a payment is created in the \"Payment Out\" window and besides the withdrawal of that payment is automatically registered in the corresponding financial account.</p> <p>The payment can be posted from the \"Payment Out\" window.</p> <p>Payment posting looks like:</p> <p></p> <p>Above posting reflects the moment in which the vendor liability is canceled by the prepayment, which is also canceled by the recognition of the payment withdrawn.</p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#purchase-invoice-posting","title":"Purchase Invoice posting","text":"<p>Last step is to post the purchase invoice to the ledger. Invoice posting looks like:</p> <p></p> <p>Above posting reflects the moment in which the vendor liability is accounted, however vendor liability is already canceled by the prepayment.</p>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-payables/#result","title":"Result","text":"<p>This completes the creation and processing of:</p> <ul> <li>a partially prepaid order in Etendo. As a result, an invoice has been partially paid after registering a prepayment against the corresponding order.</li> <li>a prepaid invoice in Etendo. As a result, the vendor liability is canceled at the time of registering and posting the invoice prepayment.</li> </ul>","tags":["How to","Prepaid Invoices","Purchase Order","Vendor Payments"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/","title":"How to Manage Prepaid Invoices in Receivables","text":"","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#overview","title":"Overview","text":"<p>There are companies which do not wish to extend credit to specific customers:</p> <ul> <li>It could be a matter of trust at the beginning of a commercial relationship.</li> <li>Or it could be a matter of a temporary lack of financial capacity.</li> </ul> <p>In these situations, a particular payment term is agreed upon by the parties which implies a total or partial payment of an order or an invoice, otherwise the goods will not be delivered to the customer.</p> <p>It is important to remark that a sales invoice created from a prepaid sales order will inherit the order payment information whatever it is.</p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#recommended-articles","title":"Recommended articles","text":"<p>Managing prepaid invoices requires a clear understanding on how to create a Sales Order and a Sales Invoice as well as how to register a Customer Payment.</p> <p>It is recommended as well to understand how to set up a Payment Term and how to launch the Payment Report.</p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#order-prepayment-execution-steps","title":"Order prepayment: execution steps","text":"<p>In Etendo, the company in this example will have to agree on a specific payment term with its customer, create a sales order for the goods requested and then register a partial payment of the order before issuing later on the corresponding sales invoice.</p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#payment-term-configuration","title":"Payment term configuration","text":"<p>As already mentioned, the company in this example needs to create a specific payment term to reflect what was agreed with its customer.</p> <p>A \"Prepay\" payment term can be created as shown in the image below:</p> <p></p> <p>Above means that the customer will have to prepay 50% of the total order amount and the rest 30 days after the invoice date.</p> <p>Please note that, prepay payment term has a header and a line:</p> <ul> <li>In the line, the 50% prepay is configured as the \"Overdue payment days rule\" is set to 0 days.</li> <li>In the header, the second part of this payment is configured as the \"Overdue payment days rule\" is 30 days for the amount remaining.</li> </ul>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#sales-order-creation","title":"Sales Order creation","text":"<p>As already mentioned, the first step is to create a Sales Order according to the customer needs.</p> <p>In this scenario, the parties have agreed on a specific payment term which can be filled in the corresponding field of the Sales Order header.</p> <p></p> <p>The main field that needs to be taken into account when managing prepayments is the field Invoice Terms which needs to be selected as \u201cImmediate\u201d, otherwise it would not be possible to prepay that order. In Etendo that means that the order will not be shown as a suitable order to be paid in the Payment In window where customer payments are registered.</p> <p>Once every required data is filled in, the Sales Order needs to be Booked as every time an order is completed a Payment Plan is created for that Order.</p> <p>In other words, it is not possible to record payments against orders which are not completed and therefore do not already have a payment plan linked to them.</p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#payment-creation-and-accounting","title":"Payment creation and accounting","text":"<p>Payments received from the customer are registered in the Payment In window. Etendo allows registering customer payments received against sales orders and/or invoices.</p> <p>The main fields to fill in the header section of the payment in window are:</p> <ul> <li>Business Partner, the customer who is actually making the Payment.</li> <li>Amount, the exact amount paid (in our case 50% of USD 1,726.40).</li> <li>Deposit To, the financial bank account where the money has been received.</li> <li>and the Payment Method which in the example is \"Wire Transfer\"</li> </ul> <p></p> <p>Then, it is possible to register customer payment details by using the process button named \u201cAdd Details\u201d.</p> <p>A new window is shown named \"Add Details\" where it is required to specify the \"transaction type\" to which the payment is related to, that could be orders and/or invoices.</p> <p>The company in this example needs to choose \"Orders\" and then the order which is going to be partially paid.</p> <p></p> <p>Once everything is filled in, press the button Done.</p> <p>The payment is received and deposited in the bank at the same time, that means that a deposit transaction is created in the Financial Account window, in the \"Transaction\" tab.</p> <p>Just created payment can be posted in the Payment In window by pressing the process button Post if:</p> <ul> <li>the \"Payment Method\" used has the proper configuration in the Payment Method tab of the financial account used to make the payment.</li> <li>the company in this example needs to set the field \"Upon Receipt Use\" as \"In Transit Payment Account\"</li> <li>besides, there should be an \"In Transit Payment IN Account\" in the Accounting Configuration tab of the financial account used to make the payment.</li> </ul> <p>The posting will look like:</p> Account Debit Credit In Transit Payment In Account 863.20 Customer Prepayment 863.20 <p>It is possible to check once more the Payment Plan of the sales order in this example.</p> <p>The sales order payment plan includes the payment registered in the Payment Details tab.</p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#payment-check","title":"Payment check","text":"<p>Back in the Sales Order, it is possible to check the recently created Payment Plan with its Payment Details.</p> <p></p> <p>To summarize:</p> <ul> <li> <p>the Payment Plan tab inform us about:</p> <ul> <li>the expected amount to be paid</li> <li>the received amount if any</li> <li>and the outstanding amount to be paid in case of a partial payment registered already.</li> </ul> </li> <li> <p>and the Payment Details tab registers every payment received against the order.</p> </li> </ul>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#pre-paid-invoice-management-and-accounting","title":"Pre-Paid invoice management and accounting","text":"<p>There are several ways to create a sales invoice from an order, one of those is Create Invoices from Orders.</p> <p>This process allows to enter data such as the business partner and a given data range to narrow down the orders to be invoiced.</p> <p></p> <p>Once a Sales Order is selected, the Done button automatically generates the corresponding invoice.</p> <p>The invoice created will inherit the payment plan of the order.</p> <p>In this example:</p> <ul> <li>the invoice payment plan will already reflect the amount already paid against the order, which is USD 863.20</li> <li>and besides, it will also reflect the outstanding amount to be paid, which is USD 630.80</li> </ul> <p></p> <p>Above situation it is also reflected in accounting, as purchase invoice posting will look like:</p> Account Debit Credit Customer Receivable 630.80 Customer Prepayment 863.20 <p>There is a report named Payment Report which allows monitoring every payment received or made.</p> <p>In this example, this report shows in an intuitive way:</p> <ul> <li>the status of the payment received against the order and later on inherited in the invoice, as \"Deposited not Cleared\" which means that the payment has been deposited in a financial bank account but it is not reconciled yet</li> <li>and the invoice outstanding amount to be paid as \"Awaiting payment\".</li> </ul> <p></p> <p>In this example, the last step is to register the customer payment of the invoice, 30 days after the invoice date. A payment received from a customer can be registered in the system two ways:</p> <ul> <li>in the Payment In window, same way as described here but this time the payment must be related to a \"Transaction Type\" equal to \"Invoices\"</li> <li>or in the Sales Invoice window, by using the process button \"Add Payment In/Out\".</li> </ul> <p></p> <p>Once this new payment is processed, the sales invoice changes to fully paid. In other words, the \"Payment Complete\" check box of the invoice is now selected.</p> <p></p> <p>Finally, the \"Payment Report\" now shows the invoice as fully paid, in Etendo terms it is shown as \"Deposited not Clear\".</p> <p></p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#invoice-prepayment-execution-steps","title":"Invoice prepayment: execution steps","text":"<p>In Etendo, the company in this example will have to configure a payment method which allows to post the prepayment as soon as it is received, create a sales invoice for the goods requested by its customer and register the prepayment of the invoice earlier than the invoice date.</p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#payment-method-configuration","title":"Payment method configuration","text":"<p>The payment method to be used needs to be configured in order to allow the posting of the prepayment as soon as it is received, therefore the \"Deposited Payment Account\" can be specified in the field \"Upon Receipt Use\".</p> <p></p> <p>Note</p> <pre><code>The checkbox \"Automatic Deposit\" is also selected. That means that the payment received will be automatically deposited in the financial account.\n</code></pre>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#sales-invoice-creation","title":"Sales invoice creation","text":"<p>First step is to issue the sales invoice dated on November 13th, 2023 for instance. The issued invoice can be completed as soon as it is properly filled in.</p> <p></p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#payment-creation-and-accounting_1","title":"Payment creation and accounting","text":"<p>Next step is to register the prepayment of the invoice on an earlier date than the invoice date, for instance November 1st, 2023.</p> <p>Above is done by using the \"Add Payment\" button. The \"Payment Date\" field needs to be modified as required.</p> <p></p> <p>Once processed, a payment received is created in the \"Payment In\" window and besides the deposit of that payment is automatically registered in the corresponding financial account.</p> <p>The payment received can be posted from the \"Payment In\" window.</p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#sales-invoice-posting","title":"Sales Invoice posting","text":"<p>Last step is to post the sales invoice to the ledger.</p> <p>Invoice posting looks like:</p> <p></p> <p>Above posting reflects the moment in which the customer receivable is accounted, however customer receivable is already canceled by the prepayment.</p>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-manage-prepaid-invoices-in-receivables/#result","title":"Result","text":"<p>This completes the creation and processing of:</p> <ul> <li>a partially prepaid order in Etendo. As a result, an invoice has been partially paid after registering a prepayment against the corresponding order.</li> <li>a prepaid invoice in Etendo. As a result, the customer receivables are canceled at the time of registering and posting the invoice prepayment.</li> </ul>","tags":["How to","Prepaid Receivables","Customer Payments","Sales Order"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/","title":"How to transfer funds between financial accounts","text":"","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#overview","title":"Overview","text":"<p>There are many situations in which a company needs to transfer funds to modify or adjust bank and/or cash accounts balance:</p> <ul> <li>a check deposited in the wrong bank account</li> <li>a bank account out of funds...etc.</li> </ul> <p>In Etendo bank and cash accounts are represented as Financial Accounts.</p> <p>There are several kinds of funds transfers depending on the financial account type used and the organization for which the transfer of funds takes place:</p> <ul> <li>From a bank account to another bank account within the same organization.</li> <li>From an organization bank account to another organization bank account.</li> <li>Same applies to cash accounts.</li> </ul>","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#recomended-articles","title":"Recomended articles","text":"<p>Transferring funds between financial accounts requires a clear understanding on how to create a G/L Item.</p> <p>It is highly recommended as well to understand how Financial Accounts and Account Combination work in Etendo.</p>","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#execution-steps","title":"Execution Steps","text":"<p>In Etendo, the company in the example will have to withdraw money from one bank or cash account and get it deposited into another bank or cash account. In other words, the company needs to alter either bank or cash accounts balance whenever it is required. That action could or could not have fees. Anyway, the steps to follow are:</p> <ul> <li>GL item creation         as it is necessary to keep somewhere the funds in-transit balance from the time it is withdrawn from one financial account until the time it is deposited in another financial account.</li> <li>Creation of a withdrawal transaction         in the bank account where funds are taken from.</li> <li>Creation of a deposit transaction         in the bank account where funds are going to be deposited.</li> </ul>","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#gl-item-creation","title":"G/L Item creation","text":"<p>A G/L Item is the accounting item to use for accounting in-transit funds. It is key to configure the GL item with the right debit and credit accounts in the Accounting tab. The way to do that is:</p> <ul> <li>Once the GL item has been created, click on the Accounting tab of the G/L Item window.</li> <li>Create a new record for each organization's general ledger and assign the same Account Combination for debit and credit.</li> </ul> <p>For instance, the sample account combinations which could be used are:</p> <ul> <li>US General Ledger configuration:         1140 Checking In-Transfer</li> <li>Spanish General Ledger configuration:         55500 - Partidas pendientes de aplicaci\u00f3n</li> </ul>","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#creation-of-the-withdrawal-transaction","title":"Creation of the withdrawal transaction","text":"<p>A withdrawal transaction needs to be created in the Financial Account where the funds are going to be taken from. This step in the process could or could not have fees.</p> <p>The company in this example needs to:</p> <ul> <li>navigate to the Financial Accounts window</li> <li>select the bank to take the money from, for instance Bank A</li> <li>press the process button Add Transaction</li> <li>once in that new window select the Transaction Type GL Item</li> <li>enter a Transaction Date</li> <li>select the GL Item previously created</li> <li>and finally indicate the Paid Out amount, for instance 100,00 USD.</li> </ul> <p>This new transaction is then shown in the Transaction tab of the Financial Account window. Etendo clearly shows the Withdrawal Amount recorded. The next step is to post the withdrawal transaction. </p> <p>Note</p> <pre><code>It is possible to manually post it by using the process button Post or it could be automatically posted if the Accounting Server Process is enabled in the [Process Request](../../../user-guide/etendo-classic/basic-features/general-setup/process-scheduling.md#process-request) window.\n</code></pre> <p>The posting will look like:</p> Account Debit Credit GL Item Debit Paid Out Amount Bank A - Withdrawal account Paid Out Amount","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#creation-of-the-bank-fee","title":"Creation of the bank fee","text":"<p>The company in this example needs to create the withdrawal transaction as described previously and an additional transaction to reflect the bank fee. The way to do that is:</p> <ul> <li>press once more the process button Add Transaction</li> <li>select the Transaction Type Fee</li> <li>enter a Transaction Date</li> <li>and finally indicate the Paid Out amount, for instance 1,00 USD.</li> </ul> <p>Info</p> <pre><code>A bank fee can also be registered in a financial account by using a previously created G/L Item named Bank Interest.Bank Interest accounting could be configured as '7010 Interest income' for credit and '7020 Interest expense' for debit.\n</code></pre> <p>In this example, there will be two transactions created in the Transaction tab of the Financial Account, one for the withdrawal and one for the fee. Fee transactions can also be posted the same way as the withdrawal transaction.</p> Account Debit Credit Bank A -Bank Fee Account Paid Out Amount Payment Out-Withdrawal Paid Out Amount","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#creation-of-the-deposit-transaction","title":"Creation of the deposit transaction","text":"<p>The final step is to create a deposit transaction in the Financial Account where the funds must be deposited. The company in this example needs to:</p> <ul> <li>navigate to the Financial Accounts window</li> <li>select the bank to deposit the money, for instance Bank B</li> <li>press the process button Add Transaction</li> <li>once in that new window select the Transaction Type GL Item</li> <li>enter a Transaction Date</li> <li>select the GL Item previously created</li> <li>and finally indicate the Received In amount, in this example 100,00 USD.</li> </ul> <p>This new transaction is then shown in the Transaction tab of the Financial Account window. Etendo clearly shows the Deposit Amount recorded. The next step is to post the deposit transaction. It is possible to manually post it by using the process button Post or it could be automatically posted if the Accounting Server Process is enabled in the Process Request window.</p> <p>The posting will look like:</p> Account Debit Credit Bank B - Deposit Account Received In Amount GL Item Credit Received In Amount","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#transfer-of-funds-between-cash-accounts","title":"Transfer of funds between cash accounts","text":"<p>The company in this example needs to follow exactly the same execution steps. The only difference is the Financial Account Type to use. This time a Cash financial account type will be used while creating the withdrawal transaction and the deposit transaction. Transfer of funds between different organizations</p>","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#transfer-of-funds-between-different-organizations","title":"Transfer of funds between different organizations","text":"<p>The company in this example needs to follow exactly the same execution steps. The only difference is the Organization to be used. This time:</p> <ul> <li>the GL Item for the in-transit amount to be withdrawn needs to be created in Organization A</li> <li>the withdrawal transaction needs to be created in a Financial Account of Organization A</li> <li>the GL item for the in-transit amount to be deposited needs to be created in Organization B</li> <li>and finally, the deposit transaction needs to be created in a Financial Account of Organization B</li> </ul> <p>Withdrawal transaction posting in Organization A will look like:</p> Account Debit Credit GL Item Debit Paid Out Amount Bank A - Withdrawal account Paid Out Amount <p>Deposit transaction posting in Organization B will look like:</p> Account Debit Credit Bank B - Deposit Account Received In Amount GL Item Credit Received In Amount","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/how-to-guides/how-to-transfer-funds-between-financial-accounts/#result","title":"Result","text":"<p>This completes the transfer of funds between financial accounts. As a result:</p> <ul> <li>Bank A balance is reduced in 101,00 USD</li> <li>Bank B balance is increased in 100,00 USD</li> </ul> <p>Above scenario is just a transfer of funds between financial accounts of the same organization.</p> <p>In the case of transfer of funds between financial accounts of different organizations:</p> <ul> <li>Bank A balance of the organization A is reduced in 101,00 USD</li> <li>Bank B balance of the organization B is increased in 100,00 USD</li> </ul> <p>Above scenario would somehow mean an expense in Organization A and a revenue in Organization B.</p>","tags":["How to","Fund Transfers","Financial Accounts","Bank Transactions","Cash Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/advanced-business-partner/","title":"Advanced Business Partner","text":"<p> Javapackage: <code>com.etendoerp.advanced.businesspartner</code> </p>","tags":["Advanced Business Partner","Essentials Extensions","Business Partner","Sequence"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/advanced-business-partner/#overview","title":"Overview","text":"<p>This section describes the Advanced Business Partner module included in the Etendo Essentials Extensions bundle.</p> <p>Info</p> <p>To be able to include this functionality, the Essentials Bundle must be installed. To do that, follow the instructions from the Marketplace.</p> <p>The Advanced Business Partner module allows the user to have a general view of business partners information and to assign sequence numbers to business partners.</p>","tags":["Advanced Business Partner","Essentials Extensions","Business Partner","Sequence"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/advanced-business-partner/#business-partner-general-view","title":"Business Partner General View","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner General View</code></p> <p>In this window, it is possible to see all the business partner information of each record, grouped in the customer, vendor/creditor and employee sections of the header. In the original window \u201cBusiness Partner\u201d, this information is found in different tabs.</p> <p></p> <p>This change implies, in grid view, the user is able to create, modify and filter business partner information according to their needs.</p> <p></p>","tags":["Advanced Business Partner","Essentials Extensions","Business Partner","Sequence"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/advanced-business-partner/#document-sequence","title":"Document Sequence","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Accounting</code> &gt; <code>Setup</code> &gt; <code>Document Sequence</code></p> <p>In this window, it is also possible to create a sequence number for each business partner based on its category. This sequence number can be found in the Document No. field.</p> <p></p> <p>For this, you have to set some preferences and configure the sequence number first, as explained below.</p>","tags":["Advanced Business Partner","Essentials Extensions","Business Partner","Sequence"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/advanced-business-partner/#preferences","title":"Preferences","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Preference</code></p> <p>To be able to configure a business partner sequence number, two preferences are set by default. These can be found in the \u201cPreference\u201d window.</p>","tags":["Advanced Business Partner","Essentials Extensions","Business Partner","Sequence"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/advanced-business-partner/#auto-business-partner-document-no","title":"Auto Business Partner Document No","text":"<p>This property allows the automatic generation of sequence numbers for business partners. The default value is Y and, in case it is necessary to disable this automatic generation, a new preference must be created, but with the value N and the option \u201cSelected\u201d checked. In this case, the Document No field will be left blank.</p>","tags":["Advanced Business Partner","Essentials Extensions","Business Partner","Sequence"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/advanced-business-partner/#allow-jumps-in-business-partner-document-no","title":"Allow Jumps in Business Partner Document No","text":"<p>This property allows jumping among the different document numbers. The default value is N, so, it is not allowed to remove business partners or change business partner categories. However, it is possible to create a new preference with value Y to enable this option. When the business partner category is changed, the document number is also changed according to the corresponding document sequence.</p>","tags":["Advanced Business Partner","Essentials Extensions","Business Partner","Sequence"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/advanced-business-partner/#how-to-configure-sequences-number","title":"How to Configure Sequences Number","text":"<p>To configure the Sequence Number, go to the \u201cDocument Sequence\u201d window, create a new record for each organization and category, set the corresponding table, column and business partner category, and save the record. The table and column fields must be filled with the options seen below.</p> <p></p> <p>Info</p> <p>For more information, visit Sequences.</p>","tags":["Advanced Business Partner","Essentials Extensions","Business Partner","Sequence"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/bulk-completion/","title":"Bulk Completion","text":"<p> Javapackage: <code>com.etendoerp.bulk.completion</code> </p>","tags":["Bulk Completion","Complete","Book","Close"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/bulk-completion/#overview","title":"Overview","text":"<p>This section describes the Bulk Completion module included in the Etendo Essentials Extensions bundle.</p> <p>Info</p> <p>To be able to include this functionality, the Essentials Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Essentials Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Essentials Extensions - Release notes.</p> <p>Warning</p> <p>Before using this functionality, remember that processing multiple records at the same time can affect system performance, especially when handling a large volume of data.</p> <p>The Bulk Completion functionality allows the user to complete, reactivate, or close multiple records by selecting them and clicking the Bulk completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p></p>","tags":["Bulk Completion","Complete","Book","Close"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/bulk-completion/#completing","title":"Completing","text":"<p>As seen here, you can select multiple records at the same time, drafts in this case, and click the Bulk completion button to complete or book them all at once.</p> <p></p>","tags":["Bulk Completion","Complete","Book","Close"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/bulk-completion/#reactivating","title":"Reactivating","text":"<p>Once the records are completed or booked, the user can reactivate records massively. When reactivating, the record turns from Completed or Booked into Draft status so it can be modified. </p>","tags":["Bulk Completion","Complete","Book","Close"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/bulk-completion/#voiding","title":"Voiding","text":"<p>In the case of invoices, goods receipts and shipments, the user can select the Void option to generate the corresponding reversed documents massively.</p>","tags":["Bulk Completion","Complete","Book","Close"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/bulk-completion/#closing","title":"Closing","text":"<p>For orders, quotations and return documents it is possible to close multiple documents at the same time.</p> <p>This functionality is available in the following windows:</p> <ul> <li>Sales Quotation</li> <li>Sales Order</li> <li>Goods Shipment</li> <li>Return From Customer</li> <li>Sales Invoice</li> <li>Purchase Order</li> <li>Goods Receipt</li> <li>Purchase Invoice</li> <li>Return To Vendor</li> </ul> <p>As explained, using Bulk Completion improves efficiency by allowing users to perform document actions in bulk, streamlining operations and saving time.</p>","tags":["Bulk Completion","Complete","Book","Close"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/overview/","title":"Essentials Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.essentials.extensions</code></p> <p> Etendo Marketplace:  Essentials Bundle</p>","tags":["Essentials Extensions","Advanced Business Partner","Bulk Completion"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/overview/#overview","title":"Overview","text":"<p>This bundle includes fundamental modules that affect most areas in Etendo.</p>","tags":["Essentials Extensions","Advanced Business Partner","Bulk Completion"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/overview/#translations","title":"Translations","text":"","tags":["Essentials Extensions","Advanced Business Partner","Bulk Completion"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/overview/#modules","title":"Modules","text":"","tags":["Essentials Extensions","Advanced Business Partner","Bulk Completion"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/overview/#advanced-business-partner","title":"Advanced Business Partner","text":"<p> Javapackage: <code>com.etendoerp.advanced.businesspartner</code></p> <p> Javapackage: <code>com.etendoerp.advanced.businesspartner.template</code></p> <p>The \u201cAdvanced Business Partner\u201d module allows the user to have a general view of business partners information and to assign sequence numbers to business partners.</p> <p>Info</p> <p>For more information, visit Advanced Business Partner - User guide.</p>","tags":["Essentials Extensions","Advanced Business Partner","Bulk Completion"]},{"location":"user-guide/etendo-classic/optional-features/bundles/essentials-extensions/overview/#bulk-completion","title":"Bulk Completion","text":"<p> Javapackage: <code>com.etendoerp.bulk.completion</code> </p> <p>The Bulk Completion functionality allows the user to complete, reactivate or close multiple records by selecting them and clicking the Bulk completion button. This makes records management easier and more efficient, reducing the time spent processing individual records.</p> <p>Info</p> <p>For more information, visit Bulk Completion - User guide</p>","tags":["Essentials Extensions","Advanced Business Partner","Bulk Completion"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/","title":"Etendo BI Inclusion/Exclusion Configuration","text":"<p> Javapackage: <code>com.etendoerp.powerbi.inclusion.exclusion</code> </p>","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#overview","title":"Overview","text":"<p>Info</p> <p>To be able to include this functionality, the Etendo BI Bundle must be installed. To do that, follow the instructions from Marketplace.</p> <p>In order to allow users to customize and configure the information and filters in PowerBI reports, a new module has been developed that allows the creation of different configurations that facilitate the selection and exclusion of specific entities within reports.</p> <p>A detailed description of the configuration window and its components is provided below.</p>","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#etendo-bi-inclusionexclusion-configuration-window","title":"Etendo BI Inclusion/Exclusion Configuration Window:","text":"<p>The window consists of two main tabs: \"Header\" and \"Lines\". These tabs are used to define and adjust the filters of PowerBI reports according to the user's specific requirements.</p>","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#header","title":"Header","text":"<p>Name and Description: Text fields that allow the user to easily identify the configuration and understand its purpose.</p> <p>Type: It indicates the type of entity to be included or excluded according to the configuration. This field provides additional information to understand the context of the configuration. The options are:</p> <ul> <li>Business Partner Category</li> <li>GL Item</li> <li>Product</li> <li>Product Category</li> <li>Document Type</li> <li>Account:\u00a0If it is necessary to enter accounts, selecting this type enables an Element Level, Account Type and Account Tree selector (required)</li> <li>Business Partner</li> <li>Sales Representative</li> </ul> <p>Note</p> <p>If the \"Type\" field is left empty, it is assumed that the line information is given by one of the auxiliary data (number, string or Yes/No fields). Moreover, in the lines tab, it is possible to combine all the options mentioned above to be included or excluded.</p> <p>From and To Date: date fields to define the duration of the created configuration. If specified in the header, the lines acquire that defined period. If you want the lines to have different periods, set these dates in the corresponding lines.</p> <p>Has Number, Has String, Has Boolean: These checkboxes allow the user to enable additional number, string, or yes/no value fields in the configuration lines. These auxiliary fields are used as needed in reports.</p>","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#lines-tab","title":"Lines tab","text":"<p>This tab contains the configuration lines associated with the header. Each line represents an element that can be used to include or exclude entities in reports. The fields in the lines are described below:</p> <p>Line No.: Number of the line within the configuration. This number provides a reference to identify and order the lines.</p> <p>Document Type: If the configuration is \"Document Type\", it allows selecting a specific document type. This field is only displayed if the entity type is \"Document Type\".</p> <p>Business Partner: If the configuration is \"Business Partner\", it allows selecting a business partner. This field is only displayed if the entity type is \"Business Partner\".</p> <p>Business Partner Category: If the configuration is \"Business Partner Category\", it allows selecting a business partner category. This field is only displayed if the entity type is \"Business Partner Category\".</p> <p>Sales Representative: If the configuration is \"Sales Representative\", it allows selecting a sales representative. This field is only displayed if the entity type is \"Sales Representative\".</p> <p>Account: If the configuration is\u00a0 \"Account\", it allows selecting an account, pre-filtered by the related fields in the header. This field is only shown if the entity type is \"Account\".</p> <p>Product Category: If the configuration is \"Product Category\", it allows selecting a product category. This field is only displayed if the entity type is \"Product Category\".</p> <p>Product: If the configuration is \"Product\", it allows selecting a specific product. This field is only displayed if the entity type is \"Product\".</p> <p>G/L Item: If the configuration is \"GL Item\", it allows selecting an accounting concept. This field is only shown if the entity type is \"GL Item\".</p> <p>Number: Auxiliary field for entering an additional number. This field is only shown if the \"Has Number\" box is checked.</p> <p>String: Auxiliary text string. It is shown only if the \"Has String\" check in the header is checked.</p> <p>Yes/No: Auxiliary Yes/No check. Displayed only if the \"Has Yes/No\" check in the header is checked.</p>","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#examples","title":"Examples","text":"<p>Etendo accounts settings to take the balances and reflect them in the financial reports in BI:</p>","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#configuration-in-etendo","title":"Configuration in Etendo","text":"<p>Main categories for account configuration:</p> <ul> <li>Cash</li> <li>Banks</li> <li>Customers</li> <li>Suppliers</li> <li>Sales</li> <li>Sales Costs</li> </ul>","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#configuration-of-cash-accounts","title":"Configuration of cash accounts:","text":"","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#configuration-of-bank-accounts","title":"Configuration of bank accounts:","text":"","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#configuration-of-customer-accounts","title":"Configuration of customer accounts:","text":"","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#configuration-of-supplier-accounts","title":"Configuration of supplier accounts:","text":"","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#configuration-of-sales-accounts","title":"Configuration of sales accounts:","text":"","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/inclusion-exclusion-configuration/#configuration-of-sales-costs-accounts","title":"Configuration of sales costs accounts:","text":"","tags":["Etendo BI","Configuration","PowerBI Reports","Inclusion/Exclusion","Entity Management"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/overview/","title":"Etendo BI Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.etendobi.extensions</code></p> <p> Etendo Marketplace:  Etendo BI Bundle</p>","tags":["Etendo BI","Power BI Integration","Data Configuration","BI Modules"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/overview/#overview","title":"Overview","text":"<p>The Etendo BI Bundle includes functionalities connecting Etendo to Power BI.</p>","tags":["Etendo BI","Power BI Integration","Data Configuration","BI Modules"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/overview/#translations","title":"Translations","text":"","tags":["Etendo BI","Power BI Integration","Data Configuration","BI Modules"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/overview/#modules","title":"Modules","text":"","tags":["Etendo BI","Power BI Integration","Data Configuration","BI Modules"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/overview/#etendo-bi-inclusion-exclusion-module","title":"Etendo BI Inclusion / Exclusion Module","text":"<p> Javapackage: <code>com.etendoerp.powerbi.inclusion.exclusion</code></p> <p>This module allows users to customize and configure the information and filters in PowerBI reports. It allows the creation of different configurations that facilitate the selection and exclusion of specific entities within reports.</p> <p>Info</p> <p>For more information, visit Etendo BI Inclusion/Exclusion Configuration user guide.</p>","tags":["Etendo BI","Power BI Integration","Data Configuration","BI Modules"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/overview/#etendo-bi-connector-module","title":"Etendo BI Connector Module","text":"<p> Javapackage: <code>com.etendoerp.integration.powerbi</code></p> <p>This module allows the user to create base queries and customize them when needed. This process allows providing information that can be later used by Power BI. </p> <p>A background process must be set which creates CSV files that will be uploaded to a server.  </p> <p>Info</p> <p>For more information, visit the Etendo BI Connector Module developer guide.</p>","tags":["Etendo BI","Power BI Integration","Data Configuration","BI Modules"]},{"location":"user-guide/etendo-classic/optional-features/bundles/etendobi-extensions/overview/#base-queries-for-etendo-bi","title":"Base Queries for Etendo BI","text":"<p> Javapackage: <code>com.etendoerp.powerbi.queries</code></p>","tags":["Etendo BI","Power BI Integration","Data Configuration","BI Modules"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/","title":"Advanced Bank Account Management","text":"<p> Javapackage: <code>com.etendoerp.advanced.bank.account.management</code></p> <p> Javapackage: <code>com.etendoerp.advanced.bank.account.management.template</code></p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#overview","title":"Overview","text":"<p>This section describes the Advanced Bank Account Management module included in the Etendo Financial Extensions bundle.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.</p> <p>This functionality enhances the bank account management enabling greater customization and control over bank account selection associated with customers and vendors.</p> <p>This functionality is available in the following windows: </p> <ul> <li>Business Partner</li> <li>Sales Invoice</li> <li>Purchase Invoice</li> <li>Sales Order</li> <li>Purchase Order</li> <li>Payment In</li> <li>Payment Out</li> </ul>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#business-partner-bank-account","title":"Business Partner - Bank Account","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner</code></p> <p>This module introduces the possibility to mark a bank account as Default within the Bank Account tab of the Business Partner window. Here, it is possible to check the Default Account checkbox in order to set the account to be used in invoices and orders. This information determines the bank account of each payment.</p> <p></p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#business-partner-locationaddress","title":"Business Partner - Location/Address","text":"<p> <code>Application</code> &gt; <code>Master Data Management</code> &gt; <code>Business Partner</code> </p> <p>The Advanced Bank Account Management field is introduced in the Location/ Address tab of the Business Partner window to associate specific bank accounts to the different locations.  </p> <p>Info</p> <p>In case of having both a default bank account and a location with a defined bank account, when generating a new document, the location bank account is prioritized over the default one.</p> <p></p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#salespurchase-order-windows","title":"Sales/Purchase Order windows","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Sales Order</code></p> <p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Purchase Order</code></p> <p>A Bank Account field has also been added header section of the Purchase and Sales Order windows.</p> <p>This field is automatically filled based on the selected address. If a specific account is associated with the address, that account is used; if no account is configured, the default account is selected. In cases where neither option is configured, the field remains blank. Payment plans generated from these Purchase and Sales Orders now include the bank account information.</p> <p></p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#add-payment-button","title":"Add Payment button","text":"<p>Furthermore, the Add Payment button has been enhanced to include a Bank Account field, allowing users to filter payments by bank account. This button is present in the Sales Invoice and Purchase invoice windows.</p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#salespurchase-invoice-windows","title":"Sales/Purchase Invoice windows","text":"<p> <code>Application</code> &gt; <code>Sales Management</code> &gt; <code>Transactions</code> &gt; <code>Sales Invoice</code></p> <p> <code>Application</code> &gt; <code>Procurement Management</code> &gt; <code>Transactions</code> &gt; <code>Purchase Invoice</code></p> <p>Similarly, a Bank Account field has been added to the Purchase and Sales Invoice windows, which functions in the same manner as in orders. The field is auto-filled based on the selected address, using a specific account if associated, falling back to the default account if none is specified, or remaining blank otherwise.  The payment plan inherits the bank account information from the header Additionally, invoices created from Purchase and Sales Orders inherit the bank account information from the respective orders.</p> <p></p> <p>The Payment Plan in Sales Invoice and Purchase Invoice windows now displays the associated bank account information in the Payment Plan tab. </p> <p></p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#add-payment-button_1","title":"Add Payment button","text":"<p>Furthermore, the Add Payment button has been enhanced to include a Bank Account field, allowing users to filter payments by bank account. This button is present in the Sales Invoice and Purchase invoice windows.</p> <p></p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#modify-payment-plan-button","title":"Modify Payment Plan button","text":"<p>A Modify Payment Plan button is found at Payment Plan tab level in both the Purchase and Sales Invoice windows. This function allows users to modify payment plans already created, adding or deleting payments, and even specifying the bank account for each payment plan record.</p> <p>Warning</p> <p>This button is only available when the payment plan has no associated payments.</p> <p></p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#payment-in-payment-out-windows","title":"Payment In /Payment Out windows","text":"<p> <code>Application</code> &gt; <code>Financial Management</code> &gt; <code>Receivables and Payables</code> &gt; <code>Transactions</code> &gt; <code>Payment In / Payment Out</code> </p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/advanced-bank-account-management/#add-details-button","title":"Add Details button","text":"<p>As in the case of the Add Payment button, the Add Details button has been enhanced to include a Bank Account field, allowing users to filter payments by bank account. This button is present in the Payment In and Payment Out windows.</p> <p></p>","tags":["Bank Account","Financial","Modify Payment Plan"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/automated-remittance/","title":"Automated Remittance","text":"<p> Javapackage: <code>com.etendoerp.automated.remittance</code> </p>","tags":["Automated Remittance","Accounting","Financial","Remittance Protest"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/automated-remittance/#overview","title":"Overview","text":"<p>This section describes the Automated Remittance module included in the Etendo Financial Extensions bundle.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.</p> <p>This functionality allows the user to automatically process and protest remittances. To better understand this section, it is necessary to visit the Remittance user guide.</p> <p>Important</p> <p>This functionality depends on the <code>org.openbravo.module.remittance</code> module in version <code>3.15.0</code> or higher. In case of installing the financial extensions bundle, the dependencies are handled automatically.</p>","tags":["Automated Remittance","Accounting","Financial","Remittance Protest"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/automated-remittance/#setup","title":"Setup","text":"<p>To be able to use this functionality, it is necessary to install the Automated Remittance dataset before using the Remittance window.</p> <p>For this, go to the Enterprise Module Management window and select the corresponding dataset as shown below. This includes the necessary payment method to be used in the protest functionality, explained below.</p> <p></p>","tags":["Automated Remittance","Accounting","Financial","Remittance Protest"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/automated-remittance/#automated-remittance-process","title":"Automated Remittance Process","text":"<p>This functionality allows the automatic processing of remittances. This functionality is activated by selecting the Process Automated checkbox in the header of the Remittance window.</p> <ol> <li> <p>Activation: To activate automated processing, check the Automated Processing checkbox in the Remittance header. If manual processing is preferred, keep this option unchecked.</p> <p></p> <p>Once the Process button is used, Etendo automatically creates the corresponding lines in the Bank Instructions and Settled tabs, as explained below.</p> </li> <li> <p>Generation of Bank Instructions: The system automatically generates the corresponding Bank Instructions.</p> </li> <li> <p>Date Processing: The remittance lines will be processed with the date of the invoices or orders corresponding to them. This lines can be found in the Settled tab. If necessary, this date can be manually modified in the corresponding field from the Settled tab, after remittance processing.</p> <p></p> </li> </ol> <p>Note</p> <p>The invoice selection, grouping and processing steps already existed; what's new is the automation of the remittance processing by selecting the Process Automated checkbox.</p>","tags":["Automated Remittance","Accounting","Financial","Remittance Protest"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/automated-remittance/#automated-remittance-protest","title":"Automated Remittance Protest","text":"<p>The Protest Remittance button allows the automatic protest of remittances. This function facilitates the management of protests and the re-settlement of remittances. This automatic protest creates a negative payment, therefore it is not necessary to use the Settle/Protest Remittance window or add a payment manually.</p> <ol> <li> <p>Remittance Selection: In the Settled tab, of the Remittance window, select the remittance to be protested.</p> <p></p> </li> <li> <p>Return Generation: By pressing the Protest Remittance button and selecting a return date, the system will automatically generate the return of the remittance.</p> <p></p> </li> <li> <p>Negative Invoice Payment: The return will include the generation of a negative payment of the invoice to be returned, allowing the remittance to be settled again in the future.</p> <p></p> <p></p> </li> </ol>","tags":["Automated Remittance","Accounting","Financial","Remittance Protest"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/bulk-posting/","title":"Bulk Posting","text":"<p> Javapackage: <code>com.etendoerp.bulk.posting</code> </p>","tags":["Bulk Posting","Accounting","Financial"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/bulk-posting/#overview","title":"Overview","text":"<p>This section describes the Bulk Posting module included in the Etendo Financial Extensions bundle.</p> <p>Info</p> <p>To be able to include this functionality, the Financial Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Financial Extensions Bundle.</p> <p>Warning</p> <p>Before using this functionality, remember that this module's background process can affect the performance of the system.</p> <p>The Bulk Posting functionality allows the user to post or unpost multiple records by selecting the corresponding records and clicking the Bulk posting button. Also, the Accounting Status of the record/s is shown in the status bar, in form view, or in a column, in grid view.</p> <p></p>","tags":["Bulk Posting","Accounting","Financial"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/bulk-posting/#available-windows","title":"Available Windows","text":"<p>This functionality is available in the following windows:</p> <ul> <li>Amortization</li> <li>Goods Movements</li> <li>Financial Account</li> <li>Matched Invoices</li> <li>Cost Adjustment</li> <li>Bill of Materials Production</li> <li>Internal Consumption</li> <li>Doubtful Debt</li> <li>Landed Cost</li> <li>G/L Journal</li> <li>Simple G/L Journal</li> <li>Work Effort</li> <li>Goods Receipt</li> <li>Goods Shipment</li> <li>Return Material Receipt</li> <li>Return to Vendor Shipment</li> <li>Sales Invoice</li> <li>Purchase Invoice</li> <li>Payment In</li> <li>Payment Out</li> <li>Physical Inventory</li> </ul>","tags":["Bulk Posting","Accounting","Financial"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/bulk-posting/#accounting-status-column","title":"Accounting Status Column","text":"<p>All the records existing previously to the installation of this new functionality have a default pending refresh value in the column Accounting Status. To set the correct value for this column, it is necessary to configure the following preference to indicate the amount of days to be considered by the process to set the correct values of the previous records.</p>","tags":["Bulk Posting","Accounting","Financial"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/bulk-posting/#preference-configuration","title":"Preference Configuration","text":"<p>To configure the preference, go to the Preference window and create a new record with the property Amount of Days and the default value 90. If necessary, it is possible to create another preference by entering a new value and checking the selected box.</p>","tags":["Bulk Posting","Accounting","Financial"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/bulk-posting/#background-process","title":"Background Process","text":"<p>It is necessary to run the Days Back to Refresh Accounting background process to update the accounting status column.</p> <p></p>","tags":["Bulk Posting","Accounting","Financial"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/bulk-posting/#not-posted-documents-window","title":"Not Posted Documents Window","text":"<p>The Bulk Posting module includes the Not Posted Documents functionality. This is used to find all the not posted documents in the same window and to post them massively.</p> <p>Info</p> <p>For more information, visit Not Posted Documents user guide.</p>","tags":["Bulk Posting","Accounting","Financial"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/","title":"Financial Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.financial.extensions</code></p> <p> Etendo Marketplace:  Financial Extensions Bundle</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#overview","title":"Overview","text":"<p>This bundle includes enhancements for Financial Management functionalities in Etendo.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#translations","title":"Translations","text":"<ul> <li> Spanish: Financial Extensions Bundle ES</li> </ul>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#modules","title":"Modules","text":"","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#accounting-dimensions-assets","title":"Accounting Dimensions Assets","text":"<p> Javapackage: <code>com.etendoerp.accounting.dimensions.assets.template</code></p> <p> Javapackage: <code>com.etendoerp.accounting.dimensions.assets</code></p> <p>The Accounting Dimensions Assets module improves asset management and amortization by allowing the user to specify all available accounting dimensions during asset creation and management. Also, the Amortization window guarantees more accurate assets tracking grouped by periods and more complete amortization calculations.</p> <p>Info</p> <p>For more information, visit the Accounting Dimensions Assets user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#accounting-templates","title":"Accounting Templates","text":"<p> Javapackage: <code>com.etendoerp.accounting.templates</code></p> <p>This module allows setting a non deductible tax's amount to a specified financial account.</p> <p>Info</p> <p>For more information, visit the Accounting Templates user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#advanced-bank-account-management","title":"Advanced Bank Account Management","text":"<p> Javapackage: <code>com.etendoerp.advanced.bank.account.management</code></p> <p> Javapackage: <code>com.etendoerp.advanced.bank.account.management.template</code></p> <p>This module enhances the bank account management enabling greater customization and control over bank account selection associated with customers and vendors. Also, the Modify Payment Plan button is added for better payment management.</p> <p>Info</p> <p>This functionality is available in the following windows:</p> <ul> <li>Business Partner</li> <li>Sales invoice</li> <li>Purchase Invoice</li> <li>Sales order</li> <li>Purchase order</li> <li>Payment In</li> <li>Payment Out</li> </ul> <p>For more information, visit the Advanced Bank Account Management.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#advanced-business-partner-settlement","title":"Advanced Business Partner Settlement","text":"<p> Javapackage: <code>com.etendoerp.advanced.bpsettlement</code></p> <p>This functionality allows the user to create settlements for invoices, both sales and purchase, from the Payment In and Payment Out windows. Also a netting can be performed by creating a settlement from a bank reconciliation for credit in / out from the Financial Account window.</p> <p>Info</p> <p>For more information, visit:</p> <ul> <li>Payment In</li> <li>Payment Out</li> <li>Financial Account</li> </ul>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#advanced-financial-docs-processing","title":"Advanced Financial Docs. Processing","text":"<p> Javapackage: <code>com.etendoerp.advanced.financial.docs.processing</code></p> <p> Javapackage: <code>com.etendoerp.advanced.financial.docs.processing.template</code></p> <p>This functionality is part of the Financial Extensions Bundle and it is useful when the user needs to reactivate voided invoices (either Sales or Purchase) and closed orders (either Sales or Purchase) as well as amortizations.</p> <p>Info</p> <p>For more information, visit:</p> <ul> <li>Sales Order </li> <li>Sales Invoice</li> <li>Purchase Order</li> <li>Purchase Invoice</li> <li>Amortization</li> <li>and the Advanced Financial Docs. Processing developer guide</li> </ul>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#asset-amortization-report","title":"Asset Amortization Report","text":"<p> Javapackage: <code>com.smf.asset.amortization.report</code></p> <p>The new Amortization report allows downloading excel reports about information on amortization created for a selected year.</p> <p>Info</p> <p>For more information, visit the Asset Amortization Report user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#automated-remittance","title":"Automated Remittance","text":"<p> Javapackage: <code>com.etendoerp.automated.remittance</code></p> <p>This functionality allows the user to automatically process and protest remittances.</p> <p>Info</p> <p>For more information, visit the Automated Remittance user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#banking-pool","title":"Banking Pool","text":"<p> Javapackage: <code>com.etendoerp.bankingpool</code></p> <p>This feature allows entering in the system all the financings the company has. It is possible to exploit the information through the bank pool report.</p> <p>Info</p> <p>For more information, visit the Banking Pool user guide and the Banking Pool developer guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#bulk-posting","title":"Bulk Posting","text":"<p> Javapackage: <code>com.etendoerp.bulk.posting</code></p> <p>This functionality allows the user to post or unpost multiple records at the same time. Also included in this module is the Not Posted Documents window, which allows users to identify and post all pending transactions directly from one window. </p> <p>Info</p> <p>For more information, visit the Bulk Posting Module user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#business-partner-settlement","title":"Business Partner Settlement","text":"<p> Javapackage: <code>org.openbravo.financial.bpsettlement</code></p> <p>This module provides a new document where it is possible to settle debts or credit of business partners that are both customers and providers.</p> <p>Info</p> <p>For more information, visit the Business Partner Settlement user guide and the Business Partner Settlement developer guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#conversion-rate-downloader","title":"Conversion Rate Downloader","text":"<p> Javapackage: <code>com.smf.currency.conversionrate</code></p> <p>This process allows keeping currency conversions up to date by generating conversion ranks automatically with a background process using apilayer.</p> <p>Info</p> <p>For more information, visit the Conversion Rate Downloader user guide and the Conversion Rate Downloader developer guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#currency-api-configuration","title":"Currency API Configuration","text":"<p> Javapackage: <code>com.smf.currency.apiconfig</code></p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#deferred-gl-journal","title":"Deferred GL Journal","text":"<p> Javapackage: <code>com.etendoerp.gljournal.advanced</code></p> <p>This functionality allows the user to duplicate a journal entry as many times as required, indicating the regularity and the period in which the first copy must be made. Follow the process to create a journal entry from the beginning and duplicate it later.</p> <p>Info</p> <p>For more information, visit the Deferred GL Journal user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#financial-advanced-reports","title":"Financial Advanced Reports","text":"<p> Javapackage: <code>com.etendoerp.financial.reports.advanced</code></p> <p>The Balance Sheet and P&amp;L Structure Advanced, General Ledger Report Advanced and Journal Entries Report Advanced reports are an enhanced version of the previous reports including new filters according to the reports accounting dimensions.</p> <p>Info</p> <p>For more information, visit:</p> <ul> <li>Balance Sheet and P&amp;L Structure Advanced  user guide.</li> <li>General Ledger Report Advanced user guide.</li> <li>Journal Entries Report Advanceduser guide.</li> </ul>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#gl-journal-clone","title":"G/L Journal Clone","text":"<p> Javapackage: <code>com.etendoerp.gljournal.clone</code></p> <p>This functionality allows the user to clone a G/L journal in the Simple G/L Journal window, part of the accounting transactions of financial management.</p> <p>Info</p> <p>For more information, visit the G/L Journal Clone user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#intercompany","title":"Intercompany","text":"<p> Javapackage: <code>com.etendoerp.advanced.intercompany</code></p> <p>In case the user has to create orders or invoices among two or more organizations that are different but belong to the same client, this functionality allows automatically generating the corresponding inverse document.</p> <p>Info</p> <p>For more information, visit the Intercompany Module user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#payment-removal","title":"Payment Removal","text":"<p> Javapackage: <code>com.etendoerp.payment.removal</code></p> <p> Javapackage: <code>com.etendoerp.payment.removal.template</code></p> <p>The aim of this functionality is to delete and reactivate payments in an agile and easy way. Also, it allows eliminating and reactivating bank transactions and reconciliations.</p> <p>The payments to be deleted or reactivated can be found in different statuses: Awaiting execution, Payment made, Payment received, Withdrawn not cleared, Deposited not cleared, Payment cleared (provided that the payment has been reconciled by an automatic method and not by a manual method), Post and Unpost.</p> <p>The button Remove Payment is available in the Sales Order, Purchase Order, Sales Invoice, Purchase Invoice, Payment In y Payment Out windows.The Reactivate and the Advanced reactivation buttons are only available in the Payment In and Payment Out windows. Finally, the buttons Reactivate Transaction, Remove Transaction, Reactivate Reconciliation and Remove Reconciliation are available in the Financial Account window.</p> <p>Info</p> <p>For more information, visit:</p> <ul> <li>Sales Order</li> <li>Purchase Order</li> <li>Sales Invoice</li> <li>Purchase Invoice</li> <li>Payment In</li> <li>Payment Out</li> <li>Financial Account</li> </ul>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#remittances","title":"Remittances","text":"<p> Javapackage: <code>org.openbravo.module.remittance</code></p> <p> Javapackage: <code>org.openbravo.module.remittance.template</code></p> <p>This functionality allows creating a remittance which is a group of \"payments\" (in/out) or \"orders/invoices\" that can be remitted to the bank for its payment. The bank will then manage either the collection of the money from the customers or the payment to the vendors/suppliers.</p> <p>Info</p> <p>For more information, visit the Remittances Module user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#reverse-gl-journal","title":"Reverse GL Journal","text":"<p> Javapackage: <code>com.smf.gljournal.reverse</code></p> <p> Javapackage: <code>com.smf.gljournal.reverse.template</code></p> <p>This functionality is specifically useful for companies that have a month close, instead of an end year close, but with pending payments (in or out). It allows the user to open or close the period without taking into account the payments until they are made.</p> <p>Info</p> <p>For more information, visit the GL Journal user guide and the Simple GL Journal user guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/financial-extensions/overview/#vat-regularization","title":"VAT Regularization","text":"<p> Javapackage: <code>com.etendoerp.vat.regularization</code></p> <p>This functionality enables the user to adjust accounts, ensuring the VAT balance is accurate and correctly aligned.</p> <p>Info</p> <p>For more information, visit the VAT Regularization User Guide.</p>","tags":["Financial Management","Etendo Features","Banking","Accounting Enhancements","Automated Processes"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-advanced-security/","title":"Etendo Advanced Security","text":"<p> Javapackage: <code>com.etendoerp.advanced.security</code> </p>","tags":["Advanced Security","Password","User Lockout","Autolock Password","Password History"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-advanced-security/#overview","title":"Overview","text":"<p>This section describes the Etendo Advanced Security module included in the Platform Extensions bundle.</p> <p>Info</p> <p>To be able to include this functionality, the Platform Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Platform Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Platform Extensions - Release notes.</p> <p>The Etendo Advanced Security module allows the user to customize several security features such as the following:</p> <ul> <li>Password Security</li> <li>Password History</li> <li>User Lockout</li> <li>Multiple Session Verification</li> <li>Changing Password after Login</li> <li>Expiration Time (Autolock Password)</li> </ul> <p>Info</p> <p>For more information about the module configuration visit the Developer Guide.</p>","tags":["Advanced Security","Password","User Lockout","Autolock Password","Password History"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-advanced-security/#password-security","title":"Password Security","text":"<p>This functionality is executed when the password is changed, either because the user needs to change it or because the system requires it. The process can be done from the Change Password field in the navigation bar and/or from the User window.</p> <p>From the Change Password process, Etendo will ask for the current password and the new one to make the change. After clicking on Apply, a series of checks will be verified to finally execute the corresponding changes.</p> <p></p> <p>Info</p> <p>The password must be no less than 8 characters long and its structure must contain at least three of the following characters: letters, uppercase letters, lowercase letters, numbers and symbols.</p> <p>If the new password does not comply with the above mentioned conditions, a popup appears with an error message indicating the conditions to be fulfilled.</p> <p></p> <p>This process can also be executed from the User window by applying the same password requirements mentioned above.</p> <p></p> <p>Etendo Advanced Security verifies the changes, and if the new password does not fulfill the required conditions, Etendo shows an error message at the moment of registering the changes.</p> <p></p>","tags":["Advanced Security","Password","User Lockout","Autolock Password","Password History"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-advanced-security/#password-history","title":"Password History","text":"<p>When changing the password, one of the conditions to be fulfilled is that the new password cannot be the same as a previously used one. Etendo creates records of the previously used passwords so, if the user enters a previously used one, the system informs with an error message.</p> <p>This security feature can be configured only with System Administrator permissions. To do this, go to the System Info window, within the group field Password Security, and check the field called Enable Password History, according to your preference.</p> <p></p> <p>When the configuration of the feature Password Security is active and the user changes the password to a previously used one, Etendo will show an error message explaining the failure in saving the password.</p> <p></p> <p>The following example shows the same error message when changing the password from the Change Password process.</p> <p></p> <p>Info</p> <p>Etendo also allows entering the same password an indefinite number of times. In case the user wishes to maintain the same password, just keep the field Enable Password History from the System Info window unchecked.\u00a0</p>","tags":["Advanced Security","Password","User Lockout","Autolock Password","Password History"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-advanced-security/#user-lockout","title":"User Lockout","text":"<p>Another feature of this module is the blocking of the user after N number of unsuccessful login attempts. When entering a wrong password, Etendo shows an error message indicating the number of attempts left.</p> <p>In this example, the system shows that there is one attempt left.</p> <p></p> <p>Even if in the next attempt the user is not able to log in correctly, Etendo leaves another message indicating that the user has been blocked.</p> <p></p> <p>Info</p> <p>By default, Etendo configures five attempts to enter the right password.\u00a0</p> <p>To configure the number of unsuccessful login attempts, it is necessary to create a preference from the Preference window. In the Value field, add the desired number of login attempts, and also select the preference Maximum number of password attempts from the Property field.</p> <p></p> <p>Warning</p> <p>It is important to note that once the new password has been entered, if the user enters again a wrong password, the system will automatically block the login at the first try.\u00a0</p>","tags":["Advanced Security","Password","User Lockout","Autolock Password","Password History"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-advanced-security/#multiple-session-verification","title":"Multiple Session Verification","text":"<p>Another functional innovation that facilitates this module is the ability to allow or block to have multiple sessions opened from another browser.</p> <p>From the User window, within the More Information field, it is possible to configure the check that allows having several sessions active at the same time. The check is called Allow multiple sessions.</p> <p></p> <p>In case the user just wants one session allowed to be activated, uncheck the Allow multiple sessions checkbox from the User window and, only with System Administrator permissions, check the Enable single session verification field in the Session Security field from the System Info window.</p> <p></p> <p>This way, when trying to log in, the system verifies that an active session already exists informing the user.</p> <p></p> <p>Info</p> <p>By default, Etendo with this module installed, only allows to have one session active.\u00a0</p>","tags":["Advanced Security","Password","User Lockout","Autolock Password","Password History"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-advanced-security/#changing-password-after-login","title":"Changing Password after Login","text":"<p>After logging in for the first time with a user, Etendo asks to change the password. When trying to log in, the system mentions that the password has expired and that the user needs to change it to a new one to be able to log in.</p> <p></p> <p>Once the change has been made, the user is redirected to the main interface of the application.</p>","tags":["Advanced Security","Password","User Lockout","Autolock Password","Password History"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-advanced-security/#expiration-time-autolock-password","title":"Expiration Time (Autolock Password)","text":"<p>As part of the security management, Etendo also allows the management of the days for the password expiration time.</p> <p>From the Preferences window, it is possible to adjust the period of time required for the user to be obliged to change the password. Do it by adding the desired amount of days for the password expiration in the Value field.</p> <p></p> <p>Info</p> <p>Consider that by default, Etendo configures 30 days for the password expiration time.\u00a0</p> <p>After the number of days established for the password expiration, when trying to log in, a message is displayed explaining the need to be redirected to the login to change the password, i.e. the user is marked as password expired.</p> <p>Besides, Etendo notifies the user with a message announcing the amount of remaining days for the password expiration. In this example, the user has two days left.</p> <p></p> <p>Info</p> <p>By default, the system activates this message when there are seven days left to change the password.</p>","tags":["Advanced Security","Password","User Lockout","Autolock Password","Password History"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-rx/","title":"Etendo RX","text":"<p> Javapackage: <code>com.etendoerp.etendorx</code> </p>","tags":["oAuth Authentication","Provider","Bank information","API oAuth URL","Etendo RX"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-rx/#overview","title":"Overview","text":"<p>This section describes the oAuth Authentication module included in the Platform Extensions bundle.</p> <p>Info</p> <p>To be able to include this functionality, the Platform Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Platform Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Platform Extensions - Release notes.</p> <p>oAuth Authentication process facilitates the provider type configuration which allows users to securely authenticate and authorize access to their information using their preferred provider.</p> <p>oAuth facilitates an authentication method through a security protocol for obtaining a token needed to make API calls to access specific resorces on behalf of their owner. This authentication will allow Etendo to get the necessary information to access to third party applications. </p>","tags":["oAuth Authentication","Provider","Bank information","API oAuth URL","Etendo RX"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/etendo-rx/#oauth-provider","title":"oAuth Provider","text":"<p>In the oAuth Provider window in  <code>Application</code>&gt; <code>Etendo-RX</code>&gt; <code>oAuth-Provider</code>, set the preferred type provider by adding the user authentication URL in the API oAuth URL field. This URL can be found in the provider documentation API.  </p> <p>The other fields will be completed with data referring to the corresponding provider.</p> <p></p>","tags":["oAuth Authentication","Provider","Bank information","API oAuth URL","Etendo RX"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/","title":"Platform Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.platform.extensions</code></p> <p> Etendo Marketplace:  Platform Extensions Bundle</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#overview","title":"Overview","text":"<p>This bundle includes enhancements for Platform functionalities in Etendo.</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#translations","title":"Translations","text":"<ul> <li> Spanish: Platform Extensions Bundle ES</li> </ul>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#modules","title":"Modules","text":"","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#dependency-manager","title":"Dependency Manager","text":"<p> Javapackage: <code>com.etendoerp.dependencymanager</code></p> <p>The user can have access to all the available dependencies to add, configure them and check information about versions, validations, etc.</p> <p>Info</p> <p>For more information, visit the Dependency Manager developer guide.</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#docker-management","title":"Docker Management","text":"<p> Javapackage: <code>com.etendoerp.docker</code></p> <p>This module enables the use of Dockerized containers in Etendo Classic.</p> <p>Info</p> <p>For more information visit, Docker Management developer guide. </p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#dockerized-tomcat-service","title":"Dockerized Tomcat Service","text":"<p> Javapackage: <code>com.etendoerp.tomcat</code></p> <p>This module enables the Dockerization of Tomcat within Etendo Classic.</p> <p>Info</p> <p>For more information visit, Dockerized Tomcat Service developer guide.</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#dynamic-app","title":"Dynamic App","text":"<p> Javapackage: <code>com.etendoerp.dynamic.app</code></p> <p>Dynamic App allows you to create sub applications in Etendo Mobile.</p> <p>Info</p> <p>For more information, visit the Dynamic App developer guide</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#ean-128","title":"EAN 128","text":"<p> Javapackage: <code>com.smf.ean128</code></p> <p>EAN 128 allows to use bar code in your application</p> <p>Info</p> <p>For more information, visit the EAN 128 developer guide.</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#etendo-advanced-security","title":"Etendo Advanced Security","text":"<p> Javapackage: <code>com.etendoerp.advanced.security</code></p> <p> Javapackage: <code>com.etendoerp.advanced.security.template</code></p> <p>Etendo Advanced Security allows extending and enhancing some of the security features of the system.</p> <p>Info</p> <p>For more information, visit the Etendo Advanced Security user guide and read the Etendo Advanced Security developer guide.</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#etendo-async-processes","title":"Etendo Async Processes","text":"<p> Javapackage: <code>com.etendoerp.asyncprocess</code></p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#etendo-reactor","title":"Etendo Reactor","text":"<p> Javapackage: <code>com.etendoerp.reactor</code></p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#etendo-rx","title":"Etendo RX","text":"<p> Javapackage: <code>com.etendoerp.etendorx</code></p> <p>This module guarantees an authentication method which allows users to securely authenticate and authorize access to their information using their preferred provider.</p> <p>Info</p> <p>For more information, visit Etendo RX user guide.</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#javax-xml-soap-api","title":"Javax XML SOAP API","text":"<p> Javapackage: <code>org.openbravo.util.javax.xml.soap</code></p> <p>This module provides SOAP with Attachments API for Java (SAAJ), which was part of JDK until 10. Starting from JDK 11, it was removed, which makes this module required as a dependency for those modules making use of it in order to be able to compile in JDK11+.</p> <p>Info</p> <p>For more information, visit the Javax XML SOAP API developer guide.</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#number-to-word-english","title":"Number To Word (English)","text":"<p> Javapackage: <code>org.openbravo.numbertoword_en</code></p> <p> Javapackage: <code>org.openbravo.numbertoword</code></p> <p>It provides the infrastructure to convert a number into its equivalent in words. This functionality is especially useful while printing checks.</p> <p>Info</p> <p>For more information, visit Number To Word Converter user guide and the Number To Word Converter developer guide.</p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#print-document-web-service","title":"Print Document Web Service","text":"<p> Javapackage: <code>com.etendoerp.printdocumentws</code></p> <p> Javapackage: <code>com.smf.ws.printdocument</code></p> <p>It allows downloading a PDF from some transaction documents using a web service and returning a PDF with the order, invoice or delivery note. This is useful for companies that use third party applications and require to make printables accessible from those applications.</p> <p>Info</p> <p>For more information, visit the Print Document Web Service developer guide. </p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#report-cache-management","title":"Report Cache Management","text":"<p> Javapackage: <code>com.exos.erp.reportcachemanagement</code></p> <p>This module allows changing or updating a Jasper Report in an Etendo environment without stopping the server.</p> <p>Info</p> <p>For more information, visit Clear Report Cache user guide and the Clear Report Cache developer guide.  </p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/platform-extensions/overview/#webhook-events","title":"Webhook Events","text":"<p> Javapackage: <code>com.etendoerp.webhookevents</code></p> <p>Webhook events allow you to execute actions via a URL call, providing a powerful way to integrate with external services.</p> <p>Info</p> <p>For more information, visit the Webhook Events developer guide.  </p>","tags":["Etendo Platform","Extension Bundle","Docker Management","Advanced Security","Webhook Events"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/overview/","title":"Procurement Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.procurement.extensions</code></p> <p> Etendo Marketplace:  Procurement Extensions Bundle</p>","tags":["Procurement","Etendo Extensions","Purchase Invoice","Anti-duplication"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/overview/#overview","title":"Overview","text":"<p>This bundle includes enhancements for Procurement functionalities in Etendo.</p>","tags":["Procurement","Etendo Extensions","Purchase Invoice","Anti-duplication"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/overview/#translations","title":"Translations","text":"<ul> <li> Spanish: Procurement Extensions Bundle ES</li> </ul>","tags":["Procurement","Etendo Extensions","Purchase Invoice","Anti-duplication"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/overview/#modules","title":"Modules","text":"","tags":["Procurement","Etendo Extensions","Purchase Invoice","Anti-duplication"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/overview/#purchase-invoice-validations","title":"Purchase Invoice Validations","text":"<p> Javapackage: <code>com.etendoerp.purchase.invoice.validations</code></p> <p>This module allows users to prevent the duplication of purchase invoices within the system. This prevention will be carried out through a validation that will prohibit the saving of a duplicated purchase invoice.</p> <p>Info</p> <p>For more information, visit the Purchase Invoice Validations user guide.</p>","tags":["Procurement","Etendo Extensions","Purchase Invoice","Anti-duplication"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/purchase-invoice-validation/","title":"Purchase Invoice Validations","text":"<p> Javapackage: <code>com.etendoerp.purchase.invoice.validations</code> </p>","tags":["Purchase Invoices","Validation","Duplicate Prevention","Etendo Features"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/purchase-invoice-validation/#overview","title":"Overview","text":"<p>This module allows users to prevent the duplication of purchase invoices within the system, following some established rules. This prevention will be carried out through a validation that will prohibit the saving of a duplicated purchase invoice. The activation of this validation will be determined by a configurable preference.</p>","tags":["Purchase Invoices","Validation","Duplicate Prevention","Etendo Features"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/purchase-invoice-validation/#invoice-duplication-criteria","title":"Invoice duplication criteria","text":"<p>Etendo will consider a purchase invoice duplicated if another purchase invoice with the same key details already exists, namely:</p> <ul> <li>Business Partner</li> <li>Supplier Reference</li> <li>Invoice Date (Year)</li> </ul> <p></p> <p>Purchase invoices in the system should have a unique supplier reference number for each business partner. This means that if two purchase invoices, for the same business partner, have the same reference number, they are considered duplicates.</p>","tags":["Purchase Invoices","Validation","Duplicate Prevention","Etendo Features"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/purchase-invoice-validation/#preference","title":"Preference","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Application</code> &gt; <code>Preference</code></p> <p>A configurable system preference will be used to enable or disable the validation that prevents the duplication of purchase invoices. This allows the client to decide whether to use this functionality or not. The versatility of preferences allows modifying their visibility, determining whether the validation will be active for all users, roles, organizations, etc.</p> <p>From the Preference window, the user is able to create a new preference, choosing the corresponding property, which for this functionality will be Validate duplicated purchase invoices. In the Value field, it is necessary to add Y to enable the preference or N to disable it.</p> <p>Note</p> <p>By default, there is an existing preference with the Validate duplicated purchase invoices property and the value N, which means that it is disabled. In case the user wants to enable this preference, it is necessary to create a new one and mark the selected checkbox. For more information,  visit preference.</p> <p></p>","tags":["Purchase Invoices","Validation","Duplicate Prevention","Etendo Features"]},{"location":"user-guide/etendo-classic/optional-features/bundles/procurement-extensions/purchase-invoice-validation/#validation","title":"Validation","text":"<p>The validation will prevent the saving of a purchase invoice that is considered duplicated according to the established criteria. If the system detects that the invoice being saved is duplicated, the user will be informed through a message indicating the nature of the duplication as shown here:</p> <p></p>","tags":["Purchase Invoices","Validation","Duplicate Prevention","Etendo Features"]},{"location":"user-guide/etendo-classic/optional-features/bundles/production-extensions/overview/","title":"Production Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.production.extensions</code></p> <p> Etendo Marketplace:  Production Extensions Bundle</p>","tags":["Production Management","Extensions Bundle","Advanced Work Effort"]},{"location":"user-guide/etendo-classic/optional-features/bundles/production-extensions/overview/#overview","title":"Overview","text":"<p>This bundle includes enhancements for the Production Management functionalities in Etendo.</p>","tags":["Production Management","Extensions Bundle","Advanced Work Effort"]},{"location":"user-guide/etendo-classic/optional-features/bundles/production-extensions/overview/#translations","title":"Translations","text":"<ul> <li> Spanish: Production Extensions Bundle ES</li> </ul>","tags":["Production Management","Extensions Bundle","Advanced Work Effort"]},{"location":"user-guide/etendo-classic/optional-features/bundles/production-extensions/overview/#modules","title":"Modules","text":"","tags":["Production Management","Extensions Bundle","Advanced Work Effort"]},{"location":"user-guide/etendo-classic/optional-features/bundles/production-extensions/overview/#advanced-work-effort","title":"Advanced Work Effort","text":"<p> Javapackage: <code>com.etendoerp.advanced.work.effort</code></p> <p>This functionality is useful when the user needs to reactivate a work effort.</p> <p>Info</p> <p>For more information, visit the Advanced Work Effort user guide.</p>","tags":["Production Management","Extensions Bundle","Advanced Work Effort"]},{"location":"user-guide/etendo-classic/optional-features/bundles/sales-extensions/overview/","title":"Sales Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.sales.extensions</code></p> <p> Etendo Marketplace:  Sales Extensions Bundle</p>","tags":["Sales Management","Sales Extensions","Sales Quotation","Advanced Rappels"]},{"location":"user-guide/etendo-classic/optional-features/bundles/sales-extensions/overview/#overview","title":"Overview","text":"<p>This bundle includes enhancements for the Sales Management functionalities in Etendo Classic.</p>","tags":["Sales Management","Sales Extensions","Sales Quotation","Advanced Rappels"]},{"location":"user-guide/etendo-classic/optional-features/bundles/sales-extensions/overview/#translations","title":"Translations","text":"<ul> <li> Spanish: Sales Extensions Bundle ES</li> </ul>","tags":["Sales Management","Sales Extensions","Sales Quotation","Advanced Rappels"]},{"location":"user-guide/etendo-classic/optional-features/bundles/sales-extensions/overview/#modules","title":"Modules","text":"","tags":["Sales Management","Sales Extensions","Sales Quotation","Advanced Rappels"]},{"location":"user-guide/etendo-classic/optional-features/bundles/sales-extensions/overview/#sales-quotation","title":"Sales Quotation","text":"<p> Javapackage: <code>com.etendoerp.quotation</code></p> <p> Javapackage: <code>com.etendoerp.quotation.template</code></p> <p>Different functionalities are added to this window which allows the user to make changes and/or to adjust the information entered, to generate the sales quotations in order to create the corresponding orders from those quotations.</p> <p>Info</p> <p>For more information, visit the Sales Quotation user guide.</p>","tags":["Sales Management","Sales Extensions","Sales Quotation","Advanced Rappels"]},{"location":"user-guide/etendo-classic/optional-features/bundles/sales-extensions/overview/#advanced-rappels","title":"Advanced Rappels","text":"<p> Javapackage: <code>com.etendoerp.rappels.advanced</code></p> <p> Javapackage: <code>com.etendoerp.rappels.advanced.template</code></p> <p>This functionality allows the user to configure and grant rappels to business partners. Rappels are discounts based on the volume of consumption of the business partner in a given period of time.</p> <p>Info</p> <p>For more information, visit the Advanced Rappels user guide. </p> <p>Info</p> <p>For more information, visit the Print Document Web Service developer guide. </p>","tags":["Sales Management","Sales Extensions","Sales Quotation","Advanced Rappels"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/configuracion-de-impuestos-para-libro-de-facturas/","title":"Configuraci\u00f3n de Impuestos para Libro de Facturas","text":"","tags":["Configuraci\u00f3n de Impuestos","Localizaci\u00f3n en Espa\u00f1a"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/configuracion-de-impuestos-para-libro-de-facturas/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.module.invoicesregisterbook.estaxes</code></p>","tags":["Configuraci\u00f3n de Impuestos","Localizaci\u00f3n en Espa\u00f1a"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/configuracion-de-impuestos-para-libro-de-facturas/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta secci\u00f3n contiene informaci\u00f3n sobre la configuraci\u00f3n de impuestos de los libros de facturas que forman parte del bundle de Localizaci\u00f3n espa\u00f1ola de Etendo.</p>","tags":["Configuraci\u00f3n de Impuestos","Localizaci\u00f3n en Espa\u00f1a"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/configuracion-de-impuestos-para-libro-de-facturas/#instalacion","title":"Instalaci\u00f3n","text":"<p>El usuario debe instalar este m\u00f3dulo y posteriormente aplicar el conjunto de datos o \"Datos de Referencia\" en la ruta de aplicaci\u00f3n: Configuraci\u00f3n General / Organizaci\u00f3n/ Gesti\u00f3n del M\u00f3dulo de Empresa a la organizaci\u00f3n que corresponda.</p> <p></p> <p>Una vez instalado y aplicado este m\u00f3dulo, se puede comprobar la configuraci\u00f3n de los libros en la ruta de aplicaci\u00f3n: Gesti\u00f3n financiera/ Contabilidad/ Configuraci\u00f3n/ Configuraci\u00f3n de Libros de Facturas, tal y como se muestra en la siguiente imagen:</p> <p></p> <p>Es importante recalcar, que la configuraci\u00f3n que se incluye en este dataset, relaciona tipos/rangos de impuesto con el tipo de documento est\u00e1ndar de Etendo (AP Invoice, AR Invoice, etc) a incluir en el correspondiente libro (facturas recibidas o facturas emitidas).</p> <p>Si se crean nuevos tipos de documento de factura de compra o venta, tendr\u00e1 que incluirse de forma manual en la configuraci\u00f3n de cada libro, relacionados con los impuestos de compra o venta correspondientes.</p>","tags":["Configuraci\u00f3n de Impuestos","Localizaci\u00f3n en Espa\u00f1a"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/impuestos-para-espa%C3%B1a/","title":"Taxes:configuration for Spain (Impuestos para Espa\u00f1a)","text":""},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/impuestos-para-espa%C3%B1a/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.localization.spain.referencedata.taxes</code></p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/impuestos-para-espa%C3%B1a/#introduccion","title":"Introducci\u00f3n","text":"<p>El m\u00f3dulo de impuestos para Espa\u00f1a es un conjunto de datos que contiene:</p> <ul> <li>\"Categor\u00edas de Impuestos\" para IVA, IGIC e IPSI</li> <li>\"Categor\u00edas de Impuestos de Terceros\"</li> <li>\"Rangos de Impuestos\"</li> </ul> <p>configurados con el objetivo de que los usuarios de Etendo puedan gestionar:</p> <ul> <li>el IVA Nacional</li> <li>el IVA Intracomunitario</li> <li>el IVA de Importaci\u00f3n/Exportaci\u00f3n</li> <li>las retenciones de IRPF, \"Impuesto sobre la Renta de las Personas F\u00edsicas\" m\u00e1s com\u00fanmente utilizados en el Espa\u00f1a</li> <li>as\u00ed como el IGIC, \"Impuesto General Indirecto Canario\" de aplicaci\u00f3n en Canarias y el IPSI, \"Impuesto sobre la Producci\u00f3n, los Servicios y la Importaci\u00f3n\" de aplicaci\u00f3n en Ceuta y Melilla.</li> </ul> <p>Es importante tener en cuenta que en el caso del:</p> <ul> <li>IVA Nacional, los rangos de impuestos est\u00e1n asociados a Espa\u00f1a como pa\u00eds de origen y destino, Espa\u00f1a inlcuye \"Pen\u00ednsula y Baleares\".</li> <li>IVA Intracomunitario:<ul> <li>los rangos de impuestos de venta o entregas intracomunitarias exentas, est\u00e1n asociados a Espa\u00f1a como pa\u00eds de origen y pa\u00edses de la UE como pa\u00eds de destino.</li> <li>los rangos de impuestos de compra o adquisiciones intracomunitarias, est\u00e1n asociados a pa\u00edses de la UE como pa\u00eds de origen y Espa\u00f1a como pa\u00eds de destino.</li> </ul> </li> <li>IVA de Importaci\u00f3n/Exportaci\u00f3n:<ul> <li>los rangos de impuestos de venta o exportaciones exentas, est\u00e1n asociados a Espa\u00f1a como pa\u00eds de origen y terceros pa\u00edses como pa\u00eds de destino.</li> <li>los rangos de impuestos de importaciones, est\u00e1n asociados a terceros pa\u00edses como pa\u00eds de origen y Espa\u00f1a como pa\u00eds de destino.</li> </ul> </li> <li>IGIC, los rangos de impuestos est\u00e1n asociados a Canarias como regi\u00f3n de origen/destino seg\u00fan aplique.</li> <li>IPSI, los rangos de impuestos est\u00e1n asociados a Ceuta y Melilla como regi\u00f3n de origen/destino seg\u00fan aplique.</li> </ul> <p>Por tanto:</p> <ul> <li>Si su organizaci\u00f3n se localiza en Pen\u00ednsula y Baleares, sus productos/servicios tiene que estar asociados a las categor\u00edas de impuesto de IVA</li> <li>Si su organizaci\u00f3n se localiza en Canarias, Ceuta o Melilla, sus productos/servicios tienen que estar asociados a las categor\u00edas de impuesto de IGIC o IPSI</li> </ul> <p>Es importante recalcar que la configuraci\u00f3n de impuestos para Espa\u00f1a, no incluye impuestos de \"IVA Nacional\" de otros pa\u00edses miembros de la UE como \"IVA Nacional de Italia\" o \"Francia\", para las ventas que excediendo el l\u00edmite requerido deban liquidarse en el pa\u00eds de Europa que aplique.</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/impuestos-para-espa%C3%B1a/#instalacion-del-modulo","title":"Instalaci\u00f3n del M\u00f3dulo","text":"<p>Para la instalaci\u00f3n del m\u00f3dulo de Impuestos para Espa\u00f1a, el usuario debe seguir los pasos que se describen a continuaci\u00f3n en funci\u00f3n de la situaci\u00f3n de partida:</p> <ul> <li>Instalaci\u00f3n de la \u00faltima versi\u00f3n disponible de Etendo\u00a0</li> <li>o la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola.</li> </ul> <p>Info</p> <p>Para la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola, visite Marketplace.\u00a0</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/impuestos-para-espa%C3%B1a/#aplicacion-del-modulo","title":"Aplicaci\u00f3n del M\u00f3dulo","text":"<p>Es importante recalcar que una vez instalado el m\u00f3dulo de impuestos, los \"Datos de referencia\" que incluye deben aplicarse en la ruta de aplicaci\u00f3n \"Gesti\u00f3n del M\u00f3dulo de Empresa\".</p> <p>Los datos se pueden aplicar:</p> <ul> <li>a nivel de organizaci\u00f3n (*) si se quiere conseguir que todas las organizaciones del cliente utilicen el mismo conjunto de datos o tipos impositivos</li> <li>o bien se pueden aplicar a una organizaci\u00f3n en concreto o a varias.</li> </ul>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/impuestos-para-espa%C3%B1a/#impuestos-para-espana","title":"Impuestos para Espa\u00f1a","text":"<p>A continuaci\u00f3n, se encuentran los impuestos disponibles en el conjunto de datos de este m\u00f3dulo.</p> <ul> <li>Adquisiciones IVA 0%</li> <li>Adquisiciones IVA 0+RE 0+0%</li> <li>Adquisiciones IVA+RE 21+1.75%</li> <li>Adquisiciones IVA+RE 5+0.62%</li> <li>Adquisiciones intracomunitarias 5%</li> <li>Entregas IVA 0%</li> <li>Entregas IVA 0+RE 0+0%</li> <li>Entregas IVA 5%</li> <li>Entregas IVA+RE 21+1.75%</li> <li>Entregas IVA+RE 5+0.62% </li> <li>Servicios prestados 0%</li> <li>Prestaci\u00f3n servicios nacional 5%</li> <li>Servicios prestados nacional 5%</li> <li>Adquisiciones IGIC 15%</li> <li>Adquisiciones IGIC 7%</li> <li>Adquisiciones IGIC Impl\u00edcito 70% s15%</li> <li>Adquisiciones IGIC Impl\u00edcito 70% s7%</li> <li>Arrendamientos en Canarias 7%</li> <li>Arrendamientos en Canarias 7% -19%R (pagos)</li> <li>Arrendamientos en Canarias 7% -21%R (pagos)</li> <li>Entregas IGIC 15%</li> <li>Entregas IGIC 7%</li> <li>Prestaci\u00f3n servicios en Canarias 15%</li> <li>Prestaci\u00f3n servicios en Canarias 7%</li> <li>Prestaci\u00f3n servicios en Canarias 7% -15%R</li> <li>Prestaci\u00f3n servicios en Canarias 7% -19%R</li> <li>Prestaci\u00f3n servicios en Canarias 7% -21%R</li> <li>Servicios prestados en Canarias 15%</li> <li>Servicios prestados en Canarias 7%</li> <li>Adquisiciones IGIC 6.5%</li> <li>Adquisiciones IGIC Impl\u00edcito 70% s6.5%</li> <li>Arrendamientos en Canarias 6.5%</li> <li>Arrendamientos en Canarias 6.5% -19%R (pagos)</li> <li>Arrendamientos en Canarias 6.5% -21%R (pagos)</li> <li>Entregas IGIC 6.5%</li> <li>Prestaci\u00f3n servicios en Canarias 6.5%</li> <li>Prestaci\u00f3n servicios en Canarias 6.5% -15%R</li> <li>Prestaci\u00f3n servicios en Canarias 6.5% -19%R</li> <li>Prestaci\u00f3n servicios en Canarias 6.5% -21%R</li> <li>Servicios prestados en Canarias 6.5%</li> <li>Adquisiciones IGIC Impl\u00edcito 70% s13.5%</li> <li>Adquisiciones IGIC Impl\u00edcito 70% s3%</li> <li>Adquisiciones IGIC Impl\u00edcito 70% s9.5%</li> <li>Entregas IGIC Exentas</li> <li>Entregas IGIC Tipo 0%</li> <li>No declarable gastos de empleado</li> <li>Adquisiciones REBU Exentas</li> <li>Arrendamientos 0% - 19%R (cobros)</li> <li>Arrendamientos 0% - 19%R (pagos)</li> <li>Arrendamientos 21% -19%R (cobros)</li> <li>Arrendamientos 21% -19%R (pagos)</li> <li>Arrendamientos en Guip\u00fazcoa 21% - 19%R (pagos)</li> <li>Arrendamientos en Navarra 21% - 19%R (pagos)</li> <li>Compensaci\u00f3n REAGYP 10.5% -2%R (sobre BI) SR</li> <li>Compensaci\u00f3n REAGYP 12% -2%R (sobre BI) SR</li> <li>Compensaci\u00f3n REAGYP 12% -2%R (sobre bruto) SR</li> <li>Intereses 0% -19%R</li> <li>Prestaci\u00f3n servicios agencias publicidad 21% -24%R</li> <li>Prestaci\u00f3n servicios en Canarias 0%</li> <li>Prestaci\u00f3n servicios en Canarias 0% -7%R</li> <li>Prestaci\u00f3n servicios nacional 0% -24%R</li> <li>Prestaci\u00f3n servicios nacional 21% -24%R</li> <li>Prestaci\u00f3n servicios no residente 0% -19%R</li> <li>Servicios prestados nacional 21%-24%R</li> <li>Arrendamientos 0% -19,5%R (cobros)</li> <li>Arrendamientos 0% -19,5%R (pagos)</li> <li>Arrendamientos 21% -19,5%R (cobros)</li> <li>Arrendamientos 21% -19,5%R (pagos)</li> <li>Prestaci\u00f3n servicios Bienes Inversi\u00f3n 21% -15%R</li> <li>Prestaci\u00f3n servicios Bienes Inversi\u00f3n 21%-7%R</li> <li>Prestaci\u00f3n servicios en Canarias 0% -15%R</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 0%-7.5%R</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 4% -3,5%R</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 4% -7,5%R</li> <li>Prestaci\u00f3n servicios nacional 0% -7%R</li> <li>Prestaci\u00f3n servicios nacional 10% -15%R</li> <li>Prestaci\u00f3n servicios nacional 10% -7%R</li> <li>Prestaci\u00f3n servicios nacional 21% -15%R</li> <li>Prestaci\u00f3n servicios nacional 21% -7%R</li> <li>Prestaci\u00f3n servicios profesionales nacional 0% -15%R</li> <li>Servicios prestados nacional 21% -15%R</li> <li>Servicios prestados nacional 21% -7%R</li> <li>Entregas a Canarias, Ceuta y Melilla (%N=&gt;0%) ISP</li> <li>Entregas sin IVA por ISP</li> <li>Entregas sin IVA por ISP con RE</li> <li>Inversi\u00f3n Sujeto Pasivo Nacional 21%</li> <li>Arrendamientos 0% -20%R (cobros)</li> <li>Arrendamientos 0% -20%R (pagos)</li> <li>Arrendamientos 21% -20%R (cobros)</li> <li>Arrendamientos 21% -20%R (pagos)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 21% -24%R</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 21% -7%R</li> <li>Prestaci\u00f3n servicios divulgaci\u00f3n nacional 0% -15%R</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 0% -9.5%R</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 4% -9,5%R</li> <li>Prestaci\u00f3n servicios nacional 0% -19%R</li> <li>Prestaci\u00f3n servicios nacional 21% -19%R</li> <li>Servicios prestados nacional 21% -19%R</li> <li>Prestaci\u00f3n servicios nacional 21% -15%R RDL</li> <li>Exenciones relativas a reg\u00edmenes aduaneros y fiscales</li> <li>No declarable devoluciones de cliente</li> <li>Adquisiciones IVA 10%</li> <li>Adquisiciones IVA 10% -2%R</li> <li>Adquisiciones IVA 21%</li> <li>Adquisiciones IVA 4% -2%R</li> <li>Adquisiciones IVA+RE 10+1.4% </li> <li>Adquisiciones IVA+RE 21+5.2%</li> <li>Adquisiciones Intracomunitarias 21% ISP</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 10%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 21%</li> <li>Adquisiciones bienes inversi\u00f3n 10%</li> <li>Adquisiciones intracomunitarias 10%</li> <li>Adquisiciones intracomunitarias 21%</li> <li>Adquisiciones intracomunitarias Bienes Inversi\u00f3n 21%</li> <li>Adquisiciones intracomunitarias exentas</li> <li>Adquisici\u00f3n B.Inmuebles 10%</li> <li>Adquisici\u00f3n B.Inmuebles 21%</li> <li>Adquisici\u00f3n Bienes Inversi\u00f3n 21%</li> <li>Adquisici\u00f3n Bienes Inversi\u00f3n 21% -1%R</li> <li>Arrendamiento 21% (cobros)</li> <li>Arrendamiento 21% (pagos)</li> <li>Arrendamientos 0% -21%R (cobros)</li> <li>Arrendamientos 0% -21%R (pagos)</li> <li>Arrendamientos 21% -21%R (cobros)</li> <li>Arrendamientos 21% -21%R (pagos)</li> <li>Arrendamientos 21% -24%R (pagos). No Residentes</li> <li>Arrendamientos en Guip\u00fazcoa 21%-10%R (pagos)</li> <li>Arrendamientos en Navarra 21% -20%R (pagos)</li> <li>Entregas Bienes Inversi\u00f3n 21%</li> <li>Entregas IVA 10%</li> <li>Entregas IVA 10% Revendedores</li> <li>Entregas IVA 21%</li> <li>Entregas IVA 21% ISP</li> <li>Entregas IVA 21% Revendedores</li> <li>Entregas IVA+RE 10+1.4% </li> <li>Entregas IVA+RE 21+5.2% </li> <li>Entregas IVA+RE 21+5.2% ISP</li> <li>Entregas IVA+RE 21+5.2% IVA Normal ISP</li> <li>Importaciones 10%</li> <li>Importaciones 10%=0%</li> <li>Importaciones 21%</li> <li>Importaciones 21% ISP</li> <li>Importaciones 21%=0%</li> <li>Importaciones 21%=0% ISP</li> <li>Importaciones Bienes Inversi\u00f3n 21%</li> <li>Importaciones Bienes Inversi\u00f3n 21%=0%</li> <li>Inversi\u00f3n Sujeto Pasivo UE 10%</li> <li>Inversi\u00f3n Sujeto Pasivo UE 21%</li> <li>Inversi\u00f3n Sujeto Pasivo UE exento</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 10%</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 21%</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 21% -24.75%R</li> <li>Inversi\u00f3n Sujeto Pasivo no UE exento</li> <li>Prestaci\u00f3n servicios nacional 0% -21%R</li> <li>Prestaci\u00f3n servicios nacional 0% -9%R</li> <li>Prestaci\u00f3n servicios nacional 10% </li> <li>Prestaci\u00f3n servicios nacional 10% -9%R</li> <li>Prestaci\u00f3n servicios nacional 21% </li> <li>Prestaci\u00f3n servicios nacional 21% -1%R</li> <li>Prestaci\u00f3n servicios nacional 21% -21%R</li> <li>Prestaci\u00f3n servicios nacional 21% -9%R</li> <li>Prestaci\u00f3n servicios nacional 4% - 9%R</li> <li>Servicios prestados nacional 10%</li> <li>Servicios prestados nacional 21%</li> <li>Servicios prestados nacional 21% -21%R</li> <li>Servicios prestados nacional 21% -9%R</li> <li>Transmisi\u00f3n B.Inmuebles 10%</li> <li>Transmisi\u00f3n B.Inmuebles 21%</li> <li>Adquisiciones IGIC 0%</li> <li>Adquisiciones IGIC 13.5%</li> <li>Adquisiciones IGIC 3%</li> <li>Adquisiciones IGIC 9.5%</li> <li>Adquisiciones IPSI 10%</li> <li>Adquisiciones IPSI 4%</li> <li>Entregas IGIC 13.5%</li> <li>Entregas IGIC 3%</li> <li>Entregas IGIC 9.5%</li> <li>Entregas IPSI 10%</li> <li>Entregas IPSI 4%</li> <li>Prestaci\u00f3n servicios en Canarias 13.5%</li> <li>Prestaci\u00f3n servicios en Canarias 3%</li> <li>Prestaci\u00f3n servicios en Canarias 3% -21%R</li> <li>Prestaci\u00f3n servicios en Canarias 9.5%</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 0%</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 10%</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 4%</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 4% -10,5%R</li> <li>Prestaci\u00f3n servicios en Ceuta/Melilla 4% -4,5%R</li> <li>Prestaci\u00f3n servicios exenta por suplido</li> <li>Servicios prestados en Canarias 13.5%</li> <li>Servicios prestados en Canarias 3%</li> <li>Servicios prestados en Canarias 9.5%</li> <li>Servicios prestados en Ceuta/Melilla 10%</li> <li>Servicios prestados en Ceuta/Melilla 4%</li> <li>Arrendamientos 18% -21%R (cobros)</li> <li>Arrendamientos 18% -21%R (pagos)</li> <li>Adquisiciones IVA 18%</li> <li>Adquisiciones IVA 8%</li> <li>Adquisiciones IVA+RE 18+4%</li> <li>Adquisiciones IVA+RE 8+1% </li> <li>Adquisiciones a Canarias,Ceuta y Melilla 18%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 8%</li> <li>Adquisiciones intracomunitarias 18%</li> <li>Adquisiciones intracomunitarias 8%</li> <li>Adquisiciones intracomunitarias Bienes Inversi\u00f3n 18%</li> <li>Adquisici\u00f3n B.Inmuebles 18%</li> <li>Adquisici\u00f3n B.Inmuebles 8%</li> <li>Adquisici\u00f3n Bienes Inversi\u00f3n 18%</li> <li>Arrendamiento 18% (cobros)</li> <li>Arrendamiento 18% (pagos)</li> <li>Arrendamientos 18% -19%R (cobros)</li> <li>Arrendamientos 18% -19%R (pagos)</li> <li>Entregas Bienes Inversi\u00f3n 18%</li> <li>Entregas IVA 18%</li> <li>Entregas IVA 8%</li> <li>Entregas IVA+RE 18+4% </li> <li>Entregas IVA+RE 8+1% </li> <li>Entregas intracomunitarias Bienes Inversi\u00f3n (%N=&gt;0%)</li> <li>Exportaciones Bienes Inversi\u00f3n (%N=&gt;0%)</li> <li>Importaciones 18%</li> <li>Importaciones 18%=0%</li> <li>Importaciones 8%</li> <li>Importaciones 8%=0%</li> <li>Importaciones Bienes Inversi\u00f3n 18%</li> <li>Importaciones Bienes Inversi\u00f3n 18%=0%</li> <li>Inversi\u00f3n Sujeto Pasivo UE 18%</li> <li>Inversi\u00f3n Sujeto Pasivo UE 8%</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 18%</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 8%</li> <li>Prestaci\u00f3n servicios nacional 18% </li> <li>Prestaci\u00f3n servicios nacional 18% -1%R</li> <li>Prestaci\u00f3n servicios nacional 18% -15%R</li> <li>Prestaci\u00f3n servicios nacional 18% -7%R</li> <li>Prestaci\u00f3n servicios nacional 8% </li> <li>Servicios prestados nacional 18%</li> <li>Servicios prestados nacional 18% -15%R</li> <li>Servicios prestados nacional 18% -7%R</li> <li>Servicios prestados nacional 8%</li> <li>Transmisi\u00f3n B.Inmuebles 18%</li> <li>Transmisi\u00f3n B.Inmuebles 8%</li> <li>Arrendamientos 16% -19%R (cobros)</li> <li>Arrendamientos 16% -19%R (pagos)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 16%</li> <li>Prestaci\u00f3n servicios en Canarias 5%</li> <li>Adquisiciones intracomunitarias 7%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 16%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 4%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 7%</li> <li>Adquisiciones interiores exentas (art 22)</li> <li>Adquisiciones no sujetas</li> <li>Adquisici\u00f3n B.Inmuebles 16%</li> <li>Adquisici\u00f3n B.Inmuebles 7%</li> <li>Arrendamiento 16% (cobros)</li> <li>Arrendamiento 16% (pagos)</li> <li>Arrendamientos 16% -18%R (cobros)</li> <li>Arrendamientos 16% -18%R (pagos)</li> <li>Entregas a Canarias,Ceuta y Melilla (%N=&gt;0%)</li> <li>Entregas a Canarias,Ceuta y Melilla (%R=&gt;0%)</li> <li>Entregas a Canarias,Ceuta y Melilla (%SR=&gt;0%)</li> <li>Entregas no sujetas con dcho deducci\u00f3n</li> <li>Importaciones 16%</li> <li>Importaciones 16%=0%</li> <li>Importaciones 4%</li> <li>Importaciones 4%=0%</li> <li>Importaciones 7%</li> <li>Importaciones 7%=0%</li> <li>Importaciones exentas</li> <li>Inversi\u00f3n Sujeto Pasivo UE 16%</li> <li>Inversi\u00f3n Sujeto Pasivo UE 7%</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 7% </li> <li>Prestaci\u00f3n servicios interiores exentos (art 20)</li> <li>Prestaci\u00f3n servicios interiores exentos (art 22)</li> <li>Prestaci\u00f3n servicios nacional 16% </li> <li>Prestaci\u00f3n servicios nacional 16% -15%R</li> <li>Prestaci\u00f3n servicios nacional 16% -7%R</li> <li>Prestaci\u00f3n servicios nacional 4%</li> <li>Prestaci\u00f3n servicios nacional 7%</li> <li>Servicios prestados UE (%N=&gt;0%)</li> <li>Servicios prestados UE (%R=&gt;0%)</li> <li>Servicios prestados exentos sin derecho a deducci\u00f3n</li> <li>Servicios prestados internacional (%N=&gt;0%)</li> <li>Servicios prestados internacional (%R=&gt;0%)</li> <li>Servicios prestados nacional 16%</li> <li>Servicios prestados nacional 16% -15%R</li> <li>Servicios prestados nacional 16% -7%R</li> <li>Servicios prestados nacional 4%</li> <li>Servicios prestados nacional 7%</li> <li>Servicios prestados no sujetos con dcho deducci\u00f3n</li> <li>Transmisi\u00f3n B.Inmuebles 16%</li> <li>Transmisi\u00f3n B.Inmuebles 7%</li> <li>Adquisiciones IVA 16%</li> <li>Adquisiciones IVA 4%</li> <li>Adquisiciones IVA 7% </li> <li>Adquisiciones IVA+RE 16+4%</li> <li>Adquisiciones IVA+RE 4+0,5% </li> <li>Adquisiciones IVA+RE 7+1% </li> <li>Adquisiciones interiores exentas (art 20)</li> <li>Adquisiciones intracomunitarias 16%</li> <li>Adquisiciones intracomunitarias 4%</li> <li>Entregas Exentas</li> <li>Entregas IVA 16%</li> <li>Entregas IVA 4%</li> <li>Entregas IVA 4% Revendedores</li> <li>Entregas IVA 7% </li> <li>Entregas IVA+RE 16+4% </li> <li>Entregas IVA+RE 4+0,5% </li> <li>Entregas IVA+RE 7+1% </li> <li>Entregas intracomunitarias (%N=&gt;0%)</li> <li>Entregas intracomunitarias (%N=&gt;0%) ISP</li> <li>Entregas intracomunitarias (%R=&gt;0%)</li> <li>Entregas intracomunitarias (%SR=&gt;0%)</li> <li>Exportaciones (%N=&gt;0%)</li> <li>Exportaciones (%N=&gt;0%) ISP</li> <li>Exportaciones (%R=&gt;0%)</li> <li>Exportaciones (%SR=&gt;0%)</li> <li>Prestaci\u00f3n servicios no sujetas</li> <li>Servicios a Canarias, Ceuta y Melilla (%N=&gt;0%)</li> <li>Servicios a Canarias, Ceuta y Melilla (%R=&gt;0%)</li> <li>Servicios a Canarias, Ceuta y Melilla (%SR=&gt;0%)</li> <li>Servicios prestados exentos con derecho a deducci\u00f3n</li> </ul>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/","title":"Intrastat","text":"","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.module.intrastat</code>  Javapackage: <code>org.openbravo.module.intrastat.spain</code>  Javapackage: <code>org.openbravo.module.intrastat.es.es</code></p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta secci\u00f3n describe el m\u00f3dulo disponible de Etendo para la generaci\u00f3n y presentaci\u00f3n del informe oficial de Intrastat.</p> <p>El informe Intrastat se debe presentar a las autoridades mensualmente, dentro de los 12 d\u00edas posteriores al mes en el que se realizaron las transacciones.</p> <p>La declaraci\u00f3n de Intrastat se debe enviar telem\u00e1ticamente (a trav\u00e9s Internet) en un fichero v\u00e1lido con un determinado formato espec\u00edfico de cada pa\u00eds.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#descripcion-de-los-modulos","title":"Descripci\u00f3n de los M\u00f3dulos","text":"<p>A continuaci\u00f3n, se listan los diferentes m\u00f3dulos sobre los que se desarrolla la funcionalidad de Intrastat:</p> <ul> <li>Intrastat. Este m\u00f3dulo proporciona la infraestructura necesaria que permite la configuraci\u00f3n, ejecuci\u00f3n y generaci\u00f3n del fichero de Intrastat. Si s\u00f3lo instala este m\u00f3dulo, Etendo ser\u00e1 capaz de reconocer todas las transacciones que formar\u00e1n parte del fichero de Intrastat.</li> </ul> <p>\u00c9ste es un m\u00f3dulo del que dependen el resto de m\u00f3dulos de Intrastat, proporciona la funcionalidad gen\u00e9rica para los pa\u00edses de la Uni\u00f3n Europea. Sin embargo, tenga en cuenta que cada pa\u00eds de la UE tiene sus propias peculiaridades, y este m\u00f3dulo es incapaz de conocerlas y manejarlas \u00e9l s\u00f3lo. Por este motivo, es posible que necesite instalar adem\u00e1s el m\u00f3dulo de Intrastat concreto para su pa\u00eds, que ser\u00e1 el que proporcione las peculiaridades propias de su pa\u00eds.</p> <ul> <li>Intrastat for Spain (Intrastat para Espa\u00f1a). Este m\u00f3dulo complementa al m\u00f3dulo anterior y proporciona las caracter\u00edsticas espec\u00edficas para Espa\u00f1a, como por ejemplo:<ul> <li>Excluye las transacciones que tienen como origen o destino las Islas Canarias (como requiere la ley)</li> <li>Genera un fichero de Intrastat con el formato oficial listo para ser enviado mensualmente a las Autoridades.</li> </ul> </li> <li>Intrastat \u2013 Spanish Translation (Intrastat - Traducci\u00f3n al espa\u00f1ol). A\u00f1ade la traducci\u00f3n al espa\u00f1ol (Espa\u00f1a) del m\u00f3dulo Intrastat.</li> </ul> <p>Adem\u00e1s de los m\u00f3dulos anteriores, necesitar\u00e1 instalar las siguientes dependencias obligatorias:</p> <ul> <li>Incoterms. A\u00f1ade la lista de Incoterms oficiales (Condiciones de Entrega) a su instalaci\u00f3n de Etendo</li> <li>European Union Countries. A\u00f1ade la lista de pa\u00edses miembros de la Uni\u00f3n Europea a su instalaci\u00f3n de Etendo</li> <li>Provincias de Espa\u00f1a. A\u00f1ade la lista de provincias espa\u00f1olas a su instalaci\u00f3n de Etendo</li> </ul> <p>Todas estas dependencias se instalar\u00e1n autom\u00e1ticamente al instalar los m\u00f3dulos de Intrastat, por lo que no tendr\u00e1 que hacerse manualmente.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#instalacion-de-los-modulos","title":"Instalaci\u00f3n de los m\u00f3dulos","text":"<p>Para la instalaci\u00f3n del m\u00f3dulo \u201cModelo AEAT 349 - Declaraci\u00f3n recapitulativa de operaciones intracomunitarias\u201d, el usuario debe seguir los pasos que se describen a continuaci\u00f3n en funci\u00f3n de la situaci\u00f3n de partida:</p> <ul> <li>Instalaci\u00f3n de la \u00faltima versi\u00f3n disponible de Etendo</li> <li>o la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola.</li> </ul> <p>Info</p> <p>Para la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola, visite Marketplace.\u00a0</p> <p>Info</p> <p>Nota importante: Las transacciones realizadas con anterioridad a la instalaci\u00f3n del m\u00f3dulo \u201cIntrastat\u201d no se tendr\u00e1n en cuenta a la hora de generar las declaraciones de Intrastat.</p> <p>Tenga en cuenta que, como es l\u00f3gico, el sistema solo es capaz de reconocer las transacciones a incluir en el informe de Intrastat desde el momento que se instala y configura dicha funcionalidad en Etendo.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#aplicacion-de-los-datasets-conjuntos-de-datos","title":"Aplicaci\u00f3n de los Datasets (Conjuntos de datos)","text":"<p>Una vez instalado el m\u00f3dulo, se deber\u00e1n aplicar los datasets incluidos a su instalaci\u00f3n.</p> <p>Si est\u00e1 realizando la configuraci\u00f3n inicial de Etendo, puede utilizar el proceso \u201cCrear Organizaci\u00f3n\u201d para aplicar estos datos.</p> <p>Si, por el contrario, est\u00e1 instalando estos m\u00f3dulos en un sistema en productivo, deber\u00e1 aplicar los datasets desde la ventana Configuraci\u00f3n General | Organizaci\u00f3n | Gesti\u00f3n del m\u00f3dulo de Empresa\u00a0 |\u00a0 Gesti\u00f3n del m\u00f3dulo de Empresa:</p> <p></p> <p>Seleccione los datos de referencia \u201cIncoterms\u201d e \u201cIntrastat for Spain\u201d y apl\u00edquelos a su organizaci\u00f3n de nivel de agrupaci\u00f3n o a su entidad legal dependiendo de su \u00e1rbol de organizaciones.</p> <p>Si el proceso se ha ejecutado correctamente, el sistema deber\u00eda mostrar la siguiente informaci\u00f3n:</p> <p></p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#interfaz-de-usuario","title":"Interfaz de Usuario","text":"<p>El m\u00f3dulo \u201cIntrastat\u201d proporciona campos, ventanas y solapas necesarios para la configuraci\u00f3n y generaci\u00f3n de la declaraci\u00f3n de Intrastat.</p> <p>A continuaci\u00f3n se muestran unas capturas de pantalla de estos elementos junto a una breve descripci\u00f3n de cada uno de ellos.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#gestion-de-datos-maestros-producto-producto-intrastat","title":"Gesti\u00f3n de Datos Maestros | Producto\u00a0 |\u00a0 Producto\u00a0 &gt;&gt;\u00a0 Intrastat","text":"<p>Las transacciones entre pa\u00edses de la UE que incluyan productos de tipo Art\u00edculo se deben registrar en la declaraci\u00f3n de Intrastat. Cada uno de los productos tiene asociado un c\u00f3digo de mercanc\u00eda obligatorio y una masa neta en Kg (por unidad de facturaci\u00f3n). Opcionalmente, y siempre dependiendo del producto, se puede configurar una unidad de medida suplementaria junto a su correspondiente conversi\u00f3n.</p> <p>En esta solapa, el usuario debe configurar los datos particulares de cada producto.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#gestion-de-datos-maestros-terceros-terceros-cliente-envios-de-intrastat-y-gestion-de-datos-maestros-terceros-terceros-proveedoracreedor-adquisiciones-de-intrastat","title":"Gesti\u00f3n de Datos Maestros | Terceros\u00a0 |\u00a0 Terceros\u00a0 &gt;&gt;\u00a0 Cliente\u00a0 &gt;&gt;\u00a0 Env\u00edos de Intrastat y Gesti\u00f3n de Datos Maestros | Terceros\u00a0 | Terceros\u00a0 &gt;&gt;\u00a0 Proveedor/Acreedor\u00a0 &gt;&gt;\u00a0 Adquisiciones de Intrastat","text":"<p>Cada tercero con el que trabaje, ya sea cliente o proveedor, tendr\u00e1 su propia configuraci\u00f3n para Intrastat por defecto. Por ejemplo, es posible que su proveedor siempre le env\u00ede la mercanc\u00eda mediante un medio de transporte determinado.</p> <p>Desde esta solapa el usuario tiene la oportunidad de configurar esos valores por defecto de cada tercero. El sistema siempre recuperar\u00e1 la informaci\u00f3n configurada aqu\u00ed y la utilizar\u00e1 para generar la declaraci\u00f3n de Intrastat.</p> <p>Sin embargo, es posible que en alguna transacci\u00f3n en particular, la modalidad de transporte var\u00ede de la que tiene configurada por defecto en esta ventana. Si \u00e9ste es el caso, el usuario siempre tiene la oportunidad de cambiar manualmente esta informaci\u00f3n a nivel de transacci\u00f3n o de declaraci\u00f3n de Intrastat como veremos m\u00e1s adelante en este manual.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#gestion-de-datos-maestros-terceros-terceros-cliente-y-gestion-de-datos-maestros-terceros-terceros-proveedoracreedor-campo-incoterms","title":"Gesti\u00f3n de Datos Maestros | Terceros\u00a0 |\u00a0 Terceros\u00a0 &gt;&gt;\u00a0 Cliente y Gesti\u00f3n de Datos Maestros | Terceros\u00a0 |\u00a0 Terceros\u00a0 &gt;&gt;\u00a0 Proveedor/Acreedor, campo Incoterms","text":"<p>El campo Incoterms permite definir el Incoterm (Condici\u00f3n de Entrega) por defecto para el tercero. Es importante tener en cuenta que se pueden configurar dos Incoterms para el tercero, uno cuando el tercero es cliente y otro cuando es proveedor.</p> <p>Info</p> <p>El campo \"Incoterms\" del Tercero, es un campo de Etendo que no se muestra por defecto, pero si se utiliza en los m\u00f3dulos de Intrastat. Recuerde mostrarlo si lo va a utilizar.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#gestion-financiera-contabilidad-configuracion-tipo-de-documento-definicion-de-documento","title":"Gesti\u00f3n Financiera | Contabilidad | Configuraci\u00f3n | Tipo de documento\u00a0 |\u00a0 Definici\u00f3n de documento","text":"<p>Los campos Tipo de Transacci\u00f3n y Regim\u00e9n estad\u00edstico van asociados al tipo de documento (facturas). En esta ventana puede definir los valores por defecto que, al igual que suced\u00eda con los valores de Intrastat para Producto o Tercero, pueden ser sobrescritos para transacciones o declaraciones de Intrastat en concreto.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#configuracion-general-organizacion-organizacion-organizacion-campo-calendario-de-intrastat","title":"Configuraci\u00f3n General | Organizaci\u00f3n | Organizaci\u00f3n | Organizaci\u00f3n, campo Calendario de Intrastat","text":"<p>El campo Calendario de Intrastat define el calendario de declaraciones de Intrastat. En Espa\u00f1a, el Intrastat se debe presentar mensualmente, por lo que el calendario de Intrastat seleccionado debe tener doce periodos que coincidan con los dos meses naturales de un a\u00f1o. Si su calendario fiscal cumple esas condiciones, puede usarlo tambi\u00e9n como calendario de Intrastat sin necesidad de crear uno nuevo.</p> <p>En este nuevo campo, s\u00f3lo aparecer\u00e1n los calendarios que est\u00e9n marcados como \u201cCalendario de Intrastat\u201d en la configuraci\u00f3n del calendario:</p> <p></p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#configuracion-general-organizacion-organizacion-organizacion-intrastat","title":"Configuraci\u00f3n General | Organizaci\u00f3n | Organizaci\u00f3n\u00a0 |\u00a0 Organizaci\u00f3n\u00a0 &gt;&gt;\u00a0 Intrastat","text":"<p>En esta solapa se introduce la informaci\u00f3n de Intrastat relativa a la organizaci\u00f3n (s\u00f3lo entidades legales).</p> <p>Cada a\u00f1o se debe introducir un registro en esta solapa para configurar los siguientes datos:</p> <ul> <li>Formato de Fichero: Cada pa\u00eds tiene su propio formato de Intrastat. En este campo seleccionamos el formato de fichero concreto que queremos que cree el sistema. En el caso de Espa\u00f1a, el m\u00f3dulo \u201cIntrastat for Spain\u201d es el encargado de generar el fichero con formato para Espa\u00f1a.</li> <li>Ejercicio: A\u00f1o de la declaraci\u00f3n</li> <li>Declaraci\u00f3n de Intrastat: Adquisiciones o Entregas</li> <li>Importe L\u00edmite: Cada a\u00f1o las Autoridades suelen modificar el importe que delimita la obligatoriedad de presentar o no la declaraci\u00f3n de Intrastat. En este campo el usuario debe indicar el importe l\u00edmite de cada a\u00f1o.</li> <li>Importe Acumulado del a\u00f1o: Cada vez que se presente una declaraci\u00f3n mensual, el sistema ir\u00e1 actualizando autom\u00e1ticamente el valor de este campo con el importe acumulado. Si el a\u00f1o anterior se gener\u00f3 la declaraci\u00f3n de Intrastat fuera de Etendo, o desea empezar a generar la declaraci\u00f3n una vez empezado el a\u00f1o, puede configurar aqu\u00ed el importe que declar\u00f3 en su momento.</li> <li>Valores por Defecto (Incoterms, Tipo de transacci\u00f3n, Modalidad de transporte, R\u00e9gimen estad\u00edstico, Valor estad\u00edstico): Como ha visto anteriormente, en las ventanas de Tercero o Tipo de documento se pueden definir todos estos valores. Sin embargo, definir la misma Modalidad de transporte (por ejemplo) para todos los terceros puede resultar un poco molesto. As\u00ed que, si lo desea, puede definir la configuraci\u00f3n global de estos valores en esta solapa. De esta forma, si por ejemplo no especifica nada en la Modalidad de Transporte de un Tercero, el sistema utilizar\u00e1 por defecto la configurada en esta solapa. Podr\u00e1 modificar manualmente esta configuraci\u00f3n siempre que lo desee en cada transacci\u00f3n o declaraci\u00f3n de Intrastat.</li> </ul>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#solapa-intrastat-en-linea-de-pedido-albaran-y-factura-compra-o-venta","title":"Solapa Intrastat en L\u00ednea de Pedido, Albar\u00e1n y Factura (compra o venta)","text":"<p>A nivel de l\u00ednea de Pedido, Albar\u00e1n y Factura, tanto de compra como de venta, se ha creado una nueva solapa que contiene toda la informaci\u00f3n de Intrastat relativa a esa transacci\u00f3n en concreto.</p> <p>Cada vez que se introduce una nueva l\u00ednea de pedido, albar\u00e1n o factura, el sistema comprueba si esa transacci\u00f3n se debe incluir en el informe de Intrastat (por ejemplo, si se trata de una compra/venta intracomunitaria) y, en caso afirmativo, genera un registro en la pesta\u00f1a Intrastat con toda la informaci\u00f3n de Intrastat que se ha configurado por defecto. El usuario puede modificar manualmente cada uno de esos campos antes de completar el documento.</p> <p>La raz\u00f3n por la que se ha a\u00f1adido una solapa de Intrastat tanto en las l\u00edneas de pedido como de albar\u00e1n (teniendo en cuenta que estos documentos no se incluyen en el Intrastat, sino s\u00f3lo las facturas contabilizadas) es que las facturas en Etendo pueden crearse desde los pedidos y/o los albaranes. Es por ello que si la informaci\u00f3n relativa a Intrastat se introduce en la l\u00ednea de un pedido, esa informaci\u00f3n se trasladar\u00e1 a la correspondiente l\u00ednea de factura si la factura se genera copiando del pedido.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#intrastat-herramientas-de-analisis-generador-de-intrastat","title":"Intrastat | Herramientas de an\u00e1lisis | Generador de Intrastat","text":"<p>Una vez finalizado el mes, se debe generar la declaraci\u00f3n de Intrastat de ese mes. Desde esta ventana podremos hacerlo. Para ello seleccionamos la Organizaci\u00f3n (s\u00f3lo entidades legales), Ejercicio, Periodo, Adquisiciones o Entregas y Tipo de declaraci\u00f3n (Normal o Anulativa).</p> <p>El sistema generar\u00e1 autom\u00e1ticamente una cabecera de declaraci\u00f3n junto a sus l\u00edneas, accesible desde Intrastat | Herramientas de an\u00e1lisis | Declaraci\u00f3n de Intrastat.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#intrastat-herramientas-de-analisis-declaracion-de-intrastat","title":"Intrastat | Herramientas de an\u00e1lisis | Declaraci\u00f3n de Intrastat","text":"<p>Al generar una declaraci\u00f3n de Intrastat, el sistema crea autom\u00e1ticamente una nueva cabecera (s\u00f3lo lectura) junto con sus l\u00edneas. En este momento la declaraci\u00f3n se encuentra en estado borrador, y se permiten modificaciones en las l\u00edneas de la declaraci\u00f3n. Veamos un ejemplo de la informaci\u00f3n que contiene una l\u00ednea:</p> <p></p> <p>El sistema ha recuperado toda la informaci\u00f3n de Intrastat desde las l\u00edneas de factura. Si ha configurado toda la informaci\u00f3n relativa al Tercero, Producto y tipo de documento, Etendo Classic habr\u00e1 rellenado autom\u00e1ticamente todos estos valores en las l\u00edneas de la declaraci\u00f3n.</p> <p>Si por el contrario le falta alg\u00fan dato, si desea modificar alguno, o incluso si quiere a\u00f1adir manualmente nuevas l\u00edneas o excluir alguna de ellas, puede hacerlo mientras la declaraci\u00f3n est\u00e9 en estado borrador.</p> <p>En la solapa de l\u00edneas de declaraci\u00f3n de Intrastat, al margen de los campos relativos a la informaci\u00f3n de Intrastat, aparecen dos campos de especial importancia para el usuario: el campo \u201cIncluir\u201d y el campo \u201cModificado Manualmente\u201d:</p> <ul> <li>Incluir: Por defecto, todas las l\u00edneas de la declaraci\u00f3n de Intrastat se incluir\u00e1n a la hora de generar el fichero de Intrastat. Sin embargo, si desmarca esta casilla, la l\u00ednea en cuesti\u00f3n se excluir\u00e1 de la declaraci\u00f3n.</li> <li>Modificado Manualmente: Cada vez que se modifique un dato de una l\u00ednea de declaraci\u00f3n de Intrastat o a\u00f1ada manualmente una nueva l\u00ednea, el sistema marcar\u00e1 autom\u00e1ticamente esta casilla.</li> </ul> <p>Mientras la declaraci\u00f3n est\u00e1 en estado borrador, la declaraci\u00f3n de Intrastat se puede relanzar todo lo necesario. Cuando se haga, el sistema volver\u00e1 a recalcular de nuevo la declaraci\u00f3n, conservando intactas todas las l\u00edneas que tengan marcado el campo de Modificado Manualmente.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#manual-de-instrucciones","title":"Manual de Instrucciones","text":"<p>Una vez que conoce las ventanas m\u00e1s importantes que proporcionan la funcionalidad de Intrastat en Etendo, es hora de conocer el flujo de trabajo para usar correctamente dicha funcionalidad.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#configuracion-general","title":"Configuraci\u00f3n General","text":"<p>Toda la l\u00f3gica detr\u00e1s de la funcionalidad de Intrastat en Etendo se basa en la ubicaci\u00f3n f\u00edsica de su organizaci\u00f3n y de sus terceros. Por ese motivo es fundamental que especifique la direcci\u00f3n completa de cada uno de ellos. Si la direcci\u00f3n es de Espa\u00f1a, deber\u00e1 indicar tambi\u00e9n la Provincia en la que se ubica.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#configuracion-de-intrastat","title":"Configuraci\u00f3n de Intrastat","text":"<p>Como habr\u00e1 podido observar, la configuraci\u00f3n para Intrastat se realiza principalmente en los siguientes lugares:</p> <ul> <li>Configuraci\u00f3n General | Organizaci\u00f3n | Organizaci\u00f3n. Para cada entidad legal, deber\u00e1 seleccionar un calendario v\u00e1lido para Intrastat (que tenga ejercicios con 12 periodos que coincidan con los meses naturales). Recuerde marcar la casilla \u201cCalendario de Intrastat\u201d cuando configure su calendario (Gesti\u00f3n Financiera | Contabilidad | Configuraci\u00f3n | Calendario anual y periodos) para que \u00e9ste aparezca en el campo de Calendario de Intrastat de la ventana de Organizaci\u00f3n.</li> <li>Configuraci\u00f3n General | Organizaci\u00f3n | Organizaci\u00f3n\u00a0 |\u00a0 Organizaci\u00f3n\u00a0 &gt;&gt;\u00a0 Intrastat. Recuerde que en esta solapa se configuran:</li> <li>Los importes y tipos de declaraciones que desea generar para cada entidad legal</li> <li>Los valores por defecto globales que se utilizar\u00e1n en caso de que no se definan concretamente donde corresponda (Tercero o Tipo de documento)</li> </ul> <p>El sistema necesita saber cu\u00e1nto se declar\u00f3 el a\u00f1o anterior. Para proporcionar esta informaci\u00f3n, se debe crear un nuevo registro en esta solapa. Solamente a modo de ejemplo, en 2021 para la organizaci\u00f3n Espa\u00f1a, declaramos un Intrastat de adquisiciones por un importe de 0.00 Euros:</p> <p></p> <p>Info</p> <p>Nota: Si su calendario de Intrastat no tiene creado el a\u00f1o 2021, deber\u00e1 crearlo (junto a sus respectivos periodos) antes de poder introducir este registro.</p> <p>Ahora repita ese proceso para el a\u00f1o presente. Si ya ha empezado el a\u00f1o y se han realizado transacciones intracomunitarias de bienes (presentando o no la declaraci\u00f3n de Intrastat), deber\u00e1 indicar el importe acumulado de este a\u00f1o. De esta forma, el sistema podr\u00e1 saber si debe presentar la declaraci\u00f3n de Intrastat o no a lo largo del presente a\u00f1o.</p> <p>Tambi\u00e9n existe la opci\u00f3n de configurar los valores globales por defecto, lo que es especialmente \u00fatil si, por ejemplo, casi todos sus Terceros comparten el mismo Incoterm. Posteriormente, a nivel de tercero, se podr\u00e1 especificar la configuraci\u00f3n concreta para cada uno de ellos.</p> <p></p> <ul> <li>Gesti\u00f3n de Datos Maestros | Producto\u00a0 |\u00a0 Producto\u00a0 &gt;&gt;\u00a0 Intrastat Como ya vi\u00f3 en el apartado Interface de Usuario, debe definir la informaci\u00f3n de Intrastat para los productos de tipo Art\u00edculo.</li> <li>Gesti\u00f3n de Datos Maestros | Terceros\u00a0 |\u00a0 Terceros\u00a0 &gt;&gt;\u00a0 Cliente y Gesti\u00f3n de Datos Maestros | Terceros\u00a0 |\u00a0 Terceros\u00a0 &gt;&gt;\u00a0 Proveedor/Acreedor, campo Incoterms. Como ya se vi\u00f3 en el apartado Interfaz de Usuario, se puede definir el Incoterm de cada Tercero.</li> <li>Gesti\u00f3n de Datos Maestros | Terceros\u00a0 |\u00a0 Terceros\u00a0 &gt;&gt;\u00a0 Cliente\u00a0 &gt;&gt;\u00a0 Env\u00edos de Intrastat y Gesti\u00f3n de Datos Maestros | Terceros\u00a0 |\u00a0 Terceros\u00a0 &gt;&gt;\u00a0 Proveedor/Acreedor\u00a0 &gt;&gt;\u00a0 Adquisiciones de Intrastat . Como ya se vi\u00f3 en el apartado Interfaz de Usuario, se puede definir la informaci\u00f3n de Intrastat de cada Tercero.</li> <li>Gesti\u00f3n Financiera | Contabilidad | Configuraci\u00f3n | Tipo de documento\u00a0 |\u00a0 Definici\u00f3n de documento. Como ya se vi\u00f3 en el apartado Interfaz de Usuario, puede definir el Tipo de Transacci\u00f3n y R\u00e9gimen estad\u00edstico para sus documentos de tipo Factura.</li> </ul>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#creacion-de-transacciones","title":"Creaci\u00f3n de transacciones","text":"<p>Una vez que nuestros datos est\u00e1n perfectamente configurados, es el momento de empezar a crear las transacciones que posteriormente se incluir\u00e1n en la declaraci\u00f3n de Intrastat.</p> <p>Como ya se ha visto en apartados anteriores, su instalaci\u00f3n cuenta con una nueva solapa, llamada \u201cIntrastat\u201d, a nivel de l\u00ednea de pedido, albar\u00e1n y factura que contiene toda la informaci\u00f3n relativa al Intrastat. Si se han introducido todos los datos de configuraci\u00f3n necesarios anteriormente, se utilizar\u00e1 esta informaci\u00f3n autom\u00e1ticamente para rellenar esa solapa. Si, por el contrario, no se ha configurado toda esta informaci\u00f3n, o desea modificar alg\u00fan dato en concreto, podr\u00e1 hacerlo de forma manual.</p> <p>Cada vez que se introduce una l\u00ednea de pedido, albar\u00e1n o factura, el sistema comprueba si se cumplen todas estas condiciones:</p> <ol> <li>La organizaci\u00f3n y el tercero del documento se encuentran en pa\u00edses distintos de la Uni\u00f3n Europea</li> <li>Todas las direcciones incluidas en la cabecera del documento, que est\u00e1n relacionadas con el tercero, est\u00e1n ubicadas en la UE. Si al menos una de las direcciones no pertenece a la UE, no se generar\u00e1 informaci\u00f3n de Intrastat</li> <li>El producto incluido en la l\u00ednea es un art\u00edculo</li> <li>Si se ha instalado el m\u00f3dulo de \u201cIntrastat for Spain\u201d, el sistema tambi\u00e9n comprobar\u00e1 que tercero y organizaci\u00f3n no se encuentren ubicados en las Islas Canarias, ya que en este caso las transacciones se deben excluir del Intrastat.</li> </ol> <p>Si todas esas condiciones se cumplen, cada vez que inserte una l\u00ednea de documento, el sistema crear\u00e1 autom\u00e1ticamente la informaci\u00f3n en la pesta\u00f1a de Intrastat.</p> <p>El sistema recupera los valores por defecto que haya configurado a nivel de tercero, producto, tipo de documento y organizaci\u00f3n (este \u00faltimo si no encuentra los valores correspondientes anteriormente). Pero recuerde que, independientemente de los valores configurados, el usuario tiene la libertad de modificarlos para cada l\u00ednea en concreto mientras el documento no se haya completado.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#creacion-de-transacciones-desde-otras-transacciones","title":"Creaci\u00f3n de transacciones desde otras transacciones","text":"<p>En Etendo existe la posibilidad de crear albaranes desde pedidos; en este caso, el sistema recuperar\u00e1 la informaci\u00f3n de Intrastat introducida a nivel de pedido y la copiar\u00e1 al albar\u00e1n.</p> <p>Imagine que ha creado un pedido y que ha cambiado el Incoterm por defecto. Cuando se cree un albar\u00e1n desde ese pedido, el Incoterm que se incluir\u00e1 en la l\u00ednea de Intrastat del albar\u00e1n ser\u00e1 el que se haya redefinido en el pedido, y no el que estuviera configurado en el sistema por defecto.</p> <p>Lo mismo sucede para las facturas. En Etendo se pueden crear facturas desde albaranes o pedidos. En este caso, el sistema siempre intentar\u00e1 recuperar la informaci\u00f3n de Intrastat del albar\u00e1n o del pedido. Si la factura se crea sin albar\u00e1n o pedido asociado, Etendo recuperar\u00e1 la configuraci\u00f3n del sistema para rellenar la solapa del Intrastat.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#generacion-de-declaraciones-de-intrastat","title":"Generaci\u00f3n de declaraciones de Intrastat","text":"<p>Una vez finalizado el mes natural, llega el momento de generar la declaraci\u00f3n de Intrastat. Para hacerlo debemos ir a la ventana Intrastat | Herramientas de an\u00e1lisis | Generador de Intrastat. Seleccionaremos la entidad legal, a\u00f1o, periodo y tipo de declaraci\u00f3n.</p> <p></p> <p>Actualmente, Etendo soporta dos tipos de declaraciones: Normales y Anulativas, estas \u00faltimas anulan las declaraciones normales procesadas en el periodo seleccionado y generan una nueva declaraci\u00f3n normal.</p> <p>Tenga en cuenta que un mismo periodo s\u00f3lo puede tener como m\u00e1ximo una declaraci\u00f3n normal para adquisiciones y otra para entregas.</p> <p>Mientras la declaraci\u00f3n normal para un periodo se encuentre en estado borrador, el usuario puede lanzar la generaci\u00f3n de la declaraci\u00f3n tantas veces como quiera. El sistema actualizar\u00e1 todas las l\u00edneas de la declaraci\u00f3n, conservando todos los cambios manuales realizados por el usuario.</p> <p>Como veremos m\u00e1s adelante, cuando se procese una declaraci\u00f3n ya no se podr\u00e1 realizar m\u00e1s cambios sobre ella. Sin embargo, el usuario siempre puede anular la declaraci\u00f3n procesada para volver a generar una nueva declaraci\u00f3n normal para ese periodo.</p> <p>Info</p> <p>Nota importante: Etendo recomienda cerrar el periodo contable antes de generar la declaraci\u00f3n de Intrastat.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#revision-modificacion-y-procesado-de-la-declaracion-de-intrastat","title":"Revisi\u00f3n, Modificaci\u00f3n y Procesado de la declaraci\u00f3n de Intrastat","text":"<p>Una vez generada la declaraci\u00f3n, podemos examinarla antes de procesarla. Para ello utilizaremos la ventana Intrastat | Herramientas de an\u00e1lisis | Declaraci\u00f3n de Intrastat. La cabecera de la declaraci\u00f3n se encuentra por defecto en estado borrador, con todos los campos de solo lectura.</p> <p>Si navegamos a las l\u00edneas, podemos comprobar los datos que se incluir\u00e1n en la declaraci\u00f3n. Mientras la declaraci\u00f3n est\u00e9 en borrador, podremos modificar datos de las l\u00edneas, incluir manualmente nuevas l\u00edneas (para transacciones al margen de Etendo), o excluir l\u00edneas (mediante el campo Incluir) que no queramos que aparezcan en el fichero de Intrastat.</p> <p>Cuando estemos seguros de que la declaraci\u00f3n es correcta, navegaremos a la cabecera y pulsaremos el bot\u00f3n \u201cProcesar Declaraci\u00f3n\u201d. Este proceso comprobar\u00e1 que todos los datos necesarios para generar el fichero de Intrastat est\u00e1n en el sistema y nos mostrar\u00e1 un error detallado en caso de que encuentre alg\u00fan fallo. Ejemplo:</p> <p></p> <p>Una vez procesada la declaraci\u00f3n, el campo \u201cImporte Acumulado del a\u00f1o\u201d a nivel de organizaci\u00f3n se actualizar\u00e1 autom\u00e1ticamente, sumando el importe de esta declaraci\u00f3n a lo acumulado en el a\u00f1o. Si posteriormente anula esta declaraci\u00f3n, el sistema restar\u00e1 el importe de la declaraci\u00f3n anulada al acumulado del a\u00f1o.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#generacion-del-fichero-de-intrastat","title":"Generaci\u00f3n del fichero de Intrastat","text":"<p>Al procesar la declaraci\u00f3n, aparece autom\u00e1ticamente el bot\u00f3n de \u201cGenerar fichero\u201d.</p> <p></p> <p>Cuando lo pulsemos, el sistema comprobar\u00e1 si estamos obligados a presentar la declaraci\u00f3n para este periodo o no. Para llevar a cabo esta operaci\u00f3n, el sistema comprueba el importe declarado el a\u00f1o anterior y el acumulado de este a\u00f1o, por ese motivo es muy importante que configure correctamente estos valores en la ventana Intrastat a nivel de Organizaci\u00f3n.</p> <p>Si durante el a\u00f1o anterior superamos el l\u00edmite de declaraci\u00f3n de Intrastat, o lo hemos superado a lo largo del presente a\u00f1o, Etendo nos generar\u00e1 el fichero de Intrastat con el formato apropiado para ser enviado telem\u00e1ticamente (a trav\u00e9s de Internet) a las Autoridades. Ejemplo:</p> <p>FR;31;FOB;11;3;;85182190;CN;1;115;162;15,37;15,37</p> <p>DE;28;CIF;11;1;0811;85182190;US;1;2459;1982;4589,46;4589,46</p> <p>IT;12;FOB;11;3;;02012030;;1;800;;987,00;890,45</p> <p>Info</p> <p>Si las l\u00edneas de la declaraci\u00f3n sobre la que vamos a generar el fichero son superiores a 1000, generar\u00e1 un fichero zip con tantos txt como sean necesarios, ya que cada archivo podr\u00e1 contener un m\u00e1ximo de 1000 l\u00edneas.</p> <p>Info</p> <p>Este fichero se puede importar en el enlace web de la AEAT - Cumplimentaci\u00f3n en L\u00ednea con Importaci\u00f3n de Fichero. Para m\u00e1s informaci\u00f3n, consulte este enlace.</p> <p>Info</p> <p>Es importante recalcar que superado el umbral de presentaci\u00f3n en caso de que en un periodo (mes) no se realicen transacciones de intercambio de bienes intracomunitarias, habr\u00e1 que presentar la correspondiente declaraci\u00f3n sin transacciones.\u00a0</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/intrastat/#finalizar-el-ano-copia-de-configuracion-al-siguiente-ano","title":"Finalizar el a\u00f1o. Copia de configuraci\u00f3n al siguiente a\u00f1o","text":"<p>Una vez que hemos generado todas las declaraciones del a\u00f1o, es momento de configurar el sistema para el pr\u00f3ximo a\u00f1o. Lo \u00fanico que debe hacer es ir a la configuraci\u00f3n del presente a\u00f1o en Configuraci\u00f3n General | Organizaci\u00f3n | Organizaci\u00f3n\u00a0 |\u00a0 Organizaci\u00f3n]\u00a0 &gt;&gt;\u00a0 Intrastat y presionar el bot\u00f3n \u201cCopiar al a\u00f1o siguiente\u201d. En la ventana emergente aparecer\u00e1 un campo num\u00e9rico para que introduzca el nuevo importe l\u00edmite del siguiente a\u00f1o.</p> <p></p> <p>El proceso comprobar\u00e1 que haya procesado todas las declaraciones del presente a\u00f1o y, en ese caso, crear\u00e1 un nuevo registro copiando toda la informaci\u00f3n de configuraci\u00f3n del presente a\u00f1o junto al nuevo importe l\u00edmite de declaraci\u00f3n de Intrastat.</p>","tags":["Intrastat","Localizacion Espa\u00f1ola","Declaracion de Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/","title":"Impuestos IVA de Caja","text":"","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#introduccion","title":"Introducci\u00f3n","text":"<p>Este documento describe la funcionalidad del IVA de Caja, disponible en Etendo Classic.</p> <p>El objetivo de esta funcionalidad es reconocer contablemente el IVA y declararlo/liquidarlo con la Agencia Tributaria correspondiente, al realizarse el cobro/pago de las factura de venta/compra.</p> <p>En el caso de Espa\u00f1a se puede concretar que:</p> <ul> <li>Este R\u00e9gimen especial de car\u00e1cter optativo, permite a los sujetos pasivos retrasar el devengo y la consiguiente declaraci\u00f3n e ingreso del IVA repercutido hasta el momento del cobro a sus clientes.</li> <li>Igualmente, se retardar\u00e1 la deducci\u00f3n del IVA soportado en sus adquisiciones hasta el momento en que efect\u00fae el pago a sus proveedores (criterio de caja doble).</li> <li>Todo ello con la fecha l\u00edmite del 31 de diciembre del a\u00f1o inmediato posterior a aquel en que las operaciones se hayan efectuado.</li> <li> <p>Por tanto, el derecho a la deducci\u00f3n del IVA soportado en el r\u00e9gimen especial del criterio de caja nace:</p> <ul> <li>En el momento del pago total o parcial de las facturas de compra, por los importes efectivamente satisfechos.</li> <li>O el 31 de diciembre del a\u00f1o inmediato posterior a aquel en que se haya realizado la operaci\u00f3n si el pago no se ha producido.</li> </ul> </li> <li> <p>Igualmente, el devengo del IVA en las operaciones a las que sea de aplicaci\u00f3n el r\u00e9gimen especial del criterio de caja se produce:</p> <ul> <li>En el momento del cobro total o parcial de las facturas de venta, por los importes efectivamente percibidos.</li> <li>O el 31 de diciembre del a\u00f1o inmediato posterior a aquel en que se haya realizado la operaci\u00f3n si el cobro no se ha producido.</li> </ul> </li> </ul> <p>Es por ello que el m\u00f3dulo de IVA de Caja a partir de su versi\u00f3n 1.0.100 permite liquidar de forma manual el IVA de Caja de facturas no pagadas/cobradas total o parcialmente. Esta liquidaci\u00f3n, en el caso de Espa\u00f1a, se registrar\u00e1 y contabilizar\u00e1 con fecha 31 de Diciembre de 2024. Ver secci\u00f3n: Liquidaci\u00f3n manual del IVA de Caja </p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#descripcion","title":"Descripci\u00f3n","text":"<p>El IVA de Caja es un r\u00e9gimen especial de IVA al que las organizaciones ya se pueden acoger en pa\u00edses como Espa\u00f1a.</p> <p>Las organizaciones aplican el IVA al generar una factura de venta; de tal forma que este impuesto es pagado por el cliente pero es la organizaci\u00f3n que genera la factura que incluye el IVA, quien lo declara y por tanto lo liquida con la Agencia Tributaria correspondiente.</p> <p>En el caso de las facturas de compra sucede lo mismo pero a la inversa; el impuesto es pagado por la organizaci\u00f3n que adquiere los bienes/servicios pero es el proveedor quien lo declara y lo liquida con la Agencia Tributaria correspondiente.</p> <p>Por tanto, una organizaci\u00f3n liquida con la Agencia Tributaria la diferencia entre el IVA que ha repercutido en sus ventas y el IVA que ha soportado en sus compras y que puede deducir.</p> <p>La particularidad de este r\u00e9gimen radica en el momento de declarar y por tanto liquidar este impuesto:</p> <ul> <li>Cuando no se aplica este r\u00e9gimen, el IVA se puede declarar y liquidar con la Agencia Tributaria en el momento de emitir/recibir la factura de venta/compra, independientemente de si estas facturas se han cobrado/pagado o no.</li> <li>Cuando s\u00ed se aplica este r\u00e9gimen, el IVA se puede declarar y liquidar con la Agencia Tributaria en el momento de cobrar/pagar la factura de venta/compra correspondiente.</li> </ul> <p>Este r\u00e9gimen puede ser una buena opci\u00f3n desde el punto de vista financiero pero puede implicar un mayor esfuerzo en la gesti\u00f3n y presentaci\u00f3n de los informes de impuestos oficiales. La gesti\u00f3n del IVA de Caja en Etendo trata de reducir esta complejidad.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#iva-de-caja-en-espana","title":"IVA de Caja en Espa\u00f1a","text":"<p>Este R\u00e9gimen especial de car\u00e1cter optativo permite a las organizaciones, sujetos pasivos del IVA, retrasar el devengo y la consiguiente declaraci\u00f3n e ingreso del IVA repercutido en sus ventas hasta el momento del cobro a sus clientes aunque se retardar\u00e1, igualmente, la deducci\u00f3n del IVA soportado en sus adquisiciones hasta el momento en que efect\u00fae el pago a sus proveedores (criterio de caja doble); todo ello con la fecha l\u00edmite del 31 de diciembre del a\u00f1o inmediato posterior a aquel en que las operaciones se hayan efectuado.</p> <p>Dicho esto, en Espa\u00f1a puede haber organizaciones como las que se indican a continuaci\u00f3n:</p> <ul> <li> <p>Organizaciones no acogidas a este r\u00e9gimen especial:</p> <ul> <li>En este caso ni las facturas de compra ni las facturas de venta est\u00e1n sujetas a este r\u00e9gimen especial, por tanto el IVA se reconoce contablemente y se devenga/declara en el momento de emitir/recibir las facturas de venta/compra.</li> </ul> </li> <li> <p>Organizaciones no suscritas a este r\u00e9gimen especial, pero destinatarias de operaciones sujetas a este r\u00e9gimen especial:</p> <ul> <li>En este caso s\u00f3lo las facturas de compra est\u00e1n sujetas a este r\u00e9gimen, pudi\u00e9ndose reconocer contablemente y deducir el IVA soportado en dichas facturas s\u00f3lo cuando se efect\u00faa el pago al proveedor.</li> </ul> </li> <li> <p>Organizaciones acogidas a este r\u00e9gimen especial:</p> <ul> <li>En este caso tanto las facturas de compra recibidas como las de venta emitidas por la organizaci\u00f3n se acogen a este r\u00e9gimen pudi\u00e9ndose reconocer contablemente y liquidar el IVA en el momento del pago/cobro de dichas facturas.</li> </ul> </li> </ul> <p>Por otra parte, es importante se\u00f1alar que hay ciertas operaciones que quedan excluidas de este r\u00e9gimen general. En el caso de Espa\u00f1a, las operaciones que se excluyen son:</p> <ul> <li>Las acogidas a los reg\u00edmenes especiales simplificado, de la agricultura, ganader\u00eda y pesca, del recargo de equivalencia, del oro de inversi\u00f3n, aplicable a los servicios prestados por v\u00eda electr\u00f3nica y del grupo de entidades.</li> <li>Las entregas de bienes exentas a las que se refieren los art\u00edculos 21, 22, 23, 24 y 25 de esta Ley (exportaciones y entregas intracomunitarias de bienes).</li> <li>Las adquisiciones intracomunitarias de bienes.</li> <li>Aquellas en las que el sujeto pasivo del impuesto sea el empresario o profesional para quien se realiza la operaci\u00f3n conforme art\u00edculo 84.Uno.2\u00ba, 3\u00ba y 4\u00ba (supuestos de inversi\u00f3n del sujeto pasivo).</li> <li>Las importaciones y las operaciones asimiladas a importaciones.</li> <li>Aquellas a las que se refieren los art\u00edculos 9.1\u00ba y 12 (autoconsumos de bienes y servicios).</li> </ul> <p>Por lo tanto, si su organizaci\u00f3n est\u00e1 acogida a este r\u00e9gimen especial, no olvide desactivar la casilla \"IVA de Caja\" en las facturas de compra/venta que incluyen operaciones excluidas de este r\u00e9gimen especial.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#instalacion","title":"Instalaci\u00f3n","text":"<p>El IVA de Caja es una funcionalidad oculta de manera predeterminada en Etendo.</p> <p>Para habilitarla, es necesario instalar manualmente el m\u00f3dulo de IVA de Caja, que se encuentra bajo Licencia P\u00fablica de Etendo.</p> <p></p> <p>Recuerde que debe tener previamente instalado el dataset \"Taxes: Configuration for Spain\".</p> <p>Una vez instalado, en la interfaz de Etendo se mostrar\u00e1n las pesta\u00f1as y los campos necesarios para trabajar con la funcionalidad de IVA de Caja.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#configuracion","title":"Configuraci\u00f3n","text":"","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#dos-procesos-independientes-compra-y-venta","title":"Dos procesos independientes: Compra y Venta","text":"<p>Por defecto, el IVA de Caja en Etendo aparece deshabilitado, es por ello que el usuario debe activarlo de forma manual.</p> <p>Con el objetivo de ser lo m\u00e1s gen\u00e9rico posible, el manejo del IVA de Caja se puede configurar en Etendo de forma independiente para cada una de las ventas y para cada una de las compras. Dicho de otro modo, una organizaci\u00f3n puede declarar cada compra o venta acogida a este r\u00e9gimen especial de IVA o no.</p> <p>Por otro lado, y en el caso del proceso de compra, los proveedores puede configurarse de forma individual como acogidos a este r\u00e9gimen de IVA o no.</p> <p>Toda esta configuraci\u00f3n permite cubrir diferentes tipo de legislaci\u00f3n en pa\u00edses como Espa\u00f1a, Alemania, M\u00e9xico, etc.</p> <p>Es importante remarcar que la configuraci\u00f3n correcta para Espa\u00f1a, en el caso de una organizaci\u00f3n sujeta a este r\u00e9gimen especial de IVA, es seleccionar las dos casillas que se citan a continuaci\u00f3n en la ventana \"Organizaci\u00f3n\":</p> <ul> <li>Cash VAT (\"IVA de Caja\")</li> <li>Double Cash Criteria (\"Criterio de Caja Doble\")</li> </ul>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#proceso-de-venta","title":"Proceso de Venta","text":"<p>Con el fin de activar el IVA de Caja para el proceso de ventas, la organizaci\u00f3n debe configurarse como acogida a este r\u00e9gimen especial de IVA. Es importante recalcar que las organizaciones \"hijas\" de la organizaci\u00f3n configurada como IVA de Caja, heredar\u00e1n esta configuraci\u00f3n.</p> <p></p> <p>Esta configuraci\u00f3n se lleva a cabo seleccionado el check \"Cash VAT (IVA de Caja)\" en la ventana \"Organizaci\u00f3n\", pesta\u00f1a \"Informaci\u00f3n\".</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#proceso-de-compra","title":"Proceso de Compra","text":"<ol> <li> <p>Organizaciones acogidas al r\u00e9gimen especial de IVA de Caja:</p> <p>La deducci\u00f3n del IVA soportado en las facturas de compra se retrasa, en el caso de organizaciones acogidas a este r\u00e9gimen especial de IVA, hasta el momento en que se efect\u00faa el pago a los proveedores. Este es el \"Criterio de Caja Doble\".</p> <p></p> </li> <li> <p>Organizaciones no acogidas a este r\u00e9gimen especial pero destinatarias de operaciones sujetas al mismo:</p> <p>En estos casos, no es necesario configurar a la organizaci\u00f3n como \"acogida\" al r\u00e9gimen especial de criterio de caja, simplemente es necesario configurar como acogidos al r\u00e9gimen a aquellos tercero o proveedores sujetos a este r\u00e9gimen especial de IVA. Esta configuraci\u00f3n se puede hacer en la ventana \"Terceros\", pesta\u00f1a \"Proveedor/Acreedor\".</p> <p></p> </li> </ol>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#configuracion-de-los-rangos-de-impuesto","title":"Configuraci\u00f3n de los rangos de impuesto","text":"<p>Los rangos de impuesto de IVA a utilizar en organizaciones acogidas a este r\u00e9gimen especial de IVA o destinatarias de este tipo de operaciones, deben configurarse como rangos de impuestos de \"IVA de Caja\", en la ventana \"Rango de Impuestos\" tal y como se muestra en la siguiente imagen.</p> <p></p> <p>En el caso de Espa\u00f1a, Etendo facilita un dataset o conjunto de datos con los impuestos de IVA de Caja para Espa\u00f1a.</p> <p>Adem\u00e1s, cuando una organizaci\u00f3n est\u00e1 acogida a este r\u00e9gimen especial de IVA o es destinataria de operaciones acogidas a este r\u00e9gimen, los importes de IVA (devengado/soportado) se contabilizan en cuentas contables transitorias de IVA, al contabilizarse las facturas de compra/venta. Estas cuentas transitorias de IVA se pueden configurar en la pesta\u00f1a \"Contabilidad\".</p> <p></p> <p>El IVA contabilizado en las cuentas contables transitorias de IVA se traspasa a las cuentas finales de IVA, cuando las facturas se pagan/cobran de forma parcial o total.</p> <p>Como excepci\u00f3n, si una factura tiene un pago por adelantado, la contabilizaci\u00f3n de este pago por adelantado no reflejar\u00e1 el traslado de IVA de las cuentas contables transitorias a las finales. Ver secci\u00f3n Anticipos de Venta y Anticipos de Compra.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#configuracion-de-las-cuentas-contables-de-iva-transitorias","title":"Configuraci\u00f3n de las cuentas contables de IVA transitorias","text":"<p>Es posible definir las cuentas transitorias de IVA a utilizar por defecto para el \"Esquema Contable\" de la organizaci\u00f3n, en la pesta\u00f1a \"Valores por Defecto\".</p> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#proceso-de-ventas","title":"Proceso de Ventas","text":"","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#facturas-de-venta","title":"Facturas de Venta","text":"<p>En la cabecera de la ventana \"Factura (Cliente)\", secci\u00f3n \"M\u00e1s Informaci\u00f3n\" puedes encontrar el check \"Cash VAT\" (IVA de Caja). Si este check est\u00e1 seleccionado, la factura de venta est\u00e1 acogida a este r\u00e9gimen especial de IVA y, por tanto, todos los rangos de impuestos incluidos en la factura deben ser de IVA de Caja, con excepci\u00f3n de los rangos de impuestos exentos de IVA y las retenciones, de lo contrario el sistema no permitir\u00e1 completar la factura.</p> <p>Este check se activa de forma autom\u00e1tica cuando la organizaci\u00f3n se ha configurado como acogida al r\u00e9gimen de IVA de Caja, sin embargo se puede desactivar de forma manual para aquellos casos en los que la factura de venta incluya operaciones que se excluyen de este r\u00e9gimen especial, por ejemplo en los casos de \"Exportaciones\" y \"Entregas Intracomunitarias Exentas\".</p> <p></p> <p>En las facturas de venta acogidas a este r\u00e9gimen aparecer\u00e1 una nueva pesta\u00f1a en la parte inferior de la factura, debajo de la pesta\u00f1a \"Impuestos\", denominada \"Cash VAT\".</p> <p>Cada vez que la factura se cobre de manera parcial o total, el sistema inserta autom\u00e1ticamente una l\u00ednea con el porcentaje del IVA cobrado en cada cobro. Esta informaci\u00f3n puede ser utilizada posteriormente para la generaci\u00f3n de los informes de impuestos correspondientes.</p> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#contabilizacion-de-las-facturas-de-venta","title":"Contabilizaci\u00f3n de las facturas de venta","text":"<p>Cuando una factura de venta se contabiliza, el IVA es contabilizado en las cuentas transitorias de IVA, tal y como se muestra en la siguiente imagen</p> <p></p> <p>Posteriormente, cuando se contabiliza el pago/la transacci\u00f3n/o la reconciliaci\u00f3n (en funci\u00f3n de la configuraci\u00f3n de la Forma de Pago utilizado), el importe de IVA contabilizado en la cuenta transitoria de IVA se traslada automaticamente a la cuenta de IVA correspondiente, tal y como se muestra en la siguiente imagen:</p> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#pedidos-de-venta","title":"Pedidos de Venta","text":"<p>Para revisar si un pedido u orden de venta est\u00e1 marcada como \"IVA de Caja\", nos dirigimos a la cabecera del pedido, secci\u00f3n \"M\u00e1s informaci\u00f3n\".</p> <p>El comportamiento de los pedidos es similar al de las facturas, adem\u00e1s las facturas creadas desde los pedidos acogidos a este r\u00e9gimen, heredar\u00e1n esta configuraci\u00f3n.</p> <p>Tenga en cuenta que cualquier proceso de facturaci\u00f3n (incluso los creados especificamente para los usuarios finales de Etendo) mostrar\u00e1 en las facturas la configuraci\u00f3n del IVA de Caja o no en funci\u00f3n de la configuraci\u00f3n de los pedidos, por tanto no ser\u00e1 necesario adaptar ning\u00fan proceso de facturaci\u00f3n que se use con anterioridad a la vigencia de este r\u00e9gimen especial de IVA.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#anticipos-de-venta","title":"Anticipos de Venta","text":"<p>Etendo permite anticipar cobros de clientes al permitir registrar cobros en los pedidos de venta.</p> <p>Como se ha adelantado en la secci\u00f3n anterior Pedidos de Venta, estos pedido pagados por anticipado, pueden estar sujetos a IVA de Caja.</p> <p>Cuando se contabiliza el anticipo de un cliente, bien sea total o parcial, no se produce traslado contable alguno de IVA de Caja.</p> <p>Al completar la factura de venta correspondiente, desde el pedido de venta pagado parcialmente, se reflejan dos cosas:</p> <ol> <li> <p>El importe prepagado \"Prepayment Amount\", en la cabecera de la factura.</p> <p></p> </li> <li> <p>El porcentaje de IVA de Caja liquidado como final, en la pesta\u00f1a \"IVA de Caja\" (\"Cash VAT\"). En este caso el importe del anticipo = 0.67 \u20ac divido entre el importe total de la factura = 1.67, nos dar\u00eda un porcentaje del 40.12 %, esto es una cuota de 0.12 \u20ac</p> <p></p> </li> </ol> <p>Al contabilizar la factura de venta la cuota del impuesto por importe de 0.12 \u20ac se reflejar\u00e1 contablemente en una cuenta de IVA final (47700) y el resto de cuota pendiente de liquidar en la cuenta de IVA transitoria.</p> <p></p> <p>Si con posterioridad se paga la factura, la contabilizaci\u00f3n de dicho pago trasladar\u00e1 contablemente el IVA de Caja pendiente de liquidar a una cuenta final de IVA.</p> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#proceso-de-compras","title":"Proceso de Compras","text":"","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#facturas-de-compra","title":"Facturas de Compra","text":"<p>En la cabecera de la ventana \"Factura (Proveedor)\", secci\u00f3n \"M\u00e1s Informaci\u00f3n\", puedes encontrar el check \"Cash VAT\" (IVA de Caja). Si este check est\u00e1 seleccionado la factura de compra est\u00e1 acogida a este r\u00e9gimen especial de IVA y, por tanto, todos los rangos de impuestos incluidos en la factura deben ser de IVA de Caja, con excepci\u00f3n de los rangos de impuestos exentos de IVA y las retenciones, de lo contrario el sistema no permitir\u00e1 completar la factura.</p> <p></p> <p>Este check se activa autom\u00e1ticamente:</p> <ul> <li>cuando la \"Organizaci\u00f3n\" se ha configurado como acogida al r\u00e9gimen de IVA de Caja,</li> <li>o bien cuando el \"Tercero\" se ha configurado como acogido al regimen de IVA de Caja</li> </ul> <p>Este check se puede desactivar de forma manual para aquellos casos en los que la factura de compra incluya operaciones que se excluyen de este r\u00e9gimen especial, por ejemplo en los casos de \"Importaciones\" y \"Adquisiciones Intracomunitarias\".</p> <p>En las facturas de compra acogidas a este r\u00e9gimen aparecer\u00e1 una nueva pesta\u00f1a en la parte inferior de la factura, debajo de la pesta\u00f1a \"Impuestos\", denominada \"Cash VAT\".</p> <p>Cada vez que la factura se pague de manera parcial o total, el sistema inserta autom\u00e1ticamente una l\u00ednea con el porcentaje del IVA pagado en cada pago. Esta informaci\u00f3n puede ser utilizada posteriormente para la generaci\u00f3n de los informes de impuestos correspondientes.</p> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#contabilizacion-de-las-facturas-de-compra","title":"Contabilizaci\u00f3n de las facturas de compra","text":"<p>Cuando una factura de compra se contabiliza, el IVA es contabilizado en las cuentas transitorias de IVA, tal y como se muestra en la siguiente imagen</p> <p></p> <p>Posteriormente, cuando se contabiliza el pago/la transacci\u00f3n/o la reconciliaci\u00f3n (en funci\u00f3n de la configuraci\u00f3n de la Forma de Pago utilizado), el importe de IVA contabilizado en la cuenta transitoria de IVA se traslada automaticamente a la cuenta de IVA correspondiente, tal y como se muestra en la siguiente imagen:</p> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#pedidos-de-compra","title":"Pedidos de Compra","text":"<p>Para revisar si un pedido u orden de compra est\u00e1 marcada como \"IVA de Caja\", nos dirigimos a la cabecera del pedido, secci\u00f3n \"M\u00e1s informaci\u00f3n\".</p> <p>El comportamiento de los pedidos es similar al de las facturas, adem\u00e1s las facturas creadas desde los pedidos acogidos a este r\u00e9gimen, heredaran esta configuraci\u00f3n.</p> <p>Tenga en cuenta que cualquier proceso de facturaci\u00f3n (incluso los creados especificamente para los usuarios finales de Etendo) mostrar\u00e1 en las facturas la configuraci\u00f3n del IVA de Caja o no en funci\u00f3n de la configuraci\u00f3n de los pedidos, por tanto no ser\u00e1 necesario adaptar ning\u00fan proceso de facturaci\u00f3n que se use con anterioridad a la vigencia de este r\u00e9gimen especial de IVA.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#anticipos-de-compra","title":"Anticipos de Compra","text":"<p>Etendo permite anticipar pagos a proveedores permitiendo registrar pagos en los pedidos de compra. Estos pedidos pagados por anticipado pueden estar sujetos a IVA de Caja.</p> <p>Cuando se contabiliza el anticipo a un proveedor, bien sea total o parcial, no se produce traslado contable alguno de IVA de Caja.</p> <p>Al completar la factura de compra correspondiente, desde el pedido de compra pagado parcialmente, se reflejan dos cosas:</p> <ol> <li> <p>El importe prepagado \"Prepayment Amount\", en la cabecera de la factura.</p> <p></p> </li> <li> <p>El porcentaje de IVA de Caja liquidado como final, en la pesta\u00f1a \"IVA de Caja\" (\"Cash VAT\"). Por ejemplo, un anticipo de 1000 \u20ac en una factura de 4114 \u20ac nos dar\u00eda un porcentaje del 24.31 %.</p> <p></p> </li> </ol> <p>Al contabilizar la factura de compra la cuota del impuesto por importe de 173.57 \u20ac se reflejar\u00e1 contablemente en una cuenta de IVA final (47200) y el resto de cuota pendiente de liquidar en la cuenta de IVA transitoria.</p> <p></p> <p>Al contabilizar la factura de compra la cuota del impuesto por importe de 173.57 \u20ac se reflejar\u00e1 contablemente en una cuenta de IVA final (47200) y el resto de cuota pendiente de liquidar en la cuenta de IVA transitoria.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#liquidacion-manual-del-iva-de-caja","title":"Liquidaci\u00f3n manual del IVA de Caja","text":"<p>Tal y como ya se ha adelantado, en el caso de Espa\u00f1a el derecho a la deducci\u00f3n del IVA soportado en el r\u00e9gimen especial del criterio de caja nace:</p> <ul> <li>en el momento del pago total o parcial de las facturas de compra, por los importes efectivamente satisfechos, tal y como ya se ha explicado dentro de la secci\u00f3n Proceso de Compras</li> <li>o el 31 de diciembre del a\u00f1o inmediato posterior a aquel en que se haya realizado la operaci\u00f3n si el pago no se ha producido.</li> </ul> <p>Igualmente, el devengo del IVA en las operaciones a las que sea de aplicaci\u00f3n el r\u00e9gimen especial del criterio de caja se produce:</p> <ul> <li>en el momento del cobro total o parcial de las facturas de venta, por los importes efectivamente percibidos, tal y como ya se ha explicado dentro de la secci\u00f3n Proceso de Ventas</li> <li>o el 31 de diciembre del a\u00f1o inmediato posterior a aquel en que se haya realizado la operaci\u00f3n si el cobro no se ha producido.</li> </ul> <p>Es decir, el IVA de Caja devengado/deducible de las facturas de venta/compra de fecha 2024 que no est\u00e9n cobradas/pagadas totalmente, tendr\u00e1 que liquidarse y declararse a Hacienda con fecha del 31 de Diciembre de 2024.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#documento-de-liquidacion-manual","title":"Documento de Liquidaci\u00f3n Manual","text":"<p>El m\u00f3dulo de gesti\u00f3n de IVA de Caja de Etendo (Cash VAT Management) incluye, a partir de su versi\u00f3n 1.0.100, un nuevo \"Tipo de Documento\" (\"Document Type\"), denominado \"Manual Cash VAT Settlement\", as\u00ed como una nueva ventana denominada \"Manual Cash VAT Settlement\" (\"Liquidaci\u00f3n Manual del IVA de Caja\").</p> <p></p> <p>Recuerde actualizar el dataset de este m\u00f3dulo, una vez instalado, en la ventana \"Gesti\u00f3n del m\u00f3dulo de Empresa\".</p> <p>Esta nueva ventana permite a una organizaci\u00f3n acogida o destinataria de operaciones en r\u00e9gimen especial de criterio de caja:</p> <ul> <li>introducir una fecha desde/hasta que filtre por la fecha de las facturas de IVA de Caja no pagadas/cobradas o parcialmente pagadas/cobradas (campos \"Starting Date\"/\"Ending Date\")</li> <li>as\u00ed como una fecha de contabilizaci\u00f3n de la liquidaci\u00f3n manual del IVA de Caja (campo \"Accounting Date\").</li> </ul> <p>Al crearse el estado del documento (\"Document Status\") es borrador (\"Draft\").</p> <p>A continuaci\u00f3n el bot\u00f3n de proceso \"Pick Lines &amp; Complete\" permite obtener un listado de las facturas de IVA de Caja \"completadas\" y no necesariamente \"contabilizadas\" no pagadas/cobradas. Este listado de facturas incluye la siguiente informaci\u00f3n relevante:</p> <ul> <li>Numero de Factura, columna \"Document N\u00ba\"</li> <li>Tipo de documento, columna \"Document Type\", que puede incluir facturas o facturas rectificativas o abonos tanto de compra como de venta.</li> <li>Fecha de Factura, columna \"Invoice Date\"</li> <li>Tercero, columna \"Business Partner\"</li> <li>Importe Total de la Factura, columna \"Grand Total Amount\"</li> <li>Impuesto de IVA de Caja, columna \"Tax\"</li> <li>Porcentaje no pagado de la factura, columna \"Percentage\", que puede ser el 100% o menor.</li> <li>Cuota del impuesto, columna \"Tax Amount\" </li> <li>Base Imponible del impuesto, columna \"Taxable Amount\".</li> </ul> <p></p> <p>A continuaci\u00f3n, el usuario puede seleccionar la factura o facturas para las que el IVA de Caja se tiene que liquidar de forma manual a 31 de Diciembre de 2024. En esta ventana:</p> <ul> <li>el bot\u00f3n \"OK\" permite cerrar la ventana de facturas de IVA de caja pendientes de liquidar y mantener las facturas seleccionadas.</li> <li>el bot\u00f3n \"Complete\" permite completar la selecci\u00f3n y pasar el estado del documento \"Manual Cash VAT Settlement\" a \"Completado\". Cualquier cambio en la selecci\u00f3n implicar\u00e1 la \"Reactivaci\u00f3n\" del documento.</li> <li>el bot\u00f3n \"Cancel\" permite cerrar la ventana de facturas de IVA de caja pendientes de liquidar y cancelar la selecci\u00f3n.</li> </ul> <p>Una vez seleccionadas, las facturas se reflejan en la pesta\u00f1a \"Lines\", y en la parte superior de la ventana se actualizan los campos siguientes, con la suma de cuotas y bases correspondientes:</p> <ul> <li>Cuota de IVA Devengado, campo \"Sales Tax Amount\"</li> <li>Base Imponible Devengada, campo \"Sales Taxable Amount\"</li> <li>Cuota del IVA Deducible, campo \"Purchase Tax Amount\"</li> <li>Base Imponible Deducible, campo \"Purchase Taxable Amount\"</li> </ul> <p></p> <p>Es importante recalcar el \u00faltimo campo de la pesta\u00f1a \"Lines\", denominado \"Invoice Tax Cash VAT\",\"IVA de Caja del Impuesto\").</p> <p>Este campo enlaza con la pesta\u00f1a \"Cash VAT\" relacionada con el impuesto que corresponda de la factura de compra, en este caso. Lo mismo aplicar\u00eda en el caso de una factura de venta. </p> <p></p> <p>Tal y como se puede apreciar en la imagen anterior, la liquidaci\u00f3n manual del IVA de Caja, crea de forma autom\u00e1tica un nuevo registro en la pesta\u00f1a \"Cash VAT\", con la siguiente informaci\u00f3n:</p> <ul> <li>Fecha de pago = vac\u00edo ya que la liquidaci\u00f3n del IVA de Caja no se ha producido al pagarse la factura, sino como consecuencia de una liquidaci\u00f3n manual.</li> <li>Porcentaje = se mostrar\u00e1 el porcentaje de liquidaci\u00f3n de IVA de Caja pendiente para el impuesto (de IVA de Caja).</li> <li>Impuestos = cuota del impuesto liquidada</li> <li>Base Imponible = base imponible del impuesto liquidada</li> <li>Pago = vac\u00edo ya que la liquidaci\u00f3n del IVA de Caja no se ha producido al pagarse la factura, sino como consecuencia de una liquidaci\u00f3n manual.</li> <li>Liquidaci\u00f3n Manual (\"Manual Settlement\") = S\u00ed</li> <li>Linea de la Liquidaci\u00f3n (\"Manual Manual Cash VAT Settlement Line\") = con informaci\u00f3n sobre el n\u00famero de documento y l\u00ednea de la Liquidaci\u00f3n Manual del IVA de Caja</li> <li>Fecha de la liquidaci\u00f3n (\"Manual Manual Cash VAT Settlement Date\") = con la fecha contable de la liquidaci\u00f3n manual.</li> </ul> <p>Como puede apreciarse en la imagen anterior, el porcentaje total liquidado de IVA de Caja para el impuesto es ahora de un 100%. Por tanto, si se produjera un pago de la factura de compra, la contabilizaci\u00f3n de ese pago no generar\u00eda un traslado contable del IVA de Caja, ya que \u00e9ste ya se ha producido.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#traspaso-contable-del-iva-de-caja","title":"Traspaso contable del IVA de Caja","text":"<p>Al contabilizar la liquidaci\u00f3n manual a 31 de Diciembre de 2024 (bot\u00f3n \"Post\"), se producir\u00e1 el traslado del IVA de Caja contabilizado en las cuentas transitorias de IVA a las cuentas finales, tanto para el IVA Devengado (Cuentas: 47700T a 477000), como para el IVA Soportado Deducible (Cuentas 47200T a 472000).</p> <p>Recuerde activar la tabla \"OBCVAT_ManualSettlement\" en la ventana \"Esquema contable\", pesta\u00f1a \"Tablas a contabilizar\".</p> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/iva-de-caja/#liquidacion-del-iva-de-caja","title":"Liquidaci\u00f3n del IVA de Caja","text":"<p>En el ejemplo mencionado anteriormente, es con fecha, 31 de Diciembre de 2024, cuando se puede liquidar/declarar ese IVA de Caja a las autoridades fiscales correspondientes. En el caso de Espa\u00f1a, este IVA de Caja se tendr\u00e1 que incluir para su liquidaci\u00f3n en el Modelo 303 del \u00faltimo periodo (Diciembre 2024/\u00daltimo Trimestre 2024), as\u00ed como en el Modelo 390 de 2024.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","spain localization","cashvat","iva de caja","Impuestos"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/","title":"Libro de facturas","text":""},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.module.invoicesregisterbook</code></p> <p> Javapackage: <code>org.openbravo.module.invoicesregisterbook.es_es</code></p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#introduccion","title":"Introducci\u00f3n","text":"<p>Este m\u00f3dulo de funcionalidad espa\u00f1ola se denomina \u201cLibros Registro de IVA\u201d o \u201cLibros Registro de Facturas emitidas/recibidas\u201d.</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#descripcion-del-modulo","title":"Descripci\u00f3n del m\u00f3dulo","text":"<p>Este m\u00f3dulo de los libros registro de IVA permite a las empresas espa\u00f1olas generar los libros registro de IVA, tanto los libros de facturas recibidas (IVA soportado) como los libros de facturas emitidas (IVA repercutido). Las empresas espa\u00f1olas tienen que guardar registro de cada una de las facturas recibidas y emitidas con el fin de poder determinar el importe total de IVA a liquidar con la Hacienda P\u00fablica para un periodo de tiempo determinado, como diferencia entre el IVA repercutido y el IVA soportado deducible.</p> <p>El contenido de los libros de facturas se ajusta a los requerimientos de la Hacienda P\u00fablica espa\u00f1ola. Los libros de facturas contienen informaci\u00f3n sobre:</p> <ul> <li>N\u00famero de registro<ul> <li>este n\u00famero ser\u00e1 generado autom\u00e1ticamente por el sistema una vez que el correspondiente libro se marque como \"Final\"</li> </ul> </li> <li>N\u00famero de factura emitida/recibida<ul> <li>este n\u00famero tanto en el caso de facturas recibidas como emitidas se corresponde con el campo \"N\u00ba documento\"</li> <li>en el caso de las facturas recibidas dicho campo no deber\u00eda llevar secuencia num\u00e9rica asociada con el fin de que el usuario final pueda introducir el n\u00famero de factura del proveedor.</li> </ul> </li> <li>Fecha factura emitida/recibida o fecha de expedici\u00f3n/recepci\u00f3n de los bienes/servicio, en caso de ser diferentes</li> <li>Nombre y breve descripci\u00f3n del cliente/proveedor</li> <li>NIF del cliente/proveedor</li> <li>Base imponible</li> <li>Tipo impositivo de IVA</li> <li>Cuota de IVA repercutido/soportado</li> <li>Cuota de IVA soportado deducible</li> <li>Tipo impositivo de recargo de equivalencia</li> <li>Cuota de recargo de equivalencia</li> <li>Importe total de la factura</li> </ul> <p>Info</p> <p>Los importes deben consignarse en Euros.</p> <p>El tipo de cambio que se utiliza en las transacciones que deban incluirse en los libros cuyos importes no sean en Euros, es el definido para un rango de fecha determinado en la ventana \"Rangos de Conversi\u00f3n\".</p> <p>Este m\u00f3dulo de funcionalidad incluye adem\u00e1s las claves de libro correspondientes al modelo tributario espa\u00f1ol 340 de declaraci\u00f3n informativa de operaciones incluidas en los libros registro</p> <ul> <li> <p>\u201cE\u201d= en el caso del libro de facturas emitidas  </p> </li> <li> <p>\u201cR\u201d= en el caso del libro de facturas recibidas  </p> </li> </ul> <p>y tambi\u00e9n las claves de operaci\u00f3n correspondientes al modelo tributario espa\u00f1ol 340 de declaraci\u00f3n informativa de operaciones incluidas en los libros registro:</p> <ul> <li> <p>\u201c \u201c= en el caso de operaci\u00f3n habitual de compra/venta  </p> <p>-   \u201cC\u201d= en el caso de factura de compra o venta con varios tipos impositivos  </p> <p>-   \u201cD\u201d= en el caso de factura de compra o venta rectificativa o nota de abono  </p> <p>-   \u201cI\u201d= en el caso de inversi\u00f3n de sujeto pasivo  </p> <p>-   \u201cR\u201d = en caso de facturas de arrendamiento de local de negocio (nueva clave para 2012)</p> </li> </ul> <p>En los libros registro de IVA se consideran las siguientes operaciones de compra relacionadas con los tipos de documento de Etendo que se listan a continuaci\u00f3n:</p> <ul> <li>Facturas de compra (Tipo de documento = \u201cAP invoice\u201d )</li> <li>Facturas de compra negativas (Tipo de documento = \u201cAP invoice\u201d) o abonos (Tipo de documento = \"Reverse Purchase Invoice\"). Ambos tipos implican una nota de abono en negativo.</li> <li>Notas de abono de compra (Tipo de documento = \u201cAP CreditMemo\u201d), lo cual implicar\u00eda una factura rectificativa o nota de abono en positivo. En este caso, hay que tener en cuenta que el libro de IVA de facturas recibidas marcar\u00e1 este tipo de operaciones como \u201cD\u201d con importes en positivo, aunque impliquen un IVA soportado negativo y, por tanto, menor IVA soportado/soportado deducible.</li> </ul> <p>En los libros registro de IVA se consideran las siguientes operaciones de venta relacionadas con los tipos de documento de Etendo que se listan a continuaci\u00f3n:</p> <ul> <li>Facturas de venta (Tipo de documento = \u201cAR invoice\u201d )</li> <li>Facturas de venta negativas (Tipo de documento = \u201cAR invoice\u201d) o abonos (Tio de documento=\"Reverse Sales Invoice\"). Ambos tipos implican una nota de abono en negativo.</li> <li>Notas de abono de venta (Tipo de documento = \u201cAR CreditMemo\u201d), lo cual implicar\u00eda una factura rectificativa o nota de abono en positivo. En este caso hay que tener en cuenta que el libro de IVA de facturas emitidas listar\u00e1 este tipo de operaciones en positivo, aunque impliquen un IVA repercutido negativo y, por tanto, menor IVA repercutido.</li> </ul> <p>No se consideran los libros registro de IVA del tipo:</p> <ul> <li>Libro registro de ciertas operaciones Intracomunitarias</li> <li>Libro registro de bienes de Inversi\u00f3n</li> </ul> <p>as\u00ed como las:</p> <ul> <li>Operaciones de nota de abono de compra/venta negativas (Tipo de documento = \u201cAP/AR CreditMemo\u201d), lo cual implicar\u00eda una factura de compra/venta.</li> </ul>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#instalacion-del-modulo","title":"Instalaci\u00f3n del m\u00f3dulo","text":"<p>Para la instalaci\u00f3n del m\u00f3dulo \u201cLibro de facturas\u201d, el usuario debe seguir los pasos que se describen a continuaci\u00f3n en funci\u00f3n de la situaci\u00f3n de partida:</p> <ul> <li>Instalaci\u00f3n de la \u00faltima versi\u00f3n disponible de Etendo\u00a0</li> <li>o la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola.</li> </ul> <p>Info</p> <p>Para la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola, visite Marketplace.\u00a0</p> <p>Este m\u00f3dulo de funcionalidad requiere el m\u00f3dulo de Impuestos para Espa\u00f1a de Etendo. Es importante tener en cuenta que a la hora de instalar el m\u00f3dulo del libro de facturas, los m\u00f3dulos dependientes se instalar\u00e1n autom\u00e1ticamente.</p> <p>Info</p> <p>Nota importante: Las transacciones realizadas con anterioridad a la instalaci\u00f3n del m\u00f3dulo de libro registro de facturas aparecer\u00e1n en el correspondiente libro de facturas pero sin la clave de operaci\u00f3n. Hay que tener en cuenta que la clave de operaci\u00f3n solamente es necesaria en el modelo tributario 340. Para generar la clave de operaci\u00f3n, las transacciones deber\u00e1n completarse de nuevo.</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#interfaz-de-usuario","title":"Interfaz de usuario","text":"<p>Tal y como se ha explicado en la secci\u00f3n \u201cInstalaci\u00f3n del M\u00f3dulo\u201d, los \u201cLibros registro de IVA\u201d requieren del m\u00f3dulo de impuestos para Espa\u00f1a mejorado que incluye 3 campos que permiten:</p> <p>1.- la identificaci\u00f3n de los importes de recargo de equivalencia tanto en el libro de facturas recibidas como emitidas de forma separada a los importes de IVA, si bien hay que tener en cuenta que los rangos de impuestos de recargo de equivalencia tienen que ir referidos al r\u00e9gimen del cliente/proveedor como una categor\u00eda de impuestos del cliente/proveedor.</p> <p>2.- la identificaci\u00f3n de las operaciones de inversi\u00f3n de sujeto pasivo para los casos de operaciones de servicios suministrados por parte de proveedores europeos/extranjeros a empresas espa\u00f1olas.</p> <p>3.- la selecci\u00f3n del tipo de libro aplicable a cada impuesto, debido a que por la configuraci\u00f3n actual de los tipos impositivos se dar\u00e1n casos de impuestos de tipo compra que se deben incluir en el libro de facturas emitidas como IVA repercutido/venta. Un ejemplo es el IVA Intracomunitario de compras. El IVA Intracomunitario de compras implica un apunte al debe (como IVA repercutido) y otro al haber (como IVA soportado).</p> <p>Estos 3 nuevos campos se encuentran en la ruta de aplicaci\u00f3n \u201cGesti\u00f3n Financiera / Contabilidad / Configuraci\u00f3n / Rango impuesto\u201d.</p> <p>Info</p> <p>Nota importante: En caso de que no se utilice el m\u00f3dulo de impuestos para Espa\u00f1a proporcionado por Etendo, el usuario debe tener en cuenta que necesita configurar de forma adecuada y manualmente los 3 par\u00e1metros b\u00e1sicos del libro de facturas explicados en esta secci\u00f3n. </p> <p>Adem\u00e1s este m\u00f3dulo cuenta con dos ventanas para la configuraci\u00f3n de los libros registro de IVA y la generaci\u00f3n de los mismos, tal y como se muestra a continuaci\u00f3n:</p> <p>Configuraci\u00f3n de los libros de IVA</p> <p>Ruta: Gesti\u00f3n Financiera / Contabilidad / Configuraci\u00f3n / Configuraci\u00f3n de Libro de Facturas</p> <p></p> <p>Generaci\u00f3n de los libros de IVA</p> <p>Ruta: Gesti\u00f3n Financiera / Contabilidad / Herramientas de an\u00e1lisis/ Libro de facturas</p> <p></p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#casos-de-usuario","title":"Casos de usuario","text":"<p>Esta funcionalidad permitir\u00e1 a las empresas espa\u00f1olas llevar a cabo los escenarios que se explican a continuaci\u00f3n una vez que las correspondientes facturas/abonos de compra y venta se han completado/contabilizado en Etendo para un determinado a\u00f1o/periodo, por ejemplo 2021/Enero/Febrero.</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#configuracion-y-creacion-de-los-libros","title":"Configuraci\u00f3n y creaci\u00f3n de los libros","text":"<p>Es necesario crear y configurar los libros de facturas recibidas y emitidas, para ello deber\u00e1 seguir los pasos que se detallan a continuaci\u00f3n o bien instalar y aplicar a la entidad legal con contabilidad el m\u00f3dulo de configuraci\u00f3n de los libros de facturas.</p> <p>El m\u00f3dulo de configuraci\u00f3n de los libros:</p> <ul> <li>crea los libros tanto de facturas recibidas como emitidas</li> <li>y los configura a\u00f1adiendo todos los impuestos por tipo de documento a tener en cuenta a la hora de generar los libros de facturas.</li> </ul> <p>Es importante recalcar que el usuario puede crear los libros de facturas para un determinado periodo de tiempo tantas veces como sea necesario con tan solo volver a presionar el bot\u00f3n de proceso \u201cCrear\u201d para el correspondiente Libro, de esta forma se incluir\u00e1n en el libro nuevas facturas o abonos que no se tuvieron en cuenta al crear el libro.</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#libro-de-facturas-recibidas","title":"Libro de Facturas Recibidas","text":""},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#configuracion","title":"Configuraci\u00f3n","text":"<p>Configuraci\u00f3n del Libro de Facturas recibidas en la ruta de aplicaci\u00f3n Gesti\u00f3n Financiera \u2013 Contabilidad \u2013 Configuraci\u00f3n \u2013 Configuraci\u00f3n de Libro de Facturas.</p> <p>Una vez aplicado el dataset del m\u00f3dulo Configuraci\u00f3n de impuestos para el libro de facturas, el usuario puede comprobar la configuraci\u00f3n de los libros de facturas que se ha creado por defecto para el libro de facturas recibidas.</p> <p>Campos a tener en cuenta:</p> <ul> <li>Nombre : Libro de Facturas Recibidas 2021</li> <li>Descripci\u00f3n : Libro de Facturas Recibidas 2021</li> <li>Activo : S\u00ed</li> <li>Tipo: R \u2013 Recibidas</li> <li>N\u00ba inicial: Este n\u00famero se tendr\u00e1 en cuenta al crear el libro como final, ya que a todas las transacciones o facturas incluidas en el libro habr\u00e1 que asignarles un n\u00famero de registro correlativo. El primer n\u00famero asignado por defecto ser\u00e1 el 1.</li> </ul> <p></p> <p>Nota: El usuario puede definir el N\u00famero de Documento que aparecer\u00e1 en cada una de las l\u00edneas del libro, pudiendo ser:  -   El N\u00ba Factura (campo \"N\u00ba documento\" de la factura de compra) -   o el N\u00ba Documento Proveedor (campo \"Referencia del Proveedor\" de la factura de compra) </p> <p>En la pesta\u00f1a \"Impuestos\" el usuario puede comprobar el listado de todos los impuestos por tipo de documento que se han incluido en la configuraci\u00f3n del libro de facturas recibidas y que, por tanto, se tendr\u00e1n en cuenta a la hora de crear el libro.</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#creacion","title":"Creaci\u00f3n","text":"<p>La creaci\u00f3n del libro de facturas recibidas se debe llevar a cabo desde la ruta de aplicaci\u00f3n Gesti\u00f3n Financiera \u2013 Contabilidad \u2013 Herramientas de An\u00e1lisis \u2013 Libro de facturas. El usuario debe crear un nuevo registro e introducir la siguiente informaci\u00f3n para el correspondiente Cliente/Organizaci\u00f3n:</p> <ul> <li>Nombre : Libro de Facturas Recibidas Enero 2021</li> <li>Descripci\u00f3n : Libro de Facturas Recibidas Enero 2021</li> <li>Activo : S\u00ed</li> <li>Libro de Facturas : el usuario debe seleccionar el libro de facturas ya configurado, por ejemplo \"Libro de Facturas Recibidas 2021\".</li> <li>Ejercicio: el usuario debe introducir el a\u00f1o (en el ejemplo, 2021)</li> <li>Desde Periodo : el usuario debe introducir el periodo para el cual quiere que la fecha de las facturas se tenga en cuenta al lanzar el libro de facturas, por ejemplo enero 2021. El sistema incluir\u00e1 las facturas con fecha desde el 1 de enero 2021.</li> <li>Hasta Periodo : el usuario debe introducir el periodo hasta el cual quiere que la fecha de las facturas se tenga en cuenta al lanzar el libro de facturas, por ejemplo enero 2021. El sistema incluir\u00e1 las facturas con fecha hasta el 31 de enero 2021.</li> </ul> <p>Una vez introducida la informaci\u00f3n anterior, el usuario puede crear el libro mediante el bot\u00f3n de proceso \u201cCrear\u201d y comprobar las transacciones generadas en la pesta\u00f1a \u201cL\u00edneas\u201d.</p> <p></p> <p>La informaci\u00f3n contenida en las l\u00edneas del libro es la que se muestra a continuaci\u00f3n:</p> <p></p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#libro-de-facturas-emitidas","title":"Libro de Facturas Emitidas","text":""},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#configuracion_1","title":"Configuraci\u00f3n","text":"<p>Configuraci\u00f3n del Libro de Facturas emitidas en la ruta de aplicaci\u00f3n Gesti\u00f3n Financiera \u2013 Contabilidad \u2013 Configuraci\u00f3n \u2013 Configuraci\u00f3n de Libro de Facturas.</p> <p>Una vez aplicado dataset del m\u00f3dulo Configuraci\u00f3n de impuestos para el libro de facturas, el usuario puede comprobar la configuraci\u00f3n de los libros de facturas que se ha creado por defecto para el libro de facturas emitidas.</p> <p>Campos a tener en cuenta:</p> <ul> <li>Nombre : Libro de Facturas Emitidas 2021</li> <li>Descripci\u00f3n : Libro de Facturas Emitidas 2021</li> <li>Activo : S\u00ed</li> <li>Tipo: E \u2013 Emitidas</li> <li>N\u00ba inicial: Este n\u00famero se tendr\u00e1 en cuenta al crear el libro como final, ya que a todas las transacciones o facturas incluidas en el libro habr\u00e1 que asignares un n\u00famero de registro correlativo.</li> </ul> <p></p> <p>En la pesta\u00f1a \"Impuestos\" el usuario puede comprobar el listado de todos los impuestos por tipo de documento que se han incluido en la configuraci\u00f3n del libro de facturas emitidas y que, por tanto, se tendr\u00e1n en cuenta a la hora de crear el libro.</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#creacion_1","title":"Creaci\u00f3n","text":"<p>La creaci\u00f3n del libro de facturas emitidas se debe llevar a cabo desde la ruta de aplicaci\u00f3n Gesti\u00f3n Financiera \u2013 Contabilidad \u2013 Herramientas de An\u00e1lisis \u2013 Libro de facturas. El usuario debe crear un nuevo registro e introducir la siguiente informaci\u00f3n para el correspondiente Cliente/Organizaci\u00f3n:</p> <ul> <li>Nombre : Libro de Facturas Emitidas Febrero 2021</li> <li>Descripci\u00f3n : Libro de Facturas Emitidas Febrero 2021</li> <li>Activo : S\u00ed</li> <li>Libro de Facturas : el usuario debe seleccionar el libro de facturas emitidas ya configurado que quiere crear, por ejemplo \"Libro de Facturas Emitidas 2021\".</li> <li>Ejercicio: el usuario debe introducir el a\u00f1o (2021)</li> <li>Desde Periodo : el usuario debe introducir el periodo para el cual quiere que la fecha de las facturas se tenga en cuenta al lanzar el libro de facturas, por ejemplo febrero 2012. El sistema incluir\u00e1 las facturas con fecha desde 1 febrero 2012.</li> <li>Hasta Periodo : el usuario debe introducir el periodo hasta el cual quiere que la fecha de las facturas se tenga en cuenta al lanzar el libro de facturas, por ejemplo febrero 2012. El sistema incluir\u00e1 las facturas con fecha hasta el 28 de febrero de 2012.</li> </ul> <p>Una vez introducida la informaci\u00f3n anterior, el usuario puede crear el libro mediante el bot\u00f3n de proceso \u201cCrear\u201d y comprobar las transacciones generadas en la pesta\u00f1a \u201cLineas\u201d.</p> <p></p> <p>La informaci\u00f3n contenida en las l\u00edneas del libro es la que se muestra a continuaci\u00f3n:</p> <p></p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#inclusion-manual-de-transacciones","title":"Inclusi\u00f3n manual de transacciones","text":"<p>El usuario puede a\u00f1adir manualmente facturas/abonos tanto emitidos como recibidos que por cualquier motivo no est\u00e9n registrados en Etendo, pero que deban ser incluidos en el libro correspondiente. Para ello el usuario deber\u00e1 seguir los pasos que a continuaci\u00f3n se detallan:</p> <p>En la ruta Gesti\u00f3n Financiera / Contabilidad / Herramientas de An\u00e1lisis / Libro de Facturas / Cabecera &gt;&gt; L\u00edneas, el usuario puede crear un nuevo /s registro/s e introducir facturas o abonos tanto emitidos como recibidos de sus proveedores, en el libro correspondiente, con tal solo presionar el bot\u00f3n de men\u00fa \u201cNuevo\u201d.</p> <p>En ese caso, el usuario deber\u00e1 introducir la informaci\u00f3n que se lista a continuaci\u00f3n para cada nuevo registro creado manualmente:</p> <ul> <li>N\u00ba de documento (obligatorio)</li> <li>Tercero (obligatorio)</li> <li>Clave de operaci\u00f3n</li> <li>Base imponible (obligatorio)</li> <li>Tipo impositivo (obligatorio)</li> <li>Tipo de Recargo de equivalencia</li> <li>Fecha documento</li> <li>NIF del tercero (no editable, debe rellenarse al seleccionar el tercero)</li> <li>Cuota del impuesto (obligatorio)</li> <li>Cuota recargo de equivalencia (obligatorio). En caso de que no aplique el recargo de equivalencia se debe rellenar como 0,00</li> <li>Importe total de la factura (obligatorio)</li> </ul>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#no-inclusion-de-transacciones","title":"No inclusi\u00f3n de transacciones","text":"<p>El usuario puede marcar manualmente facturas/abonos tanto emitidos como recibidos que por cualquier motivo no deban ser incluidos en el correspondiente libro y que est\u00e9n registrados en Etendo, para ello el usuario deber\u00e1 seguir los pasos que a continuaci\u00f3n se detallan:</p> <p>En la ruta Gesti\u00f3n Financiera / Contabilidad / Herramientas de An\u00e1lisis / Libro de Facturas / Cabecera &gt;&gt; L\u00edneas, el usuario puede \u201cdesmarcar\u201d cualquier transacci\u00f3n que est\u00e9 marcada por la aplicaci\u00f3n como \u201cIncluida\u201d, dichas transacciones no se incluir\u00e1n al crear el correspondiente libro como Final (documento impreso en formato *.pdf).</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/libro-de-facturas/#libros-de-facturas-marcados-como-final","title":"Libros de facturas marcados como \"Final\"","text":"<p>El usuario puede procesar los libros de facturas como \u201cFinales\u201d, una vez que se asegure de que las transacciones incluidas en el libro son las correctas, dicho proceso implicar\u00e1 la numeraci\u00f3n correlativa de las facturas incluidas en dicho libro, siempre que el periodo o periodos a los que se refieren las facturas incluidas en el libro est\u00e9n cerrados, al menos temporalmente.</p> <p>Desde \u201cGesti\u00f3n Financiera / Contabilidad / Transacciones \u2013 Abrir/Cerrar Periodos\u201d, el usuario debe cerrar temporalmente aquellos periodos para los que no se van a introducir nuevas facturas ni transacciones y que, por tanto, pueden cerrarse.</p> <p>Una vez cerrados los periodos desde \u201cGesti\u00f3n Financiera / Herramientas de An\u00e1lisis / Libro de Facturas\u201d, el usuario puede \"Crear y Marcar como Final\" el correspondiente libro, con lo que el sistema dar\u00e1 opci\u00f3n a partir de ese momento tan solo de \u201cDesprocesar\u201d.</p> <p>El usuario puede imprimir el libro mediante el bot\u00f3n de la barra de herramientas \u201cImprimir\u201d.</p> <p>El libro impreso (*.pdf) de facturas recibidas incluye la siguiente informaci\u00f3n:</p> <ul> <li>N\u00famero registro</li> <li>N\u00famero factura</li> <li>N\u00ba Doc / Ref. Prov - esta columna relaciona ambos n\u00fameros de documento, el n\u00famero de Etendo y el n\u00famero o referencia del proveedor.</li> <li>Fecha operaci\u00f3n</li> <li>Tercero</li> <li>NIF</li> <li>Clave</li> <li>Base imponible</li> <li>Tipo impositivo</li> <li>Cuota impuesto</li> <li>Cuota deducible</li> <li>Importe factura</li> <li>Fecha de pago</li> <li>Cuenta Financiera</li> <li>M\u00e9todo de Pago</li> <li>Importe de Pago</li> </ul> <p>El libro impreso (*.pdf) de facturas emitidas incluye la siguiente informaci\u00f3n:</p> <ul> <li>N\u00famero registro</li> <li>N\u00famero factura</li> <li>Fecha factura</li> <li>Fecha operaci\u00f3n</li> <li>Tercero</li> <li>NIF</li> <li>Clave</li> <li>Base imponible</li> <li>Tipo impositivo</li> <li>Cuota del impuesto</li> <li>Recargo</li> <li>Cuota RE</li> <li>Importe factura</li> <li>Fecha de cobro</li> <li>Cuenta Financiera</li> <li>M\u00e9todo de Pago</li> <li>Importe de cobro</li> </ul> <p>En caso de error u omisi\u00f3n en los libros, el usuario deber\u00e1 desprocesar el correspondiente libro, reabrir el periodo/periodos, a\u00f1adir o modificar la/las facturas emitidas o recibidas y volver a empezar el proceso de creaci\u00f3n y procesamiento como final del correspondiente libro, teniendo en cuenta el/los periodos de facturaci\u00f3n debido a que la numeraci\u00f3n de registro debe ser correlativa en funci\u00f3n de las fechas de factura.</p> <p>Si el usuario tiene que introducir una factura de fecha de marzo y ya ha cerrado y generado como finales los libros de abril y mayo, deber\u00e1 desprocesar los libros de mayo, abril y marzo; reabrir los periodos de mayo, abril y marzo; contabilizar la factura con fecha de marzo y finalmente, crear el libro de marzo para comprobar que la nueva factura se ha incluido en el libro de marzo, cerrar los periodos y crear y marcar como finales los libros de marzo, abril y mayo por ese orden.</p>"},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/","title":"Modelo 190","text":"","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.module.aeat190.es</code></p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta secci\u00f3n explica el contenido y funcionamiento del m\u00f3dulo \"Modelo 190\", inclu\u00eddo dentro del bundle de Localizaci\u00f3n Espa\u00f1ola para Etendo.</p> <p>Descripci\u00f3n del Modelo</p> <p>El m\u00f3dulo Modelo 190 permite a las empresas cumplir con sus obligaciones fiscales relativas a la obligatoriedad de declarar las retenciones e ingresos a cuenta sobre rendimientos del trabajo y de actividades econ\u00f3micas, premios y determinadas ganancias patrimoniales e imputaciones de renta.</p> <p>La presentaci\u00f3n del Modelo 190 por v\u00eda telem\u00e1tica deber\u00e1 efectuarse en el plazo comprendido entre los d\u00edas 1 y 31 de enero de cada a\u00f1o, en relaci\u00f3n con las cantidades retenidas y los ingresos a cuenta efectuados correspondientes al a\u00f1o natural inmediato anterior.</p> <p>Con este m\u00f3dulo, el Modelo 190 se puede presentar a Hacienda como un fichero de texto v\u00e1lido, obtenido a trav\u00e9s del \"Generador de Declaraciones de Impuestos\".</p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#contenido-del-fichero-modelo-190","title":"Contenido del fichero Modelo 190","text":"<p>El fichero generado por Etendo, que cumple con el formato requerido por la Agencia Tributaria, contiene:</p> <ul> <li>Una primera secci\u00f3n, llamada registro tipo 1, con informaci\u00f3n relativa a la empresa que presenta el informe, CIF, nombre de la empresa, persona de contacto y resumen de los detalles presentados.</li> <li>Una segunda secci\u00f3n, llamada registros tipo 2, con la informaci\u00f3n relativa a la retenci\u00f3n e ingresos a cuenta practicada a la empresa agrupada por tercero y a\u00f1o.</li> </ul> <p>De esta forma, el informe puede contar con un \u00fanico registro de tipo 1 y cero o varios registros de tipo 2.</p> <p>Si el usuario abre el fichero generado con un editor de texto plano, ver\u00e1 una sucesi\u00f3n de n\u00fameros y letras pr\u00e1cticamente ilegibles para el ser humano. Si desea comprobar el contenido del fichero e incluso modificarlo antes de ser enviado a la Agencia Tributaria, puede importar dicho fichero en la AEAT (Ver abajo).</p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#instalacion-y-aplicacion-del-modulo","title":"Instalaci\u00f3n y aplicaci\u00f3n del m\u00f3dulo","text":"","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#instalacion","title":"Instalaci\u00f3n","text":"<p>Para su instalaci\u00f3n del Modelo 190 de Etendo, el usuario debe seguir los pasos que se describen a continuaci\u00f3n en funci\u00f3n de la situaci\u00f3n de partida:</p> <ul> <li>Instalaci\u00f3n de la \u00faltima versi\u00f3n disponible de Etendo\u00a0</li> <li>o la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola.</li> </ul> <p>Info</p> <p>Para la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola, visite Marketplace.\u00a0</p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#aplicacion-del-modulo","title":"Aplicaci\u00f3n del m\u00f3dulo","text":"<p>El m\u00f3dulo del Modelo AEAT 190 incluye el correspondiente \"conjunto de datos\" o \"configuraci\u00f3n\" que relaciona los tipos/rangos de impuestos (retenciones, en este caso) para Espa\u00f1a con los par\u00e1metros del 190, por tanto:</p> <ul> <li>Una vez instalado el m\u00f3dulo, la \"configuraci\u00f3n del Modelo 190\" debe aplicarse a la Entidad legal con Contabilidad que corresponda, en la ruta de aplicaci\u00f3n: Configuraci\u00f3n General || Organizaci\u00f3n || Gesti\u00f3n del m\u00f3dulo de Empresa.</li> <li>Importante, antes de aplicar esta configuraci\u00f3n es importante haber aplicado previamente la configuraci\u00f3n del m\u00f3dulo de impuestos, puesto que el Modelo 190 depende de \u00e9ste.</li> </ul> <p></p> <p>Al instalar y aplicar este nuevo m\u00f3dulo, el usuario podr\u00e1 comprobar que:</p> <ul> <li>se han creado un nuevo informe, el modelo 190 anual que se encuentra en la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera || Contabilidad || Configuraci\u00f3n || Declaraci\u00f3n de impuestos, tal y como se muestra en la siguiente imagen: </li> </ul> <p></p> <ul> <li>los rangos de impuestos se han asociado al correspondiente Par\u00e1metro del informe 190, con el fin de que las transacciones ligadas a dichos impuestos completadas y contabilizadas en el sistema, se tenga en cuenta en una u otra casilla/posici\u00f3n del fichero, tal y como se muestra en la siguiente imagen: </li> </ul> <p></p> <ul> <li>y, por \u00faltimo, el generador de declaraciones de impuestos permite la generaci\u00f3n del fichero para la presentaci\u00f3n de la declaraci\u00f3n-liquidaci\u00f3n del modelo 190, desde la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera || Contabilidad || Herramientas de an\u00e1lisis || Generador de declaraciones de impuestos, tal y como se muestra en la siguiente imagen: </li> </ul> <p></p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#que-se-incluye-en-el-modelo-190-generado-por-etendo","title":"\u00bfQu\u00e9 se incluye en el Modelo 190 generado por Etendo?","text":"<p>El informe generado por Etendo incluye \u00fanicamente las retenciones referentes a actividades econ\u00f3micas, puesto que es la informaci\u00f3n que el ERP maneja actualmente.</p> <p>El resto de informaci\u00f3n que se incluye en el Modelo 190, como retenciones e ingresos a cuenta por rendimientos del trabajo, determinadas ganancias patrimoniales o premios, no est\u00e1 registrada en el ERP y, por lo tanto, no se puede incluir en el informe.</p> <p>Sin embargo, si usted desea incluir esta informaci\u00f3n en su declaraci\u00f3n, tan s\u00f3lo debe importar el fichero generado por Etendo como se indica en Modelo 190.</p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#tipos-de-documentos-y-retenciones-que-se-incluyen-en-el-informe","title":"Tipos de documentos y retenciones que se incluyen en el informe","text":"<p>El modelo 190 es un informe de retenciones, as\u00ed que s\u00f3lo se tendr\u00e1n en cuenta facturas de compra con retenciones a terceros ubicados en Espa\u00f1a que est\u00e9n contabilizadas y pagadas (parcialmente o completamente).</p> <p>Dentro de las facturas de compra, se soportan todo el rango disponible actualmente:</p> <ul> <li>Facturas de compra (AP Invoice)</li> <li>Facturas de abono de compra (AP Credit Memo)</li> <li>Facturas de compra negativas (AP Invoice negativas)</li> <li>Facturas de tipo \"Reversal\" (Reversed Purchase Invoice)</li> </ul>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#retenciones-asociadas-a-parametros-del-informe","title":"Retenciones asociadas a par\u00e1metros del informe","text":"<p>Las retenciones que vienen asociadas a los par\u00e1metros del modelo 190 son:</p> <ul> <li>Details-Withholding_G_01, Clave tributaria G - subclave 01:<ul> <li>Prestaci\u00f3n servicios nacional 0% -15%R (-15%)</li> <li>Prestaci\u00f3n servicios nacional 16% -15%R (-15%)</li> <li>Prestaci\u00f3n servicios nacional 18% -15%R (-15%)</li> </ul> </li> <li>Details-Withholding_G_03, Clave tributaria G - subclave 03:<ul> <li>Prestaci\u00f3n servicios nacional 0% -7%R (-7%)</li> <li>Prestaci\u00f3n servicios nacional 16% -7%R (-7%)</li> <li>Prestaci\u00f3n servicios nacional 18% -7%R (-7%)</li> </ul> </li> <li>Details-Withholding_H_04, Clave tributaria H - subclave 04:<ul> <li>Prestaci\u00f3n servicios nacional 18% -1%R (-1%)</li> </ul> </li> </ul>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#retencion-proporcional-al-pago","title":"Retenci\u00f3n proporcional al pago","text":"<p>La retenci\u00f3n a incluir en el fichero del modelo 190 es proporcional a la percepci\u00f3n \u00edntegra efectivamente satisfecha durante el ejercicio correspondiente:</p> <ul> <li>por ejemplo, si tenemos una factura contabilizada pero pagada en un 50% en 2011, el informe del 190 del 2011 incluir\u00e1 la parte proporcional de la retenci\u00f3n pr\u00e1ctica en la factura, esto es, el 50%.</li> </ul> <p>Adem\u00e1s, si durante un ejercicio se han satisfecho facturas correspondientes a ejercicios anteriores, el fichero del modelo 190 incluir\u00e1 una l\u00ednea por cada uno de los pagos efectuados durante dicho ejercicio, correspondientes a facturas devengadas en a\u00f1os anteriores, indicando, por tanto, el a\u00f1o de devengo.</p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#cantidades-indebidas-o-excesivamente-percibidas-en-ejercicios-anteriores","title":"Cantidades indebidas o excesivamente percibidas en ejercicios anteriores","text":"<p>El fichero del modelo 190 tiene en cuenta los datos relativos a cantidades reintegradas por sus perceptores en el ejercicio, como consecuencia de haber sido indebida o excesivamente percibidas en ejercicios anteriores, en estos supuestos:</p> <ul> <li>cada reintegro se relaciona bajo la misma clave y, en su caso, subclave de percepci\u00f3n bajo la cual se incluyeron en su d\u00eda las cantidades indebidas o excesivamente satisfechas</li> <li>se refleja su importe en el campo \"Percepci\u00f3n \u00edntegra\"</li> <li>el campo \"Signo de la percepci\u00f3n \u00edntegra\" se cumplimenta con la letra \"N\" (importe negativo)</li> <li>y se consigna el valor (0) en el campo \"Retenciones practicadas\"</li> <li>finalmente, se hace constar en el campo \"Ejercicio devengo\" el a\u00f1o en el que se devengaron originariamente las percepciones reintegradas.</li> </ul> <p>Info</p> <p>Cuando se hayan producido reintegros procedentes de una misma persona o entidad que correspondan a percepciones originariamente devengadas en varios ejercicios, su importe se desglosa en varios apuntes o registros, de forma que cada uno de ellos refleje exclusivamente reintegros de percepciones correspondientes a un mismo ejercicio.</p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#generacion-del-modelo-190","title":"Generaci\u00f3n del modelo 190","text":"<p>Tal y como ya se ha explicado, el modelo 190, se genera como un fichero de texto v\u00e1lido conforme a los requerimientos de la AEAT desde la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera || Contabilidad || Herramientas de an\u00e1lisis || Generador de declaraciones de impuestos || Generador de declaraciones de impuestos</p> <p>Una vez que el usuario ha introducido los datos gen\u00e9ricos, tales como \"organizaci\u00f3n\", \"ejercicio\", \"periodo\" y otros, puede introducir los par\u00e1metros de entrada propios del 190:</p> <p></p> <p>En este caso, se puede especificar el nombre del fichero (si no queremos el que el sistema da por defecto), y la informaci\u00f3n necesaria en caso de generar una declaraci\u00f3n sustitutiva.</p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-190/#importacion-del-modelo-190-en-aeat","title":"Importaci\u00f3n del modelo 190 en AEAT","text":"<p>Una vez generado el fichero, el mismo tendr\u00e1 que cargarse en la AEAT en la p\u00e1gina correspondiente de Agencia Tributaria.</p>","tags":["Modelo 190","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/","title":"Modelo 303","text":"","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.module.aeat303.es</code> </p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#introduccion","title":"Introducci\u00f3n","text":"<p>El presente manual de usuario explica el contenido y funcionamiento del nuevo m\u00f3dulo comercial de Etendo, \"Modelo AEAT303\", compatible con Etendo 21.4 o versiones posteriores. Este m\u00f3dulo forma parte del bundle de Localizaci\u00f3n espa\u00f1ola, al igual que todas las dependencias relacionadas.</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#descripcion-del-modulo","title":"Descripci\u00f3n del M\u00f3dulo","text":"<p>El m\u00f3dulo Modelo AEAT303 - Impuesto sobre el Valor A\u00f1adido - Autoliquidaci\u00f3n, permite a las empresas cumplir con sus obligaciones fiscales de \"Autoliquidaci\u00f3n de IVA\" como diferencia entre el IVA Devengado y el IVA Deducible, a trav\u00e9s de la presentaci\u00f3n del Modelo 303 como un fichero de texto v\u00e1lido conforme a los requerimientos establecidos por la Agencia Tributaria espa\u00f1ola (Orden EHA/3786/2008).</p> <p>La estructura v\u00e1lida del fichero se puede encontrar en el siguiente link de la AEAT: Modelo 303 - Fichero.</p> <p>El fichero del modelo 303 contiene la siguiente informaci\u00f3n:</p> <ul> <li>Informaci\u00f3n gen\u00e9rica<ul> <li>NIF</li> <li>Apellidos o Raz\u00f3n Social - Nombre</li> <li>Ejercicio</li> <li>Periodo</li> </ul> </li> <li>IVA devengado (IVA repercutido en ventas), incluyendo:<ul> <li>IVA devengado conforme al r\u00e9gimen general - Base, Cuota y Tipo</li> <li>IVA devengado conforme al r\u00e9gimen especial de recargo de equivalencia, especificado por tipo de IVA - Base, Cuota y Tipo</li> <li>IVA devengado en las adquisiciones intracomunitarias de bienes- Base y Cuota</li> </ul> </li> <li>IVA Deducible (IVA soportado en compras), incluyendo:<ul> <li>operaciones interiores de bienes y servicios - Base y Cuota</li> <li>operaciones interiores de bienes de inversi\u00f3n - Base y Cuota</li> <li>importaciones de bienes - Base y Cuota</li> <li>importaciones de bienes de inversi\u00f3n - Base y Cuota</li> <li>adquisiciones intracomunitarias de bienes - Base y Cuota</li> <li>adquisiciones intracomunitarias de bienes de inversi\u00f3n - Base y Cuota</li> <li>regularizaciones</li> </ul> </li> <li>Diferencia - Resultado de la liquidaci\u00f3n como diferencia del IVA devengado - IVA soportado deducible, incluyendo otras operaciones tales como:<ul> <li>entregas intracomunitarias de bienes - Base</li> <li>exportaciones - Base</li> <li>operaciones no sujetas o de inversi\u00f3n de sujeto pasivo - Base</li> </ul> </li> <li>Datos bancarios y otros.</li> </ul> <p>Dicho fichero se genera en Etendo desde el Generador de declaraciones de impuestos que se encuentra en la ruta de aplicaci\u00f3n: \"Gesti\u00f3n Financiera || Contabilidad || Herramientas de an\u00e1lisis || Generador de declaraciones de impuestos\"</p> <p>El fichero se puede:</p> <ol> <li>pre-validar en la pagina wed de la AEAT, en el siguiente link: Formulario del 303 para su presentaci\u00f3n (predeclaraci\u00f3n).</li> <li>y, posteriormente presentar en el siguiente link de la AEAT: Presentaci\u00f3n del Modelo..</li> </ol> <p>La autoliquidaci\u00f3n de IVA puede ser:</p> <ul> <li>\"A ingresar\" (casilla 48&gt;0), en el caso de que el IVA Devengado &gt; IVA deducible. El IVA a ingresar se reflejar\u00e1 en la casilla [I], posici\u00f3n 860.</li> <li>\"A compensar\" (casilla 48&lt;0), en el caso de que el IVA Devengado &lt; IVA deducible. El IVA a compensar se reflejar\u00e1 en la casilla [49], posici\u00f3n 804.</li> <li>\"A devolver\" (casilla 48&lt;0 e inscripci\u00f3n en el Registro de devoluci\u00f3n mensual), en el caso de que el IVA Devengado &lt; IVA deducible. El IVA a devolver se reflejar\u00e1 en la casilla [50], posici\u00f3n 822.</li> <li>\"Cero\" o \"Sin actividad\" (casilla 48=0).</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#presentacion-del-modelo-303","title":"Presentaci\u00f3n del Modelo 303","text":"<p>Los obligados a presentar el modelo 303 son:</p> <ul> <li>Los sujetos pasivos que realicen actividades a las que aplique el R\u00e9gimen General del Impuesto (IVA) o cualquier otro de los reg\u00edmenes del mismo, a excepci\u00f3n del R\u00e9gimen especial de agricultura, ganader\u00eda y pesca, del R\u00e9gimen de recargo de equivalencia y del R\u00e9gimen Simplificado.</li> </ul> <p>La presentaci\u00f3n del modelo 303 puede ser Mensual o Trimestral.</p> <p>La presentaci\u00f3n ser\u00e1 obligatoria por v\u00eda telem\u00e1tica (fichero de texto v\u00e1lido) para los sujetos pasivos que:</p> <ul> <li>tengan forma jur\u00eddica de sociedad an\u00f3nima o sociedad de responsabilidad limitada</li> <li>y/o est\u00e9n inscritos en el \"R\u00e9gimen de devoluci\u00f3n mensual\".</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#novedades-a-partir-del-1-de-julio-de-2010","title":"Novedades a partir del 1 de julio de 2010","text":"<p>MODIFICACI\u00d3N TIPOS IMPOSITIVOS IVA</p> <p>La Ley 26/2009 de Presupuestos Generales del Estado para 2010, modific\u00f3 los tipos general y reducido del Impuesto sobre el Valor A\u00f1adido con efectos a partir del 1 de julio, de forma que el tipo general pasa del 16% al 18% y el tipo reducido pasa del 7% al 8%, sin que se haya producido alteraci\u00f3n alguna en relaci\u00f3n con el tipo superreducido del 4% y con los tipos del recargo de equivalencia.</p> <p>Cumplimentaci\u00f3n de declaraciones</p> <p>En las autoliquidaciones de IVA, modelo 303, correspondientes a los per\u00edodos iniciados desde julio de 2010 (correspondientes al mes 07 \u00f3 al 3T) , se puede dar la situaci\u00f3n de que en un mismo per\u00edodo de liquidaci\u00f3n hayan de reflejarse operaciones gravadas seg\u00fan los nuevos tipos impositivos (18%, 8%) junto con otras devengadas en per\u00edodos anteriores y a las que les sean de aplicaci\u00f3n los tipos vigentes hasta el 30 de junio (7% \u00f3 16%).</p> <p>En estos supuestos deber\u00e1 consignarse en las casillas correspondientes la suma algebraica de las bases imponibles. De igual forma se proceder\u00e1 con las casillas correspondientes a las cuotas devengadas.</p> <p>En cuanto a las casillas relativas a los tipos impositivos, se consignar\u00e1 el tipo resultante del cociente entre la cuota y la base imponible declarada, cualquiera que sea el resultado y si este cociente no da un n\u00famero entero, se har\u00e1 constar los dos primeros decimales del n\u00famero resultante.</p> <p>En las autoliquidaciones modelo 303 correspondientes al 1T \u00f3 2T de 2010 o a los meses 01 a 06 de 2010 no se puedan consignar bases ni cuotas a los nuevos tipos impositivos del 18% \u00f3 8%.</p> <p>Info</p> <p>Los cambios expuestos en esta secci\u00f3n, implican una modificaci\u00f3n del contenido de los datos de referencia del m\u00f3dulo.</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#novedades-a-partir-del-1-de-septiembre-de-2012","title":"Novedades a partir del 1 de septiembre de 2012","text":"<p>MODIFICACI\u00d3N TIPOS IMPOSITIVOS IVA Y RECARGO DE EQUIVALENCIA</p> <p>El Real Decreto Ley 20/2012 de medidas para garantizar la estabilidad presupuestaria y de fomento de la competitividad, modific\u00f3 los tipos general y reducido del Impuesto sobre el Valor A\u00f1adido con efectos a partir del 1 de septiembre, de forma que el tipo general pasa del 18% al 21% y el tipo reducido pasa del 8% al 10%, sin que se haya producido alteraci\u00f3n alguna en relaci\u00f3n con el tipo superreducido del 4%. Igualmente, los tipos de recargo de equivalencia pasan del 4% al 5,2% y del 1% al 1,4%.</p> <p>Cumplimentaci\u00f3n de declaraciones</p> <p>En las autoliquidaciones de IVA, modelo 303, correspondientes a los per\u00edodos iniciados desde septiembre de 2012 (correspondientes al mes 09 \u00f3 al 3T), se puede dar la situaci\u00f3n de que en un mismo per\u00edodo de liquidaci\u00f3n hayan de reflejarse operaciones gravadas seg\u00fan los nuevos tipos impositivos junto con otras devengadas en per\u00edodos anteriores y a las que les sean de aplicaci\u00f3n los tipos vigentes hasta el 30 de agosto.</p> <p>En estos supuestos, deber\u00e1 consignarse en las casillas correspondientes la suma algebraica de las bases imponibles. De igual forma se proceder\u00e1 con las casillas correspondientes a las cuotas devengadas.</p> <p>En cuanto a las casillas relativas a los tipos impositivos, se consignar\u00e1 el tipo resultante del cociente entre la cuota y la base imponible declarada, cualquiera que sea el resultado y si este cociente no da un n\u00famero entero, se har\u00e1 constar los dos primeros decimales del n\u00famero resultante.</p> <p>En las autoliquidaciones modelo 303 correspondientes al 1T \u00f3 2T de 2012 o a los meses 01 a 08 de 2012 no se puedan consignar bases ni cuotas a los nuevos tipos impositivos.</p> <p>Info</p> <p>Los cambios expuestos en esta secci\u00f3n, implican una modificaci\u00f3n del contenido de los datos de referencia del m\u00f3dulo.</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#instalacion-y-aplicacion-del-modulo","title":"Instalaci\u00f3n y aplicaci\u00f3n del m\u00f3dulo","text":"","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#instalacion","title":"Instalaci\u00f3n","text":"<p>Info</p> <p>Para la instalaci\u00f3n del m\u00f3dulo \u201cAEAT - Modelo 303\u201d visite Marketpace. </p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#aplicacion-del-modulo","title":"Aplicaci\u00f3n del m\u00f3dulo","text":"<p>El m\u00f3dulo del Modelo 303 incluye unos datos de referencia que relaciona los tipos/rangos de impuestos para Espa\u00f1a con los par\u00e1metros del 303, por tanto:</p> <ul> <li>Una vez insalado el m\u00f3dulo, los datos de referencia deben aplicarse a la Entidad legal con Contabilidad que corresponda, en la ruta de aplicaci\u00f3n: Configuraci\u00f3n General || Organizaci\u00f3n || Gesti\u00f3n del m\u00f3dulo de Empresa.</li> </ul> <p></p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#contenido-del-modulo","title":"Contenido del m\u00f3dulo","text":"<p>Al instalar y aplicar este nuevo m\u00f3dulo, el usuario podr\u00e1 comprobar que:</p> <ul> <li>Se han creado dos nuevos informes, el modelo 303 mensual y el trimestral para la organizaci\u00f3n/es en la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera || Contabilidad || Configuraci\u00f3n || Declaraci\u00f3n de impuestos, tal y como se muestra en la siguiente imagen: </li> </ul> <p></p> <ul> <li>La pesta\u00f1a \"Secci\u00f3n de Impuestos\" contiene la definici\u00f3n de toda la informaci\u00f3n que se va a incluir en el modelo 303 y, por tanto, en el fichero del 303 que se generar\u00e1 desde la ventana \"Generador de Declaraciones de Impuestos\". De todas estas secciones cabe destacar las secciones \"IVA Devengado\", \"IVA Deducible\" y \"Diferencia\".     Por ejemplo, la secci\u00f3n \"IVA Devengado\" incluye los par\u00e1metros siguientes en la pesta\u00f1a \"Par\u00e1metro de declaraci\u00f3n\":<ul> <li>IVA Devengado - R\u00e9gimen Ordinario</li> <li>IVA Devengado - Recargo de Equivalencia</li> <li>IVA Devengado - Adquisiciones Intracomunitarias</li> </ul> </li> </ul> <p>Estos par\u00e1metros se ligan a los tipos de impuestos en funci\u00f3n de que las operaciones ligadas a ellos deban declararse, por ejemplo, como parte del IVA Devengado en R\u00e9gimen Ordinario o bien como parte del IVA Devengado por Recargo de Equivalencia.</p> <p></p> <ul> <li>Por tanto, los rangos de impuestos se han asociado al correspondiente par\u00e1metro del 303, con el fin de que las transacciones completadas y contabilizadas ligadas a dichos impuestos, se tenga en cuenta en una u otra casilla/posici\u00f3n del fichero. </li> </ul> <p></p> <ul> <li>Por \u00faltimo, el generador de declaraciones de impuestos permite la generaci\u00f3n del fichero para la presentaci\u00f3n de la declaraci\u00f3n-liquidaci\u00f3n del modelo 303, desde la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera || Contabilidad || Herramientas de an\u00e1lisis || Generador de declaraciones de impuestos, tal y como se muestra en la siguiente imagen: </li> </ul> <p></p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#configuracion","title":"Configuraci\u00f3n","text":"","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#configuracion-de-impuestos-iva","title":"Configuraci\u00f3n de impuestos / IVA","text":"<p>El usuario deber\u00e1 navegar a la ruta de aplicaci\u00f3n: \"Configuraci\u00f3n General / Gesti\u00f3n del m\u00f3dulo de Empresa\", seleccionar la organizaci\u00f3n legal con contabilidad y aplicar los m\u00f3dulos en el orden especificado:</p> <ul> <li>primero el m\u00f3dulo de impuestos si no est\u00e1 aplicado previamente y a nivel (*)</li> <li>y despu\u00e9s el m\u00f3dulo del 303 a nivel Organizaci\u00f3n Legal con contabilidad</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#configuracion-del-modelo-303","title":"Configuraci\u00f3n del modelo 303","text":"<p>La configuraci\u00f3n del modelo 303 se instala por defecto y se puede comprobar en la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera//Contabilidad//Configuraci\u00f3n//Declaraci\u00f3n de Impuestos.</p> <p>Tanto para el modelo 303 mensual como trimestral en la pesta\u00f1a \"Secci\u00f3n de declaraci\u00f3n\" se han creado 11 secciones, una por cada grupo de informaci\u00f3n a incluir a la hora de generar el fichero del Modelo 303:</p> <p></p> <ul> <li>Fichero<ul> <li>Esta secci\u00f3n contiene un par\u00e1metro de tipo \"Entrada\", para que el usuario pueda introducir el nombre del fichero 303 al generarlo.</li> </ul> </li> <li>Tipo de declaraci\u00f3n<ul> <li>Esta secci\u00f3n contiene a 8 par\u00e1metros de tipo \"Entrada\", uno por cada tipo de declaraci\u00f3n, para que el usuario pueda marcar el correspondiente al generar el fichero.<ul> <li>Compensaci\u00f3n</li> <li>Devoluci\u00f3n</li> <li>Ingreso</li> <li>Resultado cero</li> <li>Ingreso domiciliaci\u00f3n bancaria</li> <li>Ingreso cuenta corriente tributaria</li> <li>Devoluci\u00f3n cuenta corriente tributaria</li> <li>Devoluci\u00f3n por transferencia al extranjero</li> </ul> </li> </ul> </li> <li>Sin Actividad<ul> <li>Esta secci\u00f3n contiene 1 par\u00e1metro de tipo \"Entrada\" para que el usuario pueda marcar una liquidaci\u00f3n de IVA como \"Sin Actividad\".</li> </ul> </li> <li>Constantes<ul> <li>Esta secci\u00f3n incluye todos los valores constantes que requiere el 303, tales como:<ul> <li>Modelo = 303</li> <li>P\u00e1gina = 01</li> <li>Identificador de fin de registro = </li> </ul> </li> </ul> </li> <li>Identificaci\u00f3n<ul> <li>Esta secci\u00f3n incluye 4 par\u00e1metros de \"Salida\" que se corresponden con datos de identificaci\u00f3n de la organizaci\u00f3n para la cual se genera el fichero y 1 par\u00e1metro de \"Entrada\" de tipo \"checkbox\" que es \"Inscrito en el Registro de devoluci\u00f3n mensual\" que podr\u00eda configurarse como constante.</li> </ul> </li> <li>IVA Devengado<ul> <li>Esta secci\u00f3n incluye 3 par\u00e1metros de tipo \"Salida\", uno por cada tipo de IVA devengado.<ul> <li>\"IVA Devengado - R\u00e9gimen General\" de IVA. Este par\u00e1metro est\u00e1 ligado a los rangos de impuestos cuyas operaciones tributan en r\u00e9gimen general, por ejemplo, las entregas de bienes y servicios dentro del territorio de aplicaci\u00f3n del impuesto.</li> <li>\"IVA Devengado - Recargo de Equivalencia\". Este par\u00e1metro est\u00e1 ligado a los rangos de impuestos cuyas operaciones tributan en r\u00e9gimen de recargo de equivalencia, por ejemplo, las entregas de bienes a minoristas dentro del territorio de aplicaci\u00f3n del impuesto.</li> <li>\"IVA Devengado - Adquisiciones Intracomunitarias\u201d. Este par\u00e1metro est\u00e1 ligado a los rangos de impuestos de adquisiciones intracomunitarias de bienes</li> </ul> </li> </ul> </li> </ul> <p>El listado completo de los rangos de impuesto ligados a cada uno de estos par\u00e1metros se puede consultar en el anexo al final de este documento.</p> <ul> <li>IVA Deducible<ul> <li>Esta secci\u00f3n incluye un total de 12 par\u00e1metros, 6 par\u00e1metros de tipo \"Salida\" y otros 6 de tipo \"Entrada\".     Los par\u00e1metros de tipo \"Salida\" se corresponden con el tipo de IVA Deducible del que se puede sacar informaci\u00f3n de Etendo, por ejemplo \"IVA Deducible por cuotas soportadas en operaciones interiores corrientes\".     Los par\u00e1metros de tipo \"Entrada\" se corresponden con tipos de IVA Deducible para los que no se puede sacar informaci\u00f3n de Etendo, por ejemplo \"IVA Deducible por compensaci\u00f3n R\u00e9gimen Esp. A.G y P.(cuota)</li> </ul> </li> </ul> <p>El listado completo de los rangos de impuesto ligados a cada uno de estos par\u00e1metros se puede consultar en el anexo al final de este documento.</p> <ul> <li>Diferencia<ul> <li>Esta secci\u00f3n incluye 4 par\u00e1metros de tipo \"Entrada\" para que el usuario pueda introducir la siguiente informaci\u00f3n a la hora de generar el fichero:<ul> <li>% Atribuible a la Administraci\u00f3n del Estado %.     Los sujetos pasivos que tributen conjuntamente en la Administraci\u00f3n del Estado y en las Diputaciones del Pa\u00eds Vasco o a la Comunidad Foral de Navarra, deben hacer constar el % del volumen de operaciones en territorio com\u00fan y que, por tanto, deben tributar en la Administraci\u00f3n del Estado; el resto de sujetos pasivos har\u00e1n costar un 100%.     Este dato podr\u00eda configurarse como constante.</li> <li>Cuotas a compensar de periodos anteriores. Los sujetos pasivos deben hacer constar, cuando sea aplicable, las cuotas positivas a compensar procedentes de periodos anteriores.</li> <li>Resultado de la regularizaci\u00f3n anual. En la \u00faltima liquidaci\u00f3n del a\u00f1o se har\u00e1 constar el resultado de la regularizaci\u00f3n anual por inversiones</li> <li>A deducir (autoliquidaci\u00f3n complementaria), exclusivamente en el caso de declaraci\u00f3n complementaria se har\u00e1 constar el resultado de la \u00faltima declaraci\u00f3n presentada por el mismo concepto, correspondiente al mismo ejercicio y periodo.</li> </ul> </li> <li>Y, adem\u00e1s, 3 par\u00e1metros de salida correspondientes a operaciones no sujetas que originan derecho a deducci\u00f3n:<ul> <li>Entregas Intracomunitarias de bienes. Este par\u00e1metro est\u00e1 ligado a los rangos de impuestos que se listan a continuaci\u00f3n:<ul> <li>Entregas intracomunitarias (%N=&gt;0%)</li> <li>Entregas intracomunitarias (%R=&gt;0%)</li> <li>Entregas intracomunitarias (%SR=&gt;0%)</li> <li>Entregas intracomunitarias Bienes Inversi\u00f3n (%N=&gt;0%)</li> </ul> </li> <li>Exportaciones y Operaciones asimiladas. Este par\u00e1metro est\u00e1 ligado a los rangos de impuestos que se listan a continuaci\u00f3n:<ul> <li>Entregas a Canarias,Ceuta y Melilla (%N=&gt;0%)</li> <li>Entregas a Canarias,Ceuta y Melilla (%SR=&gt;0%)</li> <li>Entregas a Canarias,Ceuta y Melilla (%R=&gt;0%)</li> <li>Exportaciones (%N=&gt;0%)</li> <li>Exportaciones (%R=&gt;0%)</li> <li>Exportaciones (%SR=&gt;0%)</li> <li>Exportaciones Bienes Inversi\u00f3n (%N=&gt;0%)</li> </ul> </li> <li>Operaciones no sujetas o con inversi\u00f3n del sujeto pasivo. Este par\u00e1metro est\u00e1 ligado a losrangos de impuestos que se listan a continuaci\u00f3n:<ul> <li>Servicios a Canarias, Ceuta y Melilla (%N=&gt;0%)</li> <li>Servicios a Canarias, Ceuta y Melilla (%SR=&gt;0%)</li> <li>Servicios a Canarias, Ceuta y Melilla (%R=&gt;0%)</li> <li>Servicios prestados internacional (%N=&gt;0%)</li> <li>Servicios prestados internacional (%R=&gt;0%)</li> <li>Servicios prestados UE (%N=&gt;0%)</li> <li>Servicios prestados UE (%R=&gt;0%)</li> </ul> </li> </ul> </li> </ul> </li> <li>Devoluci\u00f3n<ul> <li>Esta secci\u00f3n incluye un par\u00e1metro de tipo \"Entrada\" que es la cuenta bancaria a utilizar en caso de declaraci\u00f3n a devolver. Este dato podr\u00eda configurarse como constante.</li> </ul> </li> <li>Ingreso<ul> <li>Esta secci\u00f3n incluye 5 par\u00e1metros de tipo \"Entrada\" relativos a declaraciones \"A ingresar\":<ul> <li>la cuenta bancaria a utilizar en caso de declaraci\u00f3n a ingresar. Este dato podr\u00eda configurarse como constante.</li> <li>No consta</li> <li>Efectivo</li> <li>Adeudo en cuenta</li> <li>Domiciliaci\u00f3n</li> </ul> </li> </ul> </li> <li>Complementaria<ul> <li>Esta secci\u00f3n incluye 2 par\u00e1metros de tipo entrada:<ul> <li>Declaraci\u00f3n complementaria, como un checkbox (si/no)</li> <li>N\u00ba Justificate, de la declaraci\u00f3n anterior que se complementa.</li> </ul> </li> </ul> </li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#tipos-de-documento-y-fecha","title":"Tipos de documento y fecha","text":"<p>A la hora de generar el fichero de texto v\u00e1lido para declarar el Modelo 303 de liquidaci\u00f3n de IVA, se tiene en cuenta:</p> <ul> <li>El IVA (soportado) deducible registrado y contabilizado en las Facturas/Abonos de Compra, que el usuario puede registrar en la ruta de aplicaci\u00f3n: Gesti\u00f3n de Compras || Transacciones || Factura (Proveedor), para los siguientes tipos de documento:<ul> <li>AP Invoice (Factura de compra)</li> <li>AP Invoice negativa (Abono de compra)</li> <li>AP Credit Memo (Abono de compra)</li> </ul> </li> <li>El IVA devengado registrado y contabilizado en las Facturas/Abonos de Venta que el usuario puede emitir en la ruta de aplicaci\u00f3n:\u00a0\u00a0\u00a0 Gesti\u00f3n de Ventas || Transacciones || Factura (Cliente), para los siguientes tipos de documento:<ul> <li>AR Invoice (Factura de venta)</li> <li>AR Invoice negativa (Abono de venta)</li> <li>AR Credit Memo (Abono de venta)</li> </ul> </li> </ul> <p>La actual versi\u00f3n del m\u00f3dulo no tiene en cuenta los tipos de documento de Etendo sin APRM que se enumeran a continuaci\u00f3n, y que podr\u00edan estar ligados a un rango de impuesto, por considerarse que no se deber\u00edan utilizar para la contabilizaci\u00f3n de facturas que incluyan IVA:</p> <ul> <li>Extracto bancario</li> <li>Diario de Caja</li> <li>Liquidaciones y asientos manuales</li> </ul> <p>La fecha que se tiene en cuenta para la inclusi\u00f3n de las facturas de compra/venta en la declaraci\u00f3n/fichero del 303 es la fecha de contabilizaci\u00f3n, lo cual que implica que:</p> <ul> <li>Las facturas de compra/venta con fecha de contabilizaci\u00f3n desde el 01 de junio del 2010 hasta 30 de junio del 2010, se incluir\u00e1n en la declaraci\u00f3n Mensual correspondiente al mes de junio del 2010; en caso de tipo de declaraci\u00f3n mensual, a presentar antes del 20 de agosto del 2010.</li> <li>Las facturas de compra/venta con fecha de contabilizaci\u00f3n desde el 01 de abril del 2010 hasta el 30 de junio del 2010, se incluir\u00e1n en la declaraci\u00f3n trimestral correspondiente al segundo trimestre del a\u00f1o; en caso de tipo de declaraci\u00f3n trimestral, a presentar antes del 20 de agosto del 2010.</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#caso-de-usuario","title":"Caso de Usuario","text":"","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-devengado-escenarios","title":"IVA Devengado - escenarios","text":"<p>Tal y como se ha explicado con anterioridad, el principal objetivo del modelo 303 es que las empresas espa\u00f1olas puedan autoliquidar el IVA regularmente como diferencia entre el IVA Devengado en facturas emitidas de Venta y el IVA soportado deducible.</p> <p>El fichero del 303 recoge desde la posici\u00f3n 72 a la 357, la base imponible, tipo y cuota del IVA devengado en las operaciones de venta bajo el r\u00e9gimen general, especificando por tipo de IVA (16%/18%, 7%/8% y 4%), r\u00e9gimen de recargo de equivalencia especificado por tipo de IVA (4%, 1% y 0,5%) as\u00ed como la base y cuota del IVA devengado en las adquisiciones intracomunitarias.</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-devengado-regimen-general","title":"IVA devengado - r\u00e9gimen general","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario contabilizar\u00e1 en Etendo las facturas/abonos de venta emitidas tanto por la entrega de bienes como por la prestaci\u00f3n de servicios dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares).</p> <p>Se tendr\u00e1n en cuenta:</p> <ol> <li>las facturas/abonos emitidas por la venta de productos o por la prestaci\u00f3n de servicios, contabilizadas en la ruta de aplicaci\u00f3n \"Gesti\u00f3n de Ventas || Transacciones || Factura (Cliente)\"</li> <li>las facturas/abonos financieros emitidos desde la ruta de aplicaci\u00f3n: \"Gesti\u00f3n de Ventas || Transacciones || Factura (Cliente)\", marcados como \"Factura Financiera\" a nivel de l\u00ednea de factura de venta, ligadas a un concepto contable previamente creado y asignado a una categor\u00eda de impuesto.</li> <li>las l\u00edneas de impuesto manualmente introducidas por el usuario en la ruta de aplicaci\u00f3n: \"Gesti\u00f3n de Ventas || Transacciones || Factura (Cliente) - Cabecera - Impuestos\"</li> </ol> <p>El fichero del 303 recoger\u00e1 dichas transacciones dentro del mes/trimestre correspondiente, teniendo en cuenta la fecha de contabilizaci\u00f3n de dichas facturas, ya que el IVA se devenga cuando se realiza la puesta a disposici\u00f3n de los bienes o la prestaci\u00f3n del servicio lo cual conlleva la facturaci\u00f3n correspondiente, facturas que deben contabilizarse para tenerse en cuenta.</p> <p>Los productos/servicios/conceptos contables tiene que estar ligados a una de las siguientes categor\u00edas de impuestos:</p> <ul> <li>IVA Normal</li> <li>IVA Reducido</li> <li>IVA Super reducido</li> <li>IVA Normal Servicios</li> <li>IVA Reducido Servicios</li> <li>IVA Super Reducido Servicios</li> <li>IVA Normal B. Inmuebles</li> <li>IVA Reducido B. Inmuebles</li> <li>IVA Normal Bienes Inversi\u00f3n</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Devengado - R\u00e9gimen General\".</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-devengado-regimen-de-recargo-de-equivalencia","title":"IVA devengado - r\u00e9gimen de recargo de equivalencia","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario contabilizar\u00e1 en Etendo las facturas/abonos de venta emitidas por la entrega de bienes dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares) a terceros minoristas que se encuentren en r\u00e9gimen de recargo de equivalencia.</p> <p>En estos casos, el emisor de la factura incluye, adem\u00e1s del IVA, el tipo (%) de recargo correspondiente.</p> <p>Se tendr\u00e1n en cuenta:</p> <ol> <li>las facturas/abonos emitidas por la venta de productos, contabilizadas en la ruta de aplicaci\u00f3n \"Gesti\u00f3n de Ventas || Transacciones || Factura (Cliente)\"</li> <li>las facturas/abonos financieros emitidos desde la ruta de aplicaci\u00f3n: \"Gesti\u00f3n de Ventas || Transacciones || Factura (Cliente)\", marcados como \"Factura Financiera\" a nivel de l\u00ednea de factura de venta, ligadas a un concepto contable previamente creado y asignado a una categor\u00eda de impuesto.</li> <li>las lineas de impuesto manualmente introducidas en el usuario en la ruta de aplicaci\u00f3n: \"Gesti\u00f3n de Ventas || Transacciones || Factura (Cliente) - Cabecera - Impuestos\"</li> </ol> <p>El fichero del 303 recoger\u00e1 dichas transacciones dentro del mes/trimestre correspondiente, teniendo en cuenta la fecha de contabilizaci\u00f3n de dichas facturas, ya que el IVA se devenga cuando se realiza la puesta a disposici\u00f3n de los bienes, lo cual conlleva la facturaci\u00f3n correspondiente, facturas que deben contabilizarse para tenerse en cuenta.</p> <p>Los productos/servicios/conceptos contables tiene que estar ligados a una de las siguientes categor\u00edas de impuestos:</p> <ul> <li>IVA Normal</li> <li>IVA Reducido</li> <li>IVA Super reducido</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Devengado - Recargo de Equivalencia\".</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-devengado-adquisiciones-intracomunitarias","title":"IVA devengado - Adquisiciones intracomunitarias","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario registrar\u00e1 y contabilizar\u00e1 en Etendo las facturas/abonos de compra recibidos de sus proveedores/acreedores (no residentes en territorio de aplicaci\u00f3n del impuesto, pero residentes en la Uni\u00f3n Europea que son operadores intracomunitarios), por la adquisici\u00f3n de bienes dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares).</p> <p>Se tendr\u00e1n en cuenta:</p> <ol> <li>las facturas/abonos registradas en el sistema por la compra de productos, contabilizadas en la ruta de aplicaci\u00f3n \"Gesti\u00f3n de Compras || Transacciones || Factura (Proveedor)\"</li> <li>las facturas/abonos financieros emitidos desde la ruta de aplicaci\u00f3n: \"\"Gesti\u00f3n de Compras || Transacciones || Factura (Proveedor)\", marcados como \"Factura Financiera\" a nivel de l\u00ednea de factura de compra, ligadas a un concepto contable previamente creado y asignado a una categor\u00eda de impuesto.</li> <li>las l\u00edneas de impuesto manualmente introducidas en el usuario en la ruta de aplicaci\u00f3n: \"Gesti\u00f3n de Compras || Transacciones || Factura (Proveedor) - Cabecera - Impuestos\"</li> </ol> <p>Los productos/conceptos contables tienen que estar relacionados con una de las siguientes categor\u00edas de impuesto:</p> <ul> <li>IVA Normal</li> <li>IVA Reducido</li> <li>IVA Super Reducido</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Devengado - Adquisiciones Intracomunitarias\".</p> <p>Es importante recalcar que el caso de las adquisiciones intracomunitarias se considerar\u00e1n realizadas en el territorio de aplicaci\u00f3n del impuesto cuando:</p> <ul> <li>se encuentre en este territorio el lugar de la llegada de la expedici\u00f3n o transporte con destino al adquirente.</li> <li>y cuando el adquirente haya comunicado al vendedor el n\u00famero de identificaci\u00f3n a efectos del impuesto sobre el Valor A\u00f1adido atribuido por la Administraci\u00f3n espa\u00f1ola.</li> </ul> <p>Este r\u00e9gimen se caracteriza por el gravamen en destino de las entregas intracomunitarias realizadas entre empresas. Esto significa que se aplique una exenci\u00f3n en el pa\u00eds de origen y que se considere realizado el hecho imponible en el de destino, con motivo de la adquisici\u00f3n. A esto se le denomina adquisici\u00f3n intracomunitaria de bienes, y se altera de esta manera la regla general del impuesto, al ser el sujeto pasivo del impuesto el que compra y no el que vende.</p> <p>El sujeto pasivo/adquiriente es, por tanto, quien debe liquidar el IVA y, por tanto, deber\u00e1 autorrepercutirse el IVA y a su vez deduc\u00edrselo, si aplica. Es por ello que este tipo de operaciones, como las operaciones de Inversi\u00f3n de Sujeto Pasivo aparecen tanto en la secci\u00f3n de IVA devengado como en la secci\u00f3n de IVA deducible.</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-escenarios","title":"IVA Deducible - escenarios","text":"<p>Tal y como se ha explicado con anterioridad, el principal objetivo del modelo 303 es que las empresas espa\u00f1olas pueda autoliquidar el IVA regularmente como diferencia entre el IVA Devengado en facturas emitidas de Venta y el IVA soportado deducible.</p> <p>El fichero del 303 recoge desde la posici\u00f3n 357 a la 612, la base imponible y cuota, en la mayor\u00eda de los casos, del IVA soportado que es deducible en operaciones interiores, importaciones y adquisiciones intracomunitarias de bienes corrientes (bienes y servicios) y de bienes de inversi\u00f3n.</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-cuotas-soportadas-en-operaciones-interiores-corrientes","title":"IVA deducible - cuotas soportadas en operaciones interiores corrientes","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario registrar\u00e1 y contabilizar\u00e1 en Etendo las facturas/abonos de compra recibidos de sus proveedores/acreedores tanto por la compra de bienes como por los servicios prestados a la Empresa dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares), as\u00ed como las facturas financieras.</p> <p>Los productos/servicios/conceptos contables tienen que estar relacionados con una de las siguientes categor\u00edas de impuesto:</p> <ul> <li>IVA Normal</li> <li>IVA Reducido</li> <li>IVA Super Reducido</li> <li>IVA Normal Servicios</li> <li>IVA Reducido Servicios</li> <li>IVA Super Reducido Servicios</li> <li>IVA Normal B. Inmuebles</li> <li>IVA Reducido B. Inmuebles</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Deducible - Por cuotas soportadas en operaciones interiores corrientes\".</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-operaciones-interiores-bienes-de-inversion","title":"IVA deducible - operaciones interiores bienes de inversi\u00f3n","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario registrar\u00e1 y contabilizar\u00e1 en Etendo las facturas/abonos de compra recibidos de sus proveedores/acreedores tanto por la compra de bienes de inversi\u00f3n (se consideran bienes de inversi\u00f3n los bienes con un valor superior a 3.000,00 \u20ac) dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares), as\u00ed como las facturas financieras.</p> <p>Los productos/servicios/conceptos contables tienen que estar relacionados con una de las siguientes categor\u00edas de impuesto:</p> <ul> <li>IVA Normal Bienes Inversi\u00f3n</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Deducible - Operaciones interiores bienes de inversi\u00f3n\".</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-por-cuotas-devengadas-en-importaciones-de-bienes","title":"IVA deducible - por cuotas devengadas en importaciones de bienes","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario registrar\u00e1 y contabilizar\u00e1 en Etendo las facturas/abonos de compra recibidos de sus proveedores/acreedores (no residentes en territorio de aplicaci\u00f3n del impuesto), por la importaci\u00f3n de bienes dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares), as\u00ed como las facturas financieras.</p> <p>Los productos/conceptos contables tienen que estar relacionados con una de las siguientes categor\u00edas de impuesto:</p> <ul> <li>IVA Normal</li> <li>IVA Reducido</li> <li>IVA Super Reducido</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Deducible - Por cuotas devengadas en las importaciones de bienes corrientes\".</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-importaciones-bienes-de-inversion","title":"IVA deducible - importaciones bienes de inversi\u00f3n","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario registrar\u00e1 y contabilizar\u00e1 en Etendo las facturas/abonos de compra recibidos de sus proveedores/acreedores (no residentes en territorio de aplicaci\u00f3n del impuesto), por la importaci\u00f3n de bienes de inversi\u00f3n dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares), as\u00ed como las facturas financieras.</p> <p>Los productos/conceptos contables tienen que estar relacionados con una de las siguientes categor\u00edas de impuesto:</p> <ul> <li>IVA Normal Bienes Inversi\u00f3n</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Deducible - Importaciones bienes de inversi\u00f3n\".</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-adquisiciones-intracomunitarias-de-bienes","title":"IVA deducible - adquisiciones intracomunitarias de bienes","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario registrar\u00e1 y contabilizar\u00e1 en Etendo las facturas/abonos de compra recibidos de sus proveedores/acreedores (no residentes en territorio de aplicaci\u00f3n del impuesto, pero residentes en la Uni\u00f3n Europea que son operadores intracomunitarios), por la adquisici\u00f3n de bienes dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares), as\u00ed como las facturas financieras.</p> <p>Los productos/conceptos contables tienen que estar relacionados con una de las siguientes categor\u00edas de impuesto:</p> <ul> <li>IVA Normal</li> <li>IVA Reducido</li> <li>IVA Super Reducido</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Deducible - adquisiciones intracomunitarias de bienes corrientes\".</p> <p>Tal y como ya se ha mencionado, es importante recalcar que el caso de las adquisiciones intracomunitarias se considerar\u00e1n realizadas en el territorio de aplicaci\u00f3n del impuesto cuando:</p> <ul> <li>se encuentre en este territorio el lugar de la llegada de la expedici\u00f3n o transporte con destino al adquirente.</li> <li>y cuando el adquirente haya comunicado al vendedor el n\u00famero de identificaci\u00f3n a efectos del impuesto sobre el Valor A\u00f1adido atribuido por la Administraci\u00f3n espa\u00f1ola.</li> </ul> <p>Este r\u00e9gimen se caracteriza por el gravamen en destino de las entregas intracomunitarias realizadas entre empresas. Esto significa que se aplique una exenci\u00f3n en el pa\u00eds de origen y que se considere realizado el hecho imponible en el de destino, con motivo de la adquisici\u00f3n. A esto se le denomina adquisici\u00f3n intracomunitaria de bienes, y se altera de esta manera la regla general del impuesto, al ser el sujeto pasivo del impuesto el que compra y no el que vende.</p> <p>El sujeto pasivo/adquiriente es, por tanto, quien debe liquidar el IVA y, por tanto, deber\u00e1 autorrepercutirse el IVA y a su vez deduc\u00edrselo, si aplica. Es por ello que este tipo de operaciones, como las operaciones de Inversi\u00f3n de Sujeto Pasivo aparecen tanto en la secci\u00f3n de IVA devengado como en la secci\u00f3n de IVA deducible.</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-adquisiciones-intracomunitarias-de-bienes-de-inversion","title":"IVA deducible - adquisiciones intracomunitarias de bienes de inversi\u00f3n","text":"<p>Durante el periodo correspondiente (mes/trimestre), el usuario registrar\u00e1 y contabilizar\u00e1 en Etendo las facturas/abonos de compra recibidos de sus proveedores/acreedores (no residentes en territorio de aplicaci\u00f3n del impuesto, pero residentes en la Uni\u00f3n Europea que son operadores intracomunitarios), por la adquisici\u00f3n de bienes de inversi\u00f3n dentro del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares), as\u00ed como las facturas financieras.</p> <p>Los productos/conceptos contables tienen que estar relacionados con una de las siguientes categor\u00edas de impuesto:</p> <ul> <li>IVA Normal Bienes Inversi\u00f3n</li> </ul> <p>Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"IVA Deducible - adquisiciones intracomunitarias de bienes de inversi\u00f3n\".</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#diferencia-escenarios","title":"Diferencia - escenarios","text":"<p>El fichero del 303 recoge desde la posici\u00f3n 629 a la 804, los datos relativos a la diferencia entre el IVA Devengado y el Deducible, junto con otro tipo de informaci\u00f3n adicional necesaria para el c\u00e1lculo del resultado final casilla [48]</p> <p>Desde Etendo, el usuario puede obtener la diferencia entre IVA Devengado y Deducible, as\u00ed como parte de la informaci\u00f3n adicional necesaria para el c\u00e1lculo del resultado final, el resto debe introducirse por parte del usuario como \"par\u00e1metros de entrada\" a la hora de generar el fichero.</p> <p>La informaci\u00f3n que el usuario puede obtener desde el sistema es las bases imponibles para un periodo determinado (mes/trimestre) respecto de las operaciones que a continuaci\u00f3n se detallan:</p> <ul> <li>Entregas intracomunitarias - en este caso el sistema tiene en cuenta las facturas/abonos/facturas financieras de venta a clientes no residentes en territorio de aplicaci\u00f3n del impuesto pero residentes en la Uni\u00f3n Europea, emitidos y contabilizados, por la entrega exenta de IVA de bienes fuera del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares).     Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"Diferencia - Entregas Intracomunitarias\".</li> <li>Exportaciones y operaciones asimiladas - lo mismo aplica a las exportaciones, en este caso el sistema tiene en cuenta las facturas/abonos/facturas financieras de venta emitidas y contabilizas, a clientes extranjeros, emitidos y contablizados, por la entrega exenta de IVA de bienes fuera del territorio de aplicaci\u00f3n del impuesto/IVA (Pen\u00ednsula y Baleares).     Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"Diferencia - Exportaciones y Operaciones Asimiladas\".</li> <li>Operaciones no sujetas o con inversi\u00f3n del sujeto pasivo que origina derecho a deducci\u00f3n - este caso aplica a facturas/abonos/facturas financieras de venta emitidos y contabilizados, por la prestaci\u00f3n de servicios de la Empresa fuera del territorio de aplicaci\u00f3n del impuesto, servicios exentos pero que originan derecho a deducci\u00f3n.     Las l\u00edneas de facturas tienen que tener un rango de impuesto asociado a uno de los par\u00e1metros del 303 de la secci\u00f3n \"Diferencia - Operaciones no sujetas o con inversi\u00f3n del sujeto pasivo\".</li> </ul> <p>El resto de datos deben ser introducidos manualmente por el usuario a la hora de generar el modelo 303 desde la ventana \"Generador de declaraciones de impuestos\", tal y como se muestra en la pantalla siguiente:</p> <p></p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#devoluciones-escenarios","title":"Devoluciones - escenarios","text":"","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#devoluciones-devoluciondevolucion-cuenta-corriente-tributaria","title":"Devoluciones - Devoluci\u00f3n/Devoluci\u00f3n cuenta corriente tributaria","text":"<p>Para este tipo de declaraciones, y siempre que el check 'Inscrito en registro de devoluci\u00f3n mensual' est\u00e9 marcado, los siguientes campos son obligatorios:</p> <ul> <li>IBAN</li> <li>Marca SEPA</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#devoluciones-devolucion-por-transferencia-al-extranjero","title":"Devoluciones - Devoluci\u00f3n por transferencia al extranjero","text":"<p>Para este tipo de declaraciones, y siempre que el check 'Inscrito en registro de devoluci\u00f3n mensual' est\u00e9 marcado, los siguientes campos son obligatorios: </p> <ul> <li>Domiciliaci\u00f3n/Devoluci\u00f3n - IBAN (cuenta bancaria)</li> <li>Devoluci\u00f3n - Banco/Bank name</li> <li>Devoluci\u00f3n - Direcci\u00f3n del Banco/ Bank address</li> <li>Devoluci\u00f3n - Ciudad/City</li> <li>Devoluci\u00f3n - C\u00f3digo Pa\u00eds/Country code</li> <li>Devoluci\u00f3n - Marca SEPA</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#configuracion-previa-antes-de-generar-el-informe","title":"Configuraci\u00f3n previa antes de generar el Informe","text":"","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#actividades-del-iae","title":"Actividades del I.A.E.","text":"<p>En el Modelo 303, para generar el informe mensual - \u00faltimo periodo, a partir de 2022, se deben declarar las principales actividades del I.A.E. (Impuesto de Actividades Econ\u00f3micas) en las que la empresa trabaja habitualmente.</p> <p>El m\u00f3dulo Ep\u00edgrafes I.A.E., instalado como dependencia del 303, a\u00f1ade una nueva solapa a la ventana de Organizaci\u00f3n en la que puede indicar todas las actividades en las que su empresa ha estado trabajando. El modelo 303 debe incluir como m\u00ednimo una actividad principal, que debe estar marcada en la aplicaci\u00f3n como por defecto, y como m\u00e1ximo 5 actividades. En caso de incluir m\u00e1s de 5 actividades, se incluir\u00e1n en el informe las 5 primeras seg\u00fan el n\u00famero de l\u00ednea.</p> <p></p> <p>En el m\u00f3dulo de Ep\u00edgrafes IAE se incluye el conjunto correspondiente a la clave 1. Si desea incluir un ep\u00edgrafe que pertenezca a cualquier otra clave, tan s\u00f3lo debe crear un nuevo registro en la ventana Ep\u00edgrafes IAE e incluirlo en un registro de la solapa de Actividades del IAE de la ventana de Organizaci\u00f3n.</p> <p>Para el modelo 303, los campos 'Ep\u00edgrafe IAE' y 'C\u00f3digo' son obligatorios</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#generacion-del-modelo-303","title":"Generaci\u00f3n del modelo 303","text":"<p>Tal y como ya se ha explicado, el modelo 303 de autoliquidaci\u00f3n de IVA, se genera como un fichero de texto v\u00e1lido conforme a los requerimientos de la AEAT desde la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera || Contabilidad || Herramientas de an\u00e1lisis || Generador de declaraciones de impuestos || Generador de declaraciones de impuestos</p> <p>Una vez que el usuario ha introducido los datos gen\u00e9ricos, tales como \"organizaci\u00f3n\", \"ejercicio\", \"periodo\":</p> <p></p> <p>se pueden introducir los par\u00e1metros de entrada, o datos que no pueden obtenerse de Etendo a trav\u00e9s de bot\u00f3n de proceso \"Par\u00e1metros de entrada\".</p> <p>Info</p> <p>Es importante recalcar que algunos de los par\u00e1metros de entrada que se introducen a continuaci\u00f3n, como por ejemplo \"Inscrito en el Registro Devoluci\u00f3n Mensual\", pueden configurarse como par\u00e1metros \"Constantes\" con el fin de no tener que introducirlos cada vez que se genera el fichero del 303.</p> <p>La forma de hacerlo es:</p> <ul> <li>buscar el par\u00e1metro de entrada del 303 en la ventana \"Declaraci\u00f3n de Impuestos\", pesta\u00f1a \"Secci\u00f3n de declaraci\u00f3n\". Por ejemplo, el par\u00e1metro de entrada \"Inscrito en el Registro de devoluci\u00f3n mensual\" que se encuentra en la Secci\u00f3n de declaraci\u00f3n \"Identificaci\u00f3n\"</li> <li>cambiar el par\u00e1metro de tipo \"Entrada\" a \"Constante\". En el campo \"Constant Value\" a\u00f1adir \"1\", en caso de inscripci\u00f3n en el registro de devoluci\u00f3n mensual, o bien a\u00f1adir \"2\", en caso de que el sujeto pasivo no est\u00e9 inscrito en el registro de devoluci\u00f3n mensual.</li> </ul> <p>Es importante recalcar que si se produce una actualizaci\u00f3n de los datos de referencia de este m\u00f3dulo, los cambios de par\u00e1metros de entrada a constante se sobreescribir\u00e1n, por lo que ser\u00e1 necesario el volver a configurarlos.</p> <p>Las secciones de la nueva ventana que se muestra se corresponden con las secciones definidas para el Modelo 303:</p> <p>Secciones: \"Fichero\", \"Tipo de declaraci\u00f3n\" y \"Sin actividad\":</p> <p></p> <p>Secciones: \"IVA deducible\", \"Liquidaci\u00f3n-resultado\" y \"Banco\":</p> <p></p> <p>Secciones: \u00a0\"Complementaria\", \u201cTributaci\u00f3n por raz\u00f3n de territorio\u201d y \u201cAdditional Information\u201d</p> <p></p> <p>Una vez que el fichero se ha generado, tendr\u00e1 este aspecto:</p> <p></p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#pre-validacion-del-modelo-303","title":"Pre-validaci\u00f3n del modelo 303","text":"<p>El fichero generado en Etendo se puede pre-validar en el siguiente link de la AEAT:</p> <p>Formulario del modelo 303 para su presentaci\u00f3n (predeclaraci\u00f3n) ejercicio 2014 y siguientes (R\u00e9gimen General).</p> <p>Una vez en dicho link el usuario podr\u00e1 importar el fichero en la opci\u00f3n \"Optativo: Importar datos de fichero\", los datos obtenidos del fichero se mostrar\u00e1n para su validaci\u00f3n.</p> <p>Una vez validados los datos, el modelo 303 se puede presentar en el siguiente link, para lo cual se requiere un certificado v\u00e1lido: Presentaci\u00f3n ejercicio 2014 y siguientes (R\u00e9gimen General), para lo que se necesita certificado electr\u00f3nico de identificaci\u00f3n o DNI electr\u00f3nico.</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#anexo","title":"Anexo","text":"<p>Este anexo incluye el listado completo de los rangos de impuestos asociados a los par\u00e1metros del modelo 303 de las secciones \"IVA Devengado\" e \"IVA Deducible\" s\u00f3lo para los tipos de IVA vigentes en la actualidad (2012):</p>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-devengado","title":"IVA Devengado","text":"","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-devengado-regimen-general_1","title":"IVA Devengado - R\u00e9gimen General","text":"<ul> <li>Arrendamiento 18% (cobros)</li> <li>Arrendamientos 18% -21%R (cobros) (+18%)</li> <li>Arrendamiento 21% (cobros)</li> <li>Arrendamientos 21% -21%R (cobros) (+21%)</li> <li>Entregas Bienes Inversi\u00f3n 18%</li> <li>Entregas Bienes Inversi\u00f3n 21%</li> <li>Entregas IVA 18%</li> <li>Entregas IVA 8%</li> <li>Entregas IVA 21%</li> <li>Entregas IVA 10%</li> <li>Entregas IVA 4%</li> <li>Entregas IVA+RE 18+4% (+18%)</li> <li>Entregas IVA+RE 8+1% (+8%)</li> <li>Entregas IVA+RE 21+5.2% (+21%)</li> <li>Entregas IVA+RE 10+1.4% (+10%)</li> <li>Entregas IVA+RE 4+0.5% (+4%)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 18% (-18%)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 8% (-8%)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 21% (-21%)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 10% (-10%)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 18% (-18%)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 8% (-8%)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 21% (-21%)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 10% (-10%)</li> <li>Servicios prestados nacional 18%</li> <li>Servicios prestados nacional 21%</li> <li>Servicios prestados nacional 18% -15%R (+18%)</li> <li>Servicios prestados nacional 18% -7%R (+18%)</li> <li>Servicios prestados nacional 21% -21%R (+21%)</li> <li>Servicios prestados nacional 21% -9%R (+21%)</li> <li>Servicios prestados nacional 8%</li> <li>Servicios prestados nacional 10%</li> <li>Servicios prestados nacional 4%</li> <li>Transmisi\u00f3n B.Inmuebles 18%</li> <li>Transmisi\u00f3n B.Inmuebles 8%</li> <li>Transmisi\u00f3n B.Inmuebles 21%</li> <li>Transmisi\u00f3n B.Inmuebles 10%</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-devengado-recargo-de-equivalencia","title":"IVA Devengado - Recargo de equivalencia","text":"<ul> <li>Entregas IVA+RE 18+4% (+4%)</li> <li>Entregas IVA+RE 8+1% (+1%)</li> <li>Entregas IVA+RE 21+5.2% (+5.2%)</li> <li>Entregas IVA+RE 10+1.4% (+1.4%)</li> <li>Entregas IVA+RE 4+0.5% (+0.5%)</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-devengado-adquisiciones-intracomunitarias_1","title":"IVA Devengado - Adquisiciones Intracomunitarias","text":"<ul> <li>Adquisiciones intracomunitarias 18% (-18%)</li> <li>Adquisiciones intracomunitarias 8% (-8%)</li> <li>Adquisiciones intracomunitarias 21% (-21%)</li> <li>Adquisiciones intracomunitarias 10% (-10%)</li> <li>Adquisiciones intracomunitarias 4% (-4%)</li> <li>Adquisiciones intracomunitarias Bienes Inversi\u00f3n 18% (-18%)</li> <li>Adquisiciones intracomunitarias Bienes Inversi\u00f3n 21% (-21%)</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible","title":"IVA Deducible","text":"","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-por-cuotas-soportadas-en-operaciones-interiores-corrientes","title":"IVA Deducible - Por cuotas soportadas en operaciones interiores corrientes","text":"<ul> <li>Adquisici\u00f3n B.Inmuebles 18%</li> <li>Adquisici\u00f3n B.Inmuebles 8%</li> <li>Adquisici\u00f3n B.Inmuebles 21%</li> <li>Adquisici\u00f3n B.Inmuebles 10%</li> <li>Adquisiciones IVA 18%</li> <li>Adquisiciones IVA 8%</li> <li>Adquisiciones IVA 21%</li> <li>Adquisiciones IVA 10%</li> <li>Adquisiciones IVA 4%</li> <li>Arrendamiento 18% (pagos)</li> <li>Arrendamiento 21% (pagos)</li> <li>Arrendamientos 18% -21%R (pagos) (+18%)</li> <li>Arrendamientos 21% -21%R (pagos) (+21%)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 18% (+18%)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 8% (+8%)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 21% (+21%)</li> <li>Inversi\u00f3n Sujeto Pasivo no UE 10% (+10%)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 18% (+18%)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 8% (+8%)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 21% (+21%)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 10% (+10%)</li> <li>Prestaci\u00f3n servicios nacional 18%</li> <li>Prestaci\u00f3n servicios nacional 21%</li> <li>Prestaci\u00f3n servicios nacional 18% -15%R (+18%)</li> <li>Prestaci\u00f3n servicios nacional 18% -1%R (18%)</li> <li>Prestaci\u00f3n servicios nacional 18% -7%R (+18%)</li> <li>Prestaci\u00f3n servicios nacional 21% -21%R (+21%)</li> <li>Prestaci\u00f3n servicios nacional 21% -1%R (+21%)</li> <li>Prestaci\u00f3n servicios nacional 21% -9%R (+21%)</li> <li>Prestaci\u00f3n servicios nacional 8%</li> <li>Prestaci\u00f3n servicios nacional 10%</li> <li>Prestaci\u00f3n servicios nacional 4%</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-operaciones-interiores-bienes-de-inversion_1","title":"IVA Deducible - Operaciones interiores bienes de inversi\u00f3n","text":"<ul> <li>Adquisici\u00f3n Bienes Inversi\u00f3n18%</li> <li>Adquisici\u00f3n Bienes Inversi\u00f3n 21%</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-por-cuotas-devengadas-en-las-importaciones-de-bienes-corrientes","title":"IVA Deducible - Por cuotas devengadas en las importaciones de bienes corrientes","text":"<ul> <li>Adquisiciones a Canarias,Ceuta y Melilla 18%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 8%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 21%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 10%</li> <li>Adquisiciones a Canarias,Ceuta y Melilla 4%</li> <li>Importaciones 18%</li> <li>Importaciones 8%</li> <li>Importaciones 21%</li> <li>Importaciones 10%</li> <li>Importaciones 4%</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-importaciones-bienes-de-inversion_1","title":"IVA Deducible - Importaciones bienes de inversi\u00f3n","text":"<ul> <li>Importaciones Bienes Inversi\u00f3n 18%</li> <li>Importaciones Bienes Inversi\u00f3n 21%</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-en-adquisiciones-intracomunitarias-de-bienes-de-corrientes","title":"IVA Deducible - En adquisiciones intracomunitarias de bienes de corrientes","text":"<ul> <li>Adquisiciones intracomunitarias 18% (+18%)</li> <li>Adquisiciones intracomunitarias 8% (+8%)</li> <li>Adquisiciones intracomunitarias 21% (+21%)</li> <li>Adquisiciones intracomunitarias 10% (+10%)</li> <li>Adquisiciones intracomunitarias 4% (+4%)</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-303/#iva-deducible-adq-intracomunitarias-bienes-de-inversion","title":"IVA Deducible - Adq. Intracomunitarias bienes de inversi\u00f3n","text":"<ul> <li>Adquisiciones intracomunitarias Bienes Inversi\u00f3n 18% (+18%)</li> <li>Adquisiciones intracomunitarias Bienes Inversi\u00f3n 21% (+21%)</li> </ul>","tags":["Modelo 303","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/","title":"Modelo 347","text":"<p> Javapackage: <code>org.openbravo.module.aeat347apr.es</code>  Javapackage: <code>org.openbravo.module.aeat347apr.es.es_es</code></p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta secci\u00f3n describe la generaci\u00f3n de la declaraci\u00f3n: \u201cModelo AEAT 347 - Declaraci\u00f3n Anual de Operaciones con Terceros\u201d como un fichero de texto (\"*.txt\") v\u00e1lido conforme a los requerimientos de la Hacienda P\u00fablica espa\u00f1ola, es por ello que se publicar\u00e1 una nueva versi\u00f3n de este m\u00f3dulo cuando dichos requerimientos cambien.</p> <p>El fichero del 347 se genera desde el \"Generador de Declaraciones de Impuesto\" que se encuentra en la ruta de aplicaci\u00f3n: \"Gesti\u00f3n Financiera / Contabilidad / Herramientas de an\u00e1lisis / Generador de declaraciones de impuestos\".</p> <p>El Modelo/Declaraci\u00f3n 347 es parte del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola de Etendo.</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#descripcion-del-modulo","title":"Descripci\u00f3n del m\u00f3dulo","text":"","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#obligados-a-presentar-la-declaracion","title":"Obligados a presentar la declaraci\u00f3n","text":"<p>De acuerdo con la normativa de la Hacienda Espa\u00f1ola, est\u00e1n obligados a presentar el modelo 347:</p> <p>Todas aquellas personas f\u00edsicas o jur\u00eddicas, de naturaleza p\u00fablica o privada que desarrollen actividades empresariales o profesionales, siempre y cuando hayan realizado operaciones que, en su conjunto, respecto de otra persona o Entidad, cualquiera que sea su naturaleza o car\u00e1cter, hayan superado la cifra de 3.005,06\u20ac durante el a\u00f1o natural al que se refiere la declaraci\u00f3n. Para el c\u00e1lculo de la cifra de 3.005,06 \u20ac se computan de forma separada las entregas de bienes y servicios y las adquisiciones de los mismos.</p> <p>De acuerdo con la normativa, no est\u00e1n obligados a presentar el modelo 347:</p> <ul> <li>Quienes realicen en Espa\u00f1a actividades empresariales o profesionales sin tener en territorio espa\u00f1ol la sede de su actividad, un establecimiento permanente o su domicilio fiscal.</li> <li>Las personas f\u00edsicas y entidades en atribuci\u00f3n de rentas en el Impuesto sobre la Renta de las Personas F\u00edsicas, por las actividades que tributen en dicho impuesto por el m\u00e9todo de estimaci\u00f3n objetiva y, simult\u00e1neamente, en el Impuesto sobre el Valor A\u00f1adido por los reg\u00edmenes especiales simplificado o de la agricultura, ganader\u00eda y pesca o del recargo de equivalencia, salvo por las operaciones por las que emitan factura.</li> <li>Los obligados tributarios que no hayan realizado operaciones que en su conjunto superen la cifra de 3.005,06\u20ac</li> <li>Los obligados tributarios que hayan realizado exclusivamente operaciones no declarables.</li> <li>Los obligados tributarios que deban informar sobre las operaciones incluidas en los libros registro de IVA (modelo 340) salvo que realicen operaciones que expresamente deban incluirse en el modelo 347.</li> </ul>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#operaciones-declarables","title":"Operaciones declarables","text":"<p>Las operaciones declarables y que, por tanto, se incluyen en el modelo 347 son las que se detallan a continuaci\u00f3n:</p> <ol> <li>Tanto las entregas de bienes y prestaciones de servicios realizadas por el declarante como sus adquisiciones de bienes y servicios incluy\u00e9ndose, en ambos casos, tanto las operaciones t\u00edpicas y habituales como las ocasionales e incluso las operaciones inmobiliarias. Debe tenerse en cuenta que dichas operaciones se incluir\u00e1n est\u00e9n o no sujetas al IVA y, en el primer caso, tambi\u00e9n las exentas de dicho impuesto.</li> </ol> <p>Adem\u00e1s, se incluyen de forma espec\u00edfica y aparte:</p> <ul> <li>los Arrendamientos de locales de negocios</li> <li>los importes superiores a 6.000,00\u20ac percibidos en met\u00e1lico de cada una de las personas o entidades relacionadas en la declaraci\u00f3n</li> <li>las cantidades que se perciban en contraprestaci\u00f3n por transmisiones de bienes inmuebles que constituyan entregas sujetas a IVA</li> <li>y las prestaciones de servicios de/a no residentes (incluyendo Canarias, Baleares, Ceuta y Melilla) que no est\u00e9n sujetos a retenci\u00f3n.</li> </ul> <p>Los importes que se incluyen en el modelo 347 son los \u201cimportes totales\u201d de la contraprestaci\u00f3n en euros (\u20ac). En los supuestos de operaciones sujetas y no exentas de IVA se a\u00f1aden, por tanto, a la base imponible, las cuotas del impuesto y recargos de equivalencia repercutidos. Los importes adem\u00e1s se declaran netos de las devoluciones o descuentos y bonificaciones concedidos.</p> <p>Las operaciones que se incluyen en el modelo 347 son las realizadas por el declarante en el a\u00f1o natural a que se refiere la declaraci\u00f3n y la fecha que se tiene en cuenta para su inclusi\u00f3n en el 347 es la fecha contable de la factura.</p> <p>Las operaciones que en ning\u00fan caso se incluir\u00e1n en el 347 por ser no declarables son las que se detallan a continuaci\u00f3n:</p> <ul> <li>aquellas que hayan supuesto entregas de bienes o prestaciones de servicios por las que los obligados tributarios no debieron expedir y entregar factura o documento equivalente</li> <li>aquellas operaciones realizadas al margen de la actividad empresarial o profesional</li> <li>aquellas efectuadas a t\u00edtulo gratuito</li> <li>los arrendamientos de bienes exentos de IVA</li> <li>las importaciones y exportaciones de mercanc\u00edas, as\u00ed como las entregas y adquisiciones de bienes que supongan env\u00edos entre el territorio peninsular espa\u00f1ol o las islas Baleares y las islas Canarias, Ceuta y Melilla.</li> <li>Todas aquellas que se incluyan en otros modelos de la Administraci\u00f3n Tributaria como por ejemplo aquellas cuya contraprestaci\u00f3n haya sido objeto de retenci\u00f3n o ingreso a cuenta; las operaciones intracomunitarias de bienes y servicios que se declaran en el modelo 349 o las operaciones incluidas en los libros registro que deben incluirse en el modelo 340.</li> </ul> <p>El nuevo m\u00f3dulo de generaci\u00f3n del Modelo 347 no incluye las operaciones que se describe a continuaci\u00f3n y que deber\u00edan incluirse en el modelo 347, por ser relativas a Administraciones P\u00fablicas, Entidades aseguradoras y Colegios Profesionales:</p> <ul> <li>las subvenciones, auxilios o ayudas satisfechas por las entidades integradas en las distintas Administraciones P\u00fablicas</li> <li>las operaciones de seguros realizadas por las entidades aseguradoras</li> <li>las prestaciones de servicios realizadas por las agencias de viajes</li> <li>los cobros por cuenta de terceros de honorarios profesionales o de derechos derivados de la propiedad intelectual, industrial, de autor u otros por cuenta de sus socios, asociados o colegiados efectuados por sociedades, asociaciones, colegios profesionales u otras entidades que, entre sus funciones, realicen las del cobro</li> <li>las operaciones sujetas al impuesto sobre la producci\u00f3n, los servicios y la importaci\u00f3n en las ciudades de Ceuta y Melilla.</li> </ul> <p>Adem\u00e1s, no se incluye en el m\u00f3dulo de funcionalidad el supuesto de Declaraci\u00f3n Complementaria para aquellos casos en que deban incluirse s\u00f3lo las operaciones que, debiendo haber sido declaradas en otra declaraci\u00f3n del mismo ejercicio presentada con anterioridad, no se incluyeron. Estas operaciones deber\u00e1n ser incluidas por el usuario manualmente, a trav\u00e9s de la p\u00e1gina de la AEAT tal y como se explica en la secci\u00f3n de este documento \"Declaraci\u00f3n Complementaria\".</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#instalacion-del-modulo","title":"Instalaci\u00f3n del m\u00f3dulo","text":"<p>Para la instalaci\u00f3n del m\u00f3dulo \u201cModelo AEAT 347 - Declaraci\u00f3n de operaciones con terceros\u201d\u201d (Spain AEAT Modelo 347 for APR),el usuario debe seguir los pasos que se describen a continuaci\u00f3n en funci\u00f3n de la situaci\u00f3n de partida:</p> <ul> <li>Instalaci\u00f3n de la \u00faltima versi\u00f3n disponible de Etendo\u00a0</li> <li>o la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola.</li> </ul> <p>Info</p> <p>Para la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola, visite Marketplace.\u00a0</p> <p>Es importante recalcar que el m\u00f3dulo del Modelo AEAT 347 incluye el correspondiente conjunto de datos (dataset) que relaciona los rangos de impuestos de Espa\u00f1a con los par\u00e1metros del 347, este conjunto de datos se debe aplicar a la Organizaci\u00f3n para la cual se necesita obtener el 347 tal y como se explica en el siguiente apartado.</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#aplicacion-del-modulo","title":"Aplicaci\u00f3n del M\u00f3dulo","text":"<p>Una vez instalado el m\u00f3dulo del 347 por cualquiera de los procedimientos anteriores, el usuario debe aplicar el conjunto de datos o dataset del m\u00f3dulo 347 a la organizaci\u00f3n legal con contabilidad que corresponda, desde la ventana \"Gesti\u00f3n del M\u00f3dulo de Empresa\".</p> <p>El m\u00f3dulo de impuestos para Espa\u00f1a es v\u00e1lido para todos los modelos de declaraci\u00f3n de impuestos, en este caso el modelo 347, y debe estar instalado previamente.</p> <p>Info</p> <p>Es fundamental recalcar que el usuario debe tener el m\u00f3dulo de impuestos para Espa\u00f1a instalado y aplicado a la organizaci\u00f3n (*) o bien a la organizaci\u00f3n legal para la que se quiera obtener el 347.</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#configuracion-del-modulo","title":"Configuraci\u00f3n del m\u00f3dulo","text":"","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#configuracion-del-modelo-347","title":"Configuraci\u00f3n del modelo 347","text":"<p>Una vez aplicado el conjunto de datos del Modelo 347, puede comprobar en la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera / Contabilidad / Configuraci\u00f3n / Declaraci\u00f3n de Impuestos que el modelo 347 del periodo correspondiente est\u00e1 creado como informe anual de impuestos.</p> <p></p> <p>En la pesta\u00f1a \u201cSecciones de la declaraci\u00f3n\u201d se han creado 3 grupos para el modelo 347:</p> <ul> <li>Nombre del Fichero del 347. Esta secci\u00f3n contiene:<ul> <li>un par\u00e1metro de tipo \u201centrada\u201d que se mostrar\u00e1 en el momento de generar el 347 con el fin de que el usuario introduzca manualmente el \u201cNombre del fichero txt del 347\u201d que se va a generar.</li> </ul> </li> <li>Identificaci\u00f3n y Totales. Esta secci\u00f3n contiene:<ul> <li> <p>2 par\u00e1metros de tipo \u201cconstante\u201d que el sistema tendr\u00e1 en cuenta a la hora de incluir las operaciones, ya que solo incluir\u00e1 las que superen las cifras l\u00edmite que se detallan a continuaci\u00f3n:  </p> <ul> <li>Cifra l\u00edmite de inclusi\u00f3n de operaciones con terceros = 3.005,06\u20ac</li> <li> <p>Cifra l\u00edmite para cobros percibidos en efectivo = 6.000,00\u20ac</p> <ul> <li>y 5 par\u00e1metros de tipo \u201centrada\u201d que se mostrar\u00e1n en el momento de generar el 347 con el fin de que el usuario los introduzca manualmente y que son:  </li> </ul> </li> <li> <p>Nombre y apellidos de la persona de contacto: Este par\u00e1metro de tipo entrada podr\u00eda ser modificado a tipo constante y, por tanto, se deber\u00eda especificar el valor de dicha constante que en este caso ser\u00eda el nombre de la persona de contacto, para los escenarios en que la misma persona presenta la declaraci\u00f3n. De ser as\u00ed, este par\u00e1metro no tendr\u00eda que informarse cada vez que se genera la declaraci\u00f3n.</p> </li> <li>N\u00ba Tel\u00e9fono de la persona de contacto. Este par\u00e1metro de tipo entrada podr\u00eda ser modificado a tipo constante y, por tanto, se deber\u00eda especificar el valor de dicha constante que en este caso ser\u00eda el tel\u00e9fono de la persona de contacto, para los escenarios en que la misma persona presenta la declaraci\u00f3n. De ser as\u00ed, este par\u00e1metro no tendr\u00eda que informarse cada vez que se genera la declaraci\u00f3n.</li> <li>Declaraci\u00f3n substitutiva (si/no)</li> <li>N\u00ba de la declaraci\u00f3n a sustituir</li> <li>NIF del representante legal</li> <li>Operaciones con terceros. Esta secci\u00f3n contiene:<ul> <li>5 par\u00e1metros de tipo \u201csalida\u201d ligados a la clave tributaria correspondiente, que asociados a los tipos impositivos del m\u00f3dulo de impuestos para Espa\u00f1a, incluir\u00e1n las operaciones de compra/venta en el 347:</li> </ul> </li> <li>Adquisiciones de bienes - Clave A</li> <li>Entregas de bienes - Clave B</li> <li>Prestaci\u00f3n de servicios - Clave A</li> <li>Servicios prestados - Clave B</li> <li>Transmisiones de inmuebles - Clave B</li> </ul> </li> </ul> </li> </ul> <p>En la ruta Gesti\u00f3n Financiera / Contabilidad / Configuraci\u00f3n / AEAT347 Tipo de documento, el usuario puede especificar los tipos de documentos que el 347 debe tener en cuenta. El funcionamiento de esta pantalla de parametrizaci\u00f3n es que si no se especifica ning\u00fan tipo de documento, Etendo tendr\u00e1 en cuenta todos los tipos de documentos de tipo factura que se pueden contabilizar.</p> <p>Si el usuario introduce alg\u00fan tipo de documento, solo esos ser\u00e1n los que se tengan en cuenta.</p> <p></p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#configuracion-de-impuestos","title":"Configuraci\u00f3n de impuestos","text":"<p>Este m\u00f3dulo de generaci\u00f3n del modelo 347 se basa en el m\u00f3dulo de impuestos para Espa\u00f1a, ya que utiliza los rangos de impuesto que incluye dicho m\u00f3dulo. Adem\u00e1s, incluye un juego de datos que liga los rangos de impuesto del m\u00f3dulo de impuestos para Espa\u00f1a con los par\u00e1metros del 347 que se listan a continuaci\u00f3n, en funci\u00f3n de la operaci\u00f3n de que se trate:</p> <ul> <li>Adquisiciones de bienes \u2013 Adquisici\u00f3n \u201cA\u201d</li> <li>Entregas de bienes \u2013 Entregas \u201cB\u201d</li> <li>Prestaci\u00f3n de servicios\u2013 Adquisici\u00f3n \u201cA\u201d</li> <li>Servicios prestados\u2013 Entregas \u201cB\u201d</li> <li>Transmisiones de inmuebles \u2013 Entregas \u201cB\u201d</li> </ul> <p>El usuario puede comprobar en la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera / Contabilidad / Configuraci\u00f3n / Rango impuesto - pesta\u00f1a Par\u00e1metro de Impuesto que los \u201ctipos impositivos/impuestos\u201d que deben incluirse en el 347 se han asociado al correspondiente par\u00e1metro de impuesto del 347:</p> <ul> <li>Los tipos de IVA de compras/adquisiciones (nacional) incluyendo las adquisiciones de bienes inmuebles y bienes de inversi\u00f3n, se han asociado con el par\u00e1metro \u201cAdquisiciones de bienes\u201d que se corresponden con la clave de operaci\u00f3n del 347 =&gt; \u201cA\u201d</li> <li>Los tipos de IVA de ventas/entregas (nacional) (incluyendo Recargo de Equivalencia) se han asociado con el par\u00e1metro \u201cEntregas de bienes\u201d que corresponden con la clave de operaci\u00f3n del 347 =&gt; \u201cB\u201d</li> <li>Los tipos de IVA de \u201cinversi\u00f3n del sujeto pasivo NO UE\u201d (en los casos de prestaci\u00f3n de servicios NO intracomunitarios) se han asociado con el par\u00e1metro \u201cPrestaci\u00f3n de servicios\u201d que se corresponden con la clave de operaci\u00f3n del 347 =&gt; \u201cA\u201d</li> <li>Los tipos de IVA de entregas de bienes inmuebles (nacional) se han asociado con el par\u00e1metro \u201cTransmisiones de inmuebles\u201d que se corresponden con la clave de operaci\u00f3n del 347 =&gt; \u201cB\u201d; ya que tiene que declararse dos veces como operaci\u00f3n de venta y consignarse a parte el importe de la transmisi\u00f3n del bien inmueble.</li> <li>Se han creado los tipos de IVA espec\u00edficos para prestaciones de servicios (nacional e internacional), asociados a categor\u00edas de impuestos espec\u00edficas para los servicios, que se han asociado con los par\u00e1metros del 347 \u201cPrestaci\u00f3n de servicios \u2013 clave de operaci\u00f3n A\u201d o \u201cServicios prestados \u2013 clave de operaci\u00f3n B\u201d en funci\u00f3n de que la empresa declarante reciba o preste los servicios.</li> <li>Los tipos de IVA de servicios desde/a Canarias, Baleares, Ceuta y Melilla se han asociado bien con el par\u00e1metro \u201cPrestaciones de servicios\u201d clave de operaci\u00f3n del 347 =&gt; \u201cB\u201d o bien con el par\u00e1metro \u201cOperaciones de servicios (Adquisici\u00f3n) clave de operaci\u00f3n del 347 =&gt; \u201cA\u201d, respectivamente, ya que s\u00f3lo se incluyen en el 347 las operaciones de servicios y no las de bienes que supongan env\u00edos de bienes entre el territorio peninsular espa\u00f1ol o las islas Baleares y las islas Canarias, Ceuta y Melilla</li> <li>Y por \u00faltimo se han creado tipos de IVA espec\u00edficos para alquileres (con y sin retenciones asociados a 2 tipos de BP tax category, respectivamente). Los tipos de IVA de alquiler sin retenciones se han asociado con los par\u00e1metros del 347 \u201cPrestaci\u00f3n de servicios \u2013 clave de operaci\u00f3n A\u201d o \u201cServicios prestados \u2013 clave de operaci\u00f3n B\u201d en funci\u00f3n de que la empresa sea arrendatario o arrendador del local u oficina arrendado y sujeto a IVA.</li> </ul>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#configuracion-de-los-locales-de-negocio","title":"Configuraci\u00f3n de los locales de negocio","text":"<p>En el modelo 347 se deben incluir los arrendamientos de locales de negocios, es por ello que en la ruta de aplicaci\u00f3n: Gesti\u00f3n de Datos Maestros / Producto se ha creado un nuevo par\u00e1metro \u201cLocal arrendado\u201d.</p> <p>De ser as\u00ed, el usuario debe introducir en el sistema la informaci\u00f3n que se detalla a continuaci\u00f3n, ya que es necesario incluirla en el modelo 347:</p> <ul> <li>Situaci\u00f3n. El usuario debe elegir entre una de las siguientes opciones:<ul> <li>Locales en el extranjero</li> <li>Referencia catastral v\u00e1lida en Pa\u00eds Vasco o en Navarra</li> <li>Referencia catastral v\u00e1lida excepto en Pa\u00eds Vasco o Navarra</li> <li>Sin referencia catastral</li> </ul> </li> <li>Referencia catastral. Campo de texto libre.</li> <li>Tipo de v\u00eda. El usuario debe elegir el tipo de v\u00eda de una lista normalizada seg\u00fan el INE espa\u00f1ol.</li> <li>Nombre de la v\u00eda p\u00fablica. Campo de texto libre.</li> <li>Tipo de numeraci\u00f3n. El usuario debe elegir el tipo de numeraci\u00f3n de una lista normalizada.</li> <li>N\u00famero. Campo de texto libre.</li> <li>Calificaci\u00f3n del n\u00famero. Campo de texto libre.</li> <li>Bloque. Campo de texto libre.</li> <li>Portal. Campo de texto libre.</li> <li>Escalera. Campo de texto libre.</li> <li>Planta o piso. Campo de texto libre.</li> <li>Puerta. Campo de texto libre.</li> <li>Complemento. Datos complementarios del domicilio si los hubiera.</li> <li>Localidad o Poblaci\u00f3n. Campo de texto libre.</li> <li>Municipio.</li> <li>C\u00f3digo de municipio. El usuario debe elegir el c\u00f3digo del municipio de una lista normalizada seg\u00fan el INE espa\u00f1ol.</li> <li>C\u00f3digo de provincia. El usuario debe elegir el c\u00f3digo de provincia de una lista de c\u00f3digos de provincia de dos d\u00edgitos num\u00e9ricos.</li> <li>C\u00f3digo postal. El usuario debe elegir el c\u00f3digo postal.</li> </ul> <p>En el caso de \"Locales en el extranjero\" los datos a incluir son:</p> <ul> <li>Tipo de v\u00eda.</li> <li>Nombre de la v\u00eda p\u00fablica.</li> </ul> <p>El 347 refleja este tipo de operaciones de forma separada tal y como se explica en el correspondiente caso de usuario.</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#generacion-del-modelo-347","title":"Generaci\u00f3n del modelo 347","text":"<p>El modelo 347 se genera desde la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera / Contabilidad / Herramientas de an\u00e1lisis / Generador de declaraciones de impuestos.</p> <p></p> <p>El usuario deber\u00e1 introducir los siguientes datos para generar el modelo 347:</p> <ul> <li>Organizaci\u00f3n para la cual quiere generar el Modelo 347. El sistema mostrar\u00e1 el calendario asociado a la organizaci\u00f3n en un campo no editable.</li> <li>Esquema contable</li> <li>Declaraci\u00f3n. El usuario deber\u00eda seleccionar aqu\u00ed el modelo 347 del periodo impositivo que corresponda.</li> <li>Ejercicio. El usuario puede introducir el a\u00f1o natural para el cual quiere generar el modelo 347</li> <li>Periodo. El valor \u201cAnual\u201d deber\u00eda mostrarse por defecto.</li> </ul> <p>Una vez introducidos los datos anteriores, el usuario puede introducir los par\u00e1metros de entrada del 347 en el bot\u00f3n de proceso \u201cPar\u00e1metros de entrada\u201d</p> <p></p> <p>y una vez introducidos los par\u00e1metros de entrada, como por ejemplo el \"Nombre del Fichero\" o la \"Persona/Tel\u00e9fono de contacto\", el usuario puede generar el fichero del Modelo 347 a trav\u00e9s del bot\u00f3n de proceso \u201cGenerar fichero\u201d.</p> <p>Es entonces cuando se genera el fichero de texto (\"*.txt\") del Modelo 347 conforme a los requerimientos de la AEAT, que puede presentarse directamente en la web de la AEAT.</p> <p>En el m\u00f3dulo \"Spain AEAT Modelo 347 for APR\", se genera un fichero zip que contiene tres ficheros:</p> <ul> <li>el fichero \"txt\" ya mencionado de igual formato y, por tanto, igualmente v\u00e1lido para la presentaci\u00f3n del Modelo 347 a partir de 2014</li> <li>un fichero denominado \"Facturas.csv\"</li> <li>y un fichero denominado \"Metalico.csv\"</li> </ul> <p>Los dos ficheros adicionales de formato *.csv s\u00f3lo se generan si la declaraci\u00f3n del 347 tiene contenido.</p> <p>El fichero \"Facturas.csv\":</p> <ul> <li>contiene un listado con informaci\u00f3n del tipo \"Tercero\", \"Fecha Contable\", \"Impuesto\", \"Base Imponible\", \"Cuota\", \"Total\" etc, de todas las facturas susceptibles de incluirse en el fichero txt.</li> </ul> <p>El fichero \"Metalico.csv\":</p> <ul> <li>contiene un listado con informaci\u00f3n del tipo \"Cuenta Financiera\", \"Identificaci\u00f3n de Transacci\u00f3n\", \"Tercero\", \"Fecha Contable\", \"Importe\" y \"Ejercicio (de devengo)\" de todos los cobros en efectivo susceptibles de incluirse en el fichero txt.</li> </ul>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#casos-de-usuario","title":"Casos de usuario","text":"","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#operaciones-de-compra-y-venta","title":"Operaciones de compra y venta","text":"<p>Etendo permite la introducci\u00f3n y contabilizaci\u00f3n de facturas de compra y de venta, a trav\u00e9s de la ventana correspondiente.</p> <p>El modelo 347 recoger\u00e1 agrupando por \"tercero\" y \"clave [A (compras) o B (ventas)]\", las siguientes operaciones de compra/venta que superen la cifra de 3.005,06 euros:</p> <ul> <li>compra/venta de bienes/servicios (no sujetos a retenci\u00f3n) dentro del territorio de aplicaci\u00f3n del impuesto (IVA), Espa\u00f1a y Baleares</li> <li>compra/venta de servicios desde/hacia resto del mundo, incluyendo Canarias, Ceuta y Melilla.</li> </ul> <p>No se van a tener en cuenta:</p> <ul> <li>operaciones de compra/venta de bienes/servicios intracomunitarias, por reflejarse en otro modelo de hacienda, el Modelo 349, excepto las operaciones que no se incluyen en el Modelo 349.</li> <li>importaciones/exportaciones de bienes.</li> </ul>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#operaciones-de-compra-y-venta-acogidas-a-recc","title":"Operaciones de compra y venta acogidas a RECC","text":"<p>Etendo permite la introducci\u00f3n y contabilizaci\u00f3n de facturas de compra y de venta acogidas al RECC (R\u00e9gimen Especial de Critero de Caja).</p> <p>Para ello:</p> <ul> <li>la \"Organizaci\u00f3n\" debe estar acogida a este R\u00e9gimen</li> <li>o bien no acogida pero si alguno de los proveedores de los cuales recibe facturas de compra.</li> </ul> <p>Estas organizaciones deben tener aplicado el juego de datos del m\u00f3dulo \"Spain AEAT Modelo 347 Cash VAT compatible.</p> <p>Este m\u00f3dulo incluye un juego de datos que relaciona los impuestos de IVA de Caja con los par\u00e1metros correspondientes del Modelo 347.</p> <p>Las transacciones de compra/venta se recogen en el Modelo 347 de forma anual conforme al criterio de devengo general de IVA y marcadas como \"Operaci\u00f3n de IVA de Caja\". Adem\u00e1s, se incluye la parte correspondiente anual devengada conforme al criterio de IVA de Caja en otro campo.</p> <p>Transmisi\u00f3n de Inmuebles</p> <p>Etendo permite la introducci\u00f3n y contabilizaci\u00f3n de transmisiones (ventas) de bienes inmuebles sujetas a IVA.</p> <p>Este tipo de operaciones se recogen de forma separada en el modelo 347.</p> <p>Es por ello que se ha creado en el m\u00f3dulo de impuestos para Espa\u00f1a:</p> <ul> <li>categor\u00edas de impuestos espec\u00edficas para los B. Inmuebles (IVA Normal B.Inmuebles e IVA Reducido B.Inmuebles)</li> <li>rangos de impuestos (IVA) de compra/venta de Bienes Inmuebles</li> </ul> <p>y en el conjunto de datos del 347:</p> <ul> <li>un par\u00e1metro espec\u00edfico denominado \"Transmisiones de Inmuebles\" ligado a los impuestos de venta de bienes inmuebles.</li> </ul>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#transmision-de-inmuebles-sujetas-a-recc","title":"Transmisi\u00f3n de Inmuebles sujetas a RECC","text":"<p>Este tipo de transacciones tambi\u00e9n se incluyen en el Modelo 347 de forma separada, en computo anual, y marcadas como \"Operaci\u00f3n IVA Caja\".</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#arrendamientos","title":"Arrendamientos","text":"<p>Etendo permite la introducci\u00f3n y contabilizaci\u00f3n de facturas de compra y de venta que incluyan arrendamiento de locales de negocio sujetos a IVA.</p> <p>Solo en el caso de arrendamientos de locales de negocio por parte del propietario de dicho local, se deber\u00e1 adem\u00e1s incluir informaci\u00f3n adicional sobre dicho inmueble/local, en un registro de tipo Inmueble espec\u00edfico. Para ello, aquellos locales que se den de alta en el maestro de productos susceptibles de ser alquilados deber\u00e1n configurarse como tales tras activar el nuevo par\u00e1metro \"Local arrendado\".</p> <p>Esto implica rellenar datos como los que se muestran en la siguiente imagen:</p> <p></p> <p>Este tipo de operaciones tienen que reportarse de forma separada en el 347 tal y como se muestra en la siguiente imagen:</p> <p></p> <p>La transacci\u00f3n de venta (B) con el cliente \"Cliente Arrendamiento\" por un importe anual de 30.310,50, incluye adem\u00e1s el arrendamiento de un inmueble por un importe de 13.370.50.</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#arrendamientos-en-recc","title":"Arrendamientos en RECC","text":"<p>Estas operaciones se reflejan de forma anual en el modelo 347,marcadas como tal, incluy\u00e9ndose tambi\u00e9n la informaci\u00f3n referente al registro del inmueble arrendado por el declarado.\u00a0</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#cobros-en-efectivo","title":"Cobros en Efectivo","text":"<p>Etendo permite la introducci\u00f3n y contabilizaci\u00f3n de facturas de venta y sus correspondientes cobros en efectivo depositados y contabilizados en Etendo a trav\u00e9s de cuentas financieras del tipo \"Caja\".</p> <p>Se recomienda configurar el m\u00e9todo de pago \"Contado\" asociado a la cuenta financiera \"Caja\" como se detalla a continuaci\u00f3n:</p> <ul> <li>Permitido para Cobro</li> <li>Dep\u00f3sito autom\u00e1tico en cuenta</li> <li>Cuenta de dep\u00f3sito = Cuenta contable para dep\u00f3sito.</li> <li>los cobros que para un tercero (cliente) y para un periodo, por ejemplo 2014, que l\u00f3gicamente ser\u00e1 el periodo/a\u00f1o para el cual generamos el 347, superen el umbral de 6.000,00 \u20ac<ul> <li>Dicho cobro puede referirse a operaciones incluidas en facturas de venta contabilizadas en 2014 o a\u00f1os anteriores.</li> </ul> </li> </ul> <p></p> <p></p> <p>En el fichero ejemplo anterior se puede comprobar que:</p> <ul> <li>los cobros en efectivo tanto del \"Cliente Efectivo\" (por importe de 18.000,00) como del \"Cliente Efectivo Varios\" (por importe de 6.560,00) se especifican de forma separada en las posiciones (101-115). La diferencia entre estos cobros es:<ul> <li>para el \"Cliente Efectivo Varios\", la operaci\u00f3n que gener\u00f3 el cobro en efectivo en el a\u00f1o 2014 se devengo y se declar\u00f3 en el a\u00f1o 2013.     Esa es la raz\u00f3n por la cual no aparece importe de operaci\u00f3n alguno en las posiciones 83-98 y el a\u00f1o de devengo de la operaci\u00f3n es 2013.</li> <li>para el \"Cliente efectivo B\", la operaci\u00f3n que gener\u00f3 el cobro en efectivo se devenga y se cobra en el a\u00f1o 2014, y forma parte del total de operaciones por importe de 81.675,00.</li> </ul> </li> </ul> <p>Faltar\u00eda un \u00faltimo caso:</p> <p>El caso en el que un cobro/s del a\u00f1o en curso (2014), sea un cobro/s de transacciones devengadas en un periodo/a\u00f1o anterior y, por tanto, ya declaradas, y transacciones devengadas en el periodo/a\u00f1o en curso y, por tanto, no declaradas, tal y como se muestra en la siguiente imagen:</p> <p></p> <p></p> <p>En la imagen anterior, se ha producido un cobro en el a\u00f1o 2014 por importe de 48.188,25; de los cuales 7.350,75 son por operaciones realizadas y declaradas en el a\u00f1o 2014 y el resto 40.837,50 por operaciones realizadas y declaradas en un ejercicio anterior (2013).</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#cobros-en-efectivo-en-recc","title":"Cobros en Efectivo en RECC","text":"<p>Todo lo dicho en este apartado aplica igualmente a las operaciones de venta en IVA de Caja que se cobran en efectivo, salvo que en este caso no aplicar\u00eda un \"Ejercicio\" de devengo anterior a 2014, ya que el periodo de validez de este r\u00e9gimen comenz\u00f3 el 1 de enero de 2014.</p> <p>Adem\u00e1s del importe anual de las operaciones y el importe anual devengado en criterio de IVA de Caja, debe a\u00f1adirse el importe percibido en met\u00e1lico, junto con el ejercicio de devengo de dichas operaciones.</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#presentacion-del-modelo-347-en-formato-electronico","title":"Presentaci\u00f3n del modelo 347 en formato electr\u00f3nico","text":"<p>La presentaci\u00f3n telem\u00e1tica del modelo 347 en formato electr\u00f3nico requiere que las empresas tenga un NIF espa\u00f1ol as\u00ed como un Certificado electr\u00f3nico emitido por la \u201cF\u00e1brica Nacional de Moneda y Timbre\u201d (FNMT) u otro Certificado v\u00e1lido y reconocido por Hacienda.</p> <p>La presentaci\u00f3n telem\u00e1tica puede realizarse a trav\u00e9s de la p\u00e1gina web de la Hacienda P\u00fablica espa\u00f1ola.</p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#datos-en-los-ficheros-csv","title":"Datos en los ficheros csv","text":"<p>Tal y como ya se ha mencionado, con m\u00f3dulo \"Spain AEAT Modelo 347 for APR\" se generan, adem\u00e1s del fichero \"txt\" del Modelo 347, dos ficheros adicionales \"*.csv\", un fichero denominado \"Facturas.csv\" y otro fichero denominado \"Metalico.csv\".</p> <p>El fichero csv \"XXXFacturas.csv\" incluye las siguientes columnas:</p> <ul> <li>\"Tipo de documento\".     Estos son las facturas est\u00e1ndar (AP/AR Invoice, AP/AR Credit Memo..etc) de Etendo</li> <li>\"N\u00famero de documento\"     O n\u00famero de factura/abono.</li> <li>\"Tercero\"     Cliente o proveedor.</li> <li>\"NIF/CIF\" del tercero.</li> <li>\"Fecha Factura\"</li> <li>\"Fecha Contable\"     Fecha contable de la factura.</li> <li>\"Impuesto\"     Impuestos del dataset de impuestos para Espa\u00f1a ligados al par\u00e1metro del Modelo 347 correspondiente.</li> <li>\"IVA de Caja\"     Esta columna nos indica si la factura est\u00e1 o no sujeta a IVA de Caja.</li> <li>\"Cuota\"     Cuota ligada al tipo de impuesto incluido en la factura</li> <li>\"Base Imponible\"     Base imponible ligada al impuesto incluido en la factura.</li> <li>\"Total\"     Suma de la base imponible y la cuota. Este valor es el que hay que tener en cuenta ya que el 347 incluye importes totales, inclu\u00eddo el IVA, al ser una declaraci\u00f3n de operaciones con Terceros y no una liquidaci\u00f3n de IVA.</li> <li>\"Tipo de L\u00ednea\"     Dado que en el 347 se tiene que incluir de forma separada tanto los arrendamientos como las transmisiones de bienes inmuebles y operaciones de inversi\u00f3n del sujeto pasivo, por tanto, en este campo las opciones que hay son \"vac\u00edo\" para operaciones de compra/venta normales, \"Arrendamientos\", \"Transmisi\u00f3n B. Inmuebles\" e \"Inversi\u00f3n Sujeto Pasivo\".</li> </ul> <p>El fichero csv \"XXXMet\u00e1lico.csv\" incluye las siguientes columnas:</p> <ul> <li>\"Cuenta Financiera\"     Cuentas financieras de tipo \"Caja\" de Etendo.</li> <li>\"L\u00ednea de Transacci\u00f3n\"     N\u00famero de l\u00ednea de la transacci\u00f3n en la pesta\u00f1a \"Transacci\u00f3n\" de la cuenta Financiera.</li> <li>\"Identificador de Transacci\u00f3n\"     Identificador formado por la cuenta financiera, la divisa, el n\u00famero de cobro, la fecha del cobro, el tercero y el importe del dep\u00f3sito/cobro.</li> <li>\"Tercero\"</li> <li>\"NIF/CIF\" del tercero.</li> <li>\"Fecha Contable\"     Fecha contable del cobro.</li> <li>\"Ejercicio\"     Ejercicio en el cual se deveng\u00f3 la operaci\u00f3n o factura que se cobra. Este ejercicio puede ser 2014 o anterior para declaraciones del ejercicio 2014.</li> <li>\"Importe transacci\u00f3n\"     Importe del cobro en met\u00e1lico.</li> </ul> <p>Estos ficheros csv nos van a permitir saber por ejemplo:</p> <ul> <li>que tercero se debe incluir en la declaraci\u00f3n y con qu\u00e9 importes por haberse superado el l\u00edmite de 3.005,06 \u20ac en el volumen anual de operaciones realizadas con \u00e9l.</li> <li>que tercero no se debe incluir en la declaraci\u00f3n por no haberse superado el l\u00edmite de 3.005,06 \u20ac en el volumen anual de operaciones realizadas con \u00e9l.</li> <li>cuales son las facturas de compra cuya suma equivale al \"Importe Anual/Trimestral de Operaciones\" realizadas con un proveedor en concreto</li> <li>o bien cuales son los cobros en efectivo cuya suma equivale al \"Importe percibido en met\u00e1lico\" de un cliente en concreto, incluido en la declaraci\u00f3n.</li> </ul>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-347/#presentacion-de-declaraciones-sustitutivas","title":"Presentaci\u00f3n de declaraciones sustitutivas","text":"<p>Es necesario presentar una declaraci\u00f3n sustitutiva cuando dicha declaraci\u00f3n tenga por objeto anular y sustituir completamente a otra declaraci\u00f3n anterior para el mismo periodo ya enviada a Hacienda, en la cual se hubieran incluido datos inexactos o err\u00f3neos.</p> <p>Para ello, el usuario deber\u00e1 realizar en la aplicaci\u00f3n los cambios en los datos/transacciones pertinentes y volver a generar la declaraci\u00f3n 347 como fichero indicando:</p> <ul> <li>que la declaraci\u00f3n es sustitutiva</li> <li>el n\u00famero de la declaraci\u00f3n original que se sustituye</li> </ul> <p></p>","tags":["Modelo 347","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/","title":"Modelo 349","text":"","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.module.aeat349.es</code> </p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta secci\u00f3n aplica al m\u00f3dulo \u201cModelo AEAT 349 - Declaraci\u00f3n recapitulativa de operaciones intracomunitarias\u201d inclu\u00eddo en el m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola de Etendo.</p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#descripcion-del-modulo","title":"Descripci\u00f3n del m\u00f3dulo","text":"<p>El nuevo m\u00f3dulo de generaci\u00f3n del Modelo 349 como un fichero \u201c.txt\u201d v\u00e1lido de acuerdo a los requisitos establecidos por la Hacienda Espa\u00f1ola (Orden HAC/360/2002 de 19 de febrero y modificada en \u00faltima instancia por la Orden HAC/174/2020 de 28 de diciembre) permitir\u00e1 a las empresas espa\u00f1olas cumplir con sus obligaciones fiscales de presentaci\u00f3n de la declaraci\u00f3n recapitulativa de las entregas y adquisiciones intracomunitarias de bienes que realicen.</p> <p>De acuerdo con el reglamento del IVA, est\u00e1n obligados a presentar el modelo 349, los sujetos pasivos del Impuesto que realicen cualquiera de las siguientes operaciones:</p> <ul> <li>Las entregas de bienes destinados a otro Estado miembro, entregas de bienes exentas del impuesto.</li> <li>Las adquisiciones intracomunitarias de bienes sujetas al impuesto.</li> <li>Las adquisiciones intracomunitarias de bienes y entregas subsiguientes exentas conocidas como \u201cOperaciones Triangulares\u201d</li> </ul> <p>El contenido de la declaraci\u00f3n recapitulativa de operaciones Intracomunitarias es:</p> <ul> <li>Las operaciones citadas en el p\u00e1rrafo anterior, as\u00ed como las rectificaciones a cualquiera de las operaciones anteriores ya incluidas en la correspondiente declaraci\u00f3n recapitulativa.</li> <li>Los datos de identificaci\u00f3n de los proveedores y adquirientes</li> <li>as\u00ed como la base imponible en euros de las operaciones intracomunitarias de bienes declaradas.</li> </ul> <p>En general, la declaraci\u00f3n recapitulativa deber\u00e1 presentarse por cada mes natural durante los veinte primeros d\u00edas naturales del mes inmediato siguiente, salvo la correspondiente al mes de julio, que podr\u00e1 presentarse durante el mes de agosto y los veinte primeros d\u00edas naturales del mes de septiembre y la correspondiente al \u00faltimo per\u00edodo del a\u00f1o, que deber\u00e1 presentarse durante los 30 primeros d\u00edas naturales del mes de enero.</p> <p>Cuando ni durante el trimestre de referencia ni en cada uno de los cuatro trimestres naturales anteriores el importe total de las entregas de bienes y prestaciones de servicios que deban consignarse en la declaraci\u00f3n recapitulativa sea superior a 50.000 euros, excluido el Impuesto sobre el Valor A\u00f1adido, la declaraci\u00f3n recapitulativa deber\u00e1 presentarse durante los veinte primeros d\u00edas naturales del mes inmediato siguiente al correspondiente per\u00edodo trimestral.</p> <p>Si al final de cualquiera de los meses que componen cada trimestre natural se superar\u00e1 el importe mencionado en el p\u00e1rrafo anterior, deber\u00e1 presentarse una declaraci\u00f3n recapitulativa para el mes o los meses transcurridos desde el comienzo de dicho trimestre natural durante los veinte primeros d\u00edas naturales inmediatos siguientes.</p> <p>Info</p> <p>Desde 2020 se suprime el per\u00edodo anual de declaraci\u00f3n.</p> <p>Las operaciones se entender\u00e1n realizadas el d\u00eda en que se expida la factura o documento equivalente que sirva de justificante de las mismas.</p> <p>Debido a que en el modelo 349 se deben diferenciar aquellas notas de abono que son rectificaci\u00f3n a facturas incluidas en modelos del 349 ya enviados a Hacienda y las notas de abono que no lo son, ha sido necesario crear una funcionalidad que relaciona las notas de abono con las facturas que est\u00e1n siendo abonadas o rectificadas, tal y como se explica en este documento en la secci\u00f3n \u201cCasos de usuario. Operaciones rectificativas del 349\u201d</p> <p>Info</p> <p>El m\u00f3dulo de generaci\u00f3n del Modelo 349 no incluye las operaciones triangulares, puesto que dichas operaciones no se gestionan en Etendo. </p> <p>Este m\u00f3dulo no tiene en cuenta las transacciones correspondientes al tipo de documento de Etendo \u201cAP/AR credit memo\u201d como facturas de abono, ya que dicho tipo de transacciones no reflejan devoluciones de mercanc\u00eda, es por ello que el m\u00f3dulo 349 tendr\u00e1 en cuenta los tipos de documento AP/AR invoice (como facturas de compra y venta) y los tipos de documento AP/AR invoice negativos (como notas de abono o facturas rectificativas).</p> <p>Adem\u00e1s, no se incluye en el m\u00f3dulo de funcionalidad el supuesto de Declaraci\u00f3n Complementaria para aquellos casos en que deban incluirse solo las operaciones que, debiendo haber sido declaradas en otra declaraci\u00f3n del mismo ejercicio presentada con anterioridad, no se incluyeron. Estas operaciones deber\u00e1n ser incluidas por el usuario manualmente, a trav\u00e9s de la p\u00e1gina de la AEAT tal y como se explica en la secci\u00f3n de este documento \u201cDeclaraci\u00f3n Complementaria\u201d.</p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#instalacion-del-modulo","title":"Instalaci\u00f3n del m\u00f3dulo","text":"<p>Para la instalaci\u00f3n del m\u00f3dulo \u201cModelo AEAT 349 - Declaraci\u00f3n recapitulativa de operaciones intracomunitarias\u201d, el usuario debe seguir los pasos que se describen a continuaci\u00f3n en funci\u00f3n de la situaci\u00f3n de partida:</p> <ul> <li>Instalaci\u00f3n de la \u00faltima versi\u00f3n disponible de Etendo</li> <li>o la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola.</li> </ul> <p>Info</p> <p>Para la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola, visite Marketplace. </p> <p>Es importante recalcar que:</p> <ul> <li>El m\u00f3dulo del Modelo AEAT 349 incluye el correspondiente conjunto de datos que relaciona los tipos/rangos de impuestos con los par\u00e1metros del 349.</li> <li>Una vez instalado el m\u00f3dulo, \u00e9ste se debe aplicar a la Organizaci\u00f3n para la cual se requiere obtener el modelo 349, tal y como se describe en el apartado siguiente.</li> </ul>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#aplicacion-del-modulo","title":"Aplicaci\u00f3n del M\u00f3dulo","text":"<p>Una vez instalado el m\u00f3dulo del 349, el usuario debe aplicar el m\u00f3dulo del 349 a la organizaci\u00f3n legal con contabilidad que corresponda.</p> <p>Es fundamental recalcar que el usuario debe tener el m\u00f3dulo de impuestos para Espa\u00f1a instalado y aplicado a la organizaci\u00f3n (*) y, por tanto, a la organizaci\u00f3n legal para que se quiera obtener el 349, dicho m\u00f3dulo de impuestos para Espa\u00f1a es v\u00e1lido para todos los modelos de declaraci\u00f3n de impuestos, en este caso el modelo de declaraci\u00f3n del 349, y debe estar instalado previamente.</p> <p>El usuario deber\u00e1 navegar a \"Configuraci\u00f3n General / Gesti\u00f3n del m\u00f3dulo de Empresa\", seleccionar la organizaci\u00f3n legal con contabilidad y aplicar los m\u00f3dulos en el orden especificado (primero el m\u00f3dulo de impuestos, si no est\u00e1 aplicado previamente, y despu\u00e9s el m\u00f3dulo del 349).</p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#configuracion-del-modulo-para-la-organizacion-con-contabilidad","title":"Configuraci\u00f3n del m\u00f3dulo para la organizaci\u00f3n con contabilidad","text":"<p>Una vez instalado el m\u00f3dulo del 349 por cualquiera de los procedimientos anteriores, el usuario debe aplicar el m\u00f3dulo del 349 a la organizaci\u00f3n legal con contabilidad que corresponda.</p> <p>Es fundamental recalcar que el usuario debe tener el m\u00f3dulo de impuestos para Espa\u00f1a instalado y aplicado a la organizaci\u00f3n legal con contabilidad previamente, dicho m\u00f3dulo de impuestos para Espa\u00f1a es v\u00e1lido para todos los modelos de declaraci\u00f3n de impuestos, en este caso el modelo de declaraci\u00f3n del 349, y debe estar instalado y aplicado a la organizaci\u00f3n previamente.</p> <p>El usuario deber\u00e1 navegar a \"Configuraci\u00f3n General / Gesti\u00f3n del m\u00f3dulo de Empresa\", seleccionar la organizaci\u00f3n legal con contabilidad y aplicar los m\u00f3dulos en el orden especificado (primero el m\u00f3dulo de impuestos si no est\u00e1 aplicado previamente y despu\u00e9s el m\u00f3dulo del 349).</p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#configuracion-del-modulo","title":"Configuraci\u00f3n del m\u00f3dulo","text":"","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#configuracion-del-modelo-349","title":"Configuraci\u00f3n del modelo 349","text":"<p>Este m\u00f3dulo de generaci\u00f3n del modelo 349 como un fichero de texto (\u201c*.txt\u201d) v\u00e1lido conforme a los requerimientos de la Hacienda P\u00fablica Espa\u00f1ola, se basa en la funcionalidad del \u201cGenerador de declaraciones de impuestos\u201d.</p> <p>El usuario puede comprobar en la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera / Contabilidad / Configuraci\u00f3n / Declaraci\u00f3n de Impuestos, que el modelo 349 est\u00e1 creado como informe anual, trimestral o mensual de impuestos, todos con la misma configuraci\u00f3n:</p> <p></p> <p>En la pesta\u00f1a \u201cSecciones de la declaraci\u00f3n\u201d se han creado 4 secciones:</p> <p></p> <ul> <li>Fichero esta primera secci\u00f3n contiene un par\u00e1metro de tipo entrada para que el usuario pueda introducir el nombre del fichero del 349 como par\u00e1metro de entrada a la hora de generar el fichero.</li> <li>Identificaci\u00f3n y Totales esta segunda secci\u00f3n tiene:<ul> <li>4 par\u00e1metros de tipo \u201centrada\u201d que se mostrar\u00e1n en el momento de generar el 349 con el fin de que el usuario los introduzca manualmente:<ul> <li>Persona de contacto: Apellidos y nombre de la persona de contacto. Este par\u00e1metro de tipo entrada podr\u00eda ser modificado a tipo constante y, por tanto, se deber\u00eda especificar el valor de dicha constante que en este caso ser\u00eda el nombre de la persona de contacto, para los escenarios en que la misma persona presenta la declaraci\u00f3n. De ser as\u00ed, este par\u00e1metro no tendr\u00eda que informarse cada vez que se genera la declaraci\u00f3n.</li> <li>Tel\u00e9fono de contacto: N\u00famero de tel\u00e9fono de la persona de contacto. Este par\u00e1metro de tipo entrada podr\u00eda ser modificado a tipo constante y, por tanto, se deber\u00eda especificar el valor de dicha constante que en este caso ser\u00eda el tel\u00e9fono de la persona de contacto, para los escenarios en que la misma persona presenta la declaraci\u00f3n. De ser as\u00ed, este par\u00e1metro no tendr\u00eda que informarse cada vez que se genera la declaraci\u00f3n.</li> <li>Declaraci\u00f3n sustitutiva (si/no)</li> <li>Identificador declaraci\u00f3n anterior: N\u00famero de la declaraci\u00f3n a sustituir.</li> </ul> </li> <li>3 par\u00e1metros de tipo \u201csalida\u201d que el sistema recoger\u00e1 de la base de datos:<ul> <li>A\u00f1o</li> <li>Nombre de la organizaci\u00f3n</li> <li>NIF/CIF de la organizaci\u00f3n</li> </ul> </li> </ul> </li> <li>Operaciones esta tercera secci\u00f3n tiene 2 par\u00e1metros de tipo \u201csalida\u201d que asociados a los tipos impositivos correspondientes incluir\u00e1n las operaciones en el 349:<ul> <li>Entregas intracomunitarias de bienes \u2013 Clave tributaria E</li> <li>Adquisiciones intracomunitarias de bienes \u2013 Clave tributaria A</li> </ul> </li> <li>Constantes esta cuarta secci\u00f3n tiene 11 par\u00e1metros de tipo \u201cconstante\u201d:<ul> <li>Constante en caso de informe anual (0A)</li> <li>Constante para el primer trimestre (1T)</li> <li>Constante para el segundo trimestre (2T)</li> <li>Constante para el tercer trimestre (3T)</li> <li>Constante para el cuarto trimestre (4T)</li> <li>N\u00famero de declaraci\u00f3n del 349 (349 se reemplaza al remitir el fichero)</li> <li>Tipo de declaraci\u00f3n (349)</li> <li>L\u00ednea tipo 1 (1)</li> <li>L\u00ednea tipo 2 operaciones (2)</li> <li>L\u00ednea tipo 2 correcciones (2)</li> <li>Presentaci\u00f3n (T)</li> </ul> </li> </ul>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#configuracion-de-impuestos","title":"Configuraci\u00f3n de impuestos","text":"<p>Este nuevo m\u00f3dulo de generaci\u00f3n del modelo 349 se basa en el m\u00f3dulo de impuestos para Espa\u00f1a y en uno espec\u00edfico para el 349.</p> <p>El usuario puede comprobar en la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera / Contabilidad / Configuraci\u00f3n / Rango impuesto - pesta\u00f1a Par\u00e1metro de Impuesto que los \u201ctipos impositivos/impuestos\u201d que deben incluirse en el 349 se han asociado al correspondiente par\u00e1metro de impuesto del 349:</p> <ul> <li>Los tipos de IVA de adquisiciones intracomunitarias se han asociado con el par\u00e1metro \u201cAdquisiciones intracomunitarias de bienes\u201d que se corresponde con la clave de operaci\u00f3n del 349: \u201cA\u201d</li> </ul> <p></p> <ul> <li>Los tipos de IVA de entregas intracomunitarias se han asociado con el par\u00e1metro \u201cEntregas intracomunitarias de bienes\u201d que se corresponde con la clave de operaci\u00f3n del 349: \u201cE\u201d</li> </ul> <p></p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#generacion-del-modelo-349","title":"Generaci\u00f3n del modelo 349","text":"<p>El modelo 349 se genera desde la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera / Contabilidad / Herramientas de an\u00e1lisis / Generador de declaraciones de impuestos. El usuario puede generar el modelo 349 para cualquier mes natural, trimestre natural o bien para el a\u00f1o que desea, tal y como se muestra en las pantallas siguientes:</p> <p></p> <p></p> <p></p> <p>En la ventana de generaci\u00f3n de informes, el usuario deber\u00e1 introducir los siguientes datos para generar el modelo 349:</p> <p>Organizaci\u00f3n para la cual quiere generar el Modelo 349. El sistema mostrar\u00e1 el calendario asociado a la organizaci\u00f3n en un campo no editable.</p> <p>Esquema contable</p> <p>Declaraci\u00f3n de impuestos. El usuario deber\u00eda seleccionar aqu\u00ed el modelo 349 mensual, trimestral o anual.</p> <p>Ejercicio. El usuario puede seleccionar el a\u00f1o para el cual quiere obtener el 349.</p> <p>Periodo. Si el usuario ha seleccionado el modelo 349 mensual, podr\u00e1 seleccionar aqu\u00ed el per\u00edodo (por ejemplo, enero 22), si ha seleccionado el modelo 349 trimestral, podr\u00e1 seleccionar aqu\u00ed el per\u00edodo (por ejemplo, enero 22 \u2013 marzo 22) y si ha seleccionado el modelo 349 anual, este campo mostrar\u00e1, como valor por defecto, \u201cAnual\u201d.</p> <p>Una vez introducidos los datos anteriores, el usuario puede introducir los par\u00e1metros de entrada del 349 en el bot\u00f3n de proceso \u201cPar\u00e1metros de entrada\u201d</p> <p></p> <p>y una vez introducidos los par\u00e1metros de entrada, el usuario puede generar el 349 a trav\u00e9s del bot\u00f3n de proceso \u201cGenerar fichero\u201d.</p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#navarra-y-guipuzcoa","title":"Navarra y Guip\u00fazcoa","text":"<p>Se incluyen 2 nuevos check que permiten generar el fichero con la parametrizaci\u00f3n correcta para poder realizar su presentaci\u00f3n en Hacienda Navarra y Hacienda Guip\u00fazcoa:</p> <p></p> <p>Anteriormente, el fichero generado del modelo 349 s\u00f3lo se pod\u00eda presentar en AEAT. Con esta mejora, se permite la presentaci\u00f3n tanto en Navarra como en Guip\u00fazcoa en funci\u00f3n del check que marquemos (si no se marca ninguno, el fichero se genera con la parametrizaci\u00f3n para la AEAT).</p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#casos-de-usuario","title":"Casos de usuario","text":"","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#generacion-del-modelo-349-como-un-fichero-de-texto-valido","title":"Generaci\u00f3n del modelo 349 como un fichero de texto v\u00e1lido","text":"<p>Esta funcionalidad permitir\u00e1 a las empresas espa\u00f1olas generar el modelo 349 como un fichero de texto conforme a los requisitos establecidos por la normativa espa\u00f1ola, para un periodo determinado.</p> <p>Durante el a\u00f1o/trimestre/mes natural, el usuario registrar\u00e1 en Etendo las transacciones de compra y/o devoluci\u00f3n con sus proveedores de la Uni\u00f3n Europea as\u00ed como las transacciones de venta y/o devoluciones de ventas con sus clientes de la uni\u00f3n europea.</p> <p>Las transacciones de compra y venta, se deber\u00e1n introducir en el sistema normalmente a trav\u00e9s de los tipos de documento de compra (albar\u00e1n de compra y factura de compra =AP invoice) y de venta (albar\u00e1n de venta y factura de venta =AR invoice), respectivamente.</p> <p>Las transacciones de devoluci\u00f3n, tanto de compra como de venta, se deber\u00e1n introducir en el sistema normalmente a trav\u00e9s de los tipos de documento de compra (albar\u00e1n de compra y abono de compra =AP invoice Negativa) y de venta (albar\u00e1n de venta y abono de venta=AR invoice Negativa).</p> <p>Adem\u00e1s, deber\u00e1 asegurarse de que todos los productos tienen la parametrizaci\u00f3n adecuada en relaci\u00f3n con las categor\u00edas de impuestos que tienen asociadas (21%-10%-4%).</p> <p>Una vez que todas las operaciones se han registrado en el sistema, el usuario podr\u00e1 generar el fichero del modelo 349 tal y como se explic\u00f3 en la secci\u00f3n de este documento \u201cGeneraci\u00f3n del Modelo 349\u201d. El fichero txt del 349 tiene la siguiente estructura:</p> <p></p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#tipo-registro-1-registro-de-declarante","title":"Tipo registro 1 \u2013 Registro de declarante:","text":"Posiciones Descripci\u00f3n 1 Tipo de Registro (constante = 1) 2-4 Modelo Declaraci\u00f3n (constante = 349) 5-8 Ejercicio 9-17 NIF del declarante 18-57 Apellidos y nombre o raz\u00f3n social del declarante 58 Blanco 59-107 Persona con qui\u00e9n relacionarse: Tel\u00e9fono / Apellidos y nombre 108-120 N\u00famero identificativo de la declaraci\u00f3n 121-122 Declaraci\u00f3n complementaria o substitutiva 123-135 N\u00famero identificativo de la declaraci\u00f3n anterior 136-137 Periodo (predeterminado = 1T,2T,3T,4T,0A,01,02,03,04,05,06,07,08,09,10,11,12) 138-146 N\u00famero total de operadores intracomunitarios 147-161 Importe de las operaciones intracomunitarias 162-170 N\u00famero total de operadores intracomunitarios con rectificaciones 171-185 Importe de las rectificaciones 186 Indicador cambio periodicidad en la obligaci\u00f3n de declarar 187- 390 Blancos 391 - 399 NIF del representante legal 400 - 500 Blancos","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#tipo-de-registro-2-registro-de-operador-intracomunitario","title":"Tipo de Registro 2 \u2013 Registro de operador intracomunitario","text":"Posiciones Descripci\u00f3n 1 Tipo de Registro (constante = 2) 2-4 Modelo Declaraci\u00f3n (constante = 349) 5-8 Ejercicio 9-17 NIF del declarante 18-75 Blancos 76-92 NIF del operador comunitario 93-132 Apellidos y nombre o raz\u00f3n social del operador intracomunitario 133 Clave de operaci\u00f3n (E, M, H, A, T, S, I, R, D o C) 134-146 Base Imponible o Importe 147-178 Blancos 179- 195 NIF Empresario o Profesional Destinatario final sustituto 196- 235 Apellidos y Nombre o Raz\u00f3n social del sujeto pasivo sustituto 236- 500 Blancos","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#tipo-de-registro-2-registro-de-rectificaciones","title":"Tipo de Registro 2 \u2013 Registro de rectificaciones","text":"Posiciones Descripci\u00f3n 1 Tipo de Registro (constante = 2) 2-4 Modelo Declaraci\u00f3n (constante = 349) 5-8 Ejercicio 9-17 NIF del declarante 18-75 Blancos 76-92 NIF del operador comunitario 93-132 Apellidos y nombre o raz\u00f3n social del operador intracomunitario 133 Clave de operaci\u00f3n (E, M, H, A, T, S, I, R, D o C) 134-146 Blancos 147-178 Rectificaciones\u00a0   - 147-150 ejercicio (de la declaraci\u00f3n que se corrige)\u00a0  - 151-152 periodo (de la declaraci\u00f3n que se corrige)\u00a0  - 153-165 base imponible (para el tercero y el periodo) rectificada\u00a0  - 166-178 base imponible (para el tercero y el periodo) declarada anteriormente 179- 195 NIF Empresario o Profesional Destinatario final sustituto 196- 235 Apellidos y Nombre o Raz\u00f3n social del sujeto pasivo sustituto 236- 500 Blancos","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#operaciones-rectificativas-del-349","title":"Operaciones rectificativas del 349","text":"<p>En el modelo/fichero del 349 hay que diferenciar de forma espec\u00edfica en el registro tipo 2 de \"Rectificaciones aquellas notas de abono a facturas que ya fueron incluidas en una declaraci\u00f3n 349 para un periodo anterior al corriente, por ejemplo:</p> <ul> <li>Declaraci\u00f3n 349 Mensual = Una nota de abono de fecha agosto del 2022 que abona una factura de fecha julio del 2022 que ya fue inclu\u00edda en la declaraci\u00f3n del 349 del mes de julio del 2022. La nota de abono de fecha agosto debe incluirse en la declaraci\u00f3n del mes de agosto como rectificativa a la declaraci\u00f3n del mes de julio para el proveedor/cliente que aplique, indicando adem\u00e1s el importe total (base imponible) de compra/venta que se incluy\u00f3 en la declaraci\u00f3n de julio para ese cliente/proveedor.</li> <li>Declaraci\u00f3n 349 Trimestral = Lo mismo aplica en el caso de presentaci\u00f3n de la declaraci\u00f3n del 349 de forma trimestral, lo \u00fanico que var\u00eda en este escenario es que en vez de tener en cuenta meses se tendr\u00e1n en cuenta trimestres.</li> <li>Declaraci\u00f3n 349 Anual = Lo mismo aplica en el caso de presentaci\u00f3n de la declaraci\u00f3n del 349 de forma anual, lo \u00fanico que var\u00eda en este escenario es que en vez de tener en cuenta meses/trimestres se tendr\u00e1n en cuenta el a\u00f1o natural.</li> </ul> <p>Y las que no y deben acumularse para el periodo, por ejemplo:</p> <ul> <li>Declaraci\u00f3n 349 Mensual = Una nota de abono de fecha de agosto 2022 que abona una factura de fecha de agosto 2022 que todav\u00eda no ha sido incluida en la Declaraci\u00f3n del 349 para el mes de agosto del 2022, se incluir\u00e1 en la declaraci\u00f3n de agosto como un menor valor del importe de compra/venta con el correspondiente proveedor/cliente.</li> <li>Declaraci\u00f3n 349 Trimestral o Anual = Lo mismo aplica en el caso de presentaci\u00f3n de la declaraci\u00f3n del 349 de forma trimestral o Anual, lo \u00fanico que var\u00eda en este escenario es que en vez de tener en cuenta meses se tendr\u00e1n en cuenta trimestres o el a\u00f1o natural.</li> </ul> <p>Es por ello que se ha introducido en el sistema una funcionalidad que permite al usuario, a la hora de crear una nota de abono o devoluci\u00f3n, indicar si dicha nota de abono/devoluci\u00f3n es una \u201crectificativa del 349\u201d o no, es decir, si rectifica a una factura (factura rectificada) de un a\u00f1o/mes/trimestre natural anterior y que, por tanto, ya se incluy\u00f3 en una declaraci\u00f3n del 349 anterior.</p> <p>Para introducir esta informaci\u00f3n, el usuario deber\u00e1 navegar a Gesti\u00f3n de compras o Ventas / Transacciones / Factura (Proveedor) o Factura (Cliente), crear una nueva factura como:</p> <ul> <li>una AP/AR invoice negativa (devoluci\u00f3n de mercanc\u00eda al proveedor/cliente)</li> <li>una AP/AR credit Memo</li> <li>una Reversed Purchase/Sales Invoice</li> <li>o incluso la anulaci\u00f3n total de una factura de compra/venta;</li> </ul> <p>e introducir los datos relativos al abono y devoluci\u00f3n de mercanc\u00eda y, en la pesta\u00f1a \u201cFactura Rectificativa\u201d, crear un nuevo registro con el fin de:</p> <ul> <li>seleccionar la factura (original) que esta abon\u00e1ndose o rectific\u00e1ndose - esa selecci\u00f3n ya vend\u0155a dada en caso de anulaci\u00f3n total de una factura.</li> <li>y adem\u00e1s seleccionar el nuevo campo \u201cRectificativa del 349\u201d, con el fin de indicar adem\u00e1s:<ul> <li>el A\u00f1o de la factura original que se rectifica</li> <li>el Periodo de la factura original y, por tanto, el periodo en el cual dicha factura original se incluy\u00f3 en un 349</li> <li>La base imponible del 349 de productos o, lo que es lo mismo, El importe total de compra/venta (que para operaciones intracomunitarias coincide con la Base Imponible total) que para dicho periodo y para dicho proveedor/cliente se inform\u00f3 en el 349 anterior con respecto a la compra/venta de productos (Clave A en compras, Clave E en ventas)</li> <li>y la base imponible del 349 servicios o, lo que es lo mismo, El importe total de compra/venta (que para operaciones intracomunitarias coincide con la Base Imponible total) que para dicho periodo y para dicho proveedor/cliente se inform\u00f3 en el 349 anterior con respecto a la compra/venta de servicios (Clave I en compras, Clave S en ventas)</li> </ul> </li> </ul> <p></p> <p>Tal y como se muestra en la pantalla anterior, esta funcionalidad requiere mostrar en Etendo las columnas que se detallan a continuaci\u00f3n:</p> <ul> <li>Correctiva del 349</li> <li>A\u00f1o</li> <li>Periodo</li> <li>Base Imponible del 349 Productos</li> <li>Business Partner</li> <li>Base Imponible del 349 Servicios</li> </ul> <p>Info</p> <p>No todas las notas de abono o devoluciones de mercanc\u00eda ser\u00e1n rectificativas del 349, s\u00f3lo aquellas que as\u00ed se configuren por el usuario. </p> <p>En caso de que la nota de abono o devoluci\u00f3n de mercanc\u00eda y la factura original pertenezcan al mismo periodo, por ejemplo al 1er mes del a\u00f1o 2022 (Enero 2022, en caso de declaraci\u00f3n del 349 mensual), al 1er periodo del a\u00f1o 2022 (Enero 2022 a Marzo 2022, en caso de declaraci\u00f3n del 349 trimestral) o al mismo mes (Enero 2022, en el caso de declaraci\u00f3n del 349 mensual), tan s\u00f3lo ser\u00e1 necesario relacionar ambos documentos en la nueva pesta\u00f1a \u201cFactura Rectificativa\u201d sin tener que seleccionar el par\u00e1metro \u201cRectificativa del 349\u201d.</p> <p>En este \u00faltimo escenario, el sistema, para un mismo proveedor o cliente y periodo, acumular\u00e1 las facturas positivas y los abonos con el fin de generar el computo global del importe de las transacciones de compra/venta efectuadas con dicho proveedor/cliente (operador intracomunitario) que debe incluirse en la declaraci\u00f3n del 349 para un periodo determinado.</p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#presentacion-del-modelo-349-en-formato-electronico","title":"Presentaci\u00f3n del modelo 349 en formato electr\u00f3nico","text":"<p>La presentaci\u00f3n telem\u00e1tica del modelo 349 en formato electr\u00f3nico requiere que las empresas tenga un NIF espa\u00f1ol as\u00ed como un Certificado electr\u00f3nico emitido por la \u201cF\u00e1brica Nacional de Moneda y Timbre\u201d (FNMT) u otro Certificado v\u00e1lido y reconocido por Hacienda.</p> <p>La presentaci\u00f3n telem\u00e1tica puede realizarse a trav\u00e9s de la p\u00e1gina web de la Hacienda P\u00fablica espa\u00f1ola, desde el enlace \u201cOficina virtual\u201d-\u201dPresentaci\u00f3n de declaraciones\u201d - \u201cTodas las declaraciones\u201d - \u201cModelo 349\u201d</p> <p>Info</p> <p>Existe una \u201cGu\u00eda de presentaci\u00f3n telem\u00e1tica\u201d en la p\u00e1gina web de Hacienda que nos explica c\u00f3mo debe realizarse la presentaci\u00f3n telem\u00e1tica de las declaraciones y que se puede descargar aqu\u00ed.</p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-349/#presentacion-de-declaraciones-sustitutivas","title":"Presentaci\u00f3n de declaraciones sustitutivas","text":"<p>Es necesario presentar una declaraci\u00f3n sustitutiva cuando dicha declaraci\u00f3n tenga por objeto anular y sustituir completamente a otra declaraci\u00f3n anterior para el mismo periodo ya enviada a Hacienda, en la cual se hubieran incluido datos inexactos o err\u00f3neos.</p> <p>Para ello el usuario deber\u00e1 realizar en la aplicaci\u00f3n los cambios en los datos/transacciones pertinentes y volver a generar una nueva declaraci\u00f3n 349 como fichero indicando en este caso que la nueva declaraci\u00f3n que se presenta es sustitutiva de una anterior, e indicando adem\u00e1s el n\u00famero de la declaraci\u00f3n original a la que sustituye, tal y como se muestra en la siguiente pantalla:</p> <p></p>","tags":["Modelo 349","Localizacion Espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/","title":"Modelo 390","text":"","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.module.aeat390.es</code></p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#introduccion","title":"Introducci\u00f3n","text":"<p>El presente manual de usuario explica el contenido y funcionamiento del m\u00f3dulo comercial de Etendo, \u201cModelo 390\u201d.\u00a0</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#descripcion-del-modelo","title":"Descripci\u00f3n del Modelo","text":"<p>El m\u00f3dulo Modelo 390 permite a las empresas cumplir con sus obligaciones fiscales relativas a la obligatoriedad de declarar un resumen anual de la liquidaci\u00f3n del IVA durante el ejercicio fiscal.</p> <p>Esta declaraci\u00f3n se debe enviar a la AEAT como un fichero XML de acuerdo con la normativa vigente.</p> <p>El Modelo 390 se debe presentar cada a\u00f1o durante los primeros 30 d\u00edas del mes de enero del a\u00f1o siguiente, junto con la autoliquidaci\u00f3n del IVA Modelo 303 correspondiente al \u00faltimo periodo del a\u00f1o.</p> <p>La liquidaci\u00f3n anual del IVA permite al usuario calcular el importe anual que debe pagar a, o ser devuelto por Hacienda como la diferencia entre el IVA devengado y el soportado deducible.</p> <p>Con este nuevo m\u00f3dulo comercial, el Modelo 390 se puede presentar a Hacienda como un fichero de texto v\u00e1lido, obtenido a trav\u00e9s del \"Generador de Declaraciones de Impuestos\".</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#contenido-del-fichero-modelo-390","title":"Contenido del fichero Modelo 390","text":"<p>El fichero generado por Etendo, que cumple con el formato requerido por la Agencia Tributaria, contiene una estructura en formato XML con las siguientes secciones:</p> <ul> <li>Sujeto Pasivo y devengo</li> <li>Datos Estad\u00edsticos<ul> <li>Actividad</li> <li>Clave</li> <li>Ep\u00edgrafe</li> </ul> </li> <li>Datos del Representante<ul> <li>Personas F\u00edsicas</li> <li>Personas Jur\u00eddicas</li> </ul> </li> <li>Operaciones realizadas en r\u00e9gimen general (IVA Devengado)</li> <li>Operaciones realizadas en r\u00e9gimen general (IVA Deducible)</li> <li>Resultado liquidaci\u00f3n anual</li> <li>Tributaci\u00f3n por raz\u00f3n de territorio</li> <li>Resultado de las liquidaciones<ul> <li>Periodos que no tributan en R\u00e9gimen especial del grupo de entidades</li> </ul> </li> <li>Volumen de operaciones<ul> <li>Operaciones en R\u00e9gimen General</li> <li>Operaciones en RECC</li> <li>Entregas Intracomunitarias Exentas</li> <li>Operaciones exentas sin derecho a deducci\u00f3n</li> <li>Exportaciones y otras operaciones exentas con derecho a deducci\u00f3n</li> <li>Operaciones no sujetas por reglas de localizaci\u00f3n o con inversi\u00f3n del sujeto pasivo</li> <li>Entregas de bienes inmuebles y operaciones financieras no habituales</li> <li>Entregas de bienes de inversi\u00f3n</li> </ul> </li> <li>Operaciones espec\u00edficas - Operaciones realizadas en el ejercicio<ul> <li>Adquisiciones interiores exentas</li> <li>Adquisiciones intracomunitarias exentas</li> <li>Servicios localizados en el territorio de aplicaci\u00f3n del impuesto por inversi\u00f3n del sujeto pasivo</li> <li>Entregas de bienes y prestaci\u00f3n de servicios en RECC, criterio devengo art 75 LIVA</li> <li>Adquisiciones de bienes y servicios en RECC, criterio devengo art 75 LIVA</li> </ul> </li> </ul> <p>Al contrario de otros modelos tributarios, este fichero XML no se puede importar en ning\u00fan software de la AEAT para su previsualizaci\u00f3n y edici\u00f3n.</p> <p>Sin embargo, debido a su estructura XML, este fichero se puede abrir directamente con cualquier editor de texto plano y su contenido es f\u00e1cilmente entendible.</p> <p>A continuaci\u00f3n se muestra como ejemplo un fragmento de dicho fichero:</p> <p></p> <p>Para facilitar el estudio y la comprensi\u00f3n de las cifras obtenidas y, debido al gran n\u00famero de transacciones y tipos de impuestos que pueden incluirse en este modelo, el m\u00f3dulo del Modelo 390 de Etendo genera un fichero .csv que puede abrirse con cualquier software de Hoja de C\u00e1lculo.\u00a0</p> <p>Este fichero .csv lista todas las transacciones incluidas en el fichero XML, el impuesto relacionado, el importe de base imponible y cuota junto a la casilla del Modelo 390 oficial en la que se ha incluido dicha transacci\u00f3n.</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#instalacion-y-configuracion-del-modulo","title":"Instalaci\u00f3n y configuraci\u00f3n del m\u00f3dulo","text":"","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#instalacion","title":"Instalaci\u00f3n","text":"<p>El soporte para el Modelo 390 en Etendo se distribuye en un \u00fanico m\u00f3dulo. Este m\u00f3dulo tiene un gran n\u00famero de dependencias, que ser\u00e1n instaladas autom\u00e1ticamente al instalar el 390. Entre estas dependencias destacan:</p> <ul> <li>Taxes: configuration for Spain (Impuestos para Espa\u00f1a)</li> <li>Tax Report Launcher</li> <li>Provincias de Espa\u00f1a</li> <li>Ep\u00edgrafes del I.A.E.</li> <li>Legal Representative of the Organization (representante legal de la organizaci\u00f3n)</li> </ul> <p>Para su instalaci\u00f3n el usuario debe seguir los pasos que se describen a continuaci\u00f3n en funci\u00f3n de la situaci\u00f3n de partida:</p> <ul> <li>Instalaci\u00f3n de la \u00faltima versi\u00f3n disponible del paquete profesional de Etendo Classic para Espa\u00f1a</li> <li>o la instalaci\u00f3n del m\u00f3dulo(s) de forma separada.</li> </ul> <p>Info</p> <p>Para la instalaci\u00f3n del m\u00f3dulo de Localizaci\u00f3n Espa\u00f1ola, visite Marketplace.\u00a0</p> <p>Adicionalmente, el Modelo 390 se distribuye en otro m\u00f3dulo compatible con el \"R\u00e9gimen Especial de Criterio de Caja\" (RECC). Este m\u00f3dulo s\u00f3lo contiene el juego de datos que relaciona los impuestos de IVA de Caja con los par\u00e1metros de declaraci\u00f3n del Modelo 390 correspondientes. Si su organizaci\u00f3n est\u00e1 sujeta a este r\u00e9gimen o es destinataria de operaciones sujetas a este r\u00e9gimen, deber\u00e1 instalar adem\u00e1s este m\u00f3dulo.</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#aplicacion-del-modulo","title":"Aplicaci\u00f3n del m\u00f3dulo","text":"<p>Los m\u00f3dulos del Modelo AEAT 390 incluye un \"conjunto de datos\" o \"configuraci\u00f3n\" que relaciona los tipos/rangos de impuestos para Espa\u00f1a, incluidos los de IVA de Caja, con los par\u00e1metros de declaraci\u00f3n del 390.</p> <p>Es por ello que, una vez instalado el m\u00f3dulo, la \"configuraci\u00f3n del Modelo 390\" debe aplicarse a la Entidad legal con Contabilidad que corresponda, en la ruta de aplicaci\u00f3n:</p> <p>Configuraci\u00f3n General | Organizaci\u00f3n | Gesti\u00f3n del m\u00f3dulo de Empresa.</p> <p></p> <p>Info</p> <p>Es fundamental recalcar que antes de aplicar esta configuraci\u00f3n, se debe haber aplicado previamente la configuraci\u00f3n del m\u00f3dulo de impuestos para Espa\u00f1a y del m\u00f3dulo de impuestos para Espa\u00f1a de IVA de Caja ya que el Modelo 390 depende de estos m\u00f3dulos de impuestos para Espa\u00f1a.</p> <p>Al instalar y aplicar los datos de referencia del Modelo 390 el usuario podr\u00e1 comprobar que:</p> <ol> <li>Se crea una nueva declaraci\u00f3n del Modelo 390 anual, en la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera | Contabilidad | Configuraci\u00f3n | Declaraci\u00f3n de impuestos, tal y como se muestra en la siguiente imagen:</li> </ol> <p></p> <p>De ser necesario, para cada a\u00f1o fiscal se publica una nueva versi\u00f3n del Modelo 390 con los cambios tanto de dise\u00f1o como de datos correspondientes. La \u00faltima versi\u00f3n disponible es la relativa al periodo fiscal 2021.</p> <ol> <li>Cada rango de impuestos del m\u00f3dulo de impuestos para Espa\u00f1a se asocian con el par\u00e1metro de declaraci\u00f3n del Modelo 390 correspondiente, con el fin de que las transacciones ligadas a dichos impuestos completadas y contabilizadas en el sistema, se tenga en cuenta en una u otra casilla/nodo del fichero XML, tal y como se muestra en la siguiente imagen:\u00a0</li> </ol> <p></p> <p>En la imagen del ejemplo se muestra como las bases imponibles/cuotas ligadas al rango de impuesto \"Entregas IVA 21%\" se reflejar\u00e1n en las casillas correspondientes del 390 relacionadas con:</p> <ul> <li>IVA devengado - Operaciones en R\u00e9gimen General</li> <li>IVA devengado - Modificaci\u00f3n de bases y cuotas (en el caso de abonos o facturas rectificativas)</li> <li>IVA devengado - Total Bases y Cuotas IVA</li> <li> <p>Volumen de operaciones - Operaciones en R\u00e9gimen General</p> </li> <li> <p>Por \u00faltimo, el generador de declaraciones de impuestos permite la generaci\u00f3n del fichero para la presentaci\u00f3n del modelo 390 del per\u00edodo fiscal que corresponda, desde la ruta de aplicaci\u00f3n:</p> </li> </ul> <p>Gesti\u00f3n Financiera | Contabilidad | Herramientas de an\u00e1lisis | Generador de declaraciones de impuestos.</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#tipos-de-documentos-soportados-por-el-modulo","title":"Tipos de documentos soportados por el m\u00f3dulo","text":"<p>El informe se genera teniendo en cuenta la informaci\u00f3n disponible en las facturas de compra y venta contabilizadas que incluyan alguno de los impuestos declarados en la configuraci\u00f3n del informe.</p> <p>M\u00e1s concretamente, los tipos de factura soportados son:</p> <ul> <li>Facturas de venta tipo AR Invoice positivas</li> <li>Facturas de venta tipo AR Invoice negativas</li> <li>Facturas de venta de tipo Reversal negativas</li> <li>Abonos de venta (Credit Memo) positivos</li> <li>Facturas de compra tipo AR Invoice positivas</li> <li>Facturas de compra tipo AR Invoice negativas</li> <li>Facturas de compra de tipo Reversal negativas</li> <li>Abonos de compra (Credit Memo) positivos</li> </ul>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#configuracion-previa-antes-de-generar-el-informe","title":"Configuraci\u00f3n previa antes de generar el informe","text":"","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#impuestos","title":"Impuestos","text":"<p>Info</p> <p>No es necesario realizar ninguna configuraci\u00f3n adicional si tiene aplicado y utiliza el M\u00f3dulo de Impuestos para Espa\u00f1a y el M\u00f3dulo de Impuestos para Espa\u00f1a de IVA de Caja.\u00a0</p> <p>Es por ello que se recomienda utilizar estos m\u00f3dulos de impuestos para Espa\u00f1a.</p> <p>Las transacciones relacionadas con impuestos creados manualmente s\u00f3lo se incluir\u00e1n en el Modelo 390 si se relacionan correctamente con el/los par\u00e1metros del 390 que corresponda:</p> <ul> <li>si, por ejemplo, se crea un nuevo tipo de IVA de compras nacionales de bienes al 21%, dicho impuesto deber\u00eda estar relacionado con los par\u00e1metros:     \"Modelo 390 v 2021 - Declaraci\u00f3n Anual de IVA - IVA Deducible - Operaciones Interiores Corrientes - IVA Deducible en operaciones interiores de bienes y servicios corrientes.\"     \"Modelo 390 v 2021 - Declaraci\u00f3n Anual de IVA - IVA Deducible - Rectificaci\u00f3n de deducciones.\"</li> </ul> <p>Recuerde que Etendo en la actualidad no contempla que un rango de impuesto de compras pueda definirse como parcialmente deducible.</p> <p>Configuraciones del tipo:</p> <ul> <li>Impuesto padre \"Adquisiciones IVA 21% (no 100% deducible)\"<ul> <li>Impuesto hijo \"Adquisiciones IVA 21% (50% deducible)\" con un \u00edndice 10.50, marcado como \"Impuesto Deducible\".</li> <li>Impuesto hijo \"Adquisiciones IVA 21% (50% no deducible)\" con un \u00edndice 10.50, marcado como \"Impuesto No deducible\"</li> </ul> </li> </ul> <p>no permitir\u00e1n la generaci\u00f3n del Modelo 390 ya que el \u00edndice 10.50% no es un \u00edndice o tipo que reconozca el fichero del 390.</p> <p>Estos impuestos no deber\u00e1n estar ligados a par\u00e1metros del 390 y sus importes (base y cuota) deber\u00e1n reflejarse en el programa \"IVA 2021\" o el que corresponda de forma manual.</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#actividades-del-iae","title":"Actividades del I.A.E.","text":"<p>En el Modelo 390 se deben declarar las principales actividades del I.A.E. (Impuesto de Actividades Econ\u00f3micas) en las que la empresa trabaja habitualmente.</p> <p>El m\u00f3dulo Ep\u00edgrafes I.A.E., instalado como dependencia del 390, a\u00f1ade una nueva solapa a la ventana de Organizaci\u00f3n en la que puede indicar todas las actividades en las que su empresa ha estado trabajando. El modelo 390 debe incluir como m\u00ednimo una actividad principal, que debe estar marcada en la aplicaci\u00f3n como por defecto, y como m\u00e1ximo 5 actividades. En caso de incluir m\u00e1s de 5 actividades, se incluir\u00e1n en el informe las 5 primeras seg\u00fan el n\u00famero de l\u00ednea.</p> <p></p> <p>En el m\u00f3dulo de Ep\u00edgrafes IAE se incluye el conjunto correspondiente a la clave 1. Si desea incluir un ep\u00edgrafe que pertenezca a cualquier otra clave, tan s\u00f3lo debe crear un nuevo registro en la ventana Ep\u00edgrafes IAE e incluirlo en un registro de la solapa de Actividades del IAE de la ventana de Organizaci\u00f3n.</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#representante-legal-de-la-organizacion","title":"Representante Legal de la Organizaci\u00f3n","text":"<p>Si su organizaci\u00f3n tiene uno o varios representantes legales debe declararlos en la solapa correspondiente de la ventana Organizaci\u00f3n, que est\u00e1 disponible al instalar el m\u00f3dulo Legal Representative of the Organization (representante legal de la organizaci\u00f3n).</p> <p></p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#generacion-del-modelo-390","title":"Generaci\u00f3n del modelo 390","text":"<p>Tal y como ya se ha explicado, el modelo 390, se genera como un fichero XML v\u00e1lido conforme a los requerimientos de la AEAT desde la ruta de aplicaci\u00f3n: Gesti\u00f3n Financiera | Contabilidad | Herramientas de an\u00e1lisis | Generador de declaraciones de impuestos | Generador de declaraciones de impuestos</p> <p>Una vez que el usuario ha introducido los datos gen\u00e9ricos, tales como la \"organizaci\u00f3n\", el \"ejercicio\" y \"periodo\", as\u00ed como la \"Declaraci\u00f3n de Impuestos'', puede introducir los par\u00e1metros de entrada propios del Modelo 390 para posteriormente generar el fichero.</p> <p>La ventana de \"par\u00e1metros de entrada\" del 390 se muestra en la siguiente imagen:</p> <p></p> <p>Los par\u00e1metros de entrada tienen que ver con datos que no pueden extraerse directamente desde Etendo. Datos como:</p> <ul> <li>check para indicar si se est\u00e1 \"Inscrito en el registro de devoluci\u00f3n mensual\"</li> <li>campo de texto para introducir un Nombre del fichero del 390</li> <li>check para indicar si \"Ha sido declarado en concurso de acreedores en el ejercicio\"</li> <li>check para indicar si \"las autoliquidaciones del \u00faltimo periodo de liquidaci\u00f3n del ejercicio corresponden a declaraciones concursales\"</li> <li>check para indicar si se trata de una \"Declaraci\u00f3n Sustitutiva\"</li> <li>check para indicar si se trata de una \"Declaraci\u00f3n sustitutiva por rectificaci\u00f3n de cuotas\"</li> <li>campo de texto para introducir el \"N\u00famero identificativo de la declaraci\u00f3n anterior\" que se sustituye o rectifica</li> <li>campo de texto para introducir si aplica la cuota a \"compensar del ejercicio anterior\"\u00a0</li> <li>campos de texto para introducir los \"% de tributaci\u00f3n por raz\u00f3n de territorio\", en los casos en que no hay una tributaci\u00f3n al 100% al territorio com\u00fan.<ul> <li>Si se introduce un valor aqu\u00ed (p.ej 50% territorio com\u00fan, 50% Navarra) el resultado de la liquidaci\u00f3n anual se borra y pasa a la casilla Resultado de la liquidaci\u00f3n anual atribuible a territorio com\u00fan.</li> </ul> </li> <li>campo de texto para introducir la cuota a Compensar atribuible a territorio com\u00fan </li> <li>campos de texto para introducir los resultados a ingresar en las autoliquidaciones de IVA del ejercicio, si aplica.</li> <li>campos de texto para introducir el total de devoluciones mensuales/trimestrales de IVA (Modelo 303 en los casos de inscripci\u00f3n en el registro de devoluci\u00f3n mensual</li> <li>campo de texto para introducir el Resultado de la autoliquidaci\u00f3n del \u00faltimo per\u00edodo a compensar</li> <li>campo de texto para introducir \"las cuotas pendientes de compensaci\u00f3n al t\u00e9rmino del ejercicio\"\u00a0</li> </ul>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#transformacion-de-parametros-de-entrada-en-constantes","title":"Transformaci\u00f3n de par\u00e1metros de entrada en constantes","text":"<p>Como se puede observar, el n\u00famero de par\u00e1metros de entrada es muy elevado. Para evitar tener que introducir todos estos datos cada vez que se genera el informe, el m\u00f3dulo del 390 permite definir como constantes cada uno de los par\u00e1metros de entrada. Para ello s\u00f3lo tiene que encontrar el par\u00e1metro de entrada en la definici\u00f3n del informe (ventana Declaraci\u00f3n de impuestos), cambiarle el tipo de par\u00e1metro a constante y definir el valor de dicha constante.</p> <p>Por ejemplo, en nuestra organizaci\u00f3n el porcentaje de tributaci\u00f3n en Territorio Com\u00fan es el 50% por lo que cambiamos ese par\u00e1metro a tipo constante con un valor de 50</p> <p></p> <p>A partir de ahora, cada vez que generemos el informe de nuevo no ser\u00e1 necesario introducir este par\u00e1metro, ya que ni siquiera aparecer\u00e1 de nuevo en la ventana de par\u00e1metros de entrada del 390.</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#resultado-del-modelo-390","title":"Resultado del Modelo 390","text":"<p>Una vez que el proceso de generaci\u00f3n del informe ha finalizado, el sistema nos devolver\u00e1 un fichero comprimido ZIP. Si lo descomprimimos, en su interior encontraremos dos ficheros:</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#fichero-xml","title":"Fichero XML","text":"<p>Este fichero XML es compatible con el formato oficial publicado en el BOE para el modelo 390 listo para ser enviado a la AEAT. Este fichero se puede abrir con cualquier editor de texto plano para examinar o editar su contenido</p> <p></p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#fichero-csv","title":"Fichero CSV","text":"<p>Un fichero CSV con la lista de facturas e importes que se han utilizado para generar el informe. Este archivo se puede importar en cualquier software de Hoja de C\u00e1lculo.\u00a0</p> <p>A la hora de importar el fichero es importante que defina los siguientes filtros:</p> <ul> <li>Juego de caracteres: UTF-8</li> <li>Separador: punto y coma, es decir ;</li> <li>Delimitador de texto: comilla doble, es decir \u201c</li> </ul> <p></p> <p>Este es el aspecto del fichero una vez importado como hoja de c\u00e1lculo:</p> <p></p> <p>La hoja nos muestra las facturas que se han tenido en cuenta para generar el 390, el impuesto (porcentaje, cuota y base imponible en Euros) de cada factura y el grupo de casillas correspondientes del 390 en las que se ha incluido dicho importe.</p> <p>La columna Casilla 390 representa la casilla o grupo de casillas en las que se ha incluido dicho importe. Esas casillas se corresponden con nodos del fichero XML generado desde Etendo.</p> <p>Por ejemplo, en la fila n\u00famero 2 del ejemplo anterior vemos que esa transacci\u00f3n se incluye en el grupo de casillas 01 02 03 04 05 06, que se corresponden con los siguientes nodos del fichero XML:</p> <p> <p> <p> <p> <p>Si buscamos estas casillas en el modelo 390 oficial, veremos que corresponden al R\u00e9gimen ordinario del IVA devengado, por lo que esta transacci\u00f3n en concreto deber\u00e1 reflejarse en las casillas 01 y 02 (IVA Devengado - R\u00e9gimen Ordinario 4%)</p> <p></p> <p>Warning</p> <p>Es importante tener en cuenta que las casillas correspondientes a subtotales de los grupos de IVA deducible (por ejemplo casillas 48 y 49) no se incluyen en el fichero CSV pero s\u00ed se incluyen en el archivo XML que contiene el informe oficial. Estas casillas se autogeneran como el sumatorio de las bases imponibles y cuotas de las casillas correspondientes de su grupo (por ejemplo casillas 190 a 606) que s\u00ed se incluyen en el CSV. Esta es una limitaci\u00f3n del fichero CSV que no afecta en absoluto al informe oficial generado.</p>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#ventajas","title":"Ventajas","text":"<p>El tener todos los datos en la hoja de c\u00e1lculo nos permite examinar la informaci\u00f3n con detalle. Por ejemplo:</p> <ul> <li>se puede definir un filtro autom\u00e1tico en la primera fila que nos permita filtrar por cualquiera de las columnas. De esta forma responderemos a preguntas del estilo: \u00bfla factura 1000013 en qu\u00e9 casillas del 390 se ha incluido? \u00bfQu\u00e9 facturas se han incluido en un determinado grupo de casillas del 390?, etc.</li> <li>tambi\u00e9n se puede realizar sumatorios sobre las columnas de cuota y base imponible para asegurarnos de que el importe incluido en el 390 es el correcto.</li> <li>Otra ventaja de tener la informaci\u00f3n tan detallada es que nos puede servir para rellenar manualmente el modelo 390 en el programa de ayuda \u201cIVA 2016\u201d. Esto puede ser \u00fatil en caso de que queramos a\u00f1adir informaci\u00f3n adicional no disponible en nuestra instancia de Etendo.</li> </ul>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/modelo-390/#presentacion-telematica-del-modelo-390","title":"Presentaci\u00f3n telem\u00e1tica del Modelo 390","text":"<p>Una vez que ha comprobado que las cifras incluidas en el Modelo 390 generado por Etendo son correctas, puede presentar el fichero XML en el siguiente enlace Presentaci\u00f3n Modelo 390 para lo cual se requiere un certificado v\u00e1lido.</p> <p>Se mostrar\u00e1n los siguientes datos:</p> <ul> <li>Total de cuotas de IVA y RE (IVA Devengado)\u00a0</li> <li>Suma de deducciones (IVA Deducible)\u00a0</li> <li>Resultado R\u00e9gimen General (Resultado Anual)\u00a0</li> <li>Resultado de la liquidaci\u00f3n, como resultado de la suma de:<ul> <li>resultados R\u00e9gimen General y Simplificado\u00a0</li> <li>menos la compensaci\u00f3n de cuotas ejercicio anterior\u00a0</li> </ul> </li> <li>Resultado de la liquidaci\u00f3n anual atribuible a territorio com\u00fan\u00a0</li> <li>Total volumen de operaciones\u00a0</li> </ul> <p>Es importante recordar que el resultado de la liquidaci\u00f3n anual del 390 tiene que coincidir con los resultados de las liquidaciones peri\u00f3dicas del Modelo 303.</p> <p>Los resultados de las liquidaciones peri\u00f3dicas del Modelo 303 se pueden introducir al lanzar el Modelo 390 desde Etendo, como \"Par\u00e1metros de Entrada\":</p> <ul> <li>\"Total resultados a ingresar en las autoliquidaciones de IVA del ejercicio\"</li> <li>o bien, \"Total devoluciones mensuales de IVA\"</li> <li>o bien, \"Resultado de la autoliquidaci\u00f3n el \u00faltimo per\u00edodo a compensar\".</li> </ul>","tags":["Modelo 390","AEAT"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/","title":"Localizaci\u00f3n Espa\u00f1ola","text":"<p> Javapackage: <code>com.etendoerp.localization.spain.extensions</code></p> <p> Etendo Marketplace:  Bundle de Localizacion Espa\u00f1ola</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#descripcion","title":"Descripci\u00f3n","text":"<p>El bundle de Localizaci\u00f3n Espa\u00f1ola contiene los m\u00f3dulos que a\u00f1aden funcionalidades a Etendo para ajustar Etendo Classic a los requerimientos legales y/o fiscales espa\u00f1oles.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#modulos","title":"M\u00f3dulos","text":"<ul> <li>Spain SII</li> <li>Tax Report: Modelo 303 (Spain)</li> <li>Withholding Report: Modelo 190 (Spain)</li> <li>Spain AEAT Modelo 347 for APR</li> <li>Modelo 349</li> <li>Impuestos para Espa\u00f1a</li> <li>Intrastat</li> <li>Tax Report: Modelo 390 (Spain)</li> <li>Libro de Facturas</li> <li>Configuraci\u00f3n de Impuestos para Libro de Facturas</li> <li>TicketBai y Batuz</li> <li>Incoterms</li> <li>European Union Countries</li> <li>Provincias de Espa\u00f1a</li> <li>Legal Representative of the Organization</li> <li>I.A.E. Epigraphs (Ep\u00edgrafes del I.A.E.)</li> <li>CIF and NIF validator</li> <li>Validador de n\u00famero de cuenta financiera</li> <li>Check Printing</li> <li>Tipo de N\u00famero de Identificaci\u00f3n de Tercero</li> <li>Professional Localization pack Spain (Espa\u00f1a) Datasets</li> <li>Multidimensional Tax Report</li> <li>Cuaderno 43</li> <li>3 digits ISO country codes</li> <li>M\u00e9todos de Pago</li> <li>Tax Report Launcher</li> <li>Spanish Tax Module Improvements</li> <li>Nueva versi\u00f3n del m\u00f3dulo de Impuestos de Espa\u00f1a</li> <li>Condiciones de pago</li> <li>Chart of accounts: PGC 2007 General</li> <li>Chart of accounts: PGC 2007 PYMEs</li> <li>Professional Localization pack Spain (Espa\u00f1a)</li> <li>Localization pack Spain (Espa\u00f1a)</li> <li>Traducci\u00f3n al espa\u00f1ol del m\u00f3dulo 'Default Jobs'</li> <li>JSON Datasource Translation: Spanish Spain (es_ES)</li> <li>Workspace &amp; Widgets Translation: Spanish Spain (es_ES)</li> <li>User Interface Selector Translation: Spanish Spain (es_ES)</li> <li>Traducci\u00f3n al Espa\u00f1ol del m\u00f3dulo Payment Report</li> <li>Number To Word</li> <li>User Interface Client Kernel Translation Spanish Spain(esES)</li> <li>Translation: Spanish-Spain (es_ES) espa\u00f1ol-Espa\u00f1a</li> <li>Openbravo Multi Business Partner Selector</li> <li>Orders Awaiting Delivery Spanish (Spain) Translation</li> <li>Smartclient Translation: Spanish Spain (es_ES)</li> <li>Query/List Widget Translation Spanish Spain (es_ES)</li> <li>Widgets Collection Translation Spanish Spain (es_ES)</li> <li>Advanced Payables and Receivables - Spanish Translation</li> <li>User Interface Application Translation Spanish Spain (es_ES)</li> <li>Alerts: Accounting</li> <li>SOAP with Attachments API for Java Implementation</li> <li>Payment Method Type</li> <li>Javax XML SOAP API</li> <li>HTML Widget Translation Spanish Spain (es_ES)</li> <li>OpenID Service Integration Translation Spanish Spain</li> <li>Integration with Google APIs Translation Spanish Spain</li> <li>Openbravo 3.0 Translation Pack: Spanish Spain (es_ES)</li> </ul>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#incoterms","title":"Incoterms","text":"<p> Javapackage: <code>org.openbravo.module.incoterms</code></p> <p>Este m\u00f3dulo a\u00f1ade el listado de Incoterms a Etendo Classic.</p> <p>Los Incoterms or International Commercial Terms son una serie de t\u00e9rminos de venta internacionales, publicados por la C\u00e1mara Internacional de Comercio y ampliamente utilizados en transacciones comerciales internacionales. Son utilizados para dividir costos de transacci\u00f3n y responsabilidades entre compradores y vendedores.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#european-union-countries","title":"European Union Countries","text":"<p> Javapackage: <code>org.openbravo.module.eucountries</code></p> <p>Este m\u00f3dulo identifica qu\u00e9 pa\u00edses pertenecen a la Uni\u00f3n Europea.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#provincias-de-espana","title":"Provincias de Espa\u00f1a","text":"<p> Javapackage: <code>org.openbravo.spain.regions</code></p> <p>Este m\u00f3dulo a\u00f1ade el listado de provincias espa\u00f1olas a Etendo Classic.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#legal-representative-of-the-organization","title":"Legal Representative of the Organization","text":"<p> Javapackage: <code>org.openbravo.module.organization.representative.es</code></p> <p>Este m\u00f3dulo a\u00f1ade a la ventana de la Organizaci\u00f3n una pesta\u00f1a que permite configurar el Representante Legal de la Organizaci\u00f3n. Pueden declararse uno o varios Representantes.</p> <p>La pesta\u00f1a \u201cRepresentante Legal\u201d que se a\u00f1ade a la ventana de Organizaci\u00f3n permite configurar el Representante Legal de la organizaci\u00f3n, dato que es obligatorio para el Modelo 390.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#iae-epigraphs-epigrafes-del-iae","title":"I.A.E. Epigraphs (Ep\u00edgrafes del I.A.E.)","text":"<p> Javapackage: <code>org.openbravo.module.epigrafes.iae.es</code></p> <p>Este m\u00f3dulo agrega en la ventana de Organizaci\u00f3n una pesta\u00f1a titulada \u201cActividades del IAE\u201d, donde se pueden indicar todas las actividades en las que la empresa ha estado trabajando. Es posible seleccionar los Ep\u00edgrafes del Impuesto sobre Actividades Econ\u00f3micas (IAE) que est\u00e9n asociados a la Organizaci\u00f3n.</p> <p>El tipo de informaci\u00f3n agregada por este m\u00f3dulo se requiere en determinados modelos tributarios oficiales, por ejemplo en el Modelo 390.</p> <p>En este m\u00f3dulo se incluye el conjunto correspondiente a la clave 1. Si se desea incluir un ep\u00edgrafe que pertenezca a cualquier otra clave, se debe crear un nuevo registro en la ventana Ep\u00edgrafes IAE e incluirlo en un registro de la solapa \u201cActividades del IAE\u201d de la ventana de Organizaci\u00f3n.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#cif-and-nif-validator","title":"CIF and NIF validator","text":"<p> Javapackage: <code>org.openbravo.module.cifnifvalidator</code></p> <p> Javapackage: <code>org.openbravo.module.cifnifvalidator.es_es</code></p> <p>Este m\u00f3dulo implementa un callout que comprueba si se ha introducido un N\u00famero de Identificaci\u00f3n Fiscal (NIF) v\u00e1lido al configurar un tercero.</p> <p>El N\u00famero de Identificaci\u00f3n Fiscal (NIF) permite identificar de forma inequ\u00edvoca a personas f\u00edsicas o jur\u00eddicas.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#validador-de-numero-de-cuenta-financiera","title":"Validador de n\u00famero de cuenta financiera","text":"<p> Javapackage: <code>org.openbravo.module.finactvalidator.es</code></p> <p>Este m\u00f3dulo permite validar el n\u00famero de cuenta financiera de la organizaci\u00f3n y el n\u00famero de cuenta de banco del tercero, de acuerdo con la normativa espa\u00f1ola. Verifica que se ajusten al formato definido para Espa\u00f1a, y que los d\u00edgitos de control sean correctos.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#check-printing","title":"Check Printing","text":"<p> Javapackage: <code>org.openbravo.finance.checkprinting</code></p> <p> Javapackage: <code>org.openbravo.finance.checkprinting.es_es</code></p> <p>Este m\u00f3dulo permite la impresi\u00f3n de cheques desde Etendo. Adem\u00e1s, provee un sistema para buscar datos hist\u00f3ricos y poder volver a imprimir un cheque en caso de error.</p> <p>Este m\u00f3dulo incluye el dataset \"Check Printing Infraestructure\" que crea un formato de impresi\u00f3n llamado \"Standard Format\", un m\u00e9todo de pago denominado \u201cCheck\" y un proceso de ejecuci\u00f3n llamado \"Check Printing\".</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#ejecutar-pago","title":"Ejecutar pago","text":"<p>Despu\u00e9s de crear un pago, permanecer\u00e1 en \u201cAwaiting Execution\u201d. Se necesita un paso adicional para ejecutarlo y proveer el primer n\u00famero para la secuencia de los cheques, esto puede hacerse a trav\u00e9s del formulario de \u201cPayment Execution\u201d.</p> <p>Para seleccionar los pagos que ser\u00e1n impresos, tras hacer click en \u201cProcess\u201d aparece un pop up que requiere un n\u00famero para el cheque. Este n\u00famero es opcional. El sistema crear\u00e1 autom\u00e1ticamente las entradas en la ventana \u201cCheck Printing\u201d en estado \u201cNot Printed\u201d. Adem\u00e1s, el sistema asociar\u00e1 autom\u00e1ticamente el tipo de documento \u201cCheck\u201d y el n\u00famero de secuencia.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#imprimir-cheques","title":"Imprimir cheques","text":"<p>Se genera una nueva ventana para imprimir cheques. Esta puede encontrarse en Gesti\u00f3n Financiera &gt; Gesti\u00f3n de cobros y pagos &gt; Transacciones &gt; Impresi\u00f3n de cheques. La informaci\u00f3n de esta ventana ser\u00e1 autom\u00e1ticamente completada cuando se ejecuten transacciones payment out que est\u00e1n usando el m\u00e9todo de pago \u201cCheck\u201d.</p> <p>La ventana aplica un primer filtro para mostrar solamente los cheques que est\u00e1n en estado \u201cNot printed\u201d. Ese filtro puede ser removido para mostrar todos los cheques, incluidos los que est\u00e1n en estado \u201cPrinted\u201d.</p> <p>Para imprimir uno o varios cheques, se deben seleccionar y presionar el bot\u00f3n \u201cImprimir\u201d.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#tipo-de-numero-de-identificacion-de-tercero","title":"Tipo de N\u00famero de Identificaci\u00f3n de Tercero","text":"<p> Javapackage: <code>org.openbravo.module.bptaxidkey</code></p> <p>Este m\u00f3dulo a\u00f1ade el campo \u201cN\u00famero de identificaci\u00f3n de tercero\u201d a la ventana de Terceros. Este dato es utilizado por los Libros de Registro de Facturas.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#professional-localization-pack-spain-espana-datasets","title":"Professional Localization pack Spain (Espa\u00f1a) Datasets","text":"<p> Javapackage: <code>org.openbravo.proflocalization.spain.dataset</code></p> <p>Este m\u00f3dulo contiene un dataset que a\u00f1ade permisos para ciertas ventanas y procesos incluidos en el pack de Localizaci\u00f3n Espa\u00f1ola para el rol de Finanzas.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#multidimensional-tax-report","title":"Multidimensional Tax Report","text":"<p> Javapackage: <code>org.openbravo.module.invoicetaxreportenhanced30</code></p> <p> Javapackage: <code>org.openbravo.module.invoicetaxreportenhanced30.es_es</code></p> <p>Este m\u00f3dulo genera un informe que permite al usuario obtener un listado de aquellas transacciones registradas en el sistema que tienen implicaciones fiscales.</p> <p>El m\u00f3dulo permite obtener los datos necesarios para cumplimentar modelos de la AEAT que no se generan como un fichero v\u00e1lido desde Etendo. Por ejemplo, el Modelo 115 (Trimestral) de Retenciones e ingresos a cuenta sobre rentas procedentes del arrendamiento de inmuebles urbanos.</p> <p>La informaci\u00f3n obtenida mediante este m\u00f3dulo es \u00fatil para que las empresas puedan completar manualmente y enviar los informes requeridos por las autoridades. Se le brinda al usuario final informaci\u00f3n fiscal relevante, que luego puede ser clasificada seg\u00fan las necesidades.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#cuaderno-43","title":"Cuaderno 43","text":"<p> Javapackage: <code>org.openbravo.module.cuaderno43.es</code></p> <p>Este m\u00f3dulo implementa el formato de importaci\u00f3n bancaria \u201cCuaderno 43\u201d (Norma AEB 43). Los Cuadernos o Normas AEB (Asociaci\u00f3n Espa\u00f1ola de la Banca) son una serie de normas o protocolos comunes a todas las entidades bancarias que operan en Espa\u00f1a y que fijan las caracter\u00edsticas de los ficheros inform\u00e1ticos emitidos o recibidos por una entidad financiera.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#3-digits-iso-country-codes","title":"3 digits ISO country codes","text":"<p> Javapackage: <code>org.openbravo.module.countryisocode</code></p> <p>Los c\u00f3digos ISO de pa\u00edses son utilizados a nivel mundial para representar a cada pa\u00eds con d\u00edgitos. Este m\u00f3dulo provee el dataset que vincula los pa\u00edses con su c\u00f3digo ISO.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#metodos-de-pago","title":"M\u00e9todos de Pago","text":"<p> Javapackage: <code>org.openbravo.spanishdefaultdata.paymentmethods</code></p> <p>Este m\u00f3dulo contiene las formas de pago m\u00e1s utilizadas en Espa\u00f1a, las cuales pueden ser utilizadas en el m\u00f3dulo de gesti\u00f3n avanzada de cobros y pagos. Incluye Recibo domiciliado, Recibo, Letra Aceptada, Cr\u00e9dito Documentario, Contrato Adjudicaci\u00f3n, etc.</p> <p>El m\u00f3dulo de M\u00e9todos de Pago refiere a las formas de pago utilizadas por las empresas, por ejemplo contado o tarjeta de cr\u00e9dito. Etendo define un flujo de pagos basado en la configuraci\u00f3n de M\u00e9todos de Pago.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#tax-report-launcher","title":"Tax Report Launcher","text":"<p> Javapackage: <code>org.openbravo.module.taxreportlauncher</code></p> <p> Javapackage: <code>org.openbravo.module.taxreportlauncher.es</code></p> <p>Este m\u00f3dulo consiste en un launcher de impuestos que permite la definici\u00f3n de informes y de sus par\u00e1metros, e incluye la clase java asociada que contiene la l\u00f3gica de negocios que ser\u00e1 aplicada.</p> <p>Este m\u00f3dulo permite crear y enviar formularios de informe de impuestos desde Etendo. Es posible ingresar los datos requeridos en un formulario en particular y generar un fichero que luego puede ser enviado a las autoridades. Los impuestos para una localizaci\u00f3n determinada se instalan con m\u00f3dulos que extienden de este.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#configuracion-de-declaraciones-de-impuestos","title":"Configuraci\u00f3n de declaraciones de impuestos","text":"<p>Para habilitar el uso del launcher de declaraciones de impuestos, se deben descargar e instalar los siguientes m\u00f3dulos:</p> <ul> <li>Tax Report Launcher</li> <li>M\u00f3dulos individuales de informes para los informes de impuestos que se quieren utilizar.</li> <li>M\u00f3dulos de c\u00f3digos de transacci\u00f3n y de clave tributaria.</li> </ul> <p>Cuando estos m\u00f3dulos est\u00e1n instalados, es necesario asociar los rangos de impuestos con los par\u00e1metros de las declaraciones de impuestos.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#codigos-de-transaccion","title":"C\u00f3digos de transacci\u00f3n","text":"<p>Los c\u00f3digos de transacci\u00f3n representan transacciones en las que se paga IVA. Por ejemplo, una compra de bienes. Hay dos c\u00f3digos de transacci\u00f3n predeterminados en Etendo: E para transacciones de venta y A para transacciones de compra. Los c\u00f3digos de transacci\u00f3n est\u00e1n en un m\u00f3dulo que se puede descargar y aplicar.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#claves-y-subclaves-de-impuestos","title":"Claves y subclaves de impuestos","text":"<p>El sistema fiscal espa\u00f1ol designa un conjunto espec\u00edfico de letras para cada tipo de ingreso (por ejemplo, la P representa la renta de una propiedad alquilada). Las claves y subclaves de impuestos est\u00e1n en un m\u00f3dulo que se puede descargar y aplicar.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#asociar-un-rango-de-impuestos-con-un-parametro-de-impuestos","title":"Asociar un rango de impuestos con un par\u00e1metro de impuestos","text":"<ul> <li>Se realiza a partir de la ruta Gesti\u00f3n Financiera &gt; Contabilidad &gt; Configuraci\u00f3n &gt; Rango Impuesto.</li> <li>En la vista de cuadr\u00edcula, se selecciona la tasa de impuestos que se desea asociar con un par\u00e1metro de impuestos.</li> <li>Se selecciona la pesta\u00f1a \u201cPar\u00e1metro de declaraci\u00f3n\u201d.</li> <li>En la lista de Par\u00e1metros del informe de impuestos, se debe seleccionar el par\u00e1metro que se desea asociar con la tasa de impuestos.</li> <li>Clic en \u201cGuardar\u201d.</li> </ul>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#usar-el-generador-de-declaraciones-de-impuestos-para-generar-un-informe","title":"Usar el Generador de Declaraciones de Impuestos para generar un informe","text":"<ul> <li>Ruta: Gesti\u00f3n Financiera &gt; Contabilidad &gt; Herramientas de an\u00e1lisis &gt; Generador de declaraciones de impuestos.</li> <li>Seleccionar de la lista de \u201cDeclaraci\u00f3n de impuestos\u201d cu\u00e1l es el informe requerido.</li> <li>Seleccionar la organizaci\u00f3n para la cual se quiere generar el informe de impuestos. Para ello, la organizaci\u00f3n debe ser del tipo entidad legal con contabilidad.</li> <li>Seleccionar el esquema contable que se desea utilizar para el informe de impuestos. Se puede seleccionar el esquema de contabilidad propio de la organizaci\u00f3n o un esquema de contabilidad de una organizaci\u00f3n padre.</li> <li>Seleccionar un calendario. El sistema establece de forma predeterminada el calendario de la organizaci\u00f3n, pero se puede seleccionar cualquier otro. Esto es especialmente \u00fatil cuando el calendario de la organizaci\u00f3n no se basa en a\u00f1os naturales (de enero a diciembre), pero el informe requiere per\u00edodos y a\u00f1os naturales.</li> <li>En la lista \u201cA\u00f1o\u201d, se debe seleccionar el a\u00f1o fiscal para el que se desea crear el informe.</li> <li>En la lista \u201cPer\u00edodo\u201d, se debe seleccionar el per\u00edodo para el que se desea crear el informe. Por ejemplo, si el informe se ha configurado para enviarse al final de cada trimestre, se puede seleccionar el trimestre correcto de la lista.</li> <li>Al hacer clic en \u201cPar\u00e1metros de entrada\u201d, aparece una ventana que muestra campos a completar con informaci\u00f3n necesaria para el informe. Los campos que aparecen dependen de la configuraci\u00f3n del informe fiscal y deben ser completados.</li> <li>En el campo \u201cNombre de archivo\u201d se asigna al informe un nombre de archivo.</li> <li>Click en \u201cGenerar archivo electr\u00f3nico\u201d.</li> <li>Aparece un mensaje que pregunta si desea ver o guardar el archivo. Tras seleccionar la opci\u00f3n \u201cGuardar\u201d, se debe especificar una ubicaci\u00f3n de archivo.</li> </ul>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#spanish-tax-module-improvements","title":"Spanish Tax Module Improvements","text":"<p> Javapackage: <code>org.openbravo.module.taximprovements.es</code></p> <p> Javapackage: <code>org.openbravo.module.taximprovements.es_es</code></p> <p>Este m\u00f3dulo a\u00f1ade campos en la ventana de \u201cRango de impuestos\u201d para mejorar la configuraci\u00f3n y administraci\u00f3n de los impuestos de Espa\u00f1a. Los campos a\u00f1adidos son: Tipo de libro, Inversi\u00f3n de sujeto pasivo, Recargo de equivalencia e Impuesto intracomunitario.</p> <ul> <li>Tipo de Libro (\u201cTax Book Type\u201d): El usuario puede configurar si un rango de impuesto debe ser reportado en la compra (recibido) o en la venta (enviado) del Libro de Facturas.</li> <li>Inversi\u00f3n de Sujeto Pasivo (\"Reverse Charge\"): El usuario puede seleccionar este check para indicar que un rango de impuesto es una tasa de impuesto de cargo inverso</li> <li>Recargo de equivalencia (\"Equivalent Charge\"): El usuario puede seleccionar este check para indicar que un rango de impuesto es un recargo de equivalencia.</li> <li>Impuesto Intracomunitario (\"Intra Community Tax\"): El usuario puede seleccionar este check para indicar que un rango de impuesto es intracomunitario.</li> </ul>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#nueva-version-del-modulo-de-impuestos-de-espana","title":"Nueva versi\u00f3n del m\u00f3dulo de Impuestos de Espa\u00f1a","text":"<p>Este m\u00f3dulo incluye en los impuestos espa\u00f1oles el IGIC Canario y el IPSI aplicable en Ceuta y Melilla.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#condiciones-de-pago","title":"Condiciones de pago","text":"<p> Javapackage: <code>org.openbravo.spanishdefaultdata.paymentterms</code></p> <p>Este m\u00f3dulo contiene las condiciones de pago m\u00e1s utilizadas en Espa\u00f1a. Entre ellas se incluyen el pago en \"30 d\u00edas\", \"60 d\u00edas\", \"90 d\u00edas\", \"120 d\u00edas\", \"50% en el acto, resto 60 d\u00edas\", \"20% a 10 d\u00edas resto a 30 d\u00edas\" y \"20% a 15 d\u00edas, 40% a 30 d\u00edas, resto a 60 d\u00edas\".</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#chart-of-accounts-pgc-2007-general","title":"Chart of accounts: PGC 2007 General","text":"<p> Javapackage: <code>org.openbravo.localization.spain.referencedata.accounts</code></p> <p>Este m\u00f3dulo a\u00f1ade el Plan de Cuentas General (Modelo Normal) conforme a los requerimientos vigentes en Espa\u00f1a.</p> <p>Etendo puede configurarse para realizar la contabilidad en base a distintos esquemas contables.</p> <p>El cuadro de cuentas define las cuentas contables y la estructura del balance de situaci\u00f3n y de la cuenta de resultados. La estructura de la cuenta de resultados es de una sola columna. El cuadro de cuentas definido permite utilizar las cuentas contables y obtener la informaci\u00f3n del balance y la cuenta de resultados.</p> <p>El Plan de Cuentas General tiene la siguiente estructura:</p> <ul> <li>Marco Conceptual de la Contabilidad</li> <li>Normas de registro y valoraci\u00f3n</li> <li>Cuentas anuales</li> <li>Cuadro de cuentas</li> <li>Definiciones y relaciones contables</li> </ul> <p>El Plan de Cuentas que a\u00f1ade este m\u00f3dulo es el que debe ser utilizado si una empresa cumple alguna de estas condiciones:</p> <ul> <li>El total de las partidas del activo de la empresa supera los dos millones ochocientos cincuenta mil euros.</li> <li>El importe neto de la cifra anual de negocios supera los cinco millones setecientos mil euros.</li> <li>El n\u00famero medio de trabajadores empleados durante el ejercicio es superior a cincuenta.</li> <li>La empresa ha emitido valores admitidos a negociaci\u00f3n en mercados regulados o sistemas multilaterales de negociaci\u00f3n, de cualquier Estado miembro de la Uni\u00f3n Europea.</li> <li>Forma parte de un grupo de sociedades que formule o debiera haber formulado cuentas anuales consolidadas.</li> <li>La moneda funcional es distinta del euro.</li> <li>Se trata de una entidad financiera que capta fondos del p\u00fablico, asumiendo obligaciones respecto a los mismos.</li> </ul>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#chart-of-accounts-pgc-2007-pymes","title":"Chart of accounts: PGC 2007 PYMEs","text":"<p> Javapackage: <code>org.openbravo.localization.spain.referencedata.accounts.pymes</code></p> <p>Este m\u00f3dulo a\u00f1ade el Plan de Cuentas PYMES conforme a los requerimientos vigentes en Espa\u00f1a.</p> <p>Etendo puede configurarse para realizar la contabilidad en base a distintos esquemas contables.</p> <p>El cuadro de cuentas define las cuentas contables y la estructura del balance de situaci\u00f3n y de la cuenta de resultados. La estructura de la cuenta de resultados es de una sola columna. El cuadro de cuentas definido permite utilizar las cuentas contables y obtener la informaci\u00f3n del balance y la cuenta de resultados.</p> <p>El Plan de Cuentas que a\u00f1ade este m\u00f3dulo es el utilizado por las peque\u00f1as y medianas empresas en Espa\u00f1a. Tiene la siguiente estructura:</p> <ul> <li>Marco Conceptual de la Contabilidad</li> <li>Normas de registro y valoraci\u00f3n</li> <li>Cuentas anuales</li> <li>Cuadro de cuentas</li> <li>Definiciones y relaciones contables</li> </ul>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#professional-localization-pack-spain-espana","title":"Professional Localization pack Spain (Espa\u00f1a)","text":"<p>Este m\u00f3dulo ofrece a las empresas espa\u00f1olas un set de m\u00f3dulos que adaptan Etendo a los requerimientos comerciales de Espa\u00f1a, permitiendo realizar procesos de manera r\u00e1pida y eficaz. Incluye una gesti\u00f3n avanzada de cuentas a cobrar y a pagar.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#localization-pack-spain-espana","title":"Localization pack Spain (Espa\u00f1a)","text":"<p> Javapackage: <code>org.openbravo.localization.spain30</code></p> <p>Este m\u00f3dulo ofrece a las empresas espa\u00f1olas un set de m\u00f3dulos que adaptan Etendo a los requerimientos comerciales de Espa\u00f1a, permitiendo realizar procesos de manera r\u00e1pida y eficaz.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#traduccion-al-espanol-del-modulo-default-jobs","title":"Traducci\u00f3n al espa\u00f1ol del m\u00f3dulo 'Default Jobs'","text":"<p> Javapackage: <code>com.smf.jobs.defaults.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#json-datasource-translation-spanish-spain-es_es","title":"JSON Datasource Translation: Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.service.datasource.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#workspace-widgets-translation-spanish-spain-es_es","title":"Workspace &amp; Widgets Translation: Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.client.myob.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#user-interface-selector-translation-spanish-spain-es_es","title":"User Interface Selector Translation: Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.userinterface.selector.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#traduccion-al-espanol-del-modulo-payment-report","title":"Traducci\u00f3n al Espa\u00f1ol del m\u00f3dulo Payment Report","text":"<p> Javapackage: <code>org.openbravo.financial.paymentreport.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#number-to-word","title":"Number To Word","text":"<p> Javapackage: <code>org.openbravo.numbertoword</code></p> <p> Javapackage: <code>org.openbravo.numbertoword_es</code></p> <p> Javapackage: <code>org.openbravo.numbertoword.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#user-interface-client-kernel-translation-spanish-spaineses","title":"User Interface Client Kernel Translation Spanish Spain(esES)","text":"<p> Javapackage: <code>org.openbravo.client.kernel.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#translation-spanish-spain-es_es-espanol-espana","title":"Translation: Spanish-Spain (es_ES) espa\u00f1ol-Espa\u00f1a","text":"<p> Javapackage: <code>org.openbravo.localization.spain.referencedata.translation.esES</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#openbravo-multi-business-partner-selector","title":"Openbravo Multi Business Partner Selector","text":"<p> Javapackage: <code>org.openbravo.utility.multiplebpselector</code></p> <p> Javapackage: <code>org.openbravo.utility.multiplebpselector.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#orders-awaiting-delivery-spanish-spain-translation","title":"Orders Awaiting Delivery Spanish (Spain) Translation","text":"<p> Javapackage: <code>org.openbravo.reports.ordersawaitingdelivery.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#smartclient-translation-spanish-spain-es_es","title":"Smartclient Translation: Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.userinterface.smartclient.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#querylist-widget-translation-spanish-spain-es_es","title":"Query/List Widget Translation Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.client.querylist.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#widgets-collection-translation-spanish-spain-es_es","title":"Widgets Collection Translation Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.client.widgets.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#advanced-payables-and-receivables-spanish-translation","title":"Advanced Payables and Receivables - Spanish Translation","text":"<p> Javapackage: <code>org.openbravo.advpaymentmngt.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#user-interface-application-translation-spanish-spain-es_es","title":"User Interface Application Translation Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.client.application.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#alerts-accounting","title":"Alerts: Accounting","text":"<p> Javapackage: <code>org.openbravo.alerts.accounting30</code></p> <p> Javapackage: <code>org.openbravo.alerts.accounting30.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#soap-with-attachments-api-for-java-implementation","title":"SOAP with Attachments API for Java Implementation","text":"<p> Javapackage: <code>org.openbravo.util.saaj.impl</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#payment-method-type","title":"Payment Method Type","text":"<p> Javapackage: <code>org.openbravo.module.paymentmethod.type</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#javax-xml-soap-api","title":"Javax XML SOAP API","text":"<p> Javapackage: <code>org.openbravo.util.javax.xml.soap</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#html-widget-translation-spanish-spain-es_es","title":"HTML Widget Translation Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.client.htmlwidget.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#openid-service-integration-translation-spanish-spain","title":"OpenID Service Integration Translation Spanish Spain","text":"<p> Javapackage: <code>org.openbravo.service.integration.openid.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#integration-with-google-apis-translation-spanish-spain","title":"Integration with Google APIs Translation Spanish Spain","text":"<p> Javapackage: <code>org.openbravo.service.integration.google.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#openbravo-30-translation-pack-spanish-spain-es_es","title":"Openbravo 3.0 Translation Pack: Spanish Spain (es_ES)","text":"<p> Javapackage: <code>org.openbravo.v3.translation.pack.es_es</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/overview/#ticketbai-y-batuz","title":"TicketBai y Batuz","text":"<p> Javapackage: <code>com.smf.ticketbai</code></p> <p>Este m\u00f3dulo permite cumplir con las normativas fiscales del Pa\u00eds Vasco, automatizando el proceso de emisi\u00f3n, firma electr\u00f3nica y env\u00edo de facturas a la hacienda foral de Gipuzkoa y Bizkaia. A trav\u00e9s de este sistema, se garantiza la trazabilidad y autenticidad de las facturas, permitiendo su env\u00edo en tiempo real y asegurando el cumplimiento fiscal.</p> <p>Info</p> <p>Para m\u00e1s informaci\u00f3n, visite la Gu\u00eda de usuario TicketBai y Batuz.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Caracter\u00edsticas de Etendo","Requisitos fiscales","Legislaci\u00f3n espa\u00f1ola"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/","title":"Spain SII","text":"","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>org.openbravo.module.sii</code></p> <p> Javapackage: <code>org.openbravo.module.sii.es_es</code></p> <p> Javapackage: <code>org.openbravo.module.sii.template</code></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta secci\u00f3n explica el contenido del nuevo m\u00f3dulo comercial de Etendo, \"Spain AEAT SII template\", compatible con Etendo 21Q4 y posteriores, bajo licencia comercial \"Etendo Commercial License\".</p> <p>Este m\u00f3dulo forma parte del bundle (paquete) de Localizaci\u00f3n para Espa\u00f1a en su versi\u00f3n para Etendo.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#descripcion-del-modulo","title":"Descripci\u00f3n del M\u00f3dulo","text":"<p>El m\u00f3dulo\u00a0 \"Spain AEAT SII template\" permite que las organizaciones puedan gestionar el Impuesto sobre el Valor A\u00f1adido y el Impuesto General Indirecto Canario de forma telem\u00e1tica, dentro del marco del proyecto \"Suministro Inmediato de Informaci\u00f3n\" (SII).</p> <p>Este proyecto consiste en la gesti\u00f3n de los Libros registro de IVA a trav\u00e9s de la Sede Electr\u00f3nica de la Agencia Estatal de Administraci\u00f3n Tributaria (AEAT), mediante el suministro casi inmediato de los registros de facturaci\u00f3n. Tambi\u00e9n se lleva la gesti\u00f3n de IGIC a trav\u00e9s de la sede electr\u00f3nica de la Agencia Tributaria Canaria.</p> <p>El objetivo final de este tr\u00e1mite online del IVA es proporcionar a las empresas informaci\u00f3n contrastada sobre su liquidaci\u00f3n del IVA, esto es un \"borrador\" de su declaraci\u00f3n del IVA, siempre que los clientes/proveedores de dichas empresas se encuentren tambi\u00e9n acogidos al SII.</p> <p>Existen dos posibilidades de env\u00edo o alta/modificaci\u00f3n de los registros de facturas a SII:</p> <ol> <li>por v\u00eda telem\u00e1tica mediante Servicios Web basados en el intercambio de mensajes XML</li> <li>a trav\u00e9s del Formulario de alta web, que la AEAT pone a disposici\u00f3n de los contribuyentes.     En este portal se pueden consultar, modificar o dar de baja facturas ya enviadas.</li> </ol> <p></p> <p>Desde Etendo es posible enviar (dar de alta o modificar) los registros de facturas por v\u00eda telem\u00e1tica, opci\u00f3n 1 anterior, lo cual se traduce en la generaci\u00f3n de un fichero XML con el siguiente contenido por cada env\u00edo a SII:</p> <ul> <li>una cabecera com\u00fan con la informaci\u00f3n del titular de cada libro, as\u00ed como la informaci\u00f3n del ejercicio y periodo en que se registran dichas operaciones</li> <li>un bloque con el contenido de las facturas.</li> </ul> <p>En definitiva, desde Etendo vamos a poder:</p> <ul> <li>enviar f\u00e1cilmente y de forma autom\u00e1tica o manual, estos ficheros XML a la AEAT con la informaci\u00f3n requerida, tanto para el \"alta\" como para la \"modificaci\u00f3n\" de los registros de facturas.</li> <li>recibir los XML de respuesta de la AEAT, respecto de cada tipo de comunicaci\u00f3n (alta/modificaci\u00f3n)</li> <li>consultar en qu\u00e9 estado se encuentra la informaci\u00f3n ya suministrada a la AEAT, dentro del proceso de contrastaci\u00f3n.</li> </ul> <p>Con car\u00e1cter obligatorio, SII afecta a :</p> <ul> <li>Inscritos en REDEME (Registro de Devoluci\u00f3n Mensual del IVA), salvo renuncia antes de junio de 2017</li> <li>Grandes empresas con una facturaci\u00f3n superior a 6.101.121,04 \u20ac</li> <li>Grupos de IVA</li> <li>Empresarios o profesionales no establecidos que tengan condici\u00f3n de sujetos pasivos con un periodo de liquidaci\u00f3n mensual</li> <li>Resto de sujetos pasivos establecidos o no, que voluntariamente quieran acogerse, a trav\u00e9s del Modelo 036 de Declaraci\u00f3n Censal, que implica autoliquidar el IVA mensualmente, y permanecer el a\u00f1o natural por el que se opte</li> </ul> <p>El nuevo SII conlleva para el contribuyente, entre otras, las siguientes ventajas:</p> <ul> <li>Reducci\u00f3n de las obligaciones formales, suprimiendo la obligaci\u00f3n de presentaci\u00f3n de los modelos 347, 340 y 390. Es decir, s\u00f3lo se tendr\u00e1 que presentar el Modelo 303 de autoliquidaci\u00f3n de IVA</li> <li>Obtenci\u00f3n de \u201cDatos Fiscales\u201d, ya que en la Sede electr\u00f3nica dispondr\u00e1 de un Libro Registro \u201cdeclarado\u201d y \u201ccontrastado\u201d con la informaci\u00f3n de contraste procedente de terceros que pertenezcan al colectivo de este sistema.   Estos datos fiscales ser\u00e1n una \u00fatil herramienta de asistencia en la elaboraci\u00f3n de la declaraci\u00f3n, reduciendo errores y permitiendo una simplificaci\u00f3n y una mayor seguridad jur\u00eddica.</li> <li>Ampliaci\u00f3n en diez d\u00edas del plazo de presentaci\u00f3n de las autoliquidaciones peri\u00f3dicas (Modelo 303).</li> </ul> <p>A partir del 1 de julio de 2017 comienza la fase obligatoria de aplicaci\u00f3n de este sistema.</p> <p>Los sujetos pasivos que apliquen el SII desde el 1 de julio de 2017 est\u00e1n obligados a remitir los registros de facturaci\u00f3n del primer semestre de 2017 en el periodo desde el 1 de julio al 31 de diciembre de 2017; excepto sujetos en REDEME.</p> <p>Las facturas de fecha del 1er semestre de 2017 se env\u00edan (alta en SII) a trav\u00e9s de ficheros XML con un contenido sin las validaciones aplicables a las facturas de fecha desde 1 de julio de 2017.</p> <p>La AEAT pone a disposici\u00f3n del contribuyente las siguientes URLs que entendemos son de gran utilidad:</p> <ul> <li>Proyecto SII, en el que se puede encontrar toda la informaci\u00f3n sobre SII</li> <li>Herramienta de c\u00e1lculo de plazos para la remisi\u00f3n de registros de facturas a SII, que permite calcular la \"fecha fin de plazo\", el \"periodo\", y el \"ejercicio\" para cada tipo de factura en funci\u00f3n de su fecha de devengo/recepci\u00f3n y fecha de expedici\u00f3n/registro contable.</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#contenido-del-modulo","title":"Contenido del M\u00f3dulo","text":"<p>Al instalar este m\u00f3dulo, el usuario podr\u00e1 comprobar que:</p> <ol> <li>Se crea un nuevo men\u00fa dentro de \"Gesti\u00f3n Financiera\", denominado \"AEAT SII\". Este nuevo men\u00fa contiene las siguientes pantallas:<ol> <li>Configuraci\u00f3n SII, en la que se podr\u00e1n configurar todos los par\u00e1metros necesarios para el env\u00edo correcto de los registros de facturas a SII.</li> <li>Consulta Facturas SII, en esta pantalla el usuario tendr\u00e1 informaci\u00f3n sobre el estado de cuadre de las facturas enviadas a SII, estado de cuadre recibido de la AEAT.</li> <li>Descripciones SII, en esta pantalla se pueden dar de alta descripciones tipo para las operaciones de compra y venta que realice la organizaci\u00f3n acogida a SII.</li> <li>Conexiones a SII, nos muestra el estado de todas las conexiones online con la AEAT referenciadas al C\u00f3digo CSV (C\u00f3digo Seguro de Verificaci\u00f3n), proporcionado por la AEAT en cada conexi\u00f3n.     La AEAT responde con un CSV para cada factura enviada. Si se env\u00eda un fichero XML con varias facturas, en el XML de respuesta aparecer\u00e1 un CSV para cada una de ellas.</li> <li>Monitor SII, desde la que se puede gestionar el estado de las facturas, en relaci\u00f3n con su env\u00edo a SII, as\u00ed como realizar env\u00edos de las mismas, seg\u00fan su estado.</li> </ol> </li> <li>Se crean nuevos campos y pesta\u00f1as relativos a SII en las ventanas de \"Pedidos y Facturas\", tanto de compra como de venta, con el fin de a\u00f1adir la informaci\u00f3n requerida por parte de SII, respecto del \"Alta\"/\"Modificaci\u00f3n\" del registro de las facturas.</li> <li>Se genera un nuevo campo en la cabecera de las facturas denominado \"Modificada por error registral\", que permite modificar una factura dada ya de alta en SII.</li> <li>Se crea un nuevo campo en la cabecera de las facturas de compra, ventana \"Factura (Proveedor)\", que permite recoger la \"fecha de registro contable\" al registrar las facturas recibidas.</li> <li>Igualmente, se a\u00f1aden dos botones en las ventanas de Facturas, tanto de compra como de venta, con el fin de dar de alta (Alta en SII) y, si fuera necesario, modificar (Modificaci\u00f3n en SII) el registro de las facturas.</li> <li>Se generan dos nuevos procesos en la ventana \"Procesamiento de Peticiones\", denominados \"Proceso de alta en SII\" y \"Proceso de Modificaci\u00f3n en SII por error registral\", configurables para cada Organizaci\u00f3n o \"Entidad Legal\".     Estos nuevos procesos permitir\u00e1n el alta/modificaci\u00f3n masiva de facturas en SII con la cadencia de env\u00edo configurada.</li> </ol>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion","title":"Configuraci\u00f3n","text":"<p>Para conseguir un correcto uso del m\u00f3dulo SII es muy importante revisar la configuraci\u00f3n de \"Terceros\", \"Productos\" e \"Impuestos\".</p> <p>Los productos/servicios tienen que tener correctamente configurado su \"Grupo/Categor\u00eda de Impuestos\" (de producto o servicio).</p> <p>Los terceros (cliente/proveedores) tienen que tener correctamente configurada su \"Categor\u00eda de impuestos de Tercero\", si aplica, as\u00ed como su \"CIF/NIF\" o \"Clave NIF Pa\u00eds Residencia\".</p> <p>Adem\u00e1s, los impuestos tienen que estar configurados correctamente, tal y como se explica en el siguiente apartado.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-de-impuestos","title":"Configuraci\u00f3n de impuestos","text":"<p>El proyecto SII ampl\u00eda el contenido de los libros registro de facturas, tal y como se describe a continuaci\u00f3n:</p> <ul> <li>al enviar el registro de una factura emitida a SII, debemos indicar si esa factura est\u00e1 \"Sujeta\" a IVA, o, por el contrario, se trata de una operaci\u00f3n no sujeta a IVA. Igualmente, las operaciones sujetas a IVA, se deben diferenciar entre \"Exentas\" y \"No Exentas\".</li> <li>al enviar el registro de una factura recibida a SII, debemos indicar si esa factura es de \"Inversi\u00f3n de Sujeto Pasivo\" o se trata de una \"Adquisici\u00f3n Intracomunitaria de Bienes y/o Servicios\", por ejemplo.</li> </ul> <p>Info</p> <p>La utilizaci\u00f3n del m\u00f3dulo \"Spain AEAT SII\", requiere de la versi\u00f3n 1.2.204500 o posterior del m\u00f3dulo de impuestos para Espa\u00f1a, versi\u00f3n que ya incluye toda la configuraci\u00f3n de impuestos requerida para el correcto funcionamiento de env\u00edo de registros de factura a SII (alta/modificaci\u00f3n).</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-de-terceros","title":"Configuraci\u00f3n de terceros","text":"<p>Todos los terceros, ya sean del tipo \"Cliente\" o \"Proveedor/Acreedor\", deben configurarse en la ventana \"Terceros\".</p> <p>Es muy importante indicar para cada tercero:</p> <ul> <li>sus datos de contacto (Nombre Comercial, Nombre Fiscal (Raz\u00f3n Social) o Nombre/Apellidos</li> <li>su \"Clave NIF Pa\u00eds\" Residencia):</li> <li>1 - NIF</li> <li>2 - NOI</li> <li>3 - Pasaporte</li> <li>4 - Documento oficial de identificaci\u00f3n expedido por el pa\u00eds</li> <li>5 - Certificado de residencia fiscal</li> <li>6 - Otro documento probatorio</li> <li>7 - No censado</li> <li>su n\u00famero de Identificaci\u00f3n fiscal, en el caso del NOI se deber\u00eda incluir el c\u00f3digo ISO de pa\u00eds (por ejemplo DE en el caso de Alemania o FR en el caso de Francia).</li> <li>la categor\u00eda de impuestos de tercero (por ejemplo: Servicios Profesionales Normal, Servicios Profesional Reducido, Aut\u00f3nomo, Recargo de Equivalencia, Revendedores, R\u00e9gimen Agrario...)</li> <li>su localizaci\u00f3n (Pa\u00eds, provincia, direcci\u00f3n).</li> </ul> <p>Tercero con NIF no censado</p> <p>Se ha creado una nueva \"Clave NIF Pa\u00eds de Residencia\", de valor 7 - No Censado.</p> <p>Un NIF no censado es un NIF que se ha dado de baja.</p> <p>Esta nueva clave habr\u00e1 que configurarla para aquellos terceros con un NIF espa\u00f1ol v\u00e1lido pero no censado, respecto de los que sea necesario emitir facturas de venta o recibir facturas de compra.</p> <p></p> <p>Las facturas con un NIF no censado que se den de alta en SII, quedar\u00e1n en un estado \"Aceptado con errores\".</p> <p>Es muy importante recalcar que la AEAT comprueba en los env\u00edos a SII que el NIF espa\u00f1ol introducido se corresponda con el nombre/apellidos del tercero persona f\u00edsica (cliente/proveedor).</p> <p>Si damos de alta un tercero (persona f\u00edsica) con su nombre y un solo apellido, por ejemplo, o con un apellido correcto y el otro no, al enviar la factura de dicho tercero a SII obtendremos un error del tipo: \"NIF no identificado\".</p> <p>Puede comprobar los NIF de sus terceros en la siguiente URL de la AEAT: Comprobaci\u00f3n NIF terceros a efectos censales.</p> <p>Respecto de las personas jur\u00eddicas o empresas, parece no se est\u00e1 realizando dicha comprobaci\u00f3n (correspondencia Empresa-NIF), pero aun as\u00ed recomendamos que se revise que los terceros est\u00e9n configurados correctamente.</p> <p>Gastos de empleado no declarables.</p> <p>Los empleados de la organizaci\u00f3n que incurran en gastos a reembolsar, deben darse de alta como Terceros de tipo Empleado en la ventana \"Terceros\". Se les debe asociar la categor\u00eda de impuestos de tercero \u201cNo declarable SII\u201d, con el fin de que las facturas de gasto registradas para el reembolso de los gastos, no se incluyan en SII.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-del-local-arrendado","title":"Configuraci\u00f3n del Local Arrendado","text":"<p>Los locales arrendados sujetos a IVA se deben configurar en la ventana de \"Producto\", con al menos los siguientes datos:</p> <ul> <li>Grupo de Impuestos = IVA Normal</li> <li>Local arrendado, este campo se debe seleccionar</li> <li>Situaci\u00f3n del inmueble, en este campo se debe seleccionar la opci\u00f3n que corresponda:</li> <li>Locales en el extranjero</li> <li>Referencia catastral v\u00e1lida en el Pa\u00eds Vasco o en Navarra</li> <li>Referencia catastral v\u00e1lida, excepto de Pa\u00eds Vasco o Navarra</li> <li>Sin referencia catastral</li> <li>Referencia catastral, en este se informa de la referencia catastral del local arrendado.</li> </ul> <p>Dependiendo de si el Tercero se configura con la categor\u00eda de impuestos de Tercero \"Arrendamiento con retenci\u00f3n\" o \"Arrendamientos sin retenci\u00f3n\", el arrendamiento del local de negocio estar\u00e1 o no sujeto a retenci\u00f3n.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-transmision-de-bienes-inmuebles","title":"Configuraci\u00f3n Transmisi\u00f3n de Bienes Inmuebles","text":"<p>Los bienes inmuebles se configuran en la ventana \"Producto\", asoci\u00e1ndolos la categor\u00eda de impuestos \"IVA Normal B. Inmuebles\", por ejemplo.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-sii","title":"Configuraci\u00f3n SII","text":"<p>En la ventana \"Configuraci\u00f3n SII\" se configuran todos los par\u00e1metros necesarios para un correcto env\u00edo de registros de facturas a SII (alta/modificaci\u00f3n).</p> <p></p> <p>Tal y como se muestra en la imagen anterior, los par\u00e1metros de configuraci\u00f3n de SII son los siguientes:</p> <ul> <li>Organizaci\u00f3n: organizaci\u00f3n (entidad legal) para la que se configura el env\u00edo de registros a SII.   Seleccionada una entidad legal (con o sin contabilidad), todas sus organizaciones \"hijas\" quedar\u00e1n igualmente acogidas a SII.</li> <li>Fecha acogida a SII: check que permite configurar que la organizaci\u00f3n seleccionada se acoja al SII, esto es, que los registros de sus facturas se env\u00eden (alta/modificaci\u00f3n) a la AEAT a trav\u00e9s de ficheros XML.   Una vez seleccionado, se muestra el resto de par\u00e1metros de configuraci\u00f3n de SII.   El usuario lo puede desmarcar con posterioridad, en el caso en que la organizaci\u00f3n ya no est\u00e9 acogida a SII.   Si se desmarca este check, todos los dem\u00e1s campos aparecer\u00e1n como no editables y la organizaci\u00f3n ya no estar\u00e1 acogida a SII, es decir, ya no ser\u00e1 necesario ni se podr\u00e1 enviar el registro de sus facturas a SII (alta/modificaci\u00f3n).</li> <li>Fecha acogida a SII: campo de fecha en el que se puede indicar la fecha en la que la organizaci\u00f3n se acoge a SII. En general, esta fecha es el 01-07-2017.</li> <li>Ruta de ubicaci\u00f3n del certificado electr\u00f3nico : el usuario debe especificar la ruta en la que se encuentra el certificado de la AEAT v\u00e1lido para dicha organizaci\u00f3n.</li> <li>Contrase\u00f1a certificada: una vez informado el campo anterior, el usuario debe indicar la contrase\u00f1a de dicho certificado. El contenido se guardar\u00e1 como texto cifrado.</li> <li>Plazo l\u00edmite de alta en SII: campo \"informativo\" que por defecto mostrar\u00e1 8 d\u00edas como plazo l\u00edmite de alta en SII, ya que para 2017 y para este tipo de comunicaci\u00f3n Alta (A0) ese es el plazo l\u00edmite.   El usuario tendr\u00e1 que modificarlo a 4 d\u00edas o al n\u00famero de d\u00edas que indique la AEAT para el alta de registros de factura a realizar a partir del 1 de enero de 2018.</li> <li>Cadencia Proceso Alta Facturas Venta a SII: en este campo, el usuario puede configurar el n\u00famero de d\u00edas naturales de margen que necesita para revisar/modificar las facturas de venta, antes de que estas se env\u00ede de forma autom\u00e1tica por el Proceso de \"alta\"en SII, proceso que se recomienda programar para que sea ejecutado diariamente. Adem\u00e1s, se recomienda que el n\u00famero de d\u00edas introducido en este campo no supere el plazo l\u00edmite de alta en SII, que en el caso de las facturas de venta es de 8 d\u00edas (sin contar s\u00e1bados, domingos y festivos nacionales) desde la fecha de \"expedici\u00f3n\" de la factura (fecha factura).   En todo caso, las facturas expedidas se tienen que dar de alta en SII antes del d\u00eda 16 del mes siguiente al que se produjo el devengo de la operaci\u00f3n.   En concreto:</li> <li>Una factura con fecha de operaci\u00f3n 10-07-2017 (devengo) y fecha de expedici\u00f3n 14-07-2017 (fecha factura), tendr\u00eda que darse de \"alta\" en SII antes del d\u00eda 25-07-2017.     Si introducimos una cadencia de 8 d\u00edas, tendremos 8 d\u00edas de margen para su revisi\u00f3n/modificaci\u00f3n, ya que dicha factura se enviar\u00e1 a SII de forma autom\u00e1tica el d\u00eda 22-07-2017.     Es decir, el proceso autom\u00e1tico de \"alta\" que se ejecute el d\u00eda 22 de julio, enviar\u00e1 todas las facturas de venta con fecha factura 14 de julio (22 de julio - 8 d\u00edas).</li> <li>Una factura con fecha de operaci\u00f3n 10-06-2017 (devengo) y fecha de expedici\u00f3n 14-07-2017 (fecha factura), tendr\u00e1 que darse de \"alta\" en SII antes del d\u00eda 16-07-2017.     Es decir, el proceso autom\u00e1tico de \"alta\" que se ejecute el d\u00eda 14 de julio, ya enviar\u00e1 dicha factura, sin tener en cuenta el n\u00famero de d\u00edas introducido en el campo de cadencia.</li> <li>Cadencia Proceso Alta Facturas Compra a SII: en este campo el usuario puede configurar el n\u00famero de d\u00edas de margen que necesita para revisar/modificar las facturas de compra, antes de que \u00e9stas se env\u00eden de forma autom\u00e1tica por el Proceso de \"alta\"en SII, proceso que se recomienda programar para que sea ejecutado \"diariamente\". Adem\u00e1s, se recomienda que el n\u00famero de d\u00edas introducido en este campo, no supere el plazo l\u00edmite de alta en SII, que en el caso de las facturas de compra es de 8 d\u00edas (sin contar s\u00e1bados, domingos y festivos nacionales) desde la fecha \"contable\" de la factura.   En todo caso, las facturas de compra se tienen que dar de alta en SII antes del d\u00eda 16 del mes siguiente al que se liquid\u00f3 la operaci\u00f3n a efectos de IVA.   En concreto:</li> <li>Una factura con fecha de operaci\u00f3n 10-07-2017 y fecha factura/fecha contable 14-07-2017, tendr\u00eda que darse de \"alta\" en SII antes del d\u00eda 25-07-2017.     Si introducimos una cadencia de 8 d\u00edas, tendremos 8 d\u00edas de margen para su revisi\u00f3n/modificaci\u00f3n, ya que dicha factura se enviar\u00e1 a SII de forma autom\u00e1tica el d\u00eda 22-07-2017.     Es decir, el proceso autom\u00e1tico de \"alta\" que se ejecute el d\u00eda 22 de julio, enviar\u00e1 todas las facturas de compra con fecha contable 14 de julio (22 de julio - 8 d\u00edas).</li> <li>Una factura con fecha de operaci\u00f3n 10-06-2017, que se quiera liquidar en la declaraci\u00f3n de junio y con fecha contable 14-07-2017, tendr\u00e1 que darse de \"alta\" en SII antes del d\u00eda 16-07-2017.     Es decir, el proceso autom\u00e1tico de \"alta\" que se ejecute el d\u00eda 14 de julio, ya enviar\u00e1 dicha factura, sin tener en cuenta el n\u00famero de d\u00edas introducido en el campo de cadencia.</li> <li>Entorno de producci\u00f3n SII: este entorno tiene que estar seleccionado para aquellos entornos productivos de organizaciones cuyos registros de factura se tienen que enviar al entorno productivo (final) de SII de la AEAT.   Por defecto se muestra como seleccionado, en cuyo caso las facturas se enviar\u00e1n al entorno de producci\u00f3n de la AEAT.   Si el usuario quiere realizar pruebas de env\u00edo, siempre desde un entorno en test o entidad/organizaci\u00f3n de pruebas, deber\u00e1 desmarcarlo.</li> <li>Adjuntar archivos XML: este campo permite indicar si los ficheros XML enviados a la AEAT y los recibidos como respuesta por parte de la AEAT se deben guardar como ficheros adjuntos en la factura correspondiente.</li> <li>Enviar desde 1 de enero 2017 - este campo permite que el proceso autom\u00e1tico de alta en SII considere o no las facturas de fecha desde 01-01-2017 hasta 30-06-2017.   Este proceso considera en todo caso las facturas de fecha desde la fecha acogida a SII configurada (01-07-2017).</li> <li>Si est\u00e1 seleccionado, las facturas de fecha desde 01-01-2017 hasta el 30-06-2017, ser\u00e1n tambi\u00e9n incluidas en el proceso autom\u00e1tico de Alta en SII.</li> <li>Si no est\u00e1 seleccionado, las facturas de fecha desde 01-01-2017 hasta el 30-06-2017, no ser\u00e1n incluidas en el proceso de alta autom\u00e1tico y, por tanto, habr\u00e1 que enviarlas de forma manual o a trav\u00e9s de Monitor SII, o no enviarlas como es el caso para los sujetos acogidos a REDEME.</li> <li>Afectada RECC, este par\u00e1metro permite configurar el que para una Organizaci\u00f3n no acogida al \"R\u00e9gimen Especial del Criterio de Caja\" (RECC), pero si afectada por recibir facturas de proveedores acogidos, se muestre o no la pesta\u00f1a de \"Cobros/ Pagos Criterio Caja\" dentro de la pantalla \"Monitor SII\".   Si la organizaci\u00f3n, llegado un punto, no se viera ya afectada por dicho r\u00e9gimen, podr\u00eda desactivar este campo, y la pesta\u00f1a \"Cobros/ Pagos Criterio Caja\" se dejar\u00eda de mostrar en el monitor SII.</li> <li>Sujeto inscrito en REDEME, si se selecciona este campo, se est\u00e1 indicando que la organizaci\u00f3n es un sujeto pasivo inscrito en REDEME que, por tanto, no tiene obligaci\u00f3n de enviar las facturas del primer semestre de 2017 a SII.   Con este campo se controla que las facturas del primer semestre de este tipo de sujetos pasivo no se puedan dar de alta en SII de forma manual, esto es, desde la venta de factura.</li> <li>Fecha desde visualizaci\u00f3n \"Monitor SII\", en este campo podemos introducir la fecha desde la cual se visualizar\u00e1n las facturas de compra/venta y los cobros/pagos en RECC en la ventana \"Monitor SII\" para su alta en SII. Por ejemplo:</li> <li>si una organizaci\u00f3n se acoge al SII el 01-07-2017 y no est\u00e1 inscrita en REDEME, la fecha a introducir en este campo ser\u00e1 el 01-01-2017</li> <li>si una organizaci\u00f3n se acoge al SII el 01-07-2017 y est\u00e1 inscrita en REDEME, la fecha a introducir en este campo ser\u00e1 el 01-07-2017.</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#descripciones-sii","title":"Descripciones SII","text":"<p>En esta ventana es posible introducir descripciones tipo para las operaciones de compra/venta que la Organizaci\u00f3n acogida a SII realiza.</p> <p>Las descripciones introducidas en esta pantalla:</p> <ul> <li>s\u00f3lo se podr\u00e1n seleccionar en las facturas de compra, si la descripci\u00f3n est\u00e1 configurada como \"Descripci\u00f3n factura de compra\"</li> <li>s\u00f3lo se podr\u00e1n seleccionar en las facturas de venta, si la descripci\u00f3n est\u00e1 configurada como \"Descripci\u00f3n factura de venta\"</li> <li>se podr\u00e1n seleccionar tanto en las facturas de compra como de venta, si los dos checks \"Descripci\u00f3n factura de compra\" y \"Descripci\u00f3n factura de venta\", est\u00e1n seleccionados.</li> <li>ser\u00e1 el que por defecto se seleccione tanto en facturas de compra como de venta, si adem\u00e1s se selecciona el check \"Por defecto\".</li> </ul> <p></p> <p>Adem\u00e1s, en las ventanas de</p> <ul> <li>Pedido de Venta</li> <li>Pedido de Compra</li> <li>Factura de Venta</li> <li>Factura de Compra</li> </ul> <p>existe otro campo de texto libre que se denomina \"Descripci\u00f3n SII\" que siempre se puede utilizar.</p> <p>Si en una factura seleccionamos una descripci\u00f3n en el campo \"Descripci\u00f3n maestro SII\", el campo \"Descripci\u00f3n SII\" heredar\u00e1 esa descripci\u00f3n para que para esa operaci\u00f3n en concreto podamos modificar/completar dicha descripci\u00f3n.</p> <p>Si una factura tiene ambas descripciones \"Descripci\u00f3n SII\" y \"Descripci\u00f3n maestro SII\", siempre prevalece la primera, es decir, ser\u00e1 la \"Descripci\u00f3n SII\" la que se incluya en el fichero XML de \"alta\" / \"modificaci\u00f3n\" en SII.</p> <p>Si en un pedido se informa de la \"Descripci\u00f3n SII\" y la correspondiente factura se crea desde dicho pedido, la descripci\u00f3n introducida en el campo \"Descripci\u00f3n SII\" del pedido, se rellenar\u00e1 de forma autom\u00e1tica en el campo \"Descripci\u00f3n SII\" de la factura.</p> <p>Si se copiara desde m\u00e1s de un pedido, solo se trasladar\u00eda la primera descripci\u00f3n.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-de-la-organizacion-en-recc","title":"Configuraci\u00f3n de la Organizaci\u00f3n en RECC","text":"<p>Si una organizaci\u00f3n se acoge al r\u00e9gimen del IVA de Caja, deber\u00e1n seleccionarse el campo \"IVA de Caja\" y el campo \"Criterio de caja doble\" en la ventana \"Organizaci\u00f3n\", pesta\u00f1a \"Informaci\u00f3n\".</p> <p>En este caso, tanto las facturas de compra como de venta nacionales estar\u00e1n sujetas al RECC y tendr\u00e1n que darse de alta como tales en SII.</p> <p>Info</p> <p>La clave de \"R\u00c9GIMEN ESPECIAL / IDENTIFICACI\u00d3N OPERACIONES CON TRASCENDENCIA TRIBUTARIA\" del RECC es la \"07\". Esta clave prevalece sobre las dem\u00e1s.</p> <p>Esto significa que las operaciones de arrendamiento con RECC no se informar\u00e1n con la clave propia de los arrendamientos sino con la de RECC que es la 07.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-de-proveedores-en-recc","title":"Configuraci\u00f3n de proveedores en RECC","text":"<p>Si una organizaci\u00f3n no se acoge al r\u00e9gimen del IVA de Caja, pero recibe facturas de proveedores acogidos al RECC, tendr\u00e1 que configurar dichos proveedores como Acogidos al RECC en la ventana \"Terceros\", pesta\u00f1a \"Proveedor/Acreedor\", campo \"IVA de Caja.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-de-los-metodos-de-pago","title":"Configuraci\u00f3n de los m\u00e9todos de pago","text":"<p>Los cobros/pagos de facturas en RECC (IVA de Caja), tienen que darse de alta en SII.</p> <p>Al dar de alta este tipo de cobros/pagos tenemos que informar del importe, la fecha de cobro/pago y el medio de cobro/pago utilizado, conforme a una definici\u00f3n propia de la AEAT:</p> <ul> <li>Transferencia \"01\"</li> <li>Cheque \"02\"</li> <li>Otros \"04\"</li> </ul> <p>Es por ello que en la ventana \"M\u00e9todo de Pago\" tendremos que configurar el tipo de m\u00e9todo de pago, tal y como se explica a continuaci\u00f3n:</p> <ul> <li>los m\u00e9todos de pago que configuremos con el tipo \"Bank Account\", ser\u00e1n del tipo 01 = Transferencia</li> <li>los m\u00e9todos de Pago que configuremos con el tipo \"Check\", ser\u00e1n del tipo 02 = Cheque</li> <li>y los m\u00e9todos de Pago que configuremos con el tipo \"Others\", ser\u00e1n del tipo 04 = Otros.</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#causas-de-exencion","title":"Causas de exenci\u00f3n","text":"<p>Trat\u00e1ndose de una operaci\u00f3n de venta exenta, la AEAT permite consignar la causa de exenci\u00f3n dentro del bloque \u201cDesglose Factura\u201d como \u201cSujeta\u201d y \u201cExenta\u201d, utilizando una de las siguientes claves:</p> <p>\u201cE1: exenta por el art\u00edculo 20\u201d</p> <p>\u201cE2: exenta por el art\u00edculo 21\u201d</p> <p>\u201cE3: exenta por el art\u00edculo 22\u201d</p> <p>\u201cE4: exenta por los art\u00edculos 23 y 24\u201d</p> <p>\u201cE5: exenta por el art\u00edculo 25\u201d</p> <p>\u201cE6: exenta por otros\u201d</p> <p>En Etendo existen dos opciones para indicar la causa de exenci\u00f3n junto con la base imponible:</p> <ul> <li>En la ventana Factura (Cliente), dentro del grupo de campos AEAT SII, se cumplimentar\u00e1 la causa de exenci\u00f3n relacionada con las bases exentas de la factura. El usuario tendr\u00e1 que asignar un valor del desplegable de forma manual que trasladar\u00e1 al XML la clave que hace referencia a la base imponible exenta en factura.</li> <li>En la ventana \"Causa de exenci\u00f3n\" existe la opci\u00f3n de establecer una clave por defecto que se asignar\u00e1 en factura cuando se incorporen l\u00edneas que utilicen un impuesto configurado como exento. Es decir, cuando en una factura de venta se introduzca una l\u00ednea exenta, autom\u00e1ticamente en la cabecera se seleccionar\u00e1 la causa asignada por defecto, siendo modificable si el usuario quisiera elegir otra.</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-alta-de-factura-de-compra-solo-tras-su-contabilizacion","title":"Configuraci\u00f3n alta de factura de compra s\u00f3lo tras su contabilizaci\u00f3n","text":"<p>Para organizaciones que desean dar de alta una factura de compra s\u00f3lo tras su contabilizaci\u00f3n, existe la opci\u00f3n de controlarlo mediante la activaci\u00f3n del check \"Alta en SII facturas de compra tras su contabilizaci\u00f3n\" ubicado en la ventana Configuraci\u00f3n SII, de manera que la fecha registro contable \u00fanicamente se rellenar\u00e1 en el momento que la factura sea contabilizada con el d\u00eda en el que se produzca el asiento contable independientemente de la fecha imputada en el libro diario, completando as\u00ed la informaci\u00f3n necesaria para dar de alta la factura en SII.</p> <p></p> <p>Info</p> <p>Si se decide optar por esta funcionalidad, es conveniente que la organizaci\u00f3n no tenga activo el proceso de contabilizaci\u00f3n autom\u00e1tico, ya que imputar\u00e1 la fecha registro contable en el momento de realizar la contabilizaci\u00f3n.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#configuracion-de-rangos-de-impuestos-prorrata-sii","title":"Configuraci\u00f3n de rangos de impuestos - Prorrata SII","text":"<p>Los rangos de impuestos para la prorrata se tendr\u00e1n que crear siempre de manera manual (tanto el rango \u201cpadre\u201d como los rangos \u201chijos\u201d necesarios). Esto es debido a que el porcentaje de deducci\u00f3n var\u00eda a\u00f1o a a\u00f1o al no ser un porcentaje fijo.</p> <p>En la ventana \u201cRango impuesto\u201d se ha creado un nuevo check denominado \u201cIs prorate\u201d:</p> <p></p> <p>Al tener activo este check, se mostrar\u00e1 un segundo check nuevo, dentro de la cabecera en el detalle de \u201cMore Information\u201d que se llamar\u00e1 \u201cProrrata SII - XML\u201d que estar\u00e1 marcado por defecto como \u201cSi\u201d: </p> <p>Estos check permitir\u00e1n, con la configuraci\u00f3n correcta que realicemos, enviar al SII informaci\u00f3n sobre facturas de compra afectadas por la prorrata del IVA.</p> <p>A continuaci\u00f3n, utilizaremos como ejemplo el iva del 10%, para mostrar la configuraci\u00f3n que debe realizarse para que la informaci\u00f3n se env\u00ede de forma correcta al SII:</p> <p></p> <p>1 \u2013 Crear un rango padre \u201cProrrata Gener.22 (77%) IVA 10%\u201d: Lo haremos con la misma configuraci\u00f3n que puede tener cualquier rango nacional de la misma categor\u00eda, por ejemplo \u201cPrestaci\u00f3n servicios nacional 10%\u201c. Las \u00fanicas particularidades que debemos tener en cuenta ser\u00e1n las de indicar en el campo \u201cIndice\u201d el valor total del impuesto (en los rangos \u201cpadres\u201d est\u00e1ndar es un campo en el que se indica 0) y activar el check \u201cIs Prorate\u201d. En nuestro ejemplo indicaremos en el campo \u201cIndice\u201d el valor 10 y posteriormente marcaremos el check de \u201cNivel de agrupaci\u00f3n\u201d.</p> <p></p> <p></p> <p>2 \u2013 Crear un rango hijo deducible \u201cProrrata Gener.22 (77%) IVA 10% (+77%)\u201d: Al igual que en el punto anterior, crearemos un rango \u201chijo\u201d con la misma configuraci\u00f3n que puede tener cualquier rango nacional de la misma categor\u00eda, por ejemplo \u201cPrestaci\u00f3n servicios nacional 10%\u201c e indicaremos cual es el rango \u201cpadre\u201d (el creado en el punto 1). Las \u00fanicas particularidades que debemos tener en cuenta ser\u00e1n las de indicar en el campo \u201cIndice\u201d el valor del porcentaje de impuesto deducible (seg\u00fan nuestro ejemplo indicaremos 7,7) y activar el check \u201cIs Prorate\u201d:</p> <p></p> <p>3 \u2013 Crear un rango hijo no deducible \u201cProrrata Gener.22 (77%) IVA 10% (-23%)\u201d: Crearemos el segundo rango \u201chijo\u201d de la misma manera que el anterior. Adem\u00e1s de indicar en el campo \u201cIndice\u201d el valor del porcentaje de impuesto no deducible (seg\u00fan nuestro</p> <p>ejemplo indicaremos 2,3) y activar el check \u201cIs Prorate\u201d, tendremos que marcar el check de \u201cImpuesto no deducible\u201d que se encuentra dentro del detalle \u201cMore Information\u201d:  </p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#envio-de-registros-de-facturas-a-sii","title":"Env\u00edo de registros de facturas a SII","text":"<p>Una vez configurados todos los par\u00e1metros de env\u00edo a SII, ya es posible dar de alta/modificar los registros de facturas emitidas/recibidas en SII.</p> <p>Desde Etendo podremos enviar estos registros (alta/modificaci\u00f3n) de forma manual o autom\u00e1tica conforme a los requerimientos de la AEAT, seg\u00fan se explica a continuaci\u00f3n.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#envio-manual","title":"Env\u00edo Manual","text":"<p>Alta en SII</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#facturas-de-venta","title":"Facturas de Venta","text":"<p>Desde la ventana \"Factura (Cliente)\" se crea una nueva factura de venta, tal y como se crean las facturas de venta en Etendo.</p> <p>Dentro del grupo de campos \"AEAT SII\" debemos indicar, tal y como se muestra en la siguiente imagen:</p> <p></p> <ul> <li>la \"Fecha Operaci\u00f3n\" que por defecto se informa con la misma fecha que la \"Fecha de la factura\", si bien el usuario la puede modificar.</li> <li>la Clave Tipo Factura, que por defecto se informar\u00e1 con el valor \"Factura\", clave tipo factura \"F1\".    Otros valores posibles son: - \"Factura simplificada\", clave tipo de factura \"F2\", respecto de las facturas simplificadas creadas desde cada ticket/pedido registrado. - \"Factura rectificativa\", clave tipo de factura \"R1 a R5\", seg\u00fan el \"Motivo de la rectificaci\u00f3n\" seleccionada. - \"Asiento resumen facturas simplificadas\", clave tipo de factura \"F4\", respecto de facturas simplificadas que agrupan tickets/pedidos registrados.</li> </ul> <p>Info</p> <p>No es posible informar este campo de forma autom\u00e1tica como \"Factura Rectificativa\" al crear facturas del tipo \"Reverse Sales Invoice\", debido a que es posible la creaci\u00f3n de Facturas Rectificativas por \"Sustituci\u00f3n\" como \"AR Invoice\" (no Reverse).</p> <p>Se validar\u00e1 que al crear una factura de tipo \"Factura Rectificativa\" \"Por Diferencias\", el documento de la transacci\u00f3n sea del tipo \"Reverse\".</p> <ul> <li>La Descripci\u00f3n maestro SII de la operaci\u00f3n, ya que en los ficheros XML no incluiremos informaci\u00f3n sobre las l\u00edneas de factura. En este caso seleccionamos una descripci\u00f3n del maestro.</li> <li>O bien introducimos directamente una descripci\u00f3n de la operaci\u00f3n en el campo de texto libre \"Descripci\u00f3n SII\".   Si seleccionamos una descripci\u00f3n del maestro, \u00e9sta se muestra en el campo \"Descripci\u00f3n SII\" por defecto para que se pueda modificar/completar para esa operaci\u00f3n/factura.</li> <li>Si la factura se crea desde un pedido y ese pedido inclu\u00eda una \"Descripci\u00f3n SII\", dicha descripci\u00f3n se incorporar\u00e1 de forma autom\u00e1tica en la factura, siempre que el campo \"Descripci\u00f3n SII\" de la factura est\u00e9 vac\u00edo.</li> <li>Si la factura se crea desde varios pedidos, y en todos ellos hay una \"Descripci\u00f3n SII\", s\u00f3lo se incorporar\u00e1 en la factura la del primer pedido seleccionado.</li> </ul> <p>Es importante recalcar que en el caso de las facturas de venta, debemos considerar dos fechas para el env\u00edo (alta) en SII:</p> <ul> <li>la fecha factura, ya que \u00e9sta es la fecha a partir de la cual se debe contar el plazo de alta en SII, que en 2017 es de 8 d\u00edas (sin incluir s\u00e1bados, domingos ni festivos nacionales).</li> <li>la fecha de la operaci\u00f3n, ya que \u00e9sta es la fecha a considerar como fecha de devengo del impuesto correspondiente a la operaci\u00f3n que se registra.</li> </ul> <p>Las facturas expedidas deben de enviarse a SII (alta en SII) en el plazo de 8 d\u00edas (4 d\u00edas a partir del 01-01-2018) desde la fecha de expedici\u00f3n de la factura y, en todo caso, antes del d\u00eda 16 del mes siguiente a aquel en el que se hubiera producido el devengo del impuesto correspondiente a la operaci\u00f3n que se registra.</p> <p>Por ejemplo, un empresario A presta un servicio a otro empresario el 2 de agosto de 2017 (fecha de operaci\u00f3n), expidiendo la correspondiente factura el 13 de septiembre de 2017 (fecha de factura). El plazo para expedir la factura y remitir el registro de esta factura a trav\u00e9s del SII finaliza el 15 de septiembre.</p> <p>En este ejemplo, el periodo ser\u00e1 agosto (fecha de operaci\u00f3n) y el ejercicio 2017.</p> <p>Una vez introducida esta informaci\u00f3n, podemos completar y contabilizar la factura, o s\u00f3lo completarla.</p> <p>En este momento el bot\u00f3n \"Alta en SII\" se muestra habilitado.</p> <p></p> <p>Al hacer click en ese bot\u00f3n, iniciamos el proceso de alta del registro de esa factura en SII (Tipo de comunicaci\u00f3n A0).</p> <p>Etendo nos muestra un mensaje indicando que:</p> <p>\"Esta acci\u00f3n no reversible (salvo error en la comunicaci\u00f3n o error registral) genera el \"alta\" de la factura en la sede electr\u00f3nica de la AEAT. Una vez dada de alta s\u00f3lo ser\u00e1 posible \"Contabilizar\" y \"Descontabilizar\" la factura, sin permitirse m\u00e1s cambios que las cuentas contables a tener en cuenta en la contabilizaci\u00f3n, y la fecha contable s\u00f3lo en el caso de las facturas emitidas. Una vez dada de \"alta\" en SII de forma correcta, ser\u00e1 posible \"modificar\" la factura en caso de error registral si se habilita el campo de la factura \"modificada por error registral\". En ese caso ya s\u00f3lo ser\u00e1 posible el env\u00edo a SII del registro de \"modificaci\u00f3n\" de la factura\".</p> <p>Es decir, siempre es posible contabilizar/descontabilizar la factura despu\u00e9s de darla de alta en SII, pero s\u00f3lo ser\u00e1 posible reactivarla en los siguientes casos:</p> <ul> <li>Error en la comunicaci\u00f3n - el alta en SII ha resultado \"Incorrecta\" debido a alg\u00fan error aceptado o debido a error de conexi\u00f3n. En ese caso ser\u00e1 posible reactivar la factura para subsanar dicho error y volver a dar de \"alta en SII\".</li> <li>Error registral - el estado del alta en SII de la factura es \"Correcto\", sin embargo se produjo un error registral que se debe subsanar. En ese caso ser\u00e1 posible reactivar la factura, seleccionando el campo \"Modificada error registral\", realizar los cambios oportunos y enviar la \"modificaci\u00f3n\" del registro de la factura. Ver secci\u00f3n: Modificaci\u00f3n en SII.</li> </ul> <p>En la pesta\u00f1a \"Datos SII\" de la factura, tendremos acceso a los siguientes datos:</p> <ul> <li>\"Tipo de Comunicaci\u00f3n\", con el valor \"Alta\".</li> <li>n\u00famero de \"Conexi\u00f3n SII\" que tambi\u00e9n quedar\u00e1 reflejada en la ventana \"Conexiones SII\".</li> <li>el \"C\u00f3digo CSV\" o c\u00f3digo seguro de verificaci\u00f3n que la AEAT nos ha indicado relacionado con el alta de esta factura en SII.   La AEAT responde con un CSV para cada factura enviada. Si se env\u00eda un fichero XML con varias facturas, en el XML de respuesta aparecer\u00e1 un CSV para cada una de ellas.</li> <li>el \"Estado registro SII\", que en este punto puede ser:</li> <li>\"Correcto\" - la factura se ha registrado de forma satisfactoria en la sede electr\u00f3nica de la AEAT.</li> <li>\"Incorrecto\" - la factura se ha rechazado totalmente y, por tanto, no est\u00e1 registrada. En este caso, la AEAT nos informar\u00e1 de los datos err\u00f3neos. Debemos subsanarlos y volver a enviar la factura.</li> <li>\"Aceptado con errores\" - la factura se ha registrado pero contiene errores que debemos subsanar y volver a enviar. Igualmente, la AEAT nos indicar\u00e1 los errores que se deben subsanar.</li> <li>\"Error al enviar\" - la factura no est\u00e1 registrada, ya que se ha producido un error en la conexi\u00f3n online con la AEAT. Debemos volver a enviar la factura.</li> <li>\"Anulado\" - se trata de un estado que podemos obtener en las respuestas recibidas al hacer una \"Consulta a SII\". Se ha a\u00f1adido este estado para poder \"gestionarlo\" igualmente.</li> <li>\"No Declarable en SII\" - la factura no est\u00e1 registrada, ya que todas sus l\u00edneas est\u00e1n asociadas a un impuesto configurado como \"No Declarable en SII\"</li> </ul> <p>Para la AEAT los errores \"Admisibles\" son aquellos que ser\u00e1n admitidos por la AEAT.</p> <p>Se corresponden con errores derivados de las validaciones de negocio de facturas o registros.</p> <p>Estos errores deber\u00e1n ser corregidos a trav\u00e9s de una nueva petici\u00f3n correcta de modificaci\u00f3n sobre aquellas facturas o registros aceptados con errores.</p> <p>Para la AEAT los errores \"No Admisibles\" son aquellos errores que en ning\u00fan caso podr\u00e1n ser admitidos por la Agencia en la presentaci\u00f3n de facturas o registros de cada libro de registro.</p> <p>Se corresponden con los errores provocados al no superar las validaciones estructurales y sint\u00e1cticas del env\u00edo y con errores ya tipificados por la AEAT.</p> <p>Estos errores deber\u00e1n ser corregidos a trav\u00e9s de una nueva petici\u00f3n correcta de env\u00edo de las facturas o registros incorrectos.</p> <ul> <li>Motivo error SII, comunicado por la AEAT</li> </ul> <p>Esta pesta\u00f1a tambi\u00e9n incluye informaci\u00f3n sobre el \"cuadre\" de la factura, enviado por la AEAT tras realizar la correspondiente \"Consulta\". Los campos de cuadre son:</p> <ul> <li>Estado cuadre SII</li> <li>y Fecha de cuadre</li> </ul> <p>Y, en el grupo de campos \"Archivos Adjuntos\", podremos encontrar los ficheros XML de alta y respuesta de la AEAT, si hemos configurado la organizaci\u00f3n para que se guarden estos ficheros.</p> <p>Finalmente, en la cabecera de la factura de venta enviada a SII de forma manual o autom\u00e1tica, tendremos informaci\u00f3n del \"Ejercicio\" y del \"Periodo\" que se incluyeron en el alta en SII de dicha factura.</p> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#facturas-rectificativas-de-venta","title":"Facturas Rectificativas de Venta","text":"<p>Es posible rectificar una factura de venta dada de alta en SII de forma correcta, si se produce una devoluci\u00f3n de mercanc\u00eda, descuentos posteriores a la venta (Rappels de venta) o situaciones de deuda incobrable o concurso.</p> <p>La rectificaci\u00f3n de facturas de venta se deben gestionar y dar de alta en SII bien sea \"Por Diferencias\" o \"Por Sustituci\u00f3n\", tal y como se explica a continuaci\u00f3n:</p> <p>Por Diferencias, en este caso se registra una factura de tipo \"Reverse\" por el importe negativo correspondiente.</p> <p>Ser\u00eda el caso en el que se realiz\u00f3 una venta por valor de 1527.77 \u20ac que se dio de alta en SII de forma correcta y, con posterioridad, se devuelve mercanc\u00eda por parte del cliente por un valor de -27.77 \u20ac (15 unidades de producto).</p> <p>En este caso, al registrar la factura rectificativa por diferencias, dentro del grupo de campos \"AEAT SII\" deberemos indicar la siguiente informaci\u00f3n:</p> <ul> <li>Clave tipo factura = Factura Rectificativa</li> <li>Tipo Rectificativa = Por Diferencias</li> <li>Motivo de la rectificaci\u00f3n = R1...R4, a seleccionar por el usuario seg\u00fan el motivo de la rectificaci\u00f3n.</li> </ul> <p>Este tipo de facturas rectificativas se deben crear con documentos del tipo \"Reverse\" (por ejemplo: \"Reverse Sales Invoice\"), e importes negativos, tal y como se muestra en la pantalla. Etendo mostrar\u00e1 un error en caso contrario.</p> <p></p> <p>Al dar de Alta esa factura en SII, el fichero XML registrar\u00e1 de forma autom\u00e1tica la siguiente informaci\u00f3n:</p> <ul> <li>Tipo Factura = R1</li> <li>Tipo Rectificativa = I</li> <li>Importe total = -27.77</li> </ul> <p></p> <p>Por Sustituci\u00f3n, en este caso se produce una anulaci\u00f3n de la factura original (ya dada de alta en SII) y la creaci\u00f3n de una nueva factura con los importes correctos.</p> <p>La anulaci\u00f3n de la factura original se puede realizar a trav\u00e9s de la opci\u00f3n \"Reactivar-Anular\" de Etendo. Esta acci\u00f3n crear\u00e1 una factura del tipo \"Reverse\" con los siguientes datos:</p> <ul> <li>Tipo de documento = Reverse Sales Invoice</li> <li>Fecha de operaci\u00f3n = fecha de operaci\u00f3n de la factura original</li> <li>Clave tipo factura = Factura</li> </ul> <p>Al dar de Alta esa factura de anulaci\u00f3n en SII, el fichero XML registrar\u00e1 de forma autom\u00e1tica la siguiente informaci\u00f3n:</p> <ul> <li>Tipo Factura = F1</li> <li>Importe total = -185.13</li> </ul> <p>Posteriormente, se crea la nueva factura con los importes correctos y con los siguientes datos:</p> <ul> <li>Tipo de documento = AR Invoice (no reverse)</li> <li>Clave tipo factura = Factura Rectificativa</li> <li>Tipo Rectificativa = Por Sustituci\u00f3n</li> <li>Motivo de la rectificaci\u00f3n = R1...R4, a seleccionar por el usuario seg\u00fan el motivo de la rectificaci\u00f3n.</li> <li>Fecha de operaci\u00f3n = fecha de operaci\u00f3n de la factura original</li> </ul> <p></p> <p>Al dar de Alta esta factura rectificativa por sustituci\u00f3n en SII, el fichero XML registrar\u00e1 de forma autom\u00e1tica la siguiente informaci\u00f3n:</p> <ul> <li>Tipo Factura = R1</li> <li>Tipo Rectificativa = S</li> <li>Importe total = 92.57</li> </ul> <p></p> <p>Tanto en facturas rectificativas de venta por diferencias como por sustituci\u00f3n, el usuario deber\u00e1 asignar la fecha de operaci\u00f3n correspondiente a la factura original (devengo de la operaci\u00f3n). Sin embargo, en facturas rectificativas el periodo de alta en SII ser\u00e1 el correspondiente a la fecha factura, incorpor\u00e1ndose a la declaraci\u00f3n de IVA en dicho mes.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#facturas-de-compra","title":"Facturas de Compra","text":"<p>El proceso de registro y alta en SII de este tipo de facturas es muy similar al de las facturas de venta.</p> <p>La informaci\u00f3n del alta del registro de la factura de compra en SII se recoger\u00e1 de la ventana \"Factura(Proveedor)\", una vez que la factura de compra correspondiente est\u00e9 en estado \"Completado\".</p> <p>Dentro del grupo de campos \"AEAT SII\" debemos indicar, tal y como se muestra en la siguiente imagen:</p> <p></p> <ul> <li>la \"Fecha Operaci\u00f3n\", que por defecto se informa con la misma fecha que la \"Fecha de la factura\", fecha actual o de creaci\u00f3n de la factura en Etendo, si bien el usuario la puede modificar.</li> <li>la \"Fecha registro contable\", que por defecto y para las facturas que se crean de forma manual se informa con la fecha actual, o fecha de creaci\u00f3n de la factura en Etendo y, por tanto, registro de la factura recibida en Etendo.   Esta fecha de registro contable no tiene por qu\u00e9 coincidir con la fecha contable de la factura de compra.</li> <li>la Clave Tipo Factura, que se debe puede informar con los siguientes valores:</li> <li>\"Factura\", que se corresponde con una clave de tipo de Factura \"F1\"</li> <li>\"Importaci\u00f3n (DUA)\", que se corresponde con una clave de tipo de Factura \"F5\"</li> <li>\"Liquidaci\u00f3n Complementaria Aduana IVA a la importaci\u00f3n\", que se corresponde con una clave de tipo de Factura \"LC\"</li> <li>\"Justificante contable\", que se corresponde con una clave de tipo de Factura \"F6\"</li> </ul> <p>En el caso de las facturas de compra no es necesario indicar si se trata o no de una factura rectificativa.</p> <ul> <li>La Descripci\u00f3n maestro SII de la operaci\u00f3n, ya que en los ficheros XML no incluiremos informaci\u00f3n sobre las l\u00edneas de factura. En este caso, seleccionamos una descripci\u00f3n del maestro.</li> <li>O bien introducimos directamente una descripci\u00f3n de la operaci\u00f3n en el campo de texto libre \"Descripci\u00f3n SII\".   Si seleccionamos una descripci\u00f3n del maestro, \u00e9sta se muestra en el campo \"Descripci\u00f3n SII\" por defecto para que se pueda modificar/completar para esa operaci\u00f3n/factura.</li> <li>Si la factura se crea desde un pedido y ese pedido inclu\u00eda una \"Descripci\u00f3n SII\", dicha descripci\u00f3n se incorporar\u00e1 de forma autom\u00e1tica en la factura, siempre que el campo \"Descripci\u00f3n SII\" de la factura est\u00e9 vac\u00edo.</li> <li>Si la factura se crea desde varios pedidos, y en todos ellos hay una \"Descripci\u00f3n SII\", s\u00f3lo se incorporar\u00e1 en la factura la del primer pedido seleccionado.</li> </ul> <p>Y adem\u00e1s, debemos reflejar el n\u00famero de factura del proveedor en el campo \"Referencia del Proveedor\".</p> <p>Las facturas recibidas deben enviarse a SII (alta en SII) en el plazo de 8 d\u00edas (4 d\u00edas a partir del 01-01-2018) naturales desde la fecha del registro contable de la factura, excluyendo s\u00e1bados, domingos, y feriados reconocidos nacionalmente y, en todo caso, antes del d\u00eda 16 del mes siguiente al periodo de liquidaci\u00f3n en que se hayan incluido las operaciones correspondientes (per\u00edodo en que se deduce el IVA soportado). El periodo l\u00edmite puede ser m\u00e1s corto que los d\u00edas iniciales del plazo. Si el d\u00eda 15 es S\u00e1bado, Domingo o feriado, la fecha l\u00edmite se extiende al siguiente d\u00eda h\u00e1bil.</p> <p>Por tanto, en el caso de las facturas de compra, debemos considerar la fecha de registro contable de la factura como fecha a tener en cuenta respecto del alta en SII.</p> <p>Info</p> <p>Se puede utilizar la Calculadora de Plazos de la Agencia Tributaria para realizar simulaciones para diferentes casos y ayudar a clarificar cualquier duda respecto a los plazos de liquidaci\u00f3n.</p> <p>Y, adem\u00e1s, tenemos que tener en cuenta las siguientes fechas para el c\u00e1lculo del periodo de liquidaci\u00f3n del impuesto que se refleja en el XML dentro de la secci\u00f3n \"Periodo de Liquidaci\u00f3n\" (Ejercicio/Periodo):</p> <ul> <li>la fecha de operaci\u00f3n de la factura</li> <li>la fecha del registro contable de la factura</li> <li>y la fecha de alta en SII de la factura.</li> </ul> <p>De modo que:</p> <ul> <li>si la fecha de operaci\u00f3n se encuentra en el mismo mes (por ejemplo, julio) que la fecha de registro contable y alta en SII, el periodo reflejado en el XML ser\u00e1 ese mismo (julio, en nuestro ejemplo)</li> <li>si la fecha de operaci\u00f3n se encuentra en el mes de junio, la fecha de registro contable en julio y la fecha de alta en SII es anterior al 16 de julio, el periodo reflejado en el XML ser\u00e1 junio.</li> <li>Si, por el contrario, y con las mismas fechas anteriores, la fecha de alta en SII es posterior al 15 de julio, el periodo reflejado en el XML ser\u00e1 julio.</li> </ul> <p>Por ejemplo:</p> <p>Un empresario A vende mercanc\u00eda a otro empresario B el 03 de julio de 2022. El empresario A expide la factura el 04 de julio. El empresario B recibe la factura el 30 de julio y efect\u00faa su registro contable el 10 de octubre.</p> <p>Caben dos posibilidades:</p> <ul> <li>El empresario B remite los registros de la factura el 15 de octubre consignando en el Libro Registro de facturas recibidas, Ejercicio: 2022, Per\u00edodo: 09.</li> <li>El empresario B remite los registros de la factura el 16 de octubre consignando en el Libro Registro de facturas recibidas, Ejercicio: 2022, Per\u00edodo: 10.</li> </ul> <p>Una vez introducida esta informaci\u00f3n, podemos completar y contabilizar la factura, o s\u00f3lo completarla.</p> <p>En este momento el bot\u00f3n \"Alta en SII\" se muestra habilitado.</p> <p></p> <p>Al hacer click en ese bot\u00f3n, iniciamos el proceso de alta del registro de esa factura en SII (Tipo de comunicaci\u00f3n A0).</p> <p>Etendo nos muestra un mensaje indicando que:</p> <p>\"Esta acci\u00f3n no reversible (salvo error en la comunicaci\u00f3n o error registral) genera el \"alta\" de la factura en la sede electr\u00f3nica de la AEAT. Una vez dada de alta s\u00f3lo ser\u00e1 posible \"Contabilizar\" y \"Descontabilizar\" la factura, sin permitirse m\u00e1s cambios que las cuentas contables a tener en cuenta en la contabilizaci\u00f3n, y la fecha contable s\u00f3lo en el caso de las facturas emitidas. Una vez dada de \"alta\" en SII de forma correcta, ser\u00e1 posible \"modificar\" la factura en caso de error registral si se habilita el campo de la factura \"modificada por error registral\". En ese caso ya s\u00f3lo ser\u00e1 posible el env\u00edo a SII del registro de \"modificaci\u00f3n\" de la factura\".</p> <p>Es decir, siempre es posible contabilizar/descontabilizar la factura despu\u00e9s de darla de alta en SII, pero s\u00f3lo ser\u00e1 posible reactivarla en caso de error en la comunicaci\u00f3n o error registral, tal y como se explic\u00f3 para las facturas de venta.</p> <p>Info</p> <p>En el caso de las facturas de compra, no ser\u00e1 posible cambiar la fecha contable de facturas dadas de alta en SII de forma correcta.</p> <p>Finalmente, en la cabecera de la factura de compra enviada a SII de forma manual o autom\u00e1tica, tendremos informaci\u00f3n del \"Ejercicio\" y del \"Periodo\" que se incluyeron en el alta en SII de dicha factura.</p> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#facturas-de-importacion-dua","title":"Facturas de Importaci\u00f3n (DUA)","text":"<p>Las importaciones con DUA se deben anotar en el Libro Registro de Facturas Recibidas con la clave tipo de factura \u201cF5\u201d.</p> <p>Deber\u00e1n consignarse, como n\u00famero de factura y fecha de expedici\u00f3n, el n\u00famero de referencia que figura en el propio DUA y la fecha de su admisi\u00f3n por la Administraci\u00f3n Aduanera respectivamente.</p> <p>En los datos identificativos correspondientes al proveedor se consignar\u00e1n los del importador y titular del libro registro, esto es la organizaci\u00f3n de Etendo.</p> <p>Finalmente, y respecto de la factura del transitario, se consignar\u00e1 \u00fanicamente la prestaci\u00f3n de servicios sujeta y no exenta, con clave de tipo de factura \"F1\".</p> <p>Para registrar en Etendo este tipo de operaciones \"Importaciones con DUA\" debemos seguir los pasos siguientes en la ventana \"Factura (Proveedor)\":</p> <ul> <li>Crear una nueva factura para el tercero \"Transitario\" con su n\u00famero de factura o \"Referencia del Proveedor\", con la siguiente informaci\u00f3n en el grupo de campos \"AEAT SII\" e \"Import (DUA):</li> <li>Clave tipo factura: Importaci\u00f3n (DUA)</li> <li>DUA: n\u00famero de referencia que figura en el propio DUA</li> <li>Fecha DUA: fecha de la admisi\u00f3n del DUA por la Administraci\u00f3n Aduanera respectivamente</li> <li>en la pesta\u00f1a \"L\u00edneas\" introducir los datos de la factura del transitario, incluida su prestaci\u00f3n de servicios sujeta y no exenta.</li> <li>en la pesta\u00f1a \"Impuestos\" incluir de forma manual una nueva l\u00ednea de impuestos para impuestos del tipo \"Importaciones 21%\", que incluya la base imponible de importaci\u00f3n y su correspondiente cuota.</li> </ul> <p>Una vez completada y dada de alta en SII, obtendremos un XML con la informaci\u00f3n requerida por parte de la AEAT.</p> <p>En los casos en que una operaci\u00f3n de \"Importaci\u00f3n (DUA)\", se relacione con m\u00e1s de un DUA ser\u00e1 posible seleccionar el check \"Multiple DUA\".</p> <p>Al seleccionar esta opci\u00f3n:</p> <ul> <li>los campos \"DUA\" y \"Fecha DUA\" de la cabecera de la factura no se muestran ya que dichos campos se tienen que informar en la pesta\u00f1a \"Impuestos\", con el fin de relacionar el DUA y su fecha, con la base imponible de importaci\u00f3n correspondiente, tal y como se muestra en la siguiente imagen.</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#facturas-de-compra-alta-tras-la-contabilizacion","title":"Facturas de Compra (alta tras la contabilizaci\u00f3n)","text":"<p>Aquellas organizaciones que activen el check \"Alta en SII facturas de compra tras su contabilizaci\u00f3n\" en la ventana Configuraci\u00f3n SII, podr\u00e1n enviar sus facturas de compra a SII tras su contabilizaci\u00f3n.</p> <p>El proceso de registro y alta en SII de este tipo de facturas es muy similar al resto de facturas de compra.</p> <p>La informaci\u00f3n del alta en SII del registro de la factura de compra se recoger\u00e1 de la ventana \"Factura(Proveedor)\", una vez que la factura de compra correspondiente est\u00e9 en estado \"Completado\" y \"Contabilizado\".</p> <p>Dentro del grupo de campos \"AEAT SII\" estar\u00e1n informados los campos:</p> <ul> <li>la \"Fecha Operaci\u00f3n\", que por defecto se informa con la misma fecha que la \"Fecha de la factura\", fecha actual o de creaci\u00f3n de la factura en Etendo, si bien el usuario la puede modificar.</li> <li>la \"Fecha registro contable\", que por defecto se consignar\u00e1 en blanco hasta el momento en que la factura sea contabilizada con la fecha en la que se ha realizado el asiento, independientemente de la fecha en la que se hayan imputado los apuntes contables en el libro diario. El bot\u00f3n de Alta en SII permanecer\u00e1 deshabilitado hasta que se produzca la contabilizaci\u00f3n del documento. Si la factura se descontabiliza antes de suministrarla a SII, la fecha registro contable eliminar\u00e1 su contenido. En caso de que se hubiera producido ya el alta, y fuera necesaria realizar una Modificaci\u00f3n por error registral, la fecha registro contable no cambiar\u00e1 al descontabilizar y reactivar la factura.</li> <li>la Clave Tipo Factura, que se debe puede informar con los siguientes valores:</li> <li>\"Factura\", que se corresponde con una clave de tipo de Factura \"F1\"</li> <li>\"Importaci\u00f3n (DUA)\", que se corresponde con una clave de tipo de Factura \"F5\"</li> <li>\"Liquidaci\u00f3n Complementaria Aduana IVA a la importaci\u00f3n\", que se corresponde con una clave de tipo de Factura \"LC\"</li> <li>\"Justificante contable\", que se corresponde con una clave de tipo de Factura \"F6\"</li> </ul> <p>En el caso de las facturas de compra no es necesario indicar si se trata o no de una factura rectificativa.</p> <ul> <li>la Descripci\u00f3n maestro SII de la operaci\u00f3n, ya que en los ficheros XML no incluiremos informaci\u00f3n sobre las l\u00edneas de factura. En este caso seleccionamos una descripci\u00f3n del maestro.</li> <li>o bien introducimos directamente una descripci\u00f3n de la operaci\u00f3n en el campo de texto libre \"Descripci\u00f3n SII\".   Si seleccionamos una descripci\u00f3n del maestro, \u00e9sta se muestra en el campo \"Descripci\u00f3n SII\" por defecto para que se pueda modificar/completar para esa operaci\u00f3n/factura.</li> <li>Si la factura se crea desde un pedido y ese pedido inclu\u00eda una \"Descripci\u00f3n SII\", dicha descripci\u00f3n se incorporar\u00e1 de forma autom\u00e1tica en la factura, siempre que el campo \"Descripci\u00f3n SII\" de la factura est\u00e9 vac\u00edo.</li> <li>Si la factura se crea desde varios pedidos, y en todos ellos hay una \"Descripci\u00f3n SII\", s\u00f3lo se incorporar\u00e1 en la factura la del primer pedido seleccionado.</li> </ul> <p>Y adem\u00e1s, debemos reflejar el n\u00famero de factura del proveedor en el campo \"Referencia del Proveedor\".</p> <p>Las facturas recibidas deben de enviarse a SII (alta en SII) en el plazo de 8 d\u00edas (4 d\u00edas a partir del 01-01-2018) desde la fecha del registro contable de la factura y, en todo caso, antes del d\u00eda 16 del mes siguiente al periodo de liquidaci\u00f3n en que se hayan incluido las operaciones correspondientes (per\u00edodo en que se deduce el IVA soportado).</p> <p>Por tanto, en el caso de las facturas de compra, debemos considerar la fecha de registro contable de la factura como fecha a tener en cuenta respecto del alta en SII.</p> <p>Y, adem\u00e1s, tenemos que tener en cuenta las siguientes fechas para el c\u00e1lculo del periodo de liquidaci\u00f3n del impuesto que se refleja en el XML dentro de la secci\u00f3n \"Periodo de Liquidaci\u00f3n\" (Ejercicio/Periodo):</p> <ul> <li>la fecha de operaci\u00f3n de la factura</li> <li>la fecha del registro contable de la factura</li> <li>y la fecha de alta en SII de la factura.</li> </ul> <p>De modo que:</p> <ul> <li>S\u00f3lo se dar\u00e1 de alta en SII una factura que se encuentre en estado \"Completado\" y \"Contabilizado\".</li> <li>Cuando el usuario contabilice la factura, el campo Fecha registro contable se rellenar\u00e1 autom\u00e1ticamente con la fecha del d\u00eda en que se registra el asiento en contabilidad.</li> <li>Si el documento es descontabilizado antes de realizar el alta el campo Fecha registro contable eliminar\u00e1 su contenido.</li> <li>Si el documento es descontabilizado tras realizar el alta para proceder a una modificaci\u00f3n por error registral, el campo fecha registro contable mantendr\u00e1 su contenido y la fecha registro contable continuar\u00e1 siendo la misma que se inform\u00f3 en la comunicaci\u00f3n de alta.</li> </ul> <p>Por ejemplo:</p> <p>Un empresario A vende mercanc\u00eda a otro empresario B el 26 de abril de 2022. El empresario A expide la factura el 27 de abril. El empresario B recibe la factura el 30 de abril y efect\u00faa su registro contable el 01 de mayo remitiendo los registros de la factura el 12 de julio, por lo que el periodo asignado ser\u00e1 07, ejercicio 2022.</p> <p>Una vez introducida esta informaci\u00f3n, podemos completar y contabilizar la factura.</p> <p>Tras la contabilizaci\u00f3n del documento, el bot\u00f3n \"Alta en SII\" se muestra habilitado.</p> <p></p> <p>Al hacer click en ese bot\u00f3n, iniciamos el proceso de alta del registro de esa factura en SII (Tipo de comunicaci\u00f3n A0).</p> <p>Etendo nos muestra un mensaje indicando que:</p> <p>\"Esta acci\u00f3n no reversible (salvo error en la comunicaci\u00f3n o error registral) genera el \"alta\" de la factura en la sede electr\u00f3nica de la AEAT. Una vez dada de \"alta\" en SII de forma correcta, ser\u00e1 posible \"modificar\" la factura en caso de error registral si se habilita el campo de la factura \"modificada por error registral\". En ese caso ya s\u00f3lo ser\u00e1 posible el env\u00edo a SII del registro de \"modificaci\u00f3n\" de la factura\".</p> <p>Siempre es posible contabilizar/descontabilizar la factura despu\u00e9s de darla de alta en SII, pero s\u00f3lo ser\u00e1 posible reactivarla en caso de error en la comunicaci\u00f3n o error registral.</p> <p>El d\u00eda 26 de julio el empresario B se da cuenta que tuvo un error en el momento de introducir el precio del producto en la l\u00ednea de la factura, por lo que es necesario realizar una modificaci\u00f3n por error registral (Tipo de comunicaci\u00f3n A1). El proceso a seguir es \"Descontabilizar\", activar el check \"Modificar por error registral\" y \"Reactivar\" el documento. Tras hacer la modificaci\u00f3n correspondiente, de nuevo se completa y contabiliza el documento antes de pulsar el bot\u00f3n \"Modificaci\u00f3n en SII\", manteni\u00e9ndose la fecha registro contable que inicialmente se inform\u00f3 en SII.</p> <p></p> <p>En el caso de las facturas de compra, tampoco ser\u00e1 posible cambiar la fecha contable de facturas dadas de alta en SII de forma correcta.</p> <p>Info</p> <p>Si se decide optar por esta funcionalidad, es conveniente que la organizaci\u00f3n no tenga activo el proceso de contabilizaci\u00f3n autom\u00e1tico, ya que imputar\u00e1 la fecha registro contable en el momento de realizar la contabilizaci\u00f3n.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#modificacion-en-sii","title":"Modificaci\u00f3n en SII","text":"<p>Este tipo de comunicaci\u00f3n implica la modificaci\u00f3n de los registros de factura ya dados de alta en SII por errores registrales que no afecten a:</p> <ul> <li>el \"emisor de la factura\", esto es la organizaci\u00f3n o entidad legal que emite/recibe la factura</li> <li>la \"fecha de factura\", esto es la fecha factura (expedici\u00f3n) de las facturas de venta, fecha factura en las de compra</li> <li>y el \"n\u00famero de factura\", o \"referencia proveedor\" en las facturas de compra que en ning\u00fan caso podr\u00e1n modificarse.</li> </ul> <p>Por ejemplo, nos damos cuenta de un error en el rango de impuesto seleccionado en una factura que ya est\u00e1 dada de alta en SII.</p> <p>En esos casos tendremos que modificar la factura y enviarla de nuevo a SII, con un tipo de comunicaci\u00f3n diferente que es A1 \"Modificaci\u00f3n (Correcci\u00f3n por errores registrales).</p> <p>Se ha creado un nuevo campo en la cabecera de las facturas (tanto de compra como de venta), secci\u00f3n \"AEAT SII\" denominado, \"Modificada por error registral\". Este nuevo campo s\u00f3lo se habilita si:</p> <ul> <li>la factura est\u00e1 en estado \"Completado\"</li> <li>y, adem\u00e1s, est\u00e1 dada de alta en SII (Alta en SII= Si) correctamente, \"Estado Registro SII\" = Correcto.</li> </ul> <p>Al seleccionar este nuevo campo, es posible descontabilizar y reactivar la factura, modificar el error cometido, para finalmente volver a completar la factura.</p> <p>En ning\u00fan caso ser\u00e1 posible modificar:</p> <ul> <li>el emisor de la factura (Organizaci\u00f3n)</li> <li>la fecha de factura (fecha de expedici\u00f3n en las facturas de venta/fecha factura en las facturas de compra)</li> <li>el n\u00famero de factura (N\u00ba documento en las facturas de venta/Referencia del proveedor en las facturas de compra)</li> </ul> <p>El bot\u00f3n \"Modificaci\u00f3n en SII\" nos permitir\u00e1 enviar la modificaci\u00f3n del registro de la factura a SII, tal y como se muestra en la pantalla siguiente:</p> <p></p> <p>El suministro de este tipo de registros de \"modificaci\u00f3n\" deber\u00e1 realizarse antes del d\u00eda 16 del mes siguiente al periodo al que se refiera la declaraci\u00f3n en la que deba tenerse en cuenta dicha modificaci\u00f3n.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#envio-automatico","title":"Env\u00edo Autom\u00e1tico","text":"<p>Dentro de la venta \"Procesamiento de Peticiones\" se han creado dos nuevos procesos \"Proceso de alta en SII\" y \"Proceso de modificaci\u00f3n en SII por error registral\", que pueden configurarse para cada organizaci\u00f3n o entidad legal.</p> <p>Tal y como sucede con otros procesos de Etendo, \u00e9stos podr\u00e1n configurarse para ser ejecutados de forma inmediata, planificada o programada con una cierta frecuencia.</p> <p>Se recomienda que este proceso se programe con una frecuencia \"diaria\", ya que tal y como se explica a continuaci\u00f3n, este proceso tendr\u00e1 en cuenta el n\u00famero de d\u00edas de cadencia configurados tanto para el alta en SII de las facturas de compra como de las facturas de venta, para la organizaci\u00f3n.</p> <p>Ser\u00eda posible tambi\u00e9n que la opci\u00f3n diaria s\u00f3lo incluyera los d\u00edas de la semana y, por lo tanto, no se tuvieran en cuenta para su ejecuci\u00f3n ni los fines de semana.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#alta-en-sii","title":"Alta en SII","text":"<p>Este proceso permite el \"alta\" masiva (tipo de comunicaci\u00f3n A0) en SII de todas las facturas de compra y venta en estado \"completado\".</p> <p></p> <p>En el caso de las facturas de venta, este proceso tendr\u00e1 en cuenta:</p> <ul> <li>la \"fecha de operaci\u00f3n\" y la \"fecha de expedici\u00f3n\" de las facturas</li> <li>y la \"cadencia del proceso de alta en SII\", establecido para las facturas de venta en la ventana \"Configuraci\u00f3n SII\", para cada Organizaci\u00f3n</li> </ul> <p>Por ejemplo, en el escenario siguiente:</p> <ul> <li>factura de venta con fecha de operaci\u00f3n 01-07-2022</li> <li>fecha de expedici\u00f3n 05-07-2022</li> <li>cadencia de env\u00edo establecida en 8 d\u00edas</li> </ul> <p>aunque, programemos el proceso de alta en SII con una frecuencia diaria, esta factura s\u00f3lo se dar\u00e1 de alta en SII de forma autom\u00e1tica, a trav\u00e9s de este proceso, el d\u00eda 13-07-2022.</p> <p>Dicho de otro modo, el d\u00eda 13-07-2022 se enviar\u00e1n las facturas con fecha de expedici\u00f3n 05-07-2022 (13-07-2022- 8 d\u00edas).</p> <p>El plazo l\u00edmite de alta en SII de esta factura para 2022 ser\u00eda el 17-07-2022, ya que en este c\u00f3mputo no se deben tener en cuenta los s\u00e1bados, domingos ni festivos nacionales.</p> <p>En el escenario siguiente:</p> <ul> <li>factura de venta con fecha de operaci\u00f3n 20-06-2022</li> <li>fecha de expedici\u00f3n 13-07-2022</li> <li>cadencia de env\u00edo establecida en 8 d\u00edas</li> </ul> <p>aunque, programemos el proceso de alta en SII con una frecuencia diaria, esta factura se dar\u00e1 de alta en SII de forma autom\u00e1tica, el mismo d\u00eda de su expedici\u00f3n, ya que la fecha de la operaci\u00f3n y la fecha de factura se encuentran en periodos diferentes.</p> <p>El plazo l\u00edmite de alta en SII de esta factura para 2022 ser\u00eda el 15-07-2022</p> <p>En el caso de las facturas de compra, este proceso tendr\u00e1 en cuenta:</p> <ul> <li>la fecha contable y la fecha de registro contable de la factura</li> <li>y la \"cadencia del proceso de alta en SII\", establecido para las facturas de venta en la ventana \"Configuraci\u00f3n SII\", para cada Organizaci\u00f3n</li> </ul> <p>Por ejemplo, en el escenario siguiente:</p> <ul> <li>factura de compra con fecha contable 05-07-2022</li> <li>fecha de registro contable 14-07-2022 (ya que la empresa decide deducir el IVA en julio)</li> <li>cadencia de env\u00edo establecida en 8 d\u00edas</li> </ul> <p>aunque programemos el proceso de alta en SII con una frecuencia diaria, esta factura s\u00f3lo se dar\u00e1 de alta en SII de forma autom\u00e1tica, a trav\u00e9s de este proceso, el d\u00eda 22-07-2022.</p> <p>Dicho de otro modo, el d\u00eda 22-07-2022 se enviar\u00e1n las facturas con fecha de registro contable 14-07-2022 (22-07-2022 - 8 d\u00edas).</p> <p>El plazo l\u00edmite de alta en SII para esta factura ser\u00eda el 26-07-2022.</p> <p>En el escenario siguiente:</p> <ul> <li>factura de compra con fecha contable 20-06-2022</li> <li>fecha de registro contable 13-07-2022</li> <li>cadencia de env\u00edo establecida en 8 d\u00edas</li> </ul> <p>aunque, programemos el proceso de alta en SII con una frecuencia diaria, esta factura se dar\u00e1 de alta en SII de forma autom\u00e1tica, el mismo d\u00eda de su fecha de registro contable, ya que la fecha contable y la fecha de registro contable se encuentran en periodos diferentes.</p> <p>El plazo l\u00edmite de alta en SII de esta factura ser\u00eda el 15-07-2022.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#gestion-y-envio-de-registros-desde-el-monitor-sii","title":"Gesti\u00f3n y env\u00edo de registros desde el \"Monitor SII\"","text":"<p>Desde la ventana \"Monitor SII\" podemos realizar gestionar y realizar env\u00edos masivos de facturas emitidas/recibidas a SII, as\u00ed como de los cobros/pagos de facturas en RECC y los cobros en met\u00e1lico, esta \u00faltima informaci\u00f3n a enviar de forma anual.</p> <p>Tal y como se muestra en la siguiente pantalla, filtramos por:</p> <ul> <li>Alta en SII = No</li> <li>Estado doc = Completado</li> <li>Tercero = Cliente Espa\u00f1a</li> </ul> <p>seleccionamos varias facturas y procedemos a su Alta en SII.</p> <p></p> <p>Lo mismo aplica para el env\u00edo masivo de modificaciones de facturas emitidas/recibidas. En ese caso, dichas facturas deber\u00e1n encontrarse marcadas como \"Modificada por error registral\" = SI.</p> <p>Tal y como se muestra en la siguiente pantalla, filtramos por:</p> <ul> <li>Alta en SII = SI</li> <li>Estado registro = Correcto</li> <li>Tercero = Cliente Espa\u00f1a</li> </ul> <p>seleccionamos varias facturas y procedemos a su Modificaci\u00f3n en SII.</p> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#creacion-automatica-de-facturas-de-venta","title":"Creaci\u00f3n autom\u00e1tica de facturas de venta","text":"","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#generar-facturas-manualmente","title":"Generar facturas (manualmente)","text":"<p>El proceso \"Generar facturas (manualmente)\u201d permite crear facturas de venta del tipo \"AR Invoice\" en estado completado.</p> <p>Debido a eso, en los pedidos de venta se han creado dos nuevos campos dentro del grupo de campos \"AEAT SII\", con el fin de indicar en cada pedido de venta:</p> <ul> <li>la \"Fecha de operaci\u00f3n\", si \u00e9sta es conocida</li> <li>y la \"Descripci\u00f3n SII\" de la operaci\u00f3n.</li> </ul> <p>En ning\u00fan caso es posible enviar pedidos de venta a SII (alta/modificaci\u00f3n).</p> <p>Tal y como se muestra en la pantalla, es posible seleccionar los pedidos a factura, e indicar una fecha de factura:</p> <p></p> <p>Al procesar, Etendo nos informa de que se han creado las facturas correspondientes, que tendr\u00e1n ya un estado de \"Completado\".</p> <p>Info</p> <p>Cada una de estas facturas heredar\u00e1 la fecha de operaci\u00f3n y la descripci\u00f3n SII introducidas en el pedido. Es importante recalcar que el usuario siempre las puede modificar, si es necesario, antes de dar de alta en SII dicha factura.</p> <p>Info</p> <p>La clave de tipo factura no se informa por defecto, por tanto el usuario, antes de dar de alta en SII, tendr\u00e1 que seleccionar el valor \"Factura\".</p> <p></p> <p>Si el pedido de venta o los pedidos de venta fueran negativos, este proceso generar\u00eda facturas de tipo \"AR Invoice\" que tendremos que reactivar y modificar antes de dar de alta en SII:</p> <ul> <li>El tipo de documento debe cambiar a un tipo \"reverse\" como \"Reverse Sales Invoice\".</li> <li>La clave de tipo factura se debe seleccionar como \"Factura Rectificativa\", e introducir:</li> <li>el tipo de rectificativa</li> <li>y el motivo de la rectificaci\u00f3n.</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#crear-lineas-de","title":"Crear L\u00edneas de","text":"<p>Pedidos</p> <p>Las facturas de compra/venta pueden crearse desde pedidos con la opci\u00f3n \"Crear Lineas de\". Varios pedidos pueden seleccionarse para ser incluidos en una factura.</p> <p>Respecto de la informaci\u00f3n de SII, tenemos que tener en cuenta que:</p> <ul> <li>Si la factura de venta/compra que se est\u00e1 creando no tiene informaci\u00f3n en el campo \"Descripci\u00f3n SII\", se tomar\u00e1 la \"Descripci\u00f3n SII\" introducida en el primer pedido seleccionado de venta/compra.</li> <li>La fecha de operaci\u00f3n de la factura ser\u00e1 por defecto la fecha de la factura y no se modificar\u00e1 al copiar los pedidos. El usuario tendr\u00e1 que modificarla de forma manual si es diferente a la fecha de factura.</li> <li>Si el primer pedido que se copia es negativo (en el caso de las facturas de venta), la factura de venta correspondiente se crear\u00e1 como \"Factura Rectificativa\", \"Por diferencias\", con el \"Motivo de rectificaci\u00f3n\" R1, pudiendo el usuario cambiar esa informaci\u00f3n si fuera necesario, al a\u00f1adir l\u00edneas de pedido adicionales positivas o negativas.</li> <li>Las facturas de compra creadas desde pedidos positivos, se crear\u00e1n con clave tipo factura \"Factura\", con tipo de documento \"AP Invoice\".</li> <li>Las facturas de compra creadas desde pedidos negativos, se crear\u00e1n con clave tipo factura \"Factura\", y el usuario deber\u00eda crearlas con un tipo de documento reverse \"Reverse Purchase Invoice\", ya que en el caso de las facturas recibidas   no es obligatorio informar de si una factura es rectificativa o no, sea positiva o negativa.</li> </ul> <p>Albaranes (Albar\u00e1n (Cliente)/Recibo devoluci\u00f3n de material o Albar\u00e1n (Proveedor)/Devoluci\u00f3n a albar\u00e1n de Proveedor)</p> <p>Las facturas de compra/venta pueden crearse desde albaranes/devoluciones con la opci\u00f3n \"Crear Lineas de\". Varios albaranes/devoluciones pueden seleccionarse para ser incluidos en una factura.</p> <p>Respecto de la informaci\u00f3n de SII, tenemos que tener en cuenta que:</p> <ul> <li>Estos albaranes y devoluciones no incorporan informaci\u00f3n de SII, por tanto, la informaci\u00f3n de SII de la cabecera de las facturas deber\u00e1 ser rellenada por el usuario, tanto la fecha de operaci\u00f3n, como la clave de tipo factura y la descripci\u00f3n SII.</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#casos-de-uso","title":"Casos de uso","text":"<p>Dentro de este apartado se describen diferentes casos de uso tanto para las facturas de venta (LRFE) como de compra (LRFR), y su registro de \"Alta\" en SII.</p> <p>Info</p> <p>Es importante recalcar que las fechas de operaci\u00f3n que se muestran en los XML no coinciden con las fechas descritas en los casos de uso, ya que a fecha de junio no es posible enviar facturas con fechas de julio (fechas ejemplo).</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#libro-de-facturas-emitidas","title":"Libro de Facturas Emitidas","text":"<p>La informaci\u00f3n del registro de alta/modificaci\u00f3n de las facturas de venta se obtiene de la ventana \"Factura (Cliente)\", que como ya se ha explicado se ha modificado para incluir informaci\u00f3n requerida por SII (fecha operaci\u00f3n, clave tipo factura, descripci\u00f3n SII, etc).</p> <p>El registro de alta/modificaci\u00f3n en SII de las facturas de venta var\u00eda en funci\u00f3n de las siguientes variables:</p> <ul> <li>la localizaci\u00f3n del \"Tercero\" (Cliente), ya sea \u00e9ste extranjero, intracomunitario o nacional, que conlleva la sujeci\u00f3n o no al IVA y dentro de la sujeci\u00f3n, su exenci\u00f3n.</li> <li>el tipo de factura emitida, esto es \"Factura\"(F1), \"Factura Rectificativa\"(RX), \"Factura Simplificada\" (F2) o \"Asiento Resumen de Factura Simplificada\" (F4).</li> <li>la sujeci\u00f3n al RECC de la organizaci\u00f3n</li> <li>la venta a minoristas en las que se incluye \"Recargo de Equivalencia\"</li> <li>la venta a revendedores en Inversi\u00f3n del Sujeto Pasivo</li> </ul> <p>y en funci\u00f3n de que la factura emitida incluya:</p> <ul> <li>el arrendamiento de local de negocio sujeto o no a retenci\u00f3n</li> <li>una operaci\u00f3n sujeta a IPSI/IGIC</li> <li>o una transmisi\u00f3n de un bien inmueble sujeta a IVA</li> </ul> <p>as\u00ed como que la factura emitida</p> <ul> <li>se liquide con un cobro en met\u00e1lico superior a 6000.00\u20ac</li> <li>o tenga una fecha de factura (expedici\u00f3n) anterior al d\u00eda 1 de julio de 2017.</li> </ul> <p>En los apartados siguientes se analiza la informaci\u00f3n que debemos recoger en las facturas de venta de Etendo para cada caso de uso, as\u00ed como la informaci\u00f3n relevante que el XML de alta/modificaci\u00f3n del registro de dichas facturas debe incluir.</p> <p>La principal diferencia entre los XML de alta/modificaci\u00f3n de los registros de facturas de venta de cualquier tipo es que:</p> <ul> <li>Los XML de alta incluir\u00e1n un tipo de comunicaci\u00f3n   \\&lt;sii:TipoComunicacion&gt;A0</li> <li>Los XML de modificaci\u00f3n incluir\u00e1n un tipo de comunicaci\u00f3n   \\A1, junto con los datos de la factura correcta a modificar.</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#tercero-cliente-nacional","title":"Tercero (Cliente) Nacional","text":"<p>Factura emitida con IVA Nacional por entrega de bienes y prestaci\u00f3n de servicios.</p> <p>La organizaci\u00f3n F&amp;B Espa\u00f1a presta un servicio a su cliente \"Alimentos y Supermercados\", identificado con un NIF v\u00e1lido de Espa\u00f1a.</p> <p>La operaci\u00f3n se realiza el 2 de agosto de 2017. F&amp;B Espa\u00f1a emite la correspondiente factura de venta con fecha 7 de agosto de 2017.</p> <p>En este caso, y dado que el IVA se ha devengado en el periodo de agosto (fecha operaci\u00f3n 2 de agosto), el plazo l\u00edmite de expedici\u00f3n de la factura de venta y su alta en SII ser\u00eda el 15 de septiembre.</p> <p>Al expedirse la factura con fecha 7 de agosto, se est\u00e1 en plazo. Dicha factura se tendr\u00e1 que dar de alta en SII antes del d\u00eda 18 de agosto de 2017 (aplica c\u00f3mputo 8 d\u00edas, sin incluir s\u00e1bados, domingos ni festivos nacionales).</p> <p>Al expedir esta factura en Etendo, los tipos de impuestos que se seleccionan por defecto ser\u00e1n del tipo:</p> <ul> <li>Entregas IVA 10%</li> <li>Prestaci\u00f3n servicios nacional 21%</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"01\" (R\u00e9gimen General)</li> <li>Sujeta No Exenta \"S1\"</li> <li>con desglose por detalle de IVA.</li> </ul> <p></p> <p>Es importante recalcar que:</p> <ul> <li>si la factura de venta nacional incluye m\u00e1s de un bien/servicio al mismo tipo impositivo, en el XML la informaci\u00f3n se mostrar\u00e1 agrupada por dicho tipo impositivo (por ejemplo 21%)</li> <li>si la factura de venta incluye m\u00e1s de un bien/servicio con distintos tipos impositivos, en el XML la informaci\u00f3n se mostrar\u00e1 desglosada por \"Detalle de IVA\" o tipo impositivo.</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#tercero-cliente-extranjero","title":"Tercero (Cliente) extranjero","text":"<p>Factura emitida por la exportaci\u00f3n de bienes y prestaci\u00f3n de servicios en el extranjero.</p> <p>La organizaci\u00f3n F&amp;B Espa\u00f1a emite el 13 de septiembre de 2017 una factura a la Empresa Z situada en Marruecos por la venta de un equipo y el servicio de instalaci\u00f3n. La operaci\u00f3n se produjo el d\u00eda 29 de agosto. Este tercero debe identificarse en Etendo con un \"Clave NIF Pa\u00eds Residencia\", distinta de 1 (NIF) y 2 (NOI).</p> <p>En este caso, y dado que el IVA se ha devengado en el periodo de agosto (fecha operaci\u00f3n 29 de agosto), el plazo l\u00edmite de expedici\u00f3n de la factura de venta y su alta en SII ser\u00eda el 13 de septiembre.</p> <p>Al expedirse la factura con fecha 13 de septiembre, opera ficha l\u00edmite, es decir, esta factura tendr\u00e1 que enviarse a SII antes del d\u00eda 15 de septiembre.</p> <p>Al expedir esta factura en Etendo, los tipos de impuestos que se seleccionan por defecto ser\u00e1n del tipo:</p> <ul> <li>Exportaciones (%N=&gt;0%)</li> <li>Servicios prestados internacional (%N=&gt;0%)</li> </ul> <p>La entrega del bien es una operaci\u00f3n sujeta pero exenta de IVA.</p> <p>La prestaci\u00f3n del servicio es una operaci\u00f3n no sujeta por reglas de localizaci\u00f3n</p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"02\" (Exportaci\u00f3n)</li> <li>con desglose por tipo de Operaci\u00f3n</li> <li>prestaci\u00f3n del servicio \"No sujeto por reglas de localizaci\u00f3n\"</li> <li>exportaci\u00f3n del bien \"Sujeta y Exenta\", con clave de causa de exenci\u00f3n \"E2\" (Exportaci\u00f3n).</li> </ul> <p></p> <p>Es importante recalcar que:</p> <ul> <li>si la factura incluye una entrega de un bien a Canarias (tipo impositivo \"Entregas a Canarias,Ceuta y Melilla (%N=&gt;0%)\")</li> <li>y una prestaci\u00f3n de servicios que se localiza en Canarias (tipo impositivo \"Servicios a Canarias, Ceuta y Melilla (%N=&gt;0%)\")</li> </ul> <p>el XML generado incluye igualmente:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"02\" (Exportaci\u00f3n)</li> <li>con desglose por tipo de Operaci\u00f3n</li> <li>prestaci\u00f3n del servicio \"No sujeto por reglas de localizaci\u00f3n\"</li> <li>exportaci\u00f3n del bien \"Sujeta y Exenta\", con clave de causa de exenci\u00f3n \"E2\" (Exportaci\u00f3n). Esta clave se puede configurar para que aparezca por defecto en la ventana \"Causa de exenci\u00f3n\" o indicar en la cabecera de la factura.</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#tercero-cliente-intracomunitario","title":"Tercero (Cliente) Intracomunitario","text":"<p>Factura emitida con IVA Intracomunitario por entrega de bienes y prestaci\u00f3n de servicios.</p> <p>La organizaci\u00f3n F&amp;B Espa\u00f1a emite el d\u00eda 18 de agosto de 2017 una factura por la entrega de hardware (por importe de 1000.00 \u20ac) y su instalaci\u00f3n (por importe de 800.00 \u20ac) a un cliente localizado en Francia. La operaci\u00f3n se realiza el d\u00eda 10 de agosto de 2017.</p> <p>Este cliente localizado en Francia, debe estar identificado en Etendo con una \"Clave NIF Pa\u00eds Residencia\" de tipo 2 = NOI.</p> <p>En este caso, y dado que el IVA se ha devengado en el periodo de agosto (fecha operaci\u00f3n 10 de agosto), el plazo l\u00edmite de expedici\u00f3n de la factura de venta y su alta en SII ser\u00eda el 15 de septiembre.</p> <p>Al expedirse la factura con fecha 18 de agosto, se est\u00e1 en plazo. Dicha factura se tendr\u00e1 que dar de alta en SII antes del d\u00eda 30 de agosto de 2017 (aplica c\u00f3mputo 8 d\u00edas, sin incluir s\u00e1bados, domingos ni festivos nacionales).</p> <p>Al expedir esta factura en Etendo, los tipos de impuestos que se seleccionan por defecto ser\u00e1n del tipo:</p> <ul> <li>Entregas intracomunitarias (%N=&gt;0%)</li> <li>Servicios prestados UE (%N=&gt;0%)</li> </ul> <p>La entrega del bien es una operaci\u00f3n sujeta pero exenta de IVA.</p> <p>La prestaci\u00f3n del servicio es una operaci\u00f3n no sujeta por reglas de localizaci\u00f3n.</p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"01\" (R\u00e9gimen General)</li> <li>con desglose por tipo de Operaci\u00f3n</li> <li>prestaci\u00f3n del servicio \"No sujeto por reglas de localizaci\u00f3n\"</li> <li>exportaci\u00f3n del bien \"Sujeta y Exenta\", con clave de causa de exenci\u00f3n \"E5\" (Entrega intracomunitaria). Esta clave se puede configurar para que aparezca por defecto en la ventana \"Causa de exenci\u00f3n\" o indicar en la cabecera de la factura.</li> </ul> <p></p> <p>Es importante recalcar que:</p> <ul> <li>si la factura de venta intracomunitaria incluye m\u00e1s de un bien al mismo/distinto tipo impositivo, en el XML la informaci\u00f3n se mostrar\u00e1 agrupada, dentro del nodo \"Entrega/Sujeta/Exenta\".</li> <li>si la factura de venta intracomunitaria incluye m\u00e1s de un servicio al mismo o distinto tipo impositivo, en el XML la informaci\u00f3n se mostrar\u00e1 agrupada por operaci\u00f3n no sujeta por reglas de localizaci\u00f3n, dentro del nodo \"Prestaci\u00f3nServicios/NoSujeta\"</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#organizacion-acogida-al-recc","title":"Organizaci\u00f3n acogida al RECC","text":"<p>F&amp;B Espa\u00f1a se encuentra acogida al r\u00e9gimen especial de criterio de caja.</p> <p>\u00c9sta organizaci\u00f3n vende bienes y un servicio a un cliente espa\u00f1ol el d\u00eda 6 de julio de 2017, expidiendo la correspondiente factura ese mismo d\u00eda.</p> <p>Al registrar esta factura de venta en Etendo, los tipos de impuestos que se selecciona por defecto ser\u00e1n del tipo:</p> <ul> <li>Entregas IVA 10% IVA de Caja.</li> <li>Prestaci\u00f3n servicios nacional 21% IVA de Caja.</li> </ul> <p>La informaci\u00f3n de estas operaciones se suministrar\u00e1 en los plazos generales como si a las mismas no les hubiera sido de aplicaci\u00f3n el r\u00e9gimen especial, por tanto y, en este caso, al emitirse la factura en el mismo periodo en el que se produce el devengo de la operaci\u00f3n (Julio), el plazo l\u00edmite de alta en SII para la factura ser\u00eda el 18 de julio de 2017.</p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"07\" (Regimen especial del criterio de caja)</li> <li>Sujeta No Exenta \"S1\"</li> <li>con desglose por detalle de IVA.</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#cobros-de-facturas-en-regimen-especial-de-criterio-de-caja-recc","title":"Cobros de facturas en R\u00e9gimen Especial de Criterio de Caja (RECC)","text":"<p>Los cobros totales o parciales de facturas en RECC deben darse de alta en SII en el momento de producirse.</p> <p>Desde la ventana \"Monitor SII\" podemos filtrar por el n\u00famero de cobro y proceder a su env\u00edo a SII.</p> <p>Una vez dado de alta en SII, el XML generado informa de los siguientes datos del cobro, referenciados al n\u00famero de la factura de venta:</p> <ul> <li>Fecha</li> <li>Importe</li> <li>Medio</li> </ul> <p></p> <p>El Medio que en nuestro ejemplo es el 02 (Cheque), debe configurarse en el M\u00e9todo de Pago, campo \"Type\".</p> <p>Anulaci\u00f3n de cobros</p> <p>En el caso de los libros registro de cobros en RECC, no se utilizar\u00e1 el tipo de comunicaci\u00f3n A1 de \"Modificaci\u00f3n de facturas/registros por error registral\".</p> <p>La modificaci\u00f3n de un cobro en RECC ya dado de alta en SII se efectuar\u00e1 enviando el cobro que se pretende anular en negativo.</p> <p>Lo anterior implica que en Etendo, no podremos reactivar un cobro en RECC ya dado de alta en SII, si no que tendremos que revertirlo, con la opci\u00f3n \"Revertir pago\" que se muestra en la siguiente imagen:</p> <p></p> <p>Al revertir el cobro, Etendo genera un nuevo cobro por el mismo importe en negativo que tendremos que dar de alta en SII desde la ventana \"Monitor SII\", tal y como se muestra en la siguiente imagen:</p> <p></p> <p>El XML generado contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>el importe del cobro en negativo</li> <li>referido a la factura</li> </ul> <p></p> <p>Facturas en RECC no cobradas en el a\u00f1o natural (en desarrollo).</p> <p>Como parte de la funcionalidad del RECC, Etendo permite la \"liquidaci\u00f3n manual del IVA de Caja\" para aquellas facturas en RECC que no fuesen cobradas total o parcialmente antes del 31 de diciembre del a\u00f1o posterior al a\u00f1o de su expedici\u00f3n, produci\u00e9ndose as\u00ed el devengo del impuesto.</p> <p>Por tanto, las facturas en RECC de fecha 2017 que no est\u00e9n cobradas a 31-12-2018, tendr\u00e1n que enviarse a SII en dicha fecha, y con la siguiente informaci\u00f3n:</p> <ul> <li>Fecha (de cobro) = 31-12-2018 (fecha de la liquidaci\u00f3n manual del IVA)</li> <li>Importe = importe pendiente de cobro de la factura</li> <li>Medio = 03 (No se cobra/No se paga)</li> </ul> <p>Desde la ventana de \"Liquidaci\u00f3n manual del IVA de Caja\" ser\u00e1 posible enviar estas liquidaciones manuales a SII, con fecha 31 de diciembre del a\u00f1o posterior al a\u00f1o de su expedici\u00f3n (devengo del impuesto).</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#ventas-con-recargo-de-equivalencia","title":"Ventas con recargo de equivalencia","text":"<p>F&amp;B Espa\u00f1a realiza una venta a un cliente acogido al recargo de equivalencia.</p> <p>Al expedir la factura por la entrega correspondiente el tipo impositivo seleccionado ser\u00e1 del tipo \u201cEntregas IVA+RE 21+5.2%.</p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave regimen especial \"01\" (R\u00e9gimen General)</li> <li>Sujeta No Exenta \"S1\"</li> <li>con desglose por detalle de IVA de haber m\u00e1s de un tipo impositivo diferente</li> <li>con informaci\u00f3n en los nodos:</li> <li>tipo recargo de equivalencia</li> <li>cuota del recargo de equivalencia</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#operaciones-de-venta-con-isp","title":"Operaciones de venta con ISP","text":"<p>En el caso de producirse una venta por parte de F&amp;B Espa\u00f1a a un cliente revendedor espa\u00f1ol, el tipo impositivo utilizado ser\u00e1:</p> <ul> <li>Entregas sin IVA por ISP</li> </ul> <p>es decir:</p> <ul> <li>el vendedor emitir\u00e1 la factura de venta sin aplicar el IVA</li> <li>El comprador que recibe la factura sin IVA declarar\u00e1 este IVA como una Inversi\u00f3n del Sujeto Pasivo. Ver escenario de compra Inversi\u00f3n del Sujeto Pasivo.</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"01\" (Operaci\u00f3n de r\u00e9gimen general.)</li> <li>y la operaci\u00f3n dentro del bloque funcional \u201dDesglose factura\u201d, \"Sujeta - No Exenta \u2013 Con Inversi\u00f3n sujeto pasivo\u201d (S2).</li> <li>Los campos \u201ctipo impositivo\u201d \u201ccuota repercutida\u201d se informar\u00e1n con importe cero</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#arrendamiento-de-local-de-negocio","title":"Arrendamiento de local de negocio","text":"<p>F&amp;B Espa\u00f1a emite el d\u00eda 1 de septiembre de 2017 una factura por el arrendamiento de un local de negocio con una base imponible de 850 \u20ac</p> <p>F&amp;B Espa\u00f1a emite una factura con los siguientes datos:</p> <ul> <li>Fecha de expedici\u00f3n de la factura (fecha factura): 1 de septiembre de 2017</li> <li>Fecha de operaci\u00f3n : 30 de Agosto de 2017 (cubriendo el alquiler del mes de Agosto).</li> </ul> <p>En este caso, tenemos hasta el 13 de septiembre para dar de alta la factura emitida en SII, contando 8 d\u00edas naturales desde la fecha de expedici\u00f3n de la factura.</p> <p>En este caso, la fecha l\u00edmite de expedici\u00f3n de la factura y de env\u00edo a SII, ser\u00eda antes del d\u00eda 16 del mes siguiente a aquel en que se hubiera producido el devengo de la operaci\u00f3n, esto es el 15-09-2017.</p> <p>Al registrar esta factura en Etendo, los tipos de impuestos que se seleccionan por defecto ser\u00e1n del tipo:</p> <ul> <li>Arrendamiento 21% (cobros)</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave regimen especial \"12\" (Operaciones de arrendamiento de local de negocio no sujetos a retenci\u00f3n)</li> <li>Sujeta No Exenta \"S1\"</li> <li>con el detalle del Inmueble, que se obtiene de la configuraci\u00f3n realizada para el \"local arrendado\" en la ventana \"Producto\" :</li> <li>Situaci\u00f3n del inmueble</li> <li>Referencia catastral</li> </ul> <p></p> <p>En el caso de que el arrendamiento incluya retenci\u00f3n, el tipo impositivo a utilizar ser\u00eda del tipo \"Arrendamientos 21% -19%R (cobros)\" y la informaci\u00f3n del XML la siguiente:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"11\" (Operaciones de arrendamiento de local de negocio sujetas a retenci\u00f3n)</li> <li>Sujeta No Exenta \"S1\"</li> </ul> <p></p> <p>En el caso de locales arrendados sujetos a retenci\u00f3n, no es necesario especificar la informaci\u00f3n del inmueble, por incluirse \u00e9sta en el modelo de retenciones (Modelo 180) correspondiente.</p> <p>Por \u00faltimo recalcar que:</p> <ul> <li>Si una misma factura incluye m\u00e1s de un arrendamiento con y sin retenci\u00f3n, se dar\u00e1 de alta en SII con la clave \"13\" e informaci\u00f3n (referencia catastral/situaci\u00f3n del inmueble) del local(es) que no est\u00e9n sujetos a retenci\u00f3n.</li> <li>Si una factura de arrendamiento est\u00e1 sujeta al r\u00e9gimen especial del criterio de caja, prevalecer\u00e1 la clave 07 de Operaci\u00f3n Sujeta a RECC.</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#operacion-de-venta-sujeta-a-ipsiigic","title":"Operaci\u00f3n de venta sujeta a IPSI/IGIC","text":"<p>F&amp;B Espa\u00f1a con domicilio fiscal en Madrid, adquiere una m\u00e1quina en Canarias y la vende en dicho territorio junto con un servicio de instalaci\u00f3n de la misma, que tambi\u00e9n adquiere/presta en Canarias.</p> <p>La operaci\u00f3n se realiza el 29 de agosto. F&amp;B Espa\u00f1a emite la factura el d\u00eda 13 de septiembre.</p> <p>En este caso y dado que el IVA se ha devengado en agosto, el plazo l\u00edmite de expedici\u00f3n de la factura de venta y su alta en SII ser\u00eda el 15 de septiembre (opera fecha l\u00edmite).</p> <p>Al registrar esta factura en Etendo, los tipos de impuestos que se deben seleccionar son del tipo:</p> <ul> <li>Entregas IGIC 13,5%</li> <li>Servicios Prestados en Canarias 13.5%</li> </ul> <p>Tanto la entrega de bienes como la prestaci\u00f3n del servicio se adquieren y localizan en Canarias, por lo que no es aplicable ning\u00fan tipo de IVA.</p> <p>Esta operaci\u00f3n est\u00e1 sujeta a IGIC y por tanto, debe registrarse en SII como una operaci\u00f3n no sujeta por reglas de localizaci\u00f3n (tanto en lo relativo a bienes como servicios).</p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"08\" (Operaciones sujetas a IPSI/IGIC)</li> <li>y todo el importe de la operaci\u00f3n (bases imponibles) tanto de bienes como servicios, en el nodo \"Operaci\u00f3n no sujeta por reglas de localizaci\u00f3n\"</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#transmision-de-bienes-inmuebles","title":"Transmisi\u00f3n de bienes inmuebles","text":"<p>F&amp;B Espa\u00f1a expide el d\u00eda 1 de septiembre de 2017 una factura por la venta de un bien inmueble en Madrid por 150.000 \u20ac</p> <p>La operaci\u00f3n se realiza el 1 de septiembre, expidiendo factura el d\u00eda 5 de septiembre.</p> <p>En este caso, la fecha l\u00edmite de alta en SII ser\u00eda de 8 d\u00edas (h\u00e1biles) contando desde la fecha de expedici\u00f3n de la factura, esto es el 15 de septiembre de 2017.</p> <p>Al registrar esta factura en Etendo, los tipos de impuestos que se seleccionan por defecto ser\u00e1n del tipo:</p> <ul> <li>Transmisi\u00f3n de bienes inmuebles 21%</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con un importe por transmisi\u00f3n de bienes inmuebles de</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#cobros-en-metalico","title":"Cobros en met\u00e1lico","text":"<p>La informaci\u00f3n correspondiente a los importes superiores a 6.000 euros percibidos en met\u00e1lico durante el ejercicio de una misma persona o entidad, deber\u00e1 suministrarse con car\u00e1cter anual, durante los primeros 30 d\u00edas del mes de enero siguiente al ejercicio al que se refieran.</p> <p>En Etendo se ha creado una nueva ventana denominada \"SII Cobros en met\u00e1lico\" que permite gestionar la generaci\u00f3n de dichos cobros y su posterior \"alta\" o \"Modificaci\u00f3n\" en SII.</p> <p>Alta Cobros en Met\u00e1lico</p> <p>En la ventana \"SII Cobros en met\u00e1lico\" se puede introducir la \"Organizaci\u00f3n\" y el Ejercicio (por ejemplo 2021), para el cual se necesita suministrar este tipo de informaci\u00f3n de car\u00e1cter anual.</p> <p>Una vez introducida dicha informaci\u00f3n, el bot\u00f3n \"Actualizar Cobros Met\u00e1licos SII\" lanza un proceso que tiene en cuenta:</p> <ul> <li>todas las transacciones del tipo \u201cBP Deposit\u201d o \u201cCobro\u201d con estado \"Cobro depositado\" o \"Conciliado\", realizadas en cuentas bancarias de tipo \u201cCaja\u201d con \"fecha de transacci\u00f3n\u201d durante el a\u00f1o natural especificado (Ejercicio).</li> <li>respecto de operaciones/transacciones bancarias relacionadas con Facturas y Conceptos Contables, asociadas a un \u201cTercero\u201d identificado con un Tax ID (por ejemplo NIF)</li> <li>y que, agrupadas por dicho tercero, superen el importe de 6.000,00 \u20ac</li> </ul> <p></p> <p>Una vez generado el cobro/cobros, se puede realizar su \"Alta en SII\". Una vez dado de alta en SII, los campos \"Alta en SII\", \"Estado registro SII\", \"Importe\", \"Importe enviado\" e \"Importe enviado\" se actualizar\u00e1n.</p> <p>Si se produjera un error al dar de alta en SII, se mostrar\u00eda el c\u00f3digo de error y el mensaje del error para su subsanaci\u00f3n.</p> <p>Modificaci\u00f3n Cobros en Met\u00e1lico</p> <p>La ventana \"SII Cobros met\u00e1lico\" permite adem\u00e1s, controlar incidencias que se podr\u00edan producir con posterioridad al alta del cobro(s). Incidencias que puedan deberse a la incorporaci\u00f3n de nuevos cobros, modificaci\u00f3n/eliminaci\u00f3n de cobros existentes para un tercero.</p> <p>Para ello, se diferencian los siguientes campos:</p> <ul> <li>Importe: corresponde a la suma total de los cobros depositados en una cuenta financiera de tipo caja, que supere la cantidad de 6.000,00 \u20ac, respecto de un tercero</li> <li>Importe enviado a SII</li> <li>Importe pendiente de env\u00edo a SII</li> <li>Totalmente enviado: tomar\u00e1 los valores, \"S\u00ed\" cuando no existan diferencias entre el campo \"importe\" e \"importe enviado\"; \"No\" cuando un aumento/disminuci\u00f3n del importe provoque una diferencia al ya enviado.</li> </ul> <p>Por ejemplo para un tercero determinado se realizaron varias facturas durante el a\u00f1o 2021 que se cobran en met\u00e1lico. El importe total de dichas facturas y, por tanto, el importe recibido en met\u00e1lico de este tercero asciende a 151,000.00. Tanto las facturas como el cobro en met\u00e1lico se han dado de alta en SII.</p> <p></p> <p>Con posterioridad se realiza una nueva factura por importe de 1,800.00 \u20ac, que tambi\u00e9n se cobra en efectivo, y que por tanto debe darse de alta en SII.</p> <p>En la ventana \"SII Cobros en Met\u00e1lico\", tendremos que:</p> <ul> <li>actualizar la informaci\u00f3n para que se refleje el nuevo cobro creado como \"Importe pendiente\" de alta en SII, tal y como se muestra en la imagen siguiente:</li> </ul> <p></p> <ul> <li>y activar el check \"Modificada error registral\" en el cobro.</li> </ul> <p>Una vez hecho esto se podr\u00e1 proceder a la modificaci\u00f3n en SII de dicho cobro para el tercero, a trav\u00e9s del bot\u00f3n \"Modificaci\u00f3n en SII\".</p> <p></p> <p>Es importante recalcar que si de un tercero se recibiera un cobro en met\u00e1lico con fecha del ejercicio a declarar (por ejemplo 2017), respecto de una factura de fecha anterior (por ejemplo 2016), dicho cobro tambi\u00e9n se incluir\u00e1 en la selecci\u00f3n, para su alta en SII, siempre que el importe total recibido/cobrado de ese tercero supere los 6000.00 \u20ac.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#factura-emitida-con-fecha-de-expedicion-anterior-al-01-07-2017","title":"Factura emitida con fecha de expedici\u00f3n anterior al 01-07-2017","text":"<p>Respecto de las facturas emitidas con fecha de expedici\u00f3n anterior al 01-01-2017, existe tambi\u00e9n la obligaci\u00f3n de su alta en SII, pero con un esquema XML con las siguientes particularidades:</p> <ul> <li>Clave de r\u00e9gimen especial = 16 (Primer semestre 2017).</li> <li>Descripci\u00f3n de la operaci\u00f3n: \u201cRegistro del Primer semestre 2017\u201d.</li> </ul> <p>Y, en el caso de las facturas emitidas, con independencia de su calificaci\u00f3n cuando son \"No Exentas\", se informar\u00e1n bajo la siguiente clave:</p> <ul> <li>Tipo no exenta: S1.</li> </ul> <p>Lo anterior aplica excepto para sujetos pasivos en REDEME que ya las habr\u00e1n enviado en el Modelo 340 correspondiente.</p> <p>En Etendo, al dar de alta en SII una factura con fecha anterior al 01-07-2017, comprobaremos que el esquema XML es del tipo siguiente:</p> <p></p> <p>En Etendo se ha desarrollado un proceso \"background\" que adapta las facturas de venta del primer semestre para que puedan darse de alta en SII.</p> <p>Este proceso se denomina \"Proceso de adaptaci\u00f3n a SII de Facturas de Venta del primer semestre de 2017\" y configura las facturas de venta del primer semestre, de la siguiente forma:</p> <ul> <li>como \"Factura\", es decir, con la \"Clave de tipo Factura\" = F1.</li> <li>las facturas de venta positivas, con/sin pedido relacionado, y tercero con NIF.</li> <li>como \"Factura Rectificativa por Diferencias y error fundado\", es decir, con la \"Clave de tipo Factura\" = R1</li> <li>las facturas de venta negativas, con/sin pedido relacionado, y tercero con NIF.</li> <li>como \"Factura Simplificada\", es decir, con \"Clave tipo Factura\" = F2</li> <li>las facturas positivas o negativas sin/con un ticket/pedido relacionado y tercero sin NIF.</li> <li>como \"Asiento Resumen de Factura Simplificada\", es decir, con \"Clave tipo Factura\" = F4</li> <li>las facturas positivas o negativas con m\u00e1s de un ticket/pedido relacionado, y tercero sin NIF.</li> <li>a\u00f1ade la descripci\u00f3n tipo \"Registro del Primer semestre\"</li> <li>e indica como \"Fecha de operaci\u00f3n\" la fecha de la factura tal y como requiere la AEAT.</li> </ul> <p>Info</p> <p>El usuario siempre podr\u00e1 revisar la configuraci\u00f3n otorgada a dichas facturas antes de darlas de alta en SII.</p> <p>La ventana \"Monitor SII\" incluye tambi\u00e9n una pesta\u00f1a \"Facturas de Venta Primer Semestre 2017\" desde d\u00f3nde se pueden gestionar est\u00e1s facturas, una vez configuradas de forma correcta por el proceso.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#factura-emitidas-rectificativa-fuera-de-plazo","title":"Factura emitidas rectificativa fuera de plazo","text":"<p>Factura emitida rectificativa por sustituci\u00f3n en un periodo posterior al de presentaci\u00f3n de la declaraci\u00f3n de IVA - Modelo 303, de la factura original.</p> <p>La organizaci\u00f3n F&amp;B Espa\u00f1a realiza una entrega de bienes por valor de 2420 \u20ac (IVA incluido) La operaci\u00f3n se realiza el 2 de enero de 2018. F&amp;B Espa\u00f1a emite la correspondiente factura de venta con fecha 2 de enero de 2022.</p> <p>En este caso, y dado que el IVA se ha devengado en el periodo de enero (fecha operaci\u00f3n 2 de enero), el plazo l\u00edmite de expedici\u00f3n de la factura de venta y su alta en SII ser\u00eda el 15 de febrero.</p> <p>Una vez completada la factura, se procede a su Alta en SII el d\u00eda 2 de enero.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <p>Clave tipo factura = F1-Factura</p> <p>Importe total = 2420</p> <p>Fecha Factura: 02-01-2022</p> <p>Fecha Contable: 02-01-2022</p> <p>Fecha de Operaci\u00f3n: 02-01-2022</p> <p>Periodo SII: 01 - Enero</p> <p>Ejercicio SII: 2022</p> <p></p> <p>El d\u00eda 1 de marzo, se produce una devoluci\u00f3n por mal estado del 20% de la mercanc\u00eda con un valor de 484 \u20ac (IVA incluido) por lo que F&amp;B Espa\u00f1a procede a la anulaci\u00f3n de la factura original y emisi\u00f3n de una nueva con el importe final correcto.</p> <p>Se produce una anulaci\u00f3n de la factura original (ya dada de alta en SII e incorporada a la declaraci\u00f3n de IVA del mes de enero) a trav\u00e9s de la opci\u00f3n \"Reactivar-Anular\" de Etendo. Esta acci\u00f3n crear\u00e1 una factura del tipo \"Reverse\" con los siguientes datos:</p> <p>Clave Tipo Factura = F1-Factura</p> <p>Importe total = -2420</p> <p>Tipo de documento = Reverse Sales Invoice</p> <p>Fecha Factura: 01-03-2018</p> <p>Fecha Contable: 01-03-2018</p> <p>Fecha de Operaci\u00f3n: 02-01-2018 (fecha de operaci\u00f3n de la factura original)</p> <p></p> <p>Al dar de Alta esa factura de anulaci\u00f3n en SII, el fichero XML registrar\u00e1 de forma autom\u00e1tica la siguiente informaci\u00f3n:</p> <p>Periodo SII: 07 - Julio</p> <p>Ejercicio SII: 2022</p> <p>El periodo asignado en SII no se corresponde con la fecha de operaci\u00f3n, si no con la Fecha Factura (julio), por lo que pasar\u00e1 a formar parte de la liquidaci\u00f3n del impuesto del mes de julio.</p> <p></p> <p>Posteriormente, se crea la nueva factura con los importes correctos y con los siguientes datos:</p> <p>Tipo de documento = AR Invoice (no reverse)</p> <p>Clave tipo factura = Factura Rectificativa</p> <p>Tipo Rectificativa = Por Sustituci\u00f3n</p> <p>Motivo de la rectificaci\u00f3n = R1...R4, a seleccionar por el usuario seg\u00fan el motivo de la rectificaci\u00f3n.</p> <p>Fecha Factura: 01-03-2018</p> <p>Fecha Contable: 01-03-2018</p> <p>Fecha de Operaci\u00f3n: 02-01-2018 (fecha de operaci\u00f3n de la factura original que tendr\u00e1 que seleccionar el usuario de forma manual)</p> <p></p> <p>Al dar de Alta esa factura de anulaci\u00f3n en SII, el fichero XML registrar\u00e1 de forma autom\u00e1tica la siguiente informaci\u00f3n:</p> <p>Periodo SII: 07 - Julio</p> <p>Ejercicio SII: 2022</p> <p></p> <p>Al igual que la anterior factura que anula el importe de la original, el periodo asignado en SII, no se corresponde con la fecha de operaci\u00f3n si no con la Fecha Factura (Julio), por lo que pasar\u00e1 a formar parte de la liquidaci\u00f3n del impuesto del mes de julio.</p> <p>Si la emisi\u00f3n de una factura rectificativa, ya sea por diferencias o por sustituci\u00f3n, se produce en el mismo per\u00edodo del devengo de la operaci\u00f3n. Es decir, la emisi\u00f3n de las distintas facturas (Factura original, anulaci\u00f3n y rectificativa con motivos R1,R2,R3 Y R4) se emiten en un mismo mes, podr\u00e1n liquidarse en la declaraci\u00f3n del impuesto del mismo periodo.</p> <p>En el resto de casos en los que la fecha de operaci\u00f3n de la factura original sea distinta a la emisi\u00f3n de las facturas correctivas posteriores, el periodo de liquidaci\u00f3n ser\u00e1 distinto.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#libro-de-facturas-recibidas","title":"Libro de Facturas Recibidas","text":"<p>La informaci\u00f3n del registro de alta de las facturas de compra se obtiene de la ventana \"Factura (Proveedor)\".</p> <p>En todo caso, ser\u00e1 obligatorio introducir el n\u00famero de factura del proveedor en el campo \"Referencia del Proveedor\", con el fin de identificar y cruzar la informaci\u00f3n de las facturas.</p> <p>El registro de alta en SII de las facturas de compra var\u00edan en funci\u00f3n de las siguientes variables:</p> <ul> <li>la localizaci\u00f3n del \"Tercero\" (Proveedor), ya sea \u00e9ste extranjero, intracomunitario o nacional</li> <li>el tipo de factura recibida, esto es \"Factura\", \"Factura de Importaci\u00f3n (con DUA)\", \"Justificante Contable\".</li> <li>la sujeci\u00f3n al RECC de la operaci\u00f3n reflejada en la factura de compra</li> <li>la sujeci\u00f3n al RECC de la organizaci\u00f3n que recibe (registra) la factura de compra.</li> <li>que la factura de compra incluya operaciones por las que los empresarios satisfacen compensaciones en las adquisiciones a personas acogidas al REAGYP.</li> </ul> <p>y en funci\u00f3n de que la factura recibida incluya:</p> <ul> <li>una operaci\u00f3n sujeta a IPSI/IGIC</li> <li>un arrendamiento de local de negocio sujeta a IVA</li> <li>o gastos de personal que son en todo caso no declarables y, por tanto, no deben darse de alta en SII</li> </ul> <p>as\u00ed como que la factura recibida refleje:</p> <ul> <li>una \"Inversi\u00f3n del Sujeto Pasivo\"</li> <li>o su fecha contable sea anterior al 1 de Julio de 2017</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#tercero-proveedor-nacional","title":"Tercero (Proveedor) Nacional","text":"<p>Factura recibida con IVA Nacional por la adquisici\u00f3n de un bien y la prestaci\u00f3n de un servicio.</p> <p>La organizaci\u00f3n F&amp;B Espa\u00f1a recibe una factura de un proveedor nacional, que incluye tanto bienes como servicios.</p> <p>La operaci\u00f3n se realiza el 2 de agosto de 2017 y la factura se expide con fecha 7 de agosto de 2017.</p> <p>F&amp;B Espa\u00f1a recibe la factura el d\u00eda 9 de agosto de 2017 y decide consignar y deducir la cuota soportada en el modelo 303 del mes de agosto, procediendo a su registro contable el 13 de septiembre.</p> <p>El plazo para remitir el registro de esa factura a trav\u00e9s del SII finaliza el 15 de septiembre, en este caso (antes del d\u00eda 16 del mes siguiente al que se devenga la operaci\u00f3n).</p> <p>Al registrar esta factura en Etendo, los tipos de impuestos que se seleccionan por defecto ser\u00e1n del tipo:</p> <ul> <li>Adquisiciones IVA 21%</li> <li>Prestaci\u00f3n servicios nacional 21%</li> </ul> <p>Es importante registrar:</p> <ul> <li>como fecha de factura de compra, la fecha de expedici\u00f3n de la factura de venta</li> <li>como referencia de proveedor, el n\u00famero de factura de la factura de venta</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave regimen especial \"01\" (R\u00e9gimen General)</li> <li>con informaci\u00f3n sobre la cuota deducible y la fecha contable.</li> <li>con desglose factura y detalle de IVA, de existir tipos de IVA diferentes.</li> </ul> <p>Despu\u00e9s de su alta en SII, es posible contabilizar y descontabilizar la factura de compra, si fuera necesario, pero no ser\u00e1 posible cambiar la fecha contable de la factura por ser este campo obligatorio respecto de las facturas de compra.</p> <p></p> <p>Es importante recalcar que:</p> <ul> <li>si la factura de compra nacional incluye m\u00e1s de un bien/servicio al mismo/distinto tipo impositivo, en el XML la informaci\u00f3n se mostrar\u00e1 agrupada por tipo impositivo, dentro del nodo \"DesgloseIVA/DetalleIVA\"</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#tercero-proveedor-extranjero","title":"Tercero (Proveedor) extranjero","text":"","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#caso-1-factura-recibida-de-un-proveedor-extranjero-antes-del-dua","title":"Caso 1 - Factura recibida de un proveedor extranjero (antes del DUA)","text":"<p>F&amp;B Espa\u00f1a recibe una factura de compra de un proveedor extranjero, localizado en USA, por la adquisici\u00f3n de unos bienes. Todav\u00eda no se ha recibido el DUA ni la factura del transitario que realizar\u00e1 la importaci\u00f3n de los bienes.</p> <p>En este caso, la factura del proveedor extranjero se debe registrar con la siguiente informaci\u00f3n dentro del grupo de campos \"AEAT SII\":</p> <ul> <li>Fecha de la operaci\u00f3n si es diferente a la fecha de la factura</li> <li>Clave tipo factura como \"Justificante Contable\" (F6)</li> <li>Descripci\u00f3n SII que corresponda</li> </ul> <p>Al registrar esta factura, el impuesto seleccionado ser\u00e1 del tipo:</p> <ul> <li>Importaciones 21%=0%</li> </ul> <p>Podemos indicar el tipo de cambio de la divisa (USD) a EUR en la factura, pesta\u00f1a \"Tipo de cambio\", ya que todas las operaciones que se registren en SII deber\u00e1n estar en euros. De no indicarse tipo de cambio en esta pesta\u00f1a se tomar\u00e1 el tipo de cambio configurado en la ventana \"Rangos de conversi\u00f3n\" para la fecha de la factura.</p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F6\"</li> <li>con clave r\u00e9gimen especial \"13\" (Factura correspondiente a una importaci\u00f3n (informada sin asociar a un DUA).)</li> <li>e informaci\u00f3n en euros de la base imponible de la factura del proveedor extranjero.</li> </ul> <p></p> <p>Es importante recalcar que habiendo registrado un DUA (Caso 3 siguiente) no es necesario registrar la factura del proveedor extranjero.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#caso-2-factura-de-transitario-un-dua","title":"Caso 2 - Factura de transitario (un DUA)","text":"<p>F&amp;B Espa\u00f1a recibe una factura de transitario, junto con el correspondiente DUA, y referenciada a la aduana de destino de la mercanc\u00eda, con posterioridad recibe la factura del proveedor extranjero.</p> <p>La forma de registrar en Etendo la factura de transitario que incluye el IVA de importaci\u00f3n ser\u00e1 la siguiente:</p> <ul> <li>en la ventana \"Factura (Proveedor)\" creamos una nueva factura de compra, y seleccionamos el \"Transitario\" en el campo \"Tercero\".   Introducimos en el campo \"Referencia del Proveedor\", el n\u00famero de factura del transitario.</li> <li>en el grupo de campos \"AEAT SII\" introducimos la siguiente informaci\u00f3n:</li> <li>fecha de operaci\u00f3n, si es distinta de la fecha factura del transitario</li> <li>clave tipo factura como \"Importaci\u00f3n (DUA)\" (F5)</li> <li>seleccionamos la \"Descripci\u00f3n SII\" correspondiente</li> <li>en el grupo de campos \"Import (DUA)\" introducimos:</li> <li>el n\u00famero de DUA</li> <li>la fecha de admisi\u00f3n del DUA, que aparece en el DUA en la secci\u00f3n \"Control por la aduana de destino\"</li> <li>en la pesta\u00f1a \"L\u00edneas\" introducimos la prestaci\u00f3n de servicios del transitario sujeta y no exenta, en euros, con una base imponible de 500 \u20ac, por ejemplo; as\u00ed como el resto de l\u00edneas de la factura del transitario por conceptos exentos de IVA del tipo \"seguro\" o \"flete\".</li> <li>en la pesta\u00f1a \"Impuestos\" creamos una nueva l\u00ednea de impuestos con el tipo de impuesto \"Importaciones 21%\". En el campo \"Base Imponible\" introducimos la base imponible de importaci\u00f3n, reflejada en la casilla 47 del DUA.</li> </ul> <p></p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>el alta/registro del DUA con</li> <li>la clave tipo de factura \"F5\"</li> <li>el n\u00famero de DUA que se ver\u00e1 reflejado en la etiqueta del XML \\ <li>la fecha de admisi\u00f3n del DUA como fecha de registro contable, que se ver\u00e1 reflejado en la etiqueta del XML \\ <li>F&amp;B Espa\u00f1a como \"contraparte\" de la operaci\u00f3n (Importador)</li> <li>la clave de r\u00e9gimen especial 01 (R\u00e9gimen General)</li> <li>y los importes correspondientes a la base imponible, tipo y cuota del impuesto (cuota deducible) en euros</li> <p></p> <ul> <li>el alta/registro de la factura del proveedor (Transitario) con</li> <li>la clave tipo de factura \"F1\"</li> <li>el n\u00famero de referencia/factura del transitario</li> <li>la fecha contable de la factura del transitario como fecha de registro contable</li> <li>el \"Transitario\" como contrapartida de la operaci\u00f3n</li> <li>la clave de r\u00e9gimen especial 01 (R\u00e9gimen General)</li> <li>y los importes correspondientes a la base imponible, tipo y cuota del impuesto (cuota deducible) en euros, por la prestaci\u00f3n de servicios sujeta y no exenta.</li> </ul> <p></p> <p>Respecto de la factura del proveedor extranjero, \u00e9sta se deber\u00e1 registrar tambi\u00e9n en la ventana \"Factura Proveedor\", en la divisa que corresponda y, con la clave de tipo de factura \"Factura\" (F1).</p> <p>Al registrar este tipo de facturas en Etendo, el rango de impuestos utilizado ser\u00e1 del tipo \"Importaciones 21%=&gt;0%\", dado que dichas facturas de proveedor extranjero no incluyen IVA.</p> <p>La AEAT no obliga a dar de alta en SII este tipo de facturas de proveedor extranjero, siempre que se reciban con posterioridad al DUA correspondiente, pero es posible enviarlas, en cuyo caso se dar\u00e1n de alta con la siguiente informaci\u00f3n:</p> <ul> <li>clave tipo de factura \"F1\"</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#caso-3-factura-de-transitario-varios-duas","title":"Caso 3 - Factura de transitario (Varios DUAS)","text":"<p>F&amp;B Espa\u00f1a recibe una factura de transitario, acompa\u00f1ada de tres DUAS que corresponden a diferentes partidas de mercanc\u00eda importadas. Con posterioridad, recibe la factura del proveedor extranjero.</p> <p>La forma de registrar en Etendo la factura de transitario que incluye varios documentos referentes al IVA liquidado en la aduana de destino es la siguiente:</p> <ul> <li>en la ventana \"Factura (Proveedor)\" creamos una nueva factura de compra, y seleccionamos el \"Transitario\" en el campo \"Tercero\".   Introducimos en el campo \"Referencia del Proveedor\", el n\u00famero de factura del transitario.</li> <li>en el grupo de campos \"AEAT SII\" introducimos la siguiente informaci\u00f3n:</li> <li>fecha de operaci\u00f3n, si es distinta de la fecha factura del transitario</li> <li>clave tipo factura como \"Importaci\u00f3n (DUA)\" (F5)</li> <li>seleccionamos la \"Descripci\u00f3n SII\" correspondiente</li> <li>en este escenario no rellenamos los campos \"Import (DUA)\" de la cabecera, ya que los datos n\u00famero de DUA y fecha de admisi\u00f3n del DUA los vamos a asociar a la l\u00ednea de impuesto correspondiente al IVA liquidado en aduana.   Para ello activamos el check \"M\u00faltiple DUA\" que va a permitir introducir l\u00edneas sin haber informado los campos anteriores.</li> <li>en la pesta\u00f1a \"Lineas\" introducimos la prestaci\u00f3n de servicios del transitario sujeta y no exenta, en euros, con una base imponible de 700 \u20ac, por ejemplo; as\u00ed como el resto de l\u00edneas de la factura del transitario por conceptos exentos de IVA del tipo \"seguro\" o \"flete\".</li> <li>en la pesta\u00f1a \"Impuestos\" creamos tantas l\u00edneas de impuestos como DUAS, con el tipo de impuesto \"Importaciones 21%\" o \"Importaciones 10%\" con la siguiente informaci\u00f3n:</li> <li>en el campo \"Base Imponible\" introducimos la base imponible de importaci\u00f3n, reflejada en la casilla 47 del DUA.</li> <li>el n\u00famero de DUA</li> <li>la fecha de admisi\u00f3n del DUA, que aparece en el DUA en la secci\u00f3n \"Control por la aduana de destino\"</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#caso-4-iva-de-importacion-diferido-solo-un-dua","title":"Caso 4 - IVA de importaci\u00f3n Diferido (s\u00f3lo un DUA)","text":"<p>El diferimiento del IVA de importaci\u00f3n permite que las empresas importadoras puedan incluir las cuotas de IVA devengadas en las importaciones en el Modelo 303 mensual de autoliquidaci\u00f3n del IVA, como un par\u00e1metro de entrada, sin necesidad de anticipar el ingreso de dicho IVA en la aduana. La cuota de IVA se liquida en la aduana pero su pago se pospone al momento de liquidar el impuesto.</p> <p>Hacienda pone a disposici\u00f3n de las empresas importadoras un servicio de Agencia Tributaria: C\u00f3mo consultar el IVA importaci\u00f3n con diferimiento de pago para su liquidaci\u00f3n en el Modelo 303 mensual correspondiente.</p> <p>En estos casos, no se registra factura de transitario, pero si DUA y, por tanto, el DUA, esto es la deducibilidad del IVA de importaci\u00f3n soportado, debe registrarse en Etendo junto a la factura del proveedor extranjero de la siguiente forma:</p> <ul> <li>en el grupo de campos \"AEAT SII\" introducimos la siguiente informaci\u00f3n:</li> <li>fecha de operaci\u00f3n, si es distinta de la fecha factura del transitario</li> <li>clave tipo factura como \"Importaci\u00f3n (DUA)\" (F5)</li> <li>seleccionamos la \"Descripci\u00f3n maestro SII\" correspondiente</li> <li>en el grupo de campos \"Import (DUA)\" introducimos:</li> <li>el n\u00famero de DUA</li> <li>la fecha de admisi\u00f3n del DUA, que aparece en el DUA en la secci\u00f3n \"Control por la aduana de destino\".</li> <li>en la pesta\u00f1a \"L\u00edneas\" introducimos en euros los conceptos incluidos en la factura del proveedor extranjero relacionados con tipos impositivos del tipo \"Importaciones 21%=0%\".</li> </ul> <p>Finalmente, el usuario de forma manual, deber\u00e1 realizar los cambios que se indican a continuaci\u00f3n, en la pesta\u00f1a \"Impuestos\":</p> <ul> <li>creaci\u00f3n de una nueva l\u00ednea relacionada con el impuesto \"Importaciones 21%\", con el fin de reflejar la base imponible (casilla 47 del DUA) y, por tanto, el IVA de importaci\u00f3n correspondiente.</li> <li>creaci\u00f3n de una nueva l\u00ednea relacionada con el impuesto \"Importaciones 21%=0%\", con una base imponible y cuota negativa del mismo importe que la anterior, para evitar duplicar la base imponible.</li> </ul> <p>Hay que tener en cuenta que el importe del DUA vendr\u00e1 indicado en euros. No es posible mezclar l\u00edneas en diferentes divisas en la misma factura, por lo que al introducir la factura de proveedor extranjero junto al DUA deber\u00e1 existir una \u00fanica divisa en euros.</p> <p></p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 \u00fanicamente la informaci\u00f3n de la parte correspondiente al DUA con la siguiente estructura:</p> <p></p> <p>Al introducir la l\u00ednea de impuestos del tipo \"Importaciones 21\" referido al IVA de importaci\u00f3n soportado, no hay que volver a introducir esta l\u00ednea en la factura del transitario si en su caso la hubiera.</p> <p>En tal caso, al registrar la factura del transitario independientemente s\u00f3lo habr\u00eda que indicar las l\u00edneas correspondientes a dicha factura indicando como Clave tipo factura = Factura (F1)</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#tercero-proveedor-intracomunitario","title":"Tercero (Proveedor) Intracomunitario","text":"<p>Factura recibida por una adquisici\u00f3n intracomunitaria de bienes y servicios.</p> <p>La empresa F&amp;B Espa\u00f1a compra una partida de mercanc\u00eda de un pa\u00eds comunitario.</p> <p>Dicha compra incluye tambi\u00e9n la prestaci\u00f3n de un servicio que presta el mismo proveedor intracomunitario. Dicho servicio se localiza en TAI (Territorio de aplicaci\u00f3n del impuesto).</p> <p>La empresa F&amp;B Espa\u00f1a recibe la factura de fecha 27-11-2017, con fecha 30-11-2017, registrando dicha operaci\u00f3n contablemente ese mismo d\u00eda. La operaci\u00f3n se realiz\u00f3 con fecha 15-10-2017.</p> <p>En este caso al ser la fecha contable de la factura posterior al 16-11-2017, habi\u00e9ndose realizado \u00e9sta en octubre, se incluir\u00e1 en el Modelo 303 de noviembre.</p> <p>La fecha l\u00edmite de registro y env\u00edo al SII es el 14 de diciembre, contando a partir del registro contable de la factura (30-11-2017) y teniendo en cuenta los festivos nacionales (6 y 8 de diciembre).</p> <p>Al registrar esta factura en Etendo, los tipos de impuestos que se seleccionan por defecto ser\u00e1n del tipo:</p> <ul> <li>Adquisiciones intracomunitarias 21% (para la adquisici\u00f3n de la mercanc\u00eda)</li> <li>Inversi\u00f3n Sujeto Pasivo UE 21% (para la prestaci\u00f3n del servicio y localizaci\u00f3n del mismo en Espa\u00f1a).</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"09\" (Adquisiciones Intracomunitarias de bienes y prestaciones de servicios)</li> </ul> <p></p> <p>Es importante recalcar que:</p> <ul> <li>si la factura de compra intracomunitaria incluye m\u00e1s de un bien al mismo/distinto tipo impositivo, en el XML la informaci\u00f3n se mostrar\u00e1 agrupada por tipo impositivo, dentro del nodo \"DesgloseIVA/DetalleIVA\"</li> <li>si la factura de compra intracomunitaria incluye m\u00e1s de un servicio al mismo/distingo tipo impositivo, en el XML la informaci\u00f3n se mostrar\u00e1 agrupada por tipo impositivo, dentro del nodo \"Inversi\u00f3nSujetoPasivo/DetalleIVA\"</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#organizacionoperacion-acogida-al-recc","title":"Organizaci\u00f3n/Operaci\u00f3n acogida al RECC","text":"<p>F&amp;B Espa\u00f1a se encuentra acogida al r\u00e9gimen especial de criterio de caja, o bien se ve afectada por este r\u00e9gimen al recibir facturas de compra de alg\u00fan proveedor nacional acogido al criterio de caja.</p> <p>Al registrar este tipo de factura de compra en Etendo, los tipos de impuestos que se selecciona por defecto ser\u00e1n del tipo:</p> <ul> <li>Adquisiciones IVA 10% IVA de Caja.</li> <li>Prestaci\u00f3n servicios nacional 21% IVA de Caja.</li> </ul> <p>Al igual que en las facturas de venta con IVA de Caja, la informaci\u00f3n de estas operaciones se suministrar\u00e1 en los plazos generales como si a las mismas no les hubiera sido de aplicaci\u00f3n el r\u00e9gimen especial.</p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"07\" (R\u00e9gimen especial del criterio de caja)</li> </ul> <p></p> <p>Es importante recalcar que:</p> <ul> <li>si la factura de compra nacional incluye m\u00e1s de un bien/servicio al mismo/distinto tipo impositivo de IVA de Caja, en el XML la informaci\u00f3n se mostrar\u00e1 agrupada por tipo impositivo, dentro del nodo \"DesgloseIVA/DetalleIVA\"</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#pagos-de-facturas-en-recc","title":"Pagos de facturas en RECC","text":"<p>Los pagos totales o parciales de facturas en RECC deben darse de alta en SII en el momento de producirse.</p> <p>Desde la ventana \"Monitor SII\" podemos filtrar por el n\u00famero de pago y proceder a su env\u00edo a SII.</p> <p>Una vez dado de alta en SII, el XML generado informa de los siguientes datos del pago, referenciados al n\u00famero de la factura de compra:</p> <ul> <li>Fecha</li> <li>Importe</li> <li>Medio</li> </ul> <p></p> <p>El Medio que en nuestro ejemplo es el 02 (Cheque), debe configurarse en el M\u00e9todo de Pago, campo \"Type\".</p> <p>Anulaci\u00f3n de pagos</p> <p>En el caso de los libros registro de pagos en RECC no se utilizar\u00e1 el tipo de comunicaci\u00f3n A1 de \"Modificaci\u00f3n de facturas/registros por error registral\".</p> <p>La modificaci\u00f3n de un pago en RECC ya dado de alta en SII se efectuar\u00e1 enviando el pago que se pretende anular en negativo.</p> <p>Lo anterior implica que en Etendo, al igual que se ha explicado para los cobros en RECC, no podremos reactivar un pago en RECC dado de alta en SII, si no que tendremos que revertirlo, con la opci\u00f3n \"Revertir pago\".</p> <p>Al revertir el pago, Etendo genera un nuevo pago por el mismo importe en negativo que tendremos que dar de alta en SII desde la ventana \"Monitor SII\", tal y como se muestra en la siguiente imagen:</p> <p></p> <p>El XML generado contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>el importe de pago negativo</li> <li>referencia a la factura original del proveedor.</li> </ul> <p></p> <p>Facturas en RECC no pagadas en el a\u00f1o natural (en desarrollo).</p> <p>Como parte de la funcionalidad del RECC, Etendo permite la \"liquidaci\u00f3n manual del IVA de Caja\" para aquellas facturas en RECC que no fuesen pagadas total o parcialmente antes del 31 de diciembre del a\u00f1o posterior al a\u00f1o de su expedici\u00f3n, produci\u00e9ndose as\u00ed el devengo del impuesto.</p> <p>Por tanto, las facturas en RECC de fecha 2017 que no est\u00e9n pagadas a 31-12-2018, tendr\u00e1n que enviarse a SII en dicha fecha, y con la siguiente informaci\u00f3n:</p> <ul> <li>Fecha (de pago) = 31-12-2018 (fecha de la liquidaci\u00f3n manual del IVA)</li> <li>Importe = importe pendiente de pago de la factura</li> <li>Medio = 03 (No se cobra/No se paga)</li> </ul> <p>Desde la ventana de \"Liquidaci\u00f3n manual del IVA de Caja\" ser\u00e1 posible enviar estas liquidaciones manuales a SII, con fecha 31 de diciembre del a\u00f1o posterior al a\u00f1o de su expedici\u00f3n (devengo del impuesto).</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#compensaciones-en-las-adquisiciones-a-personas-acogidas-al-reagyp","title":"Compensaciones en las adquisiciones a personas acogidas al REAGYP","text":"<p>Cuando se realicen operaciones por las que se satisfacen compensaciones agrarias del REAGYP se utilizar\u00e1n impuestos espec\u00edficos que por su naturaleza estar\u00e1n configurados como REAGYP = SI.</p> <p>Este tipo de impuestos de compensaci\u00f3n agraria, est\u00e1n relacionados con las siguientes categor\u00edas de impuestos de terceros:</p> <ul> <li>R\u00e9gimen Especial Agrario sobre \"bruto\" (IVA Incl.) (12%)</li> <li>R\u00e9gimen Especial Agrario sobre base imponible (12%)</li> <li>R\u00e9gimen Especial Agrario sobre base imponible (10,5%)</li> </ul> <p>Al registrar este tipo de factura de compra en Etendo, en funci\u00f3n del Tercero (Proveedor) seleccionado y su categor\u00eda de impuestos de tercero, los tipos de impuestos aplicables ser\u00e1n los siguientes:</p> <ul> <li>\"Compensaci\u00f3n REAGYP 12% -2%R (sobre bruto) SR\", al calcularse el importe de la retenci\u00f3n en el importe bruto, incluida la compensaci\u00f3n.</li> <li>\"Compensaci\u00f3n REAGYP 12% -2%R (sobre BI) SR\", al calcularse el importe de la retenci\u00f3n directamente sobre la base imponible</li> <li>\"Compensaci\u00f3n REAGYP 10.5% -2%R (sobre BI) SR\", al calcularse el importe de la retenci\u00f3n directamente sobre la base imponible</li> </ul> <p>F&amp;B Espa\u00f1a S.A. compra una partida de mercanc\u00eda a un proveedor nacional con un porcentaje de compensaci\u00f3n del 12%. La compra se efect\u00faa el 4 de septiembre, fecha en la que se expide la factura, recibiendo la misma cuatro d\u00edas m\u00e1s tarde, el d\u00eda 8. La empresa procede a su registro contable el d\u00eda 11 de septiembre.</p> <ul> <li>Fecha de Operaci\u00f3n: 4 de septiembre de 2017</li> <li>Fecha expedici\u00f3n de factura de venta: 4 de septiembre de 2017</li> <li>Fecha factura de compra: 4 de septiembre de 2017</li> <li>Fecha registro contable: 11 de septiembre</li> <li>Fecha l\u00edmite de alta en SII: El plazo para emitir el registro es el 21 de septiembre, 8 d\u00edas naturales desde la fecha del registro contable.</li> </ul> <p>Adem\u00e1s, este tipo de operaci\u00f3n debe marcarse como una factura Tipo Justificante contable \"F6\".</p> <p>Una vez completada la factura, se procede a su Alta en SII, de forma manual o autom\u00e1tica.</p> <p></p> <p>El XML de alta en SII contiene la siguiente informaci\u00f3n espec\u00edfica de este tipo de operaci\u00f3n:</p> <ul> <li>Tipo de Factura \"F6\" (Justificante contable)</li> <li>Clave r\u00e9gimen especial \"02\" (Operaciones sujetas a REAGYP)</li> <li>Porcentaje Compensaci\u00f3n REAGYP</li> <li>Importe compensaci\u00f3n REAGYP</li> </ul> <p>Consignar\u00e1 como Base Imponible la base sobre la que se calcula la compensaci\u00f3n; como Importe total de la factura asignar\u00e1 el importe total de la contraprestaci\u00f3n.</p> <p>Al no ser un impuesto de IVA, los campos tipo impositivo y cuota soportada no se informar\u00e1n.</p> <p></p> <p>En este r\u00e9gimen, podr\u00eda producirse \"autofacturaci\u00f3n\", es decir el receptor de la operaci\u00f3n realiza la emisi\u00f3n de la factura en nombre del proveedor.</p> <p>Para esos casos se ha creado el check \"Autofactura\" en el grupo de campos \"AEAT SII\" de la cabecera de las facturas de compra, que permite que el \"N\u00ba de Documento\" de factura de Etendo se traslade al campo \"Referencia de proveedor\", tal y como se muestra en la imagen adjunta:</p> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#operacion-de-compra-sujeta-a-ipsiigic","title":"Operaci\u00f3n de compra sujeta a IPSI/IGIC","text":"<p>F&amp;B Espa\u00f1a S.A. compra una partida de mercanc\u00eda en Canarias a un proveedor localizado en Canarias:</p> <ul> <li>La mercanc\u00eda no se transporta a TAI, se queda en Canarias</li> <li>adem\u00e1s la operaci\u00f3n de compra incluye la prestaci\u00f3n de un servicio que se localiza en Canarias y que por tanto tambi\u00e9n est\u00e1 sujeta a IGIC.</li> </ul> <p>La compra y prestaci\u00f3n del servicio se efect\u00faa el d\u00eda 15 de julio, con esa misma fecha se expide la factura, recibiendo la factura el d\u00eda 26 de julio. La empresa procede a su registro contable el d\u00eda 2 de agosto.</p> <ul> <li>Fecha de Operaci\u00f3n: 15 de julio de 2017</li> <li>Fecha expedici\u00f3n de la factura de venta: 15 de julio de 2017</li> <li>Fecha factura de compra : 15 de julio de 2017</li> <li>Fecha Contable: 2 de agosto de 2017</li> <li>Fecha l\u00edmite de alta en SII: El plazo para emitir el registro es el 14 de agosto, contando 8 d\u00edas naturales desde la fecha del registro contable.</li> </ul> <p>Al registrar este tipo de factura de compra en Etendo, los tipos de impuestos que se deber\u00e1n seleccionar ser\u00e1n del tipo:</p> <ul> <li>Adquisiciones IGIC 9.5%</li> <li>Prestaci\u00f3n servicios en Canarias 9.5%</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave r\u00e9gimen especial \"08\" (Operaciones sujetas al IPSI / IGIC)</li> </ul> <p></p> <p>Es importante recalcar que:</p> <ul> <li>si la factura de compra incluye m\u00e1s de un bien/servicio al mismo/distinto tipo de IGIC, en el XML la informaci\u00f3n se mostrar\u00e1 agrupada por tipo impositivo, dentro del nodo \"DesgloseIVA/DetalleIVA\"</li> </ul>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#arrendamiento-de-local-de-negocio_1","title":"Arrendamiento de local de negocio","text":"<p>El arrendatario del local de negocio se limitar\u00e1 a registrar la factura recibida por el arrendamiento en Etendo.</p> <p>Incluya o no retenci\u00f3n el arrendamiento, la factura se deber\u00e1 dar de alta con la clave de r\u00e9gimen especial 12.</p> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave 12 (Operaciones de arrendamiento de local de negocio.)</li> </ul> <p></p> <p>Info</p> <p>Si una factura de arrendamiento est\u00e1 sujeta al r\u00e9gimen especial del criterio de caja, prevalecer\u00e1 la clave 07 de Operaci\u00f3n Sujeta a RECC.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#gastos-de-personal-no-declarables","title":"Gastos de personal no declarables","text":"<p>En el caso del registro de facturas de compra a empleados de la organizaci\u00f3n, por gastos de personal tales como dietas, se debe tener en cuenta lo siguiente:</p> <ul> <li>los empleados de la organizaci\u00f3n que incurran en gastos a reembolsar, tienen que tener la categor\u00eda de impuestos de tercero \u201cNo declarable SII\u201d asociada.</li> <li>los gastos (productos de tipo \u201cGasto\u201d) tienen que estar relacionados con el grupo de impuesto \u201cNo Sujeto Servicios\u201d</li> </ul> <p>en ese caso, las facturas de compra creadas en la organizaci\u00f3n para el reembolso de gastos a dichos empleados, se crear\u00e1n con el rango de impuesto \u201cNo declarable gastos de empleado\".</p> <p>El registro de estas facturas de compra no se enviar\u00e1n a SII, en ning\u00fan caso.</p> <p>Una vez completada, si intenta enviar dichas facturas a SII se obtendr\u00e1 el siguiente error:</p> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#inversion-del-sujeto-pasivo","title":"Inversi\u00f3n del Sujeto Pasivo","text":"<p>Caso 1 = Inversi\u00f3n Sujeto Pasivo - Proveedor Extranjero</p> <p>La empresa F&amp;B Espa\u00f1a adquiere de un proveedor extranjero una prestaci\u00f3n de servicios que se localiza en TAI. Este proveedor se encuentra localizado en USA y tiene asociada una tarifa de precios en d\u00f3lares.</p> <p>Al registrar esta factura de compra los impuestos utilizados ser\u00e1n del tipo:</p> <ul> <li>Inversi\u00f3n Sujeto Pasivo no UE 21%.</li> </ul> <p>El importe de la operaci\u00f3n en d\u00f3lares es de 500.00 USD, con un contravalor en EUR de 446.62, ya que:</p> <ul> <li>ser\u00e1 posible utilizar el tipo de conversi\u00f3n seg\u00fan la fecha de factura configurado a nivel de sistema en la ventana \"Rangos de conversi\u00f3n\"</li> <li>o bien, el \"Tipo de cambio\" introducido en la propia factura de compra.</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave regimen especial \"01\" (R\u00e9gimen General)</li> <li>con informaci\u00f3n en \"EUR\" de la base imponible, tipo impositivo y cuota del impuesto dentro del nodo \"Desglose Factura/Inversi\u00f3nSujetoPasivo/DetalleIVA\".</li> </ul> <p></p> <p>Es importante recalcar que si este tipo de facturas incluyen m\u00e1s de un tipo impositivo igual/diferente respecto de la prestaci\u00f3n del servicio, se agrupar\u00e1 por tipo impositivo dentro del nodo \"Desglose Factura/Inversi\u00f3nSujetoPasivo/DetalleIVA\".</p> <p>Caso 2 = Inversi\u00f3n Sujeto Pasivo - Proveedor Nacional</p> <p>F&amp;B Espa\u00f1a recibe una factura de otro empresario que emite su factura sin IVA por producirse dicha operaci\u00f3n bajo la figura fiscal de \"Inversi\u00f3n del Sujeto Pasivo\", de modo que F&amp;B Espa\u00f1a registra dicha operaci\u00f3n a trav\u00e9s de una factura de compra con Inversi\u00f3n del Sujeto Pasivo.</p> <p>Al registrar esta factura de compra los impuestos utilizados ser\u00e1n del tipo:</p> <ul> <li>Inversi\u00f3n Sujeto Pasivo nacional 21%.</li> </ul> <p>Una vez completada la factura, se procede a su Alta en SII, bien de forma manual o autom\u00e1tica.</p> <p>El XML de alta en SII contendr\u00e1 la siguiente informaci\u00f3n:</p> <ul> <li>un tipo de Factura \"F1\"</li> <li>con clave regimen especial \"01\" (R\u00e9gimen General)</li> <li>con informaci\u00f3n de la base imponible, tipo impositivo y cuota del impuesto dentro del nodo \"Desglose Factura/Inversi\u00f3nSujetoPasivo/DetalleIVA\".</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#factura-recibida-con-fecha-contable-anterior-al-01-07-2017","title":"Factura recibida con fecha contable anterior al 01-07-2017","text":"<p>Respecto de las facturas recibidas antes del d\u00eda 01-07-2017, existe tambi\u00e9n la obligaci\u00f3n de su alta en SII, pero con un esquema XML con las siguientes particularidades:</p> <ul> <li>Clave de r\u00e9gimen especial = 14 (Primer semestre 2017).</li> <li>Descripci\u00f3n de la operaci\u00f3n: \u201cRegistro del Primer semestre 2017\u201d.</li> </ul> <p>Y, en el caso de las facturas recibidas:</p> <ul> <li>la \"Fecha registro contable\" ser\u00e1 la fecha del env\u00edo o alta en SII</li> <li>y la \"Cuota deducible\" se fija a 0.00</li> </ul> <p>Lo anterior aplica excepto para sujetos pasivos en REDEME que ya las habr\u00e1n enviado en el Modelo 340 correspondiente.</p> <p>En Etendo, al dar de alta en SII una factura recibida con fecha anterior al 01-07-2017, comprobaremos que el esquema XML es del tipo siguiente:</p> <p></p> <p>En Etendo se ha desarrollado un proceso \"background\" que adapta las facturas de venta del primer semestre para que puedan darse de alta en SII.</p> <p>Este proceso se denomina \"Proceso de adaptaci\u00f3n a SII de Facturas de Compra del primer semestre de 2017\" y configura dichas facturas con:</p> <ul> <li>la clave tipo factura \"Factura\" = \"F1\", en el caso de facturas de compra positivas y negativas</li> <li>o \"Importaci\u00f3n (DUA)\" = \"F5\", en el caso de facturas de compra que incluyan un impuesto del tipo \"Importaciones\", en la pesta\u00f1a \"Impuestos\".   En estos casos el usuario final tendr\u00e1 que informar los campos \"DUA\" y \"Fecha DUA\", antes de dar de alta en SII dichas facturas.</li> <li>a\u00f1ade la descripci\u00f3n tipo \"Registro del Primer semestre\"</li> <li>e indica como \"Fecha de operaci\u00f3n\" la fecha de la factura tal y como requiere la AEAT.   El usuario siempre podr\u00e1 revisar la configuraci\u00f3n otorgada a dichas facturas antes de darlas de alta en SII</li> </ul> <p>Al dar de alta en SII la factura de compra del primer semestre ya adaptada por el proceso, se informar\u00e1 el campo \"Fecha registro contable\" con la fecha de alta en SII.</p> <p>La ventana \"Monitor SII\" incluye tambi\u00e9n una pesta\u00f1a \"Facturas de Compra Primer Semestre 2017\" desde d\u00f3nde se pueden gestionar est\u00e1s facturas, una vez configuradas de forma correcta por el proceso.</p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#factura-recibida-con-iva-soportado-no-deducible","title":"Factura recibida con IVA soportado no deducible","text":"<p>Etendo permite la configuraci\u00f3n de impuestos de compra no deducibles, tal y como se muestra en la siguiente imagen.</p> <p></p> <p>Las facturas de compra que incluyan ese tipo de impuestos, tendr\u00e1n que darse de alta en SII, tal y como se describe a continuaci\u00f3n:</p> <ul> <li>en la etiqueta \"Cuota Soportada\", se refleja la cuota soportada</li> <li>y en la etiqueta \"Cuota Deducible'', se refleja un \"0\".</li> </ul> <p></p> <p>En el caso de impuestos que incluyan parte deducible y parte no deducible, la informaci\u00f3n a enviar ser\u00e1 tal y como se muestra en la siguiente imagen:</p> <ul> <li>en la etiqueta \"Cuota Soportada\", se refleja la cuota soportada</li> <li>y en la etiqueta \"Cuota Deducible'', se refleja el importe de esa cuota que sea deducible.</li> </ul> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/sii-para-iva/#informes-de-comprobacion-sii-consultas","title":"Informes de comprobaci\u00f3n SII (Consultas)","text":"<p>Desde la ventana \u201cConsulta Facturas SII\u201d es posible establecer una comunicaci\u00f3n inmediata con la AEAT. En esta comunicaci\u00f3n, la AEAT proporciona un listado informativo de las facturas emitidas y recibidas en SII con estado \u201cCorrecto\u201d.</p> <p>Esta informaci\u00f3n es b\u00e1sica para poder conocer el proceso de contraste de los LFRE y LFRR.</p> <p></p> <p>Seleccionando la organizaci\u00f3n que va a ser objeto de consulta, accedemos a trav\u00e9s de \u201cNueva Consulta Facturas a SII\u201d a una ventana emergente en la que filtraremos por diferentes criterios para obtener la correspondiente relaci\u00f3n de facturas.</p> <p>Los diferentes criterios que se pueden aplicar para seleccionar la informaci\u00f3n a consultar a la AEAT, son los siguientes:</p> <ul> <li>Libro de facturas</li> <li>Emitidas</li> <li>Recibidas</li> <li>Ejercicio: car\u00e1cter anual.</li> <li>Periodo: car\u00e1cter mensual.   Este periodo se refiere a la fecha de emisi\u00f3n de la factura.</li> <li>Fecha presentaci\u00f3n (desde)</li> <li>Fecha presentaci\u00f3n (hasta)</li> <li>Estado de cuadre SII: Una vez validado el env\u00edo de facturas presentado, de forma casi inmediata se procede a ejecutar el proceso de contraste, cuyo primer paso es tipificar la factura como contrastable o no:</li> <li>No contrastable: implica que nunca va a ser contrastada. Esta circunstancia se va a producir cuando el emisor o receptor no est\u00e1 en el sistema SII. En estos supuestos no se va a disponer en el sistema de posibilidad de contrastar esa informaci\u00f3n. Si la factura no resulta contrastable, la factura permanece en el estado \u201cNo contrastable\u201d y no se intenta su cuadre. Ejemplos: las facturas simplificadas o las facturas cuya contraparte no aplica el SII.</li> <li>Contrastable: comprobada la posibilidad de efectuar el contraste, se procede a determinar si esa informaci\u00f3n de registro remitida por una parte ha sido remitida por la contraparte. Los estados resultantes pueden ser:</li> <li>No contrastada: No est\u00e1 la factura de la contraparte dada de alta en SII.</li> </ul> <p>Si no se localiza la factura queda en estado de no contrastada.</p> <p>Si la factura se localiza en el sistema, se ejecuta un proceso adicional para contrastar la informaci\u00f3n contenida en ambos registros remitidos por las partes:</p> <ul> <li>Si coinciden los criterios de contraste que se determinen, se considera Contrastada.</li> <li>Si no coinciden todos ellos ser\u00e1 parcialmente contrastada. En este \u00faltimo caso, se proporcionar\u00e1 al contribuyente los resultados de contraste no coincidentes para su revisi\u00f3n.</li> </ul> <p>Para poder efectuar la consulta, ser\u00e1 obligatorio completar los campos: Libro de facturas, ejercicio y periodo.</p> <p>Tal y como se muestra en la siguiente imagen, obtenemos un listado actualizado seg\u00fan los filtros establecidos anteriormente, ya que una organizaci\u00f3n acogida a SII podr\u00e1 consultar los datos enviados (Libros registro declarados) desde la ventana \"Consultas Facturas SII\"</p> <p></p>","tags":["SII","Localizacion Espa\u00f1ola","Facturas en RECC","Monitor SII"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/","title":"TicketBai y Batuz","text":"","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#javapackages","title":"Javapackages","text":"<p> Javapackage: <code>com.smf.ticketbai</code></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#introduccion","title":"Introducci\u00f3n","text":"<p>Las funcionalidades de TicketBai y Batuz en Etendo ofrecen una soluci\u00f3n integral para el cumplimiento de las normativas fiscales en el Pa\u00eds Vasco, orientado a garantizar la transparencia, reducir el fraude fiscal, y asegurar la correcta emisi\u00f3n de facturas electr\u00f3nicas certificadas.</p> <p>TicketBai es obligatorio para las empresas y profesionales que operen en Gipuzkoa y est\u00e9n sujetos al IVA o IAE, mientras que Batuz se centra espec\u00edficamente en Bizkaia, incluyendo adem\u00e1s del sistema TicketBai, el Libro Registro de Operaciones Econ\u00f3micas (LROE).</p> <p>A trav\u00e9s de este m\u00f3dulo, Etendo facilita la automatizaci\u00f3n de procesos clave como la emisi\u00f3n, validaci\u00f3n y env\u00edo en tiempo real de facturas a las haciendas forales. El sistema garantiza la trazabilidad de las transacciones mediante la firma electr\u00f3nica de las facturas y la transmisi\u00f3n telem\u00e1tica a las autoridades fiscales.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#descripcion-del-modulo","title":"Descripci\u00f3n del M\u00f3dulo","text":"<p>El m\u00f3dulo permite:</p> <ul> <li>Enviar autom\u00e1ticamente los archivos XML con las facturas a las haciendas forales (Gipuzkoa o Bizkaia).</li> <li>Recibir los XML de respuesta con la confirmaci\u00f3n del env\u00edo de las facturas.</li> </ul> <p>La implementaci\u00f3n cubre:</p> <ol> <li>Cumplimiento de las normativas fiscales tanto para TicketBai como para Batuz.</li> <li>Automatizaci\u00f3n del env\u00edo de facturas emitidas a la administraci\u00f3n tributaria.</li> <li>Gesti\u00f3n de procesos como el registro de facturas en TBAI y el registro de facturas de compra en Batuz.</li> <li>Historial de todas las facturas enviadas a las administraciones tributarias.</li> </ol>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#contenido-del-modulo","title":"Contenido del M\u00f3dulo","text":"<p>Al instalar este m\u00f3dulo, el usuario podr\u00e1 comprobar que:</p> <ol> <li> <p>Se crear\u00e1n nuevas ventanas:</p> <ul> <li> <p>Configuraci\u00f3n TBAI, donde se podr\u00e1n configurar todos los par\u00e1metros necesarios para el env\u00edo correcto de los registros de facturas a TicketBai/Batuz, incluyendo los destinos Gipuzkoa y Bizkaia.</p> </li> <li> <p>TBAI Facturas Enviadas, donde se podr\u00e1 revisar el historial completo de todas las facturas enviadas tanto a TicketBai como a Batuz.</p> </li> </ul> </li> <li> <p>Se crean nuevos campos y pesta\u00f1as relativos a TicketBai/Batuz en la ventana de Factura (Cliente) y Factura (Proveedor), para a\u00f1adir la informaci\u00f3n requerida por estos sistemas para el registro de las facturas.</p> </li> <li> <p>Se a\u00f1ade un bot\u00f3n en las ventanas de Factura (Cliente) y Factura (Proveedor), con el fin de registrar las facturas de manera electr\u00f3nica:</p> <ul> <li>En Factura (Cliente) para Registrar factura en TicketBai.</li> <li>En Factura (Proveedor) para Registrar factura en Batuz.</li> </ul> </li> <li> <p>Se generan nuevos procesos en la ventana Procesamiento de Peticiones, denominados:</p> <ul> <li> <p>Registrar facturas en TicketBai, configurables para cada Organizaci\u00f3n o \"Entidad Legal\", permitiendo el alta masiva de facturas en TicketBai con la cadencia de env\u00edo configurada.</p> </li> <li> <p>Registrar facturas en Batuz, para registrar facturas de compra en Batuz, tambi\u00e9n configurables para cada Organizaci\u00f3n o \"Entidad Legal\", permitiendo el alta masiva con la cadencia de env\u00edo configurada.</p> </li> </ul> </li> </ol>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#configuracion","title":"Configuraci\u00f3n","text":"","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#dataset","title":"Dataset","text":"<p>Una vez instalado el m\u00f3dulo, ser\u00e1 necesario aplicar el dataset proporcionado para completar la integraci\u00f3n de TicketBai/Batuz. Para ello, siga los siguientes pasos:</p> <ol> <li> <p>Acceda a la ventana \"Gesti\u00f3n del m\u00f3dulo de Empresa\".</p> </li> <li> <p>En esta ventana, seleccione el dato de referencia \"TicketBai Integration\".</p> </li> <li> <p>Aplique este dataset a la organizaci\u00f3n *</p> </li> </ol> <p></p> <p>A continuaci\u00f3n, si el proceso se ha ejecutado correctamente, el sistema mostrar\u00e1 una pantalla similar a la siguiente:</p> <p></p> <p>Este dataset proveer\u00e1 los datos necesarios para gestionar el env\u00edo de facturas a Gipuzkoa y Bizkaia.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#configuracion-tbai","title":"Configuraci\u00f3n TBAI","text":"<p>La ventana de Configuraci\u00f3n TBAI le permitir\u00e1 ajustar los par\u00e1metros necesarios para comenzar a enviar facturas a trav\u00e9s de TicketBai o Batuz. A continuaci\u00f3n, se describen los campos principales a configurar:</p> <ul> <li> <p>Organizaci\u00f3n: Seleccione la organizaci\u00f3n o entidad legal que ser\u00e1 responsable del env\u00edo de los registros de facturas.</p> </li> <li> <p>Destino: Elija el destino Gipuzkoa o Bizkaia previamente creado por el dataset.</p> </li> <li> <p>Fecha Acogido TBAI: Especifique la fecha en la que la organizaci\u00f3n se acoge al sistema TBAI.</p> </li> <li> <p>Entorno de producci\u00f3n: Seleccione esta opci\u00f3n si los registros de facturas deben ser enviados al entorno productivo. Si est\u00e1 realizando pruebas, desmarque esta opci\u00f3n para usar un entorno de test.</p> </li> <li> <p>Descripci\u00f3n de Facturas: Indique el texto que se incluir\u00e1 en el campo DescripcionFactura del XML enviado.</p> </li> <li> <p>Utilizar descripci\u00f3n tambi\u00e9n para nombre de producto: Si est\u00e1 activado, se usar\u00e1 el valor de DescripcionFactura en el campo DescripcionDetalle del XML de la factura.</p> </li> <li> <p>Auto enviar facturas al completarse: Active esta opci\u00f3n si desea que las facturas se env\u00eden autom\u00e1ticamente cuando alcancen el estado de \"Completado\".</p> </li> <li> <p>Ruta de Reporte Jasper: Especifique la ubicaci\u00f3n de la plantilla Jasper que se utilizar\u00e1 para imprimir el reporte de la factura.</p> </li> <li> <p>Validar factura anterior: Active esta opci\u00f3n para que el sistema verifique si la factura anterior fue enviada correctamente antes de enviar la actual. Si no fue enviada, se mostrar\u00e1 una advertencia y se cancelar\u00e1 el env\u00edo.</p> </li> <li> <p>NIF: Ingrese el NIF del emisor de la factura.</p> </li> <li> <p>Nombre y Apellido del Emisor de Certificado: Informaci\u00f3n requerida para el certificado que se adjunta en la configuraci\u00f3n.</p> </li> <li> <p>Contrase\u00f1a del certificado: Introduzca la contrase\u00f1a del certificado adjunto.</p> </li> </ul> <p></p> <p></p> <p>No olvide adjuntar el certificado necesario.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#rango-de-impuesto","title":"Rango de impuesto","text":"<p>Al configurar los impuestos en el sistema, es importante completar correctamente los campos relacionados con los reg\u00edmenes de IVA y las causas de exenci\u00f3n o no sujeci\u00f3n. Estas configuraciones se realizan desde la ventana Rango de Impuesto. A continuaci\u00f3n, se detallan los campos que deben ser completados seg\u00fan cada caso:</p> <ol> <li> <p>Clave de R\u00e9gimen Especial de IVA     Este campo debe completarse cuando se aplique un r\u00e9gimen especial de IVA. Esto permitir\u00e1 que el sistema identifique el r\u00e9gimen aplicable en las facturas enviadas.</p> <p>Condici\u00f3n de visualizaci\u00f3n: Se muestra si no aplica exenci\u00f3n y no sujeci\u00f3n.</p> </li> <li> <p>Causa de No Sujeci\u00f3n     Este campo debe completarse en aquellos casos donde el impuesto no est\u00e9 sujeto a IVA. Este campo es necesario para facturas que no est\u00e1n sujetas a impuestos por alguna raz\u00f3n espec\u00edfica.</p> <p>Condici\u00f3n de visualizaci\u00f3n: Se muestra cuando no est\u00e1 sujeta a impuestos.</p> </li> <li> <p>Causa de Exenci\u00f3n     En los casos donde la factura est\u00e9 exenta de IVA, se deber\u00e1 seleccionar la causa de exenci\u00f3n. Este campo es obligatorio cuando la factura est\u00e1 exenta de impuestos y debe justificar dicha exenci\u00f3n al enviar los datos.</p> <p>Condici\u00f3n de visualizaci\u00f3n: Se muestra cuando la factura est\u00e1 exenta de impuestos.</p> </li> </ol>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#tbai-facturas-enviadas","title":"TBAI Facturas enviadas","text":"<p>En la ventana de TBAI Facturas Enviadas, es posible visualizar todas las facturas que han sido enviadas desde la organizaci\u00f3n en la que est\u00e1 trabajando. Esta herramienta permite llevar un control detallado de los env\u00edos realizados, facilitando la gesti\u00f3n y el seguimiento de las facturas que se han transmitido a trav\u00e9s del sistema TicketBai o Batuz.</p> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#secuencia-de-encadenamiento-para-tbai","title":"Secuencia de encadenamiento para TBAI","text":"<p>Antes de realizar el primer env\u00edo de facturas, es esencial configurar correctamente el tipo de documento de las facturas que se enviar\u00e1n.</p> <ol> <li> <p>Acceder a la ventana \"Tipo de Documento\": En este registro encontrar\u00e1 un campo denominado \"Secuencia de Encadenamiento para TBAI\". Este campo es clave para llevar un control preciso de las facturas que ya han sido enviadas o que se ha intentado enviar.</p> </li> <li> <p>Crear una nueva Secuencia de Encadenamiento para TBAI:</p> <ul> <li>Ingrese un nombre apropiado en el campo \"Name\".</li> <li>Active la opci\u00f3n Auto Numbering. No es necesario modificar los campos adicionales que aparecer\u00e1n tras activar esta opci\u00f3n.</li> </ul> </li> </ol> <p></p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#proceso-de-envio-de-factura","title":"Proceso de Env\u00edo de Factura","text":"TicketBaiBatuz <ol> <li> <p>Creaci\u00f3n de Factura de Venta</p> <p>Para iniciar el proceso, cree una factura de venta utilizando una organizaci\u00f3n que tenga configurada la opci\u00f3n de TicketBai. Esta configuraci\u00f3n se realiza desde la ventana de \"Configuraci\u00f3n TBAI\" en el sistema.</p> </li> <li> <p>Registro de Factura en TicketBai</p> <p>Una vez completada la factura, se habilitar\u00e1 un bot\u00f3n titulado \"Registrar Factura en TBAI\". Al presionar este bot\u00f3n, se iniciar\u00e1 el proceso de env\u00edo de la factura a la plataforma TicketBai. </p> </li> <li> <p>Resultado del Proceso</p> <ul> <li>Si el env\u00edo es exitoso, el sistema mostrar\u00e1 un mensaje de confirmaci\u00f3n indicando que la factura ha sido registrada correctamente en TicketBai.</li> <li>En caso de error, se mostrar\u00e1 un mensaje con una descripci\u00f3n detallada del fallo, permitiendo identificar y resolver el problema.</li> </ul> <p></p> </li> </ol> <ol> <li> <p>Creaci\u00f3n de Factura de Compra</p> <p>Para iniciar el proceso, cree una factura de compra utilizando una organizaci\u00f3n que tenga configurada el destino Bizkaia. Esta configuraci\u00f3n se realiza desde la ventana de \"Configuraci\u00f3n TBAI\" en el sistema.</p> </li> <li> <p>Registro de Factura en Batuz</p> <p>Una vez completada la factura, se habilitar\u00e1 un bot\u00f3n titulado \"Registrar Factura en Batuz\". Al presionar este bot\u00f3n, se iniciar\u00e1 el proceso de env\u00edo de la factura a Batuz. </p> </li> <li> <p>Resultado del Proceso</p> <ul> <li>Si el env\u00edo es exitoso, el sistema mostrar\u00e1 un mensaje de confirmaci\u00f3n indicando que la factura ha sido registrada correctamente en Batuz.</li> <li>En caso de error, se mostrar\u00e1 un mensaje con una descripci\u00f3n detallada del fallo, permitiendo identificar y resolver el problema.</li> </ul> <p></p> </li> </ol>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#detalle-del-envio-a-ticketbai","title":"Detalle del Env\u00edo a TicketBai","text":"<p>Adem\u00e1s del bot\u00f3n para registrar la factura, existe una solapa denominada \"TicketBai\" dentro de la factura. Esta secci\u00f3n muestra informaci\u00f3n relevante sobre el proceso de env\u00edo de la factura a la plataforma TicketBai, incluyendo:</p> <ul> <li>Estado del Env\u00edo: Indica si la factura ha sido recibida exitosamente por la plataforma.</li> <li>Descripci\u00f3n: Proporciona informaci\u00f3n adicional sobre el estado del env\u00edo. En caso de error, esta descripci\u00f3n incluir\u00e1 detalles espec\u00edficos que ayudar\u00e1n a identificar el problema.</li> </ul> <p>En la misma pesta\u00f1a, se encuentra un apartado de Adjuntos donde se almacena la respuesta que TicketBai devuelve. Este archivo es generado en formato XML y contiene los detalles t\u00e9cnicos sobre el resultado del proceso de env\u00edo.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#envio-automatico","title":"Env\u00edo Autom\u00e1tico","text":"<p>Dentro de la ventana \"Procesamiento de Peticiones\" se ha creado un proceso \"Registrar facturas en TBAI\", que puede configurarse para cada organizaci\u00f3n o entidad legal.</p> <p>Tal y como sucede con otros procesos de Etendo, \u00e9stos podr\u00e1n configurarse para ser ejecutados de forma inmediata, planificada o programada con una cierta frecuencia, donde permitir\u00e1n el alta masiva de facturas en Ticketbai con la cadencia de env\u00edo configurada. </p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#detalle-del-envio-a-batuz","title":"Detalle del Env\u00edo a Batuz","text":"<p>Adem\u00e1s del bot\u00f3n para registrar la factura, existe una solapa denominada \"Batuz\" dentro de la factura. Esta secci\u00f3n muestra informaci\u00f3n relevante sobre el proceso de env\u00edo de la factura a Batuz, incluyendo:</p> <ul> <li>Estado del Env\u00edo: Indica si la factura ha sido recibida exitosamente por la plataforma.</li> <li>Descripci\u00f3n: Proporciona informaci\u00f3n adicional sobre el estado del env\u00edo. En caso de error, esta descripci\u00f3n incluir\u00e1 detalles espec\u00edficos que ayudar\u00e1n a identificar el problema.</li> </ul> <p>En la misma pesta\u00f1a, se encuentra un apartado de Adjuntos donde se almacena la respuesta que Batuz devuelve. Este archivo es generado en formato XML y contiene los detalles t\u00e9cnicos sobre el resultado del proceso de env\u00edo.</p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/spain-localization/ticketbai-batuz/#envio-automatico_1","title":"Env\u00edo Autom\u00e1tico","text":"<p>Dentro de la ventana \"Procesamiento de Peticiones\" se ha creado un proceso \"Registrar facturas de compra a Batuz\", que puede configurarse para cada organizaci\u00f3n o entidad legal.</p> <p>Tal y como sucede con otros procesos de Etendo, estos podr\u00e1n configurarse para ser ejecutados de forma inmediata, planificada o programada con una cierta frecuencia, donde permitir\u00e1n el alta masiva de facturas en Batuz con la cadencia de env\u00edo configurada. </p>","tags":["Localizaci\u00f3n Espa\u00f1ola","Ticketbai","Tbai","Batuz","Bizkaia","Factura","Gipuzkoa"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/","title":"Warehouse Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.warehouse.extensions</code></p> <p> Etendo Marketplace:  Warehouse Extensions Bundle</p>","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/#overview","title":"Overview","text":"<p>This bundle includes enhancements for the Warehouse Management functionalities in Etendo.</p>","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/#translations","title":"Translations","text":"<ul> <li> Spanish: Warehouse Extensions Bundle ES</li> </ul>","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/#modules","title":"Modules","text":"","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/#automated-warehouse-reservation","title":"Automated Warehouse Reservation","text":"<p> Javapackage: <code>com.etendoerp.automated.warehouse.reservation</code></p> <p>This module adds the option Automatic - Only Default Warehouse to the Stock Reservation field of the lines tab in the Sales Order window. This is used to limit the reservation only to the warehouse specified in the header of the order.</p> <p>Info</p> <p>For more information, visit Sales Order and Stock Reservation.</p>","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/#stock-history","title":"Stock History","text":"<p> Javapackage: <code>com.etendoerp.stock.history</code></p> <p>This module provides updated information about the daily history stock of the products. </p> <p>Info</p> <p>For more information, visit the Stock History user guide and the Stock History developer guide.</p>","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/#reactivate-warehouse-documents","title":"Reactivate Warehouse Documents","text":"<p> Javapackage: <code>com.etendoerp.reactivate.warehouse.documents</code></p> <p> Javapackage: <code>com.etendoerp.reactivate.warehouse.documents.template</code></p> <p>This functionality is part of the Warehouse Extensions Bundle and it is useful when the user needs to reactivate documents such as Goods Movements, Goods Receipts, Goods Shipments and Physical Inventories.\u00a0</p> <p>Info</p> <p>For more information, visit the user guide for:</p> <ul> <li>Goods Movements</li> <li>Goods Receipts</li> <li>Goods Shipments</li> <li>Physical Inventory</li> </ul>","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/#product-operations","title":"Product Operations","text":"<p> Javapackage: <code>com.etendoerp.product.operations</code></p> <p>This module allows you to observe and analyze in detail all transactions associated with the selected product. </p> <p>Info</p> <p>For more information, visit Product Operations user guide.</p>","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/bundles/warehouse-extensions/overview/#uninstall-bundle","title":"Uninstall bundle","text":"<p>To uninstall the bundle and prevent future problems with orphan records, a sequence of steps must be followed:</p> <ol> <li> <p>Run the following query in the environment's database <pre><code>DELETE FROM OBUIAPP_GC_TAB \nWHERE AD_TAB_ID = 'C3DB551F2BCA40A79AAF21DBD6D06309';\n</code></pre></p> </li> <li> <p>After the query successfully finishes, delete the bundle by the way corresponding to the installation method (Sources/JARs)</p> </li> </ol>","tags":["Warehouse Management","Automated Reservation","Stock History","Document Reactivation","Product Operations"]},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/","title":"Tax Report Launcher","text":""},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#overview","title":"Overview","text":""},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#purpose","title":"Purpose","text":"<p>The aim of this document is to describe the functional specifications for a new extension module which is the \u201cTax report launcher\". The tax report launcher module allows the end users to create and submit tax reports to the tax authorities as required by the in-country tax authorities. These functional specifications will be later on implemented according to the Technical documentation. </p> <p>Info</p> <p>It is important to note that this functional specification is oriented to the Spanish Professional localization pack by now, mainly in relation to the setup and scenarios covered, regardless Tax Launcher report feature must be implemented as generic as possible in order to cover other countries scenarios.</p> <p>It is also a matter of fact that the current specification is mainly related to the Spanish needs as those are the ones currently known, therefore current documentation and tax report launcher implementation will be enhanced or adjusted later on if needed.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#scope","title":"Scope","text":"<p>Tax report launcher is an extended tax module which allows the end-user: 1. to set up different \u201ctax parameters\u201d as well as \"tax report parameters\" depending on the tax type and on the tax report requirements, respectively 2. to set up different \u201ctax reports\u201d in a unique window and according to the in-country tax requirements 3. to \"launch\" a selected tax report for a specific period 4. and to get the required \"tax output as a file\" to be submitted to the tax authorities in a valid format.</p> <p>Besides, Tax report Launcher is a framework which will allow the end-user to develop new tax reports as required.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#design-considerations","title":"Design Considerations","text":""},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#dependencies","title":"Dependencies","text":"<p>As there should probably be more new tax reports to implement for the same country or others and even the existing ones might probably change, the tax report launcher module has to be implemented in a way that each tax report business logic is isolated from the rest, so in case there is a need of modifying an existing tax report, that change will not affect the rest and in case there are new tax reports to be implemented, those new ones will have its own business logic.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#constraints","title":"Constraints","text":"<p>Etendo already provides tax setup, tax transactions and in general tax related features, therefore and in order to be consistent, the existing tax related features are taken into account as part of this new module. Besides, it could be that some of the existing tax features have to be enhanced in order to get the tax information required for this extension module to work.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#delivery","title":"Delivery","text":"<p>Info</p> <p>This feature is going to be delivered as a module. Configuration data will be delivered as an additional module which could be imported by the end-user, containing by default setup; besides every report will be included in a particular module.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#functional-requirements","title":"Functional Requirements","text":""},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#user-roles-profiles","title":"User roles &amp; profiles","text":"<p>The following roles are involved:</p> <ul> <li>Accounting manager (Mary): Mary is the accounting manager. She must know which tax reports need to be submitted to the tax authorities depending on the in-country tax authorities requirements as well as the business specifics. Therefore she must be sure that once the \"Configuration Data\" extension delivered as an additional module to the Tax Report Launcher is installed, the default data or setup required for the specific tax reports she needs to submit to the tax authorities is properly set up in the system. Mary will do that in collaboration with Peter.</li> <li>Accounting staff (Peter): Peter is an employee part of the accounting staff. He will be responsible for helping Mary by checking or setting up the parameters needed, as well as entering the correspondent accounting transactions in collaboration with sales (Mike) and purchase staff (Alice) and launching the tax reports and finally, getting the tax report output to be submitted to the tax authorities.</li> </ul>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#report-types","title":"Report types","text":"<p>Tax report launcher module allows to define below described type of tax reports:</p> <ul> <li>statement tax reports, which are the reports intended just to list a specific type of tax transactions so tax authorities are informed about it. For example, tax authorities need to be informed about every sales and/or purchase transaction exceeding a specific amount or the ones within EU countries.</li> <li>tax reports, which are the reports intended to collect tax base amounts, tax rates and tax amounts in a way to get the net amounts of tax assessment or tax revenue or any other kind of tax output.</li> </ul> <p>The most common and relevant tax reports to be submitted to the tax authorities are: - Value Added tax (VAT) - and Withholding tax reports in relation to those tax there are some important concepts to take into account listed below:</p> <ul> <li>Value added tax is an indirect tax on consumption and applicable to supplies of services or goods, goods imports and intra-community goods acquisitions, therefore VAT tax setup depends on the transaction type and the goods/services type being purchased and/or sold.</li> <li>Withholdings are amounts subtracted by the retainer (i.e. a company) to the tax payer (i.e and employee) for incomes paid (i.e. a salary) which are paid by the retainer as an \u201cadvance\u201d amount to the tax which the tax payer has to pay at the end of the fiscal year to the tax authorities, therefore Withholding tax setup depends on who generates an income as well as the type of income itself.</li> </ul> <p>In some countries, like Spain, there is another type of withholding commonly known as Payments on account. Payment on account is a withholding. It is an amount \u201cpaid\u201d by the companies to the tax authorities for certain items of income (goods) as an advance of the tax amount to be paid by the beneficiary of that income, therefore payment on account tax setup depends on who generated an income as well as the type of income itself. - Income types can be \u201ccash\u201d (monetary/by example a salary or a fee paid to a professional) or \u201cgoods\u201d (not monetary/by example a company car or a company flat) - Withholding term applies to cash incomes and Payment on account term applies to goods incomes in some countries like Spain.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#user-stories","title":"User stories","text":"<p>Mary is the Accounting manager of a Spanish located company responsible for deciding which tax reports need to be submitted to the tax authorities. For sure VAT and Withholding tax reports will have to be submitted to the tax authorities. Based on \"in-country tax types\" as well as in-country tax authorities requirements and the type of business running, Mary should know exactly which VAT and withholding tax reports have to be mandatory submitted to the tax authorities by her company.</p> <p>Mary knows that as an overall rule VAT related tax reports recognize tax liability at the time goods are delivered and therefore invoiced or at the time services have been executed and therefore invoiced and withholding tax reports recognize tax liability at the time goods or services invoice are posted but in other countries like Spain at the time cash or goods incomes already invoiced and post are satisfied or paid.</p> <p>Therefore, and having into account her company is located in Spain, Etendo has to fulfill her accounting needs which are:</p> <p>VAT tax amounts must be posted and therefore included in accounting, at the time an invoice containing VAT is posted whenever invoice date is the same as goods expedition date or service execution date Withholding tax amounts must be posted and therefore included in accounting, at the time an invoice containing Withholding is posted as there are some countries like Spain where withholding tax amounts must be posted at the same as VAT tax amounts, that is at the time an invoice containing withholding tax is posted, regardless tax liability for this type of taxes is recognize at the time that invoice is paid.</p> <p>Mary should also be aware of the fact that most taxable transactions will be entered in the system either as a purchase or sales transaction and therefore as a purchase or sales invoice but there will also be some of them which will not have an invoice behind. Those last cases are mainly related to withholding tax, which will have to be entered in the system as manual settlements linked to the correspondent G/L items. Manual settlement will generate withholding tax posting in the case of withholding which do not have an invoice linked to them and therefore should be entered in the system as a manual settlement which will imply a cash or bank payment afterward.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#overall-system-setup","title":"Overall system Setup","text":"<p>Mary lets accounting staff know which tax reports need to be submitted to the tax authorities by the company so Peter can either check or set up the tax parameters, business partner tax categories and the tax reports and tax report parameters needed; after that enter the correspondent accounting transactions in collaboration with sales and purchase staff in order to finally launch the tax reports and get the tax report output to be submitted to the tax authorities.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#first-step","title":"First step:","text":"<p>The first step that Peter should perform is either to check the setup or to set up the tax parameters required according to the work flow listed below:</p> <ol> <li>Peter goes to Financial Management / Accounting / Setup / Business Partner Tax category to create the business partner tax categories needed depending on who generated a sales or purchase transaction subject to VAT or who generated an income subject to withholding. For example, he should enter as BP tax category: National Vendor, EU Vendor, International Vendor, National customer, EU Customer, International customer, Employees, Non-resident employees, Professionals, EU Professionals, International Professional, Renting, Economic Activities and so on so forth. </li> <li>Peter goes to Financial Management / Accounting / Setup / Transaction code to check that the required VAT \"Transaction codes\" for either purchase or sales transactions are set up by default. As already said most common ones are =&gt; Supplies (For example, this type of transaction code in Spain is =\"E\") and Acquisitions (For example, this type of transaction code in Spain is =\"A\")</li> <li>After that, Peter goes to Financial Management / Accounting / Setup / Tax key to check that the required Tax keys and sub-keys are set up by default depending on the type of income and the business partner who generated that income. For example, in the case of the Spanish tax report 110, he should know that he has to create a Tax key = \"A\" for employment incomes, a Tax key = \"G\" for professional activities incomes, a Tax key = \"K\" for prizes and so on and so forth. </li> <li>Once the above is done Peter goes to Financial Management / Accounting / Setup / Tax Category as it could be new Tax categories have to be created. For example VAT (in case of purchase VAT), SalesVAT, IntraVAT, SalesIntraVAT, ImportVAT, ExportVAT, VAT+EC, SalesVAT+EC, WSalary, WProfessionals, WPrizes, PSalary, PProfessionals,PPrizes.</li> <li>And once the above is done, Peter goes to Financial Management / Accounting / Setup / Tax rates as it could be new VAT tax rates and new Withholding rates have to be created. VAT tax rates depend on the type of transaction, whether it is a purchase or a sale, and the type of goods being purchased or sold and Withholding rates depends on the type of income being paid and the business partner who generated that income.</li> </ol> <p>Info</p> <p>By using this way of withholding set up Peter has to make sure he is willing to post withholding at the time an invoice containing an income subject to withhold is posted, regardless of which withholding liability will be recognized at the payment date, and not at the time that invoice is paid. Tax rates have to be linked to the correspondent BP tax category and the correspondent accounting must be setup.</p> <p>VAT rates = for example VAT21%, VAT10%, VAT4%, VAT21%+EC4%, VAT10%+EC1,5%, VAT4%+EC0,5%, SalesVAT21%, SalesVAT10%, SalesVAT4%, SalesVAT21%+EC4%, SalesVAT10%+EC1,5%, SalesVAT4%+EC0,5%, Intra-VAT21%/-21%, Intra-VAT0%, ImportVAT21%, ExportVAT0%. Besides the existing and new VAT rates will have to be linked to the correspondent Transaction Codes depending on the VAT direction.  Withholding rates = for example WSalary35%, WPrizes18%, WProfessionals15%, WProfessionals7%. Besides the existing and new withholding and payment on account tax rates have to be linked to the correspondent Tributary keys and sub-keys depending on the tax reports those tax rates are going to be included. </p> <ol> <li>Above step could be also done by Peter from Master data Management / Business partner setup / Withholding. He will have to choose this way and not above one in relation to withholding rates in case he needs to post withholding amounts at the time an invoice is paid and not at the time the invoice is posted. For example WSalary35%, WPrizes18%, WProfessionals15%, WProfessionals7%. Besides the existing and new withholding rates have to be linked to the correspondent Tributary keys and sub-keys depending on the tax reports those tax rates are going to be included. </li> </ol>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#second-step","title":"Second step:","text":"<p>The second step that Peter should perform is to check that the tax reports and the tax report parameters are properly set up by default. To get this done he will have to navigate to Financial Management / Accounting / Setup / Tax report.</p> <p>Tax Report. There should be a record for each tax report which needs to be submitted to the tax authorities. Each tax report should have below information:</p> <p>a) Tax Report groups. For some countries such Spain withholding tax reports have a fixed section structure named Tax report groups. For example, in the case of Spain, withholding tax reports have 7 default section which are: (1) Identification (2) Accrual (3) Tax assessment (4) Tax revenue (5) Negative declaration (6) Complementary declaration and (7) Signature.</p> <p>Info</p> <p>In general VAT reports do not have those kinds of sections because they are not tax reports as such but statement tax reports, so a unique output section must be created for this type of reports. </p> <p>b) Tax report parameters. Each tax report will have specific tax report parameters Peter should be aware of in order to get the right setup In parameters*. Those are specific tax report parameters which are needed by the time a tax report or a statement tax report is launched, therefore this type of parameters will have to be manually entered by him while launching a tax report For example \"Tax report file name\", \"contact person\" or others more specific depending on the type of tax report. Constant parameters. Specific constant tax report parameters which must be set up by default as there will always be the same For example, in the case of the Spanish tax report 110, he should check that \"Tax model\" constant parameter is entered as \"110\", and \"01\" as page number. Out parameters. Peter should know that out parameters are tax report parameters which will get information from the system, such as \"Company Name\", \"Company Tax ID number\" as well as more complex data/output related to transactions linked to a specific \"Tax keys and/or sub-keys\" for example. It is time for him to check that those output parameters are set up by default properly and linked to a specific tax report.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#specific-setup-and-transactions","title":"Specific setup and transactions","text":"<p>In collaboration with sales (Mike) and purchase staff (Alice), Peter needs to enter in the system the normal activity transactions which will be included in one or another tax report depending on the type of transaction we are talking about:</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#purchase-overall-scenario","title":"Purchase \u2013 Overall scenario","text":"<p>Alice creates a requisition based on the company or entity's items and / or services needs. As soon as requisitions are confirmed by Dan, the Purchase manager, she converts the requisition/s into a/some purchase orders and sends them to the correspondent business partner (vendor or creditor or professional). Once the goods have been received by her company or once the services have been executed by the creditor as requested by her company, the vendor or creditor will issue an invoice. That invoice will have to be entered by Alice in the system as a purchase invoice. In general, purchase transactions and therefore purchase invoice could be the result of goods acquisition or services provided by vendors located in Spain or located in the EU or located abroad, so depending on the origin of the goods and the type of goods/services exchanged, the VAT rate to pay (VAT-fiscal credit) as well as the transactions code will be different. Besides, there are some kind of purchase transactions for which withholding tax will be applicable as well as the correspondent tributary keys depending on the type of income generated and the type of business partner who generated them.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#purchase-specific-scenarios-setup-required","title":"Purchase - Specific scenarios &amp; setup required","text":"<p>Alice could enter in the system any of the purchase invoices listed below as those are very common purchase scenarios for a small-medium size company located in an EU country like Spain. Peter and Alice will have to check that at least the information listed below per purchase invoice transaction is correctly set up before entering any purchase transaction.</p> <p>1- Goods purchase to a national vendor 1. System path: Procurement management / Transactions / Purchase invoices 2. Business partner tax category: National vendor 3. Tax category : VAT 4. Tax rate (Purchase tax) : VAT21% and/or VAT10% and/or VAT4% 5. Tax rate - transaction code: \"A\" (acquisition)</p> <p>2- Goods purchase to a national vendor (EC scenario) 1. Business partner tax category: National vendor 2. Tax category (purchase tax) : VAT+EC 3. Tax rate (Purchase tax) : VAT21%+EC4% and/or VAT10%+EC1,5% and/or VAT4%+EC0,5% 4. Tax rate - Transaction code: \"A\"(acquisition)</p> <p>3- Goods purchase to an EU vendor 1. System path: Procurement management / Transactions / Purchase invoices 2. Business partner tax category: EU vendor 3. Tax category : IntraVAT 4. Tax rate (Purchase tax and Sales VAT) : IntraVAT21%/-21% 5. Tax rate - transaction code: \"A\" (acquisition)</p> <p>4- Goods purchase to an international vendor</p> <ol> <li>System path: Procurement management / Transactions / Purchase invoices</li> <li>Business partner tax category: International vendor</li> <li>Tax category : ImportVAT</li> <li>Tax rate (Purchase tax) : ImportVAT21%</li> <li>Tax rate - transaction code: \"A\" (acquisition)</li> </ol> <p>5- Purchase of professional services to a national professional 1. System path: Procurement management / Transactions / Purchase invoices 2. Business partner tax category: National professionals 3. Tax category : VAT+WProfessionals 4. Tax rate (Purchase tax) : VAT21%+WProfessionals15% 5. Tax rate - Tributary key: \"G-01 or G-02 or G-03 6. Tax rate - transaction code: \"A\" (acquisition)</p> <p>6- Purchase of professional services to an UE professional 1. System path: Procurement management / Transactions / Purchase invoices 2. Business partner tax category: EU professionals 3. Tax category : IntraVAT+WProfessionals 4. Tax rate (purchase VAT and sales VAT): IntraVAT21%/-21%+WProfessionals24% 5. Tax rate - tributary key: \"19\" 6. Tax rate - transaction code: \"A\" (acquisition)</p> <p>7- Purchase of professional services to an international professional 1. System path: Procurement management / Transactions / Purchase invoices 2. Business partner tax category: International professionals 3. Tax category : ImportVAT+WProfessionals 4. Tax rate (Purchase tax) :ImportVAT21%+WProfessionals24% 5. Tax rate - tributary key: \"19\" 6. Tax rate - transaction code: \"A\" (acquisition)</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#goods-purchase-invoices","title":"Goods Purchase invoices","text":"<p>While entering a Goods purchase invoice in the system, Alice must be sure VAT tax is going to be calculated properly as described above: National vendor: Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac VAT21% = 100.000 \u20ac x 21% = 21.000 \u20ac =&gt; VAT amount = 21.000 \u20ac Total invoice amount to be paid to the vendor = 121.000 \u20ac EU vendor; Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac IntraVAT21%/-21% = [100.000 \u20ac x 21% = 21.000] + [100.000 \u20ac x -21% = -21.000] = 0 \u20ac =&gt; VAT amount = 0 \u20ac Total invoice amount to be paid to the vendor = 100.000 \u20ac International vendor: Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac ImportVAT21% = 100.000 \u20ac x 21% = 21.000 \u20ac =&gt; VAT amount = 21.000 \u20ac Total invoice amount to be paid to the vendor = 121.000 \u20ac</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#equivalence-charge","title":"Equivalence Charge","text":"<p>In this case, Alice's company (Etendo legal entity) is a retailer company which buys goods to National vendors only and under this specific VAT regimen. While Alice's company is not forced to keep tracking of the VAT-fiscal credit and the VAT-fiscal debit and it is not forced to settle VAT, Alice's company is forced to tell its vendors they are subject to EC special regimen with the aim of allowing their vendors to charge them with an additional tax rate named EC tax rate. While entering a Goods purchase invoice in the system under this specific VAT regimen, Alice must be sure VAT and EC taxes are calculated properly as described above:</p> <p>Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac VAT21% = 100.000 \u20ac x 21% = 21.000 =&gt; VAT amount = 21.000 \u20ac EC4% = 100.000 \u20ac x 4% = 4.000 \u20ac Total invoice amount to be paid to national vendor = 100.000 \u20ac + 21.000 \u20ac + 4.000 \u20ac = 125.000 \u20ac</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#professional-service-purchase-invoices","title":"Professional Service Purchase Invoices","text":"<p>While entering a services purchase invoice in the system, Alice must be sure VAT tax and withholding tax are going to be calculated properly as described above:</p> <p>Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac VAT21% = 100.000 \u20ac x 21% = 21.000 =&gt; VAT amount = 21.000 \u20ac W-18% = 100.000 \u20ac x -15% = -15.000 =&gt; Withholding amount = -15.000 \u20ac Total invoice amount to be paid to a professional vendor = 100.000 \u20ac + 21.000 \u20ac -15.000 \u20ac = 106.000 \u20ac</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#reverse-charge","title":"Reverse charge","text":"<p>Alice should know that an IntraVAT tax rate could be checked as \u201cReverse Charge\u201d just in the case of services provided by UE professionals because it is not mandatory for UE goods acquisitions anymore. In that case the company will have to create and Auto-Invoice after receiving services purchase invoice with a VAT tax rate = 0% Therefore, there will have to be 3 entries for each invoice under this scenario with an operation code = \"I\":</p> <ul> <li>the line for the Auto-invoice of the VAT-fiscal credit (IntraVAT21%=21%)</li> <li>the line for the Auto-invoice of the VAT-fiscal debit (SalesIntraVAT=-21%)</li> <li>and the line for the original purchase Invoice as import or exempt (ImportVAT = 0%).</li> </ul> <p>Info</p> <p>Notice that the line for VAT-fiscal credit and the line for import or exempt VAT will be shown and stored as purchase/received VAT (VAT-fiscal credit) while the VAT-fiscal debit line will be shown and stored as sales/issued VAT.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#purchase-credit-notes","title":"Purchase credit notes","text":"<p>In case there is any error in the purchase invoices for goods or services provided by a business partner or in the case any goods have to be returned back to a vendor due to lack of quality or any other kind of error, Alice and the accounting staff will have to void the correspondent purchase invoice and create and post a new purchase credit invoice (purchase credit memo). In this case the applicable scenarios are the same as described in section above, but: 1. Purchase credit invoices amounts will be negative amounts 2. Peter needs to be sure similar purchase credit invoices are not grouped while being included in VAT tax reports.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#sales-overall-scenario","title":"Sales - Overall scenario","text":"<p>Mike creates a sales order based on a customer/s need/s. Once the goods have been sent by his company through a Good shipment, it is possible for him to issue a sales invoice and send it to the customer together with good shipment documentation, for example a packing slip. In general, sales transactions and therefore sales invoices could be the result of goods shipments or services provide by a company to a customer or third party located in Spain or located in the EU or located abroad, so depending on the destination of the goods and the type of goods/services provided, the VAT rate to collect (VAT-fiscal debit) as well as the transactions code will be different. Besides, there are some kinds of sales transactions for which withholding tax will be applicable as well as the correspondent tributary keys depending on the type of income generated.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#sales-specific-scenarios-setup-required","title":"Sales - Specific scenarios &amp; setup required","text":"<p>Mike could enter in the system any of the sales transactions listed below as those are very common sales scenarios for a small-medium size company located in an EU country like Spain. Peter and Mike will have to check that at least the information listed below per sales invoice transaction is correctly set up before entering any sales transaction.</p> <p>1- Sales of goods to a National customer(Spain) 1. System path: Sales Management / Transactions / Sales Invoice 2. Business partner tax category: National customer 3. Tax category : SalesVAT 4. Tax rate (Sales tax) : SalesVAT21% and/or SalesVAT10% and/or SalesVAT4% 5. Tax rate - transaction code: \"E\" (Supply)</p> <p>2- Sales of goods to a National retailed (EC scenario) 1. And Business partner tax category: National retailer 2. Tax category : SalesVAT+EC 3. Tax rate (Sales tax) : SalesVAT21%+EC4% and/or SalesVAT10%+EC1,5% and/or SalesVAT4%+EC0,5% 4. Tax rate - Transaction code: \"E\"(supply)</p> <p>3- Sales of goods to an EU customer 1. System path: Sales Management / Transactions / Sales Invoice 2. Business partner tax category: EU customer 3. Tax category : SalesIntraVAT 4. Tax rate (Sales tax) : SalesIntraVAT0% 5. Tax rate - transaction code: \"E\" (supply)</p> <p>4- Sales of goods to an international customer 1. System path: Procurement management / Transactions / Purchase invoices 2. Business partner tax category: International vendor 3. Tax category : ExportVAT 3. Tax rate (Sales tax) : ExportVAT0% 4. Tax rate - transaction code: \"E\" (Supply)</p> <p>5- Service provided to National customer 1. System path: Sales Management / Transactions / Sales Invoice 2. Business partner tax category: National customers 3. Tax category : SalesVAT+SalesW 4. Tax rate (sales tax9 : SalesVAT21%+SalesWProfessionals15% 5. Tax rate - Tributary key: not applicable 5. Tax rate - transaction code: \"E\" (Supply)</p> <p>6- Service provided to an UE customer 1. System path: Sales Management / Transactions / Sales Invoice 2. Business partner tax category: EU customer 3. Tax category : SalesIntaVAT+SalesW 4. Tax rate (Sales tax) : SalesIntraVAT0%+SalesWProfessionals15% 5. Tax rate - tributary key: not applicable 6. Tax rate - transaction code: \"E\" (Supply)</p> <p>7- Service provided to an International customer 1. S1. ystem path: Sales Management / Transactions / Sales Invoice 2. Business partner tax category: International customers 3. Tax category : ExportVAT+SalesW 4. Tax rate (Sales tax) :ExportVAT0%+SalesWProfessionals15% 5. Tax rate - tributary key: not applicable 6. Tax rate - transaction code: \"E\" (Supply)</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#goods-sales-invoices","title":"Goods Sales invoices","text":"<p>While entering a Goods Sales invoice in the system, Mike must be sure Sales VAT tax is going to be calculated properly as described above: National customer: Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac SalesVAT21% = 100.000 \u20ac x 21% = 21.000 =&gt; Sales VAT amount = 21.000 \u20ac Total invoice amount to be collected from the customer = 121.000 \u20ac EU vendor; Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac SalesIntraVAT0% = 100.000 \u20ac x 0% = 0 \u20ac=&gt; Sales VAT amount = 0 \u20ac Total invoice amount to be collected from the customer = 100.000 \u20ac International vendor: Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac Export0% = 100.000 \u20ac x 0% = 0 \u20ac =&gt; VAT amount = 0 \u20ac Total invoice amount to be collected from the customer = 100.000 \u20ac</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#equivalence-charge_1","title":"Equivalence Charge","text":"<p>In this case, Mike's company sells goods to a national retailer company he must charge them with an additional tax rate named EC tax rate. Therefore while entering a Goods sales invoice in the system under this specific VAT regimen, Mike must be sure Sales VAT and EC taxes are calculated properly as described above: Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac SalesVAT21% = 100.000 \u20ac x 21% = 21.000 \u20ac =&gt; Sales VAT amount = 21.000 \u20ac EC4% = 100.000 \u20ac x 4% = 4.000 \u20ac Total invoice amount to be collected from the retailer = 100.000 \u20ac + 21.000 \u20ac + 4.000 \u20ac = 125.000 \u20ac</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#professional-service-sales-invoices","title":"Professional Service Sales Invoices","text":"<p>While entering a services sales invoice in the system, Mike must be sure Sales VAT tax and withholding tax are going to be calculated properly as described above: Invoice amount = 100.000 \u20ac =&gt; Tax base amount = 100.000 \u20ac Sales VAT21% = 100.000 \u20ac x 21% = 21.000 =&gt; VAT amount = 21.000 \u20ac SalesWProfessionals15% = 100.000 \u20ac x -15% = -15.000 =&gt; Withholding amount = -15.000 \u20ac Total invoice amount to be collected from the customer = 100.000 \u20ac + 21.000 \u20ac -15.000 \u20ac = 106.000 \u20ac</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#sales-credit-invoices","title":"Sales credit invoices","text":"<p>In case there is an error in the sales invoices of goods or services Mike's company is providing to his customers or in case a customer wants to return back any goods due to lack of quality or any other kind of error, Mike and the accounting staff will have to void the correspondent sales invoice and create and post a new sales credit invoice (sales credit memo). In this case the applicable scenarios are the same as described in section above, but: 1. Sales credit invoices amounts will be negative amounts 2. Mike needs to be sure similar sales credit invoices are not grouped while being included in VAT tax reports.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#manual-settlements","title":"Manual Settlements","text":"<p>Peter will have to use Etendo Manual Settlements feature for entering in the system the rest of taxable incomes which can not be entered in the system either as a purchase transaction and therefore as a purchase invoice or as a sales transaction and therefore as a sales invoice. Peter will have to use G/L items while entering manual settlements as there is not going to be an invoice behind this type of transactions but a business partner and an income satisfied or paid by his company or an income collected by his company; therefore Peter will have to create as much G/L items as required depending on the type of incomes either collected or paid and the type of business partners involved in the income generation.</p> <p>G/L items creation is mainly related to Withholding tax reports as those reports are the ones containing income taxable transactions not supported by either purchase or sales invoices.</p> <p>Info</p> <p>Peter will have to make sure that G/L items are linked to the correspondent tax rate and withholding rates if applicable, and besides Peter will have to make sure that G/L items have the correspondent accounting setup in advance.</p> <p>Scenarios below explain that Peter will have to create at least two G/L items per transaction, he will not use direct posting feature as these types of withholding tax, the ones entered in the system as manual settlement, can be only posted at the time of payment via cash journal or payment journal.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#employee-salary-payments","title":"Employee salary payments","text":"<p>Peter knows that Etendo does not automate payroll payment transactions so, in order to get in the system an employee salary payment transaction, Peter will have to use the \"manual settlement\" feature as a first step and then settle or pay it by using either a cash payment or a bank payment. While doing that, he needs to be sure that the transaction is linked to the specific G/L items created for that reason and besides Peter must enter the correspondent withholding tax as those kinds of payment are subject to withholding which must be submitted to the tax authorities later on.</p> <p>To accomplish above scenario, Peter will have to navigate to:</p> <ul> <li>Financial Management / Accounting / setup / Business Partner Tax Category to create the BP tax category =&gt; \"Employee\" (Need to be discussed)</li> <li>Financial Management / Accounting / setup / Tax category to create the Tax category =&gt; \"WSalary\"</li> <li>Financial Management / Accounting / setup / Tax key to check the correspondent Tax key and sub-keys is setup by default =&gt; \"A = Employment Income\"</li> <li>Financial Management / Accounting / setup / Tax rate to create the Tax rate =&gt; \"WSalary35%\", in this same screen and under \"Tax parameter\" tab Peter must setup the correspondent Tax Report Parameter so the tax rate can be linked to the correspondent tax report (110), tax report group (Assessments), tax parameter (Withholding and payments on account) and tributary key (A-Employment income).</li> <li>Financial Management / Accounting / setup / G/L Item to create the G/L item = &gt; \"Employee income in cash withholding\" which must be linked to Tax rate \"WSalary35%\" and the correspondent accounting setup.</li> <li>Financial Management / Accounting / setup / G/L Item to create the G/L item =\"Outstanding salary payments\" with the correspondent accounting setup.</li> </ul> <p>Once the above is setup in the system Peter must navigate to Financial Management /Receivable &amp; Payable / Transactions / Manual settlement and create a new manual settlement as described below: Transaction date =&gt; 26-June-2021 Accounting date =&gt; 30-June-2021 Description =&gt; Alice's salary</p> <p>Then Peter goes to \"Create Payment\" window and enter two new ones as described below: Business Partner =&gt; Alice (previously created as and employee with BP tax category = Employee Description =&gt; Alice's salary June Amount =&gt; 1000 Receipt =&gt; No Direct posting =&gt; No</p> <p>Then Peter goes to \"Balance Payment\" window and enter a new one as described below: G/L item =&gt; Employment income in cash withholding Debit amount =&gt; 350 and G/L item =&gt; \"Outstanding salary payments\" Debit amount =&gt; 650</p> <p>Once all of the above is done, Peter process the manual settlement and navigate to Financial Management / Receivable &amp; Payable / Transactions / Cash Journal and create a new one and enters: Transaction date=&gt; 30-June-2021 Accounting date=&gt; 30-June-2021</p> <p>and then go to Lines and creates a new one as: Cash Type =&gt; Debt-payment and then click in Debt/payment feature to get into Debt Payment Selector.</p> <p>Once in the Debt Payment Selector Peter has to remove \"Receipt\" check and search by pending ones to select the one just entered.</p> <p>After that Peter processes and posts. Peter can navigate to the journal entry and then to the cash journal lines, and then to the payment, and once there Peter can select and post the \"Settlement Canceled\" in order to generate and check the final posting.</p> <p>Finally, Peter has to verify that the correspondent Withholding tax reports is showing a withholding amount of 350 linked to WSalary35% rate.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#prizes-payments","title":"Prizes payments","text":"<p>Peter's company organized a competition between their employees. Alice won that prize which was an \"in cash\" prize of 500 \u20ac, which has to be included in the system. For doing that Peter will have to use the \"manual settlement\" feature as a first step and then settle or pay it by using either a cash payment or a bank payment. While doing that he needs to be sure that the transaction is linked to the specific G/L items created for that reason and besides Peter must enter the correspondent withholding tax as those kinds of payment are subject to withholding which must be submitted to the tax authorities later on.</p> <p>To accomplish above scenario, Peter will have to navigate to:</p> <ul> <li>Financial Management / Accounting / setup / Business Partner Tax Category to create the BP tax category =&gt; \"Employee\"</li> <li>Financial Management / Accounting / setup / Tax category to create the Tax category =&gt; \"WPrize\"</li> <li>Financial Management / Accounting / setup / Tax key to create the correspondent Tax key and sub-keys =&gt; \"K_01=Prizes_01\"</li> <li>Financial Management / Accounting / setup / Tax rate to create the Tax rate =&gt; \"WPrize18%\", in this same screen and under \"Tax parameter\" tab Peter must setup the correspondent Tax Report Parameter so the tax rate can be linked to the correspondent tax report (110), tax report group (Assessments), tax parameter (Withholding and payments on account) and tributary key (K_01 - Prizes 01).</li> <li>Financial Management / Accounting / setup / G/L Item to create the G/L item = &gt; \"Prizes income in cash withholding\" which must be linked to Tax rate \"WPrize18%\" and the correspondent accounting.</li> <li>Financial Management / Accounting / setup / G/L Item to create the G/L item =&gt; \"Prizes in cash\" with the correspondent accounting setup.</li> </ul> <p>Once the above is setup in the system Peter must navigate to Financial Management /Receivable &amp; Payable / Transactions / Manual settlement and create a new manual settlement as described below:</p> <p>Transaction date =&gt; 01-July-2021 Accounting date =&gt; 01-July-2021 Description =&gt; Alice's prize (best product X design)</p> <p>Then Peter goes to \"Create Payment\" window and enter a new one as described below: Business Partner =&gt; Alice (previously created as and employee with BP tax category = Employee Description =&gt; Alice's prize Amount =&gt; 500 Receipt =&gt; No Direct posting =&gt; No</p> <p>Then Peter goes to \"Balance Payment\" window and enter two new ones as described below: G/L item =&gt; Prizes in cash Debit amount =&gt; 450 and G/L item =&gt; Prizes income in cash withholding Debit amount =&gt; 50</p> <p>Once all of the above is done, Peter process the manual settlement and navigate to Financial Management / Receivable &amp; Payable / Transactions / Cash Journal and create a new one and enters: Transaction date=&gt; 01-July-2021 Accounting date=&gt; 01-July-2021 and then go to Lines and creates a new one as:</p> <p>Cash Type =&gt; Debt-payment and then click in Debt/payment feature to get into Debt Payment Selector.</p> <p>Once in the Debt Payment Selector Peter has to remove \"Receipt\", check and search by pending ones, so \"prize\" one just created can be selected.</p> <p>After that Peter processes and posts. Peter can navigate to the journal entry and then to the cash journal lines, and then to the payment, and once there Peter can select and post the \"Settlement Canceled\" in order to generate and check the final posting.</p> <p>Finally, Peter has to verify that the correspondent Withholding tax reports is showing a withholding amount of 50 linked to WPrize18% rate.</p> <p>Building Renting in case of 3rd party building</p> <p>Peter's company rents a 3rd party owned building in which Peter's company office is located. The owner of that building issues a \"statement or a receipt\" to Peter's company every month in order to be paid for that rent. Peter's company has to pay that rent and enter in the system the correspondent statement and payment, therefore Peter will have to use the \"manual settlement\" feature as a first step and then pay it by using either a cash payment or a bank payment.</p> <p>Info</p> <p>While doing that he needs to be sure that the transaction is linked to the specific G/L items created for that reason and besides Peter must enter the correspondent withholding tax as those kinds of payment are subject to withholding which must be submitted to the tax authorities later on.</p> <p>To accomplish above scenario, Peter will have to navigate to:</p> <ul> <li>Financial Management / Accounting / setup / Business Partner Tax Category to create the BP tax category =&gt; \"Lessor\"</li> <li>Financial Management / Accounting / setup / Tax category to create the Tax category =&gt; \"WRenting\"</li> <li>Financial Management / Accounting / setup / Tax key to create the correspondent Tax key and sub-keys =&gt; \"P -Renting\"</li> <li>Financial Management / Accounting / setup / Tax rate to create the Tax rate =&gt; \"WRenting18%\", in this same screen and under \"Tax parameter\" tab Peter must setup the correspondent Tax Report Parameter so the tax rate can be linked to the correspondent tax report (115), tax report group (Assessments), tax parameter (Withholding and payments on account) and tributary key (P-Renting).</li> <li>Financial Management / Accounting / setup / G/L Item to create the G/L item = &gt; \"3rd party rent in cash Withholding\" which must be linked to Tax rate \"WRenting18%\" and the correspondent accounting setup.</li> <li>Financial Management / Accounting / setup / G/L Item to create the G/L item =&gt; \"3rd party rent\" with the correspondent accounting setup.</li> </ul> <p>Once the above is setup in the system Peter must navigate to Financial Management /Receivable &amp; Payable / Transactions / Manual settlement and create a new manual settlement as described below:</p> <p>Transaction date =&gt; 29-August-2021 Accounting date =&gt; 01-September-2021 Description =&gt; September renting</p> <p>Then Peter goes to \"Create Payment\" window and enter a new one as described below: Business Partner =&gt; Lessor BP (previously created as a creditor and with BP tax category = Lessor Description =&gt; September renting Amount =&gt; 2000 Receipt =&gt; No Direct posting =&gt; No</p> <p>Then Peter goes to \"Balance Payment\" window and enter two new ones as described below: G/L item =&gt; \"3rd party rent in cash withholding\" Debit amount =&gt; 360 G/L item =&gt; \"3rd party rent in cash\" Debit amount =&gt; 1640</p> <p>Once all of the above is done, Peter process the manual settlement and navigate to Financial Management / Receivable &amp; Payable / Transactions / Cash Journal and create a new one and enters:</p> <p>Transaction date=&gt; 01-September-2021 Accounting date=&gt; 01-September-2021 and then go to Lines and creates a new one as: Cash Type =&gt; Debt-payment and then click in Debt/payment feature to get into Debt Payment Selector.</p> <p>Once in the Debt Payment Selector Peter has to remove \"Receipt\", check and search by pending ones, so \"rent\" one just created can be selected.</p> <p>After that Peter processes and posts. Peter can navigate to the journal entry and then to the cash journal lines, and then to the payment, and once there Peter can select and post the \"Settlement Canceled\" in order to generate and check the final posting.</p> <p>Finally, Peter has to verify that the correspondent Withholding tax reports is showing a withholding amount of 360 linked to WRenting18% rate.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#renting-in-case-of-a-building-do-not-linked-to-an-economic-activity","title":"Renting in case of a building do not linked to an economic activity","text":"<p>Peter's company owns a building not related to Peter's company's economic activity. That building is being rented to a 3rd party or lessee. Peter's company issues a statement or a receipt and sends it to the lessee in order to be paid on a monthly basis. Peter's company must collect the money and enter in the system the correspondent payment, in order to get that in the system, Peter will have to use the \"manual settlement\" feature as a first step and then get it paid by using either a cash payment or a bank payment.</p> <p>Info</p> <p>While doing that he needs to be sure that the transaction is linked to a specific G/L item created for that reason and besides Peter must enter the correspondent withholding tax as those kinds of payment are subject to withholding which must be submitted to the tax authorities later on.</p> <p>To accomplish above scenario, Peter will have to navigate to:</p> <ul> <li>Financial Management / Accounting / setup / Business Partner Tax Category to create the BP tax category =&gt; \"Lessee\"</li> <li>Financial Management / Accounting / setup / Tax category to create the Tax category =&gt; \"WPropertyRent\"</li> <li>Financial Management / Accounting / setup / Tax key to create the correspondent Tax key and sub-keys =&gt; \"C_04-Property Rent\"</li> <li>Financial Management / Accounting / setup / Tax rate to create the Tax rate =&gt; \"WPropertyRent18%\", in this same screen and under \"Tax parameter\" tab Peter must setup the correspondent Tax Report Parameter so the tax rate can be linked to the correspondent tax report (123), tax report group (Assessments), tax parameter (Withholding and payments on account) and tributary key (C_04-Property Rent).</li> <li>Financial Management / Accounting / setup / G/L Item to create the G/L item = &gt; \"Property Rent in cash withholding\" which must be linked to Tax rate \"WPropertyRent18%\"</li> <li>Financial Management / Accounting / setup / G/L Item to create the G/L item =&gt; \"Property Rent in cash\" with the correspondent accounting setup.</li> </ul> <p>Once the above is setup in the system Peter must navigate to Financial Management /Receivable &amp; Payable / Transactions / Manual settlement and create a new manual settlement as described below:</p> <p>Transaction date =&gt; 29-September-2021 Accounting date =&gt; 01-October-2021 Description =&gt; October renting</p> <p>Then Peter goes to \"Create Payment\" window and enter a new one as described below: Business Partner =&gt; Lessee BP (previously created as a creditor and with BP tax category = Lessee) Description =&gt; October renting Amount =&gt; -3500 Receipt =&gt; Yes Direct posting =&gt; No</p> <p>Then Peter goes to \"Balance Payment\" window and enter two new ones as described below: G/L item =&gt; \"Property Rent in cash withholding\" Debit amount =&gt; -630 G/L item =&gt; \"Property Rent in cash\" Debit amount =&gt; -2870</p> <p>Once all of the above is done, Peter process the manual settlement and navigate to Financial Management / Receivable &amp; Payable / Transactions / Cash Journal and create a new one and enters: Transaction date=&gt; 01-October-2021 Accounting date=&gt; 01-October-2021 and then go to Lines and creates a new one as: Cash Type =&gt; Debt-payment and then click in Debt/payment feature to get into Debt Payment Selector.</p> <p>Once in the Debt Payment Selector Peter has to check \"Receipt\" and search by pending ones, so \" proprietary rent\" one just created can be selected.</p> <p>After that Peter processes and posts. Peter can navigate to the journal entry and then to the cash journal lines, and then to the payment, and once there Peter can select and post the \"Settlement Canceled\" in order to generate and check the final posting.</p> <p>Finally, Peter has to verify that the correspondent Withholding tax reports is showing a withholding amount of 630 linked to WPropertyRent18% rate.</p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#tax-report-launcher-setup","title":"Tax Report Launcher setup","text":"<p>As described above, Mary, the accounting manager, must decide which tax reports need to be submitted to the tax authorities depending on her company's business and in-country tax authorities requirements. Peter would help her here as he is responsible for checking the default setup and/or setting up the tax parameters, tax reports and tax report parameters as well as entering the correspondent accounting transactions in collaboration with sales (Mike) and purchase staff (Alice). Last thing for him to do will be to launch the tax reports and finally, to get the tax report output to be submitted to the tax authorities.</p> <p>Once Peter knows which tax reports must be submitted to the tax authorities by talking to Mary, He will have to install the configuration data module delivered as part of the Tax Report Launcher module, once done he must navigate to Financial Management / Accounting / Setup / Tax Report Launcher to check that the default set up for each tax report is setup as described below:</p> <p>1-Peter will have to check that there is a new record for each tax report which needs to be submitted to the tax authorities, containing the info below:</p> <ol> <li>Search key = tax report id (in our example the Spanish tax report \"110\")</li> <li>Name = Name of the tax report (in our example \" Withholdings and payments on account of income tax (IRPF) - Spain\")</li> <li>Description = Description of the tax report by including tax report type and main purpose \"Withholdings and payments on account made on income satisfied by Companies during a period of time \"</li> <li>Period = it could be either monthly, quarterly or yearly depending on tax authorities requirements and company size.</li> <li>Java Class Name = separate Java class per tax report has to be entered here.</li> <li>Active = set to \"Yes\"</li> </ol> <p>2- For a specific report (the one just being created) and once the above is done, Peter will have to navigate to \"Tax Report Group\" tab and check that below 7 tax report groups are created for withholding reports, as well as 1 output tax report group is created in case of VAT reports:</p> <ol> <li>Identification (1) - This tax report group must contain general data like company name, tax id number, address and so on and so forth depending on the tax report being entered in the system. Those data are considered tax report parameters for that specific tax report group; therefore Peter will have to navigate to the tax report parameter tab and check the parameters. Every parameter should be either a \"constant\"*, in that case a constant value will have to be entered in the correspondent field; or an \"input parameter\", in that case an input type parameter will have to be selected from a list (Check box or text); or \"output parameter\", in that case either a Tributary key and tributary sub-key or a transaction code will have to be selected.</li> </ol> <p>Identification section will have all kind of tax parameters, \"constant\" parameters as \"tax report id\", \"in parameters\" to be entered by the user while launching the report, such as \"contact name\", as well as \"out parameters\"* got from the system such as \"Organization/Entity name\" and \"Organization/Entity tax id\" as well as those tax transactions linked to a tax key and sub-key or a transaction code (in case of VAT section, see note below).</p> <ol> <li> <p>Accrual (2) - This section must contain year and period data depending on when a specific tax report has to be launched and submitted to the tax authorities. *Those data are \"in parameters\" which will have to be entered by him while launching the report from Financial Management / Accounting / Analysis tools / Tax Report Launcher\".</p> </li> <li> <p>Tax assessment (3) - This section must contain tax related information such as the number of beneficiaries of an income, income type, income amounts and tax amounts for a given period. The content of this section would depend on the tax report we are entering in the system.</p> </li> </ol> <p>Those data are considered tax report parameters* for that specific tax report group; therefore Peter will have to navigate to the tax report parameter tab and check that the correspondent parameters are there.</p> <p>Tax assessment section will have \"in parameters\" to be entered by the user, such as \"Amount to deduct only in case of complementary declaration scenario\"; in general \"in parameters\" will be all kind of tax information needed for the tax report group which can not be obtained from the system because there is not a business logic behind. Besides, it will also have \"out parameters\"* such as the sum of all the \"monetary income amounts linked to a specific tax rate\" regardless of the way it was entered in the system (either as a purchase or sales invoice or as a manual settlement). In general \"out parameters\" will be all those parameters whose value can be obtained from the system as there is a business logic behind.</p> <ol> <li>Tax revenue (4) - This section must contain mainly the net tax amount to be paid to the tax authorities based on section (3) result</li> <li> <p>Those data are considered tax report parameters for that specific tax report group; therefore Peter will have to navigate to the tax report parameter tab and check that the correspondent parameters are there.</p> </li> <li> <p>Tax revenue section will have \"in parameters\" to be entered by the user while launching a tax report, such a \"X\" in the case positive tax revenue is going to be paid by cash or \"D\" in case positive tax revenue is going to be paid by a direct debit. In general \"in parameters\" will be all kinds of tax information needed for the tax report group which can not be obtained from the system because there is not a business logic behind. Besides, it will also have \"out parameters\" such as \"tax revenue amount\" whose value will have to be a calculated value depending on section (3). In general \"out parameters\" will be all those parameters whose value can be obtained from the system as there is a business logic behind.</p> </li> <li> <p>Negative declaration (5) - This section will be shown in a withholding report only in case the calculated net tax amount (Tax revenue section (4)) is = 0 , therefore this section will only have an \"out parameter\" based on the tax revenue value.</p> </li> <li> <p>Complementary declaration (6) - This section will be shown in a withholding report only in case the tax report being launched is a complementary tax report to one or more tax reports already submitted to the tax authorities by the same concept and for the same period.</p> </li> <li> <p>Those data are considered tax report parameters for that specific tax report group; therefore Peter will have to navigate to the tax report parameter tab and check that the correspondent parameters are there in the case he needs to create a complementary tax report.</p> </li> <li> <p>Complementary declaration section will have \"in parameters\" to be entered by the user, such as \"Former tax report electronic code\".</p> </li> <li> <p>and Signature (7). This section will contain a retainer/declarator (company) signature which is only needed in case of printed format not while generating an electronic format therefore there is no need for us to create this tax report group.</p> </li> </ol> <p>Info</p> <p>VAT tax reports do not have those kinds of above sections because they are not tax reports as such but statement tax reports, therefore a generic tax group will have to be created linked to a generic Output tax report parameter related to Transaction code parameter, for that type of VAT tax reports. </p>"},{"location":"user-guide/etendo-classic/optional-features/supported-modules/tax-report-launcher/#tax-report-output","title":"Tax Report Output","text":"<p>Tax reports can be submitted to the tax authorities either as .pdf files, which means a printed format or as a .txt files, which means an electronic presentation that can be sent to the tax authorities via Internet. Both formats have to comply with tax authorities well known requirements so after getting the correspondent output files Peter will have to verify that the formats are the correct ones.</p> <p>Besides *.txt files can be submitted to the tax authorities by using tax authorities web applications so Peter has to make sure he gets the correspondent tax certification required to submit the files as well as he has to make sure that the files are not rejected.</p> <p>Peter has also to be aware that depending on the number of transactions to be included in a tax reports as well as the company size, presentation format should be either mandatory printed format or mandatory electronic format.</p> <p>Peter will have to navigate to Financial Management / Accounting / Analysis tools / Tax Report Launcher to get tax report outputs. Once there, the information which Peter will have to enter as input parameters is: - Organization - Tax report - Accounting schema - Year - Period - and .txt file name for example as an Input Parameter Once the above is filled-in Peter can press \"Generate Electronic file\" to generate the .txt file.</p>"},{"location":"user-guide/etendo-copilot/getting-started/","title":"User Guide - Etendo Copilot - Getting Started","text":"","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#user-guide-etendo-copilot-getting-started","title":"User Guide - Etendo Copilot - Getting Started","text":"","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#overview","title":"Overview","text":"<p>Etendo Copilot is a powerful tool integrated into the Etendo Classic interface, or accessible via API, that provides an efficient way to interact with assistants and use tools developed to solve specific problems. It is an innovative project designed to streamline your processes by harnessing the power of Artificial Intelligence. This page will guide you through the main features of Etendo Copilot.</p> <p>Info</p> <p>To install Etendo copilot, you can read the Copilot Installation guide in the developer's guide section.</p> <p>Note</p> <p>Remember that, to use this functionality, it is necessary to configure an API Key. For this, you can use one of your own, or you can contact the Etendo support team to purchase one.</p>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#what-is-etendo-copilot","title":"What is Etendo Copilot?","text":"<p>At its core, Etendo Copilot is a groundbreaking initiative that redefines how developers and users interact with tools and information. It revolves around a central component, the Assistant which acts as the mastermind behind task delegation. This Agent has secondary modules referred to as Tools. The seamless communication between these components is facilitated via a RESTful API, ensuring a stateless and scalable interaction model.</p> <p> </p>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#assistant","title":"Assistant","text":"<p>The Assistant serves you making on-the-fly decisions about which Tool is best suited to respond to a particular query. This intelligent decision-making ensures that you receive the most accurate and efficient assistance.</p> <p>Each assistant has defined instructions, as well as the possibility to configure a knowledge base and a set of skills or tools. The assistant is able to make decisions based on a question, using the most appropriate knowledge base or tool set to answer a particular query.</p> <p>In turn, it is possible to configure assistant managers, able to delegate a specific query to other specialized assistants and coordinate between the different assistants in your team to achieve an assertive response.  This intelligent decision-making ensures that you receive the most accurate and efficient assistance. Assistants can be distributed in Etendo modules as datasets or created per environment.</p>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#tools","title":"Tools","text":"<p>Each tool represents a dedicated and self-contained project, meticulously designed to excel at specialized tasks. Whether it involves code translation, text analysis, or data manipulation, the diverse suite of tools operates in seamless coordination.  </p> <p>Info</p> <p>For a overview of the available tools and their technical details, please refer to the Available Tools - Developer Guide.</p>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#key-features","title":"Key Features","text":"<ul> <li> <p>Effortless Integration: Etendo Copilot seamlessly integrates into your environment, adding an extra layer of intelligence to your workflow.</p> </li> <li> <p>On-Demand Assistance: Send your queries to Etendo Copilot, and the Agent will guide you towards the most suitable Tool for the job.</p> </li> <li> <p>Diverse Expertise: Our ever-growing selection of Tools covers a wide range of domains, ensuring you always have the right solution.</p> </li> <li> <p>Open AI Assistants: Copilot is integrated with the Assistants technology developed by Open AI, allowing you to set up your assistants, trained with your own knowledge base, able to generate and interpret new code, and use the specific tools already distributed by Etendo or new ones.  </p> </li> <li> <p>LangGraph: In this case, this option works as a manager of other assistants and allows to select team members. </p> </li> <li> <p>Langchain Agent: These assistants can perform specific tasks in natural language and provide contextualized responses, enabling the implementation of multiple AI models, the use of a proprietary vector database and internal memory management.</p> </li> <li>Multi-Model Assistant: This type of assistant can be used with multi-vendor models such as Anthropic and Gemini, in addition to existing OpenAI models.</li> <li>Attach Files: Etendo Copilot allows users to attach one or multiple files for assistants.</li> <li>Context Sharing: Etendo Copilot can automatically capture and share the context of your current Etendo Classic session, such as selected records or active windows. This eliminates the need to manually input information, streamlining workflows and improving efficiency.</li> </ul>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#copilot-interface","title":"Copilot Interface","text":"","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#navegation-bar","title":"Navegation Bar","text":"<p>In the Etendo Classic navigation bar, you'll find a Copilot icon that leads you to the chat pop-up.</p> <p>Here, you can select an Assistant and engage in a conversation with it. Copilot facilitates communication with <code>Langchain Agent</code>, <code>Multi-Model Assistant</code>, <code>LangGraph</code> and <code>Open AI Assistant</code> types, for more information visit Assistant Windows documentation.</p> <p>Note</p> <p>By default, Copilot will open the last assistant previously used.</p> <p></p>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#tool-bar","title":"Tool Bar","text":"<p>In any standard Etendo Classic window, you will see in the toolbar a button with the Copilot icon. Clicking this button opens the Copilot chat, automatically passing the context of the current tab or selected records. This feature ensures that Copilot has all the relevant information about your current session, eliminating the need to manually input details and streamlining your workflow.</p> <p></p> <p>Context awareness</p> <p>Etendo Copilot can take advantage of the context of the currently active window or record in Etendo Classic. Clicking the toolbar button updates the current context automatically.</p> <ul> <li>Form Context: If you have a form open (for example, a sales order or a customer record), Copilot retrieves the key fields and any unsaved edits, offering you real-time suggestions or validations.</li> <li>Grid context: When a row is selected in a grid, Copilot captures the details of those specific records, sending Copilot all relevant information so you can receive relevant AI-based recommendations.</li> <li>Tab and window context: In multi-tabbed environments, context must be sent to Copilot each time you switch from one view to another (e.g., from Orders to Products).</li> </ul> <p></p>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#attach-files","title":"Attach Files","text":"<p>Etendo Copilot allows users to attach one or multiple files for assistants to process. This feature supports various file formats, such as <code>.pdf</code>, <code>.csv</code>, <code>.jpg</code>, and more, enabling flexibility in use cases. However, the ability to interpret and process these files depends on the specific assistant configuration, the defined tools, and the underlying model used.</p> <p>This functionality ensures that users can seamlessly incorporate external data into their workflows, whether it involves parsing documents, analyzing spreadsheets, or processing images. Assistants and tools can be tailored to address specific requirements based on the type of attached files, providing contextualized and intelligent responses. </p>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/getting-started/#visualization-mode","title":"Visualization Mode","text":"<p> Pop-up  By default, Copilot operates as a pop-up window, providing convenient access as an integrated assistant in any active window.</p> <p>Full Screen  Use full screen mode for a more comfortable experience during long conversations when viewing Etendo Classic is not necessary. </p> <p> Minimized  Copilot's interface can also be minimized. In this case, a Copilot bubble will be active at the bottom right of the screen.</p>","tags":["Etendo Copilot","AI Integration","Assistants","Intelligent Tools","Agents","User Guide"]},{"location":"user-guide/etendo-copilot/setup-and-usage/","title":"Setup and Usage","text":"<p>Warning</p> <p>Currently, we are migrating the terminology from Assistant to Agent. This change will be reflected in the documentation soon. Where you see Assistant, consider it as Agent and vice versa.</p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#copilot-setup-and-usage","title":"Copilot Setup and Usage","text":"","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#initial-configuration","title":"Initial Configuration","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Client</code> &gt; <code>Client</code> </p> <p>In order to use Copilot, the user must access the Etendo Classic under the role System Administrator and generate a token in <code>Client</code>&gt;<code>Secure Web Service Configuration</code>, clicking generate key.</p> <p></p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#how-to-set-up-assistants","title":"How to Set up Assistants","text":"<p>With Etendo Copilot, it is possible to:</p> <ol> <li>Create your own Assistant: Use the Assistant window to set up a new assistant with all the specific necessary characteristics.</li> <li>Install a module with a pre-configured assistant: Some modules come with pre-configured assistants, which can be used as is or modified to suit your needs. For more information visit, Copilot Extensions bundle.</li> </ol>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#assistant-window","title":"Assistant Window","text":"<p> <code>Application</code> &gt; <code>Service</code> &gt; <code>Copilot</code> &gt; <code>Assistant</code></p> <p>The Assistant window allows you to define and configure assistants.</p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#capabilities","title":"Capabilities","text":"<p>The capabilities of an agent are:</p> <ul> <li>Text Generation: The agent can answer questions or retrieve results from his knowledge base from the LLM model(general knowledge).Those models are able to generate text based on the input prompt, so if we specify in the prompt \"Answer with the result of the operation sent\" and the user sends \"2+2\", the agent will respond with \"4\".</li> <li>Retrieval: The agent can be configured with a custom knowledge base, which can be used to retrieve information. Its usefull when there is documentation or information that the agent can use to answer questions.</li> <li>Tools: The agent can use tools to perform specific tasks. The tools are defined in the Skill/Tool window.</li> <li>Receive attachments: Both agents and tools can utilize files in multiple formats.</li> <li>Read images: There are models can receive images as input, and work directly with them. This feature is only available for the Multi-Model Agent type.</li> </ul> <p></p> <p>Fields to note:</p> <ul> <li>Name: Assistant name</li> <li>Description: Assistant description</li> <li> <p>Prompt: Specific instructions of the assistant. These instructions can be written in English or Spanish.</p> <p>Info</p> <p>The Prompt field can have the following dynamic variables: <code>@ETENDO_HOST@</code>, <code>@ETENDO_HOST_DOCKER@</code> and <code>@source.path@</code>. These variables will be replaced with the values defined in the <code>gradle.properties</code>file.</p> </li> <li> <p>Description: The description of the assistant so that the manager can choose the appropriate assistant for each case. </p> </li> <li>Model: Dropdown with the models available,from the AI Models window.</li> <li>Temperature: This controls randomness, lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive.</li> <li> <p>App Type:</p> <ul> <li> <p>Multi-Model Agent     This type of assistant can use multiple models of different providers, such as OpenAI, Anthropic, etc.      This is the most recommended option to define a simple agent. The Agents can have a knowledge base filled with files, and can use tools to do specific tasks. The agent will strategically use the tools and knowledge base to provide the best possible response.</p> </li> <li> <p>LangGraph</p> <p>This option works as a manager of other assistants and allows to select team members. As a library, LangGraph typically works as a software tool designed to help developers and researchers work with linguistic data in a structured, graph-based format. The default maximum amount of interactions between the manager and the assistants is 50, though a different amount can be configured.</p> </li> <li> <p>Open AI Assistant (Deprecated)</p> <p>These assistants leverage OpenAI technology to provide assistance with a variety of tasks, from natural language processing to complex calculations. The assistants are able to train themselves with their own knowledge base and customized instructions. Currently is deprecated, but still available for use for compatibility reasons. Its recommended to migrate to the Multi-Model Agent type.</p> </li> <li> <p>Langchain Agent (Deprecated)</p> <p>This type of assistant is very similar to the Multi-Model Agent, but its based on a older implementation of Langchain. Currently is deprecated, but still available for use for compatibility reasons. Its recommended to migrate to the Multi-Model Agent type.</p> </li> </ul> </li> </ul> LangGraphOpen AI Assistant (Deprecated) <p>In case of defining an LangGraph type app, the following fields will be enabled: </p> <ul> <li>Graph Preview: It shows the tree of assistants under a certain manager.</li> </ul> <p>In case of defining an Open AI Assistant type app, the following fields will be enabled: </p> <ul> <li>Retrieval: If this checkbox is selected, the assistant can retrieve information from the app source. </li> <li>Open AI Assistant ID: Read-only field in which the ID of the assistant once created is displayed.</li> <li>Code interpreter: Code Interpreter enables the assistant to write and run code. This tool can process files with diverse data and formatting, and generate files such as graphs.</li> <li>Open AI Vectordb ID: Read-only field in which the ID of the vector database is displayed.</li> </ul> <p>If the <code>App type</code> Open AI Assistant, Langchain Agent or Multi-Model Agent are chosen, the tabs shows are Knowledge and Skill and Tools. If the LangGraph option is chosen, the Team Members tab is shown.</p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#buttons","title":"Buttons","text":"<ul> <li> <p>Sync Assistant: This process takes care of updating or creating a new assistant, in case it does not exist. In addition to creating the assistant based on the configurations, it initially gets or updates the list of models, and finally gets and/or uploads the files used as knowledge base.</p> </li> <li> <p>Refresh Preview: Show only when agent type is Langraph, allowing the user to refresh the Graph Preview when changes to the team members are introduced.</p> </li> <li> <p>Check hosts: This button check the configuration of Etendo Classic and Copilot, to ensure that de comunication between them is correct. In case of any error, a message will be shown.</p> </li> <li> <p>Clone: The navbar clone button allows the cloning of agents, making a copy of both all header fields and related records in the tabs. When a assistant is cloned in, the name <code>Copy of</code> is added. </p> <p></p> </li> </ul>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#knowledge-tab","title":"Knowledge Tab","text":"<p>In this tab, you can setup the files that will be used by the assistant as knowledge base, in prompts or questions.</p> <p>Info</p> <p>To load new files, you must do it from the Knowledge base file window, first you define the files and then from this tab you configure how the file will be used.</p> File Limitation for Code Interpreter - Open AI Assistant <p>If an assistant has the Code Interpreter check enabled, a maximum of 20 files is supported. Although it is possible to include more files in the knowledge base, exceeding this limit means that some files must be excluded. To do this, use the Exclude from Code Interpreter option on the files that you do not want to be processed by the Code Interpreter.</p> <p>Info</p> <p>When configuring files for Langchain Agent or Multi-Model Agent, remember the supported formats are <code>.zip</code>, <code>.txt</code>, <code>.pdf</code> and <code>.md</code>. For <code>.zip</code> files, note that these are the only formats that the wizard will read: <code>.txt</code>, <code>.pdf</code>, <code>.md</code>, <code>.py</code>, <code>.java</code> and <code>.js</code>.</p> <p></p> <p>Fields to note:</p> <ul> <li>File: The file selected as knowledge base.</li> <li>Behaviour: The way in which the assistant will use the file. It has three available options:<ul> <li>Add to the assistant as knowledge base: before using this option, it is necessary to synchronize the assistant with the Sync Assistant. This behaviour is possible only with Retrieval checked.</li> <li>Append the file content to the prompt: In this option, Etendo fails if the file is too large and exceeds the token limit allowed by the assistant. Then, this option is suitable for small files only. The file must be in text format.</li> <li>Add content to each question: In this case, the same restrictions from the previous option apply. </li> </ul> </li> <li>Type: read-only field showing the type of file selected in the Knowledge Base File window.</li> <li>Active: checkbox to activate the knowledge base file.</li> <li>Exclude from Code Interpreter: Checkbox to exclude files from being processed by the Code Interpreter during synchronization. This checkbox is only editable if the assistant has the Code Interpreter option enabled.</li> <li>Exclude from Retrieval: Checkbox to exclude files from being considered in the Retrieval process during synchronization.This checkbox is only editable if the assistant has the Retrieval option enabled.</li> <li>OpenAI File ID Read-only field with Open AI file ID, if applicable.</li> <li>Alias In case you select behaviour,  <code>Append the file content to the prompt</code>, by default it adds the file content to the end of the prompt, the alias can be used to replace the file content inside the prompt, using the wildcard @@, with the alias you define in this field.","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#skills-and-tools-tab","title":"Skills and Tools Tab","text":"<p>In this tab, you can define the tools to be used by the assistant.</p> <p></p> <p>Fields to note:</p> <ul> <li>Copilot Tool: The user can select any of the options available in this field, as many as necessary but one at the time.</li> <li>Description: Read-only field. It shows the description of the tool, used by the assistant to choose the appropriate tool for each case.</li> </ul> <p>Info</p> <p>To enter new tools, you must do it from the Skill/Tool window.</p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#team-members-tab","title":"Team Members Tab","text":"<p>In this tab, only present if the LangGraph App type is selected, the LangGraph's assistants are defined. Remember that LangGraph works as a manager of other assistants.</p> <p></p> <p>Fields to note:</p> <ul> <li> <p>Member: The user can select one or more assistants for the manager. </p> <p>Warning</p> <p>Remember that you can only select assistants to which you have defined access in the Assistant Access window.</p> </li> <li> <p>Description:  Read-only field. It shows the description of the assistant, used by the manager to choose the appropriate assistant for each case.</p> <p>Warning</p> <p>Remember that it is not possible to select an assistant without a description.</p> </li> </ul>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#knowledge-base-file-window","title":"Knowledge Base File Window","text":"<p> <code>Application</code>&gt;<code>Service</code>&gt;<code>Copilot</code>&gt;<code>Knowledge Base File</code></p> <p>In the Knowledge Base File window, you can define the files with which the assistants can interact.</p> <p></p> <ul> <li>Name: File Name.</li> <li>Description: File description.</li> <li>Open AI File ID: Read-only field showing the Open AI ID of the file once it is created.</li> <li>Last Synchronization: Read-only field displaying the date of the last update with OpenAI.</li> <li>Skip Splitting: Checking this box allows you to tell Copilot not to split the file into parts when indexing it. This is necessary when the entire contents of the file are needed when reading the file, while maintaining the context of the entire file.</li> <li> <p>File name: Name of the saved file, it must always include the file format. For example, <code>example.pdf</code>.</p> </li> <li> <p>Optional fields by file Type:</p> Attached FileCode IndexHQL QueryOpenAPI Flow SpecificationRemote FileText <p>This type allows you to upload files directly into Copilot for later use during interactions with the assistants. </p> <p>Only available as <code>System Administrator</code> role, as access to the source code is required. This type allows the agents to access, query and generate a zip with code files that will be indexed to the knowledge base. It allows the configuration of paths and regular expressions to filter files, which are defined in the File Path tab.</p> <p>This type allows using an HQL query result as a file for knowledge base file.</p> <p>Fields to note:</p> <ul> <li>HQL: Only shown if the HQL Query option is chosen in the Type field.</li> </ul> <p></p> <p>This type of files, allows to obtain the JSON of the specification of an OpenAPI REST generated from Flows and Request from Etendo, for more technical information you can consult How to document an endpoint with OpenAPI.</p> <p>Fields to note:</p> <ul> <li>OpenAPI Flow  Only show if the OpenAPI Flow Specification is chosen in the Type field.  OpenAPI Flow selector, grouping enpoints common to a specific functionality.</li> </ul> <p></p> <p>You can provide a public URL from which Copilot will retrieve the file when needed. This makes it easy to access text documents and external text resources.</p> <p>Fields to note:</p> <ul> <li>URL: Source file URL.</li> <li>File name: Mandatory name of the saved file, it must always include the file format.</li> </ul> <p></p> <p>This allows you to write the content of the file directly in the text area. This option is useful for small texts that must be versioned in the system.</p> <p>Fields to note:</p> <ul> <li>Text: Text content of the file.</li> </ul> <p></p> </li> </ul>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#file-path-tab","title":"File Path Tab","text":"<p>This tab is Only available as <code>System Administrator</code> role , as access to the source code is required.</p> <p></p> <p>Fields to note:</p> <ul> <li>Path File: Specify the path where the code files you need the assistant to read are located. </li> </ul> <p>Info</p> <p>It is also possible to use other variables such as <code>@source.path@:</code> so that the system automatically replaces it with the path where EtendoERP is installed. Besides, wildcards like <code>*</code> can be used to access all files of the same type in a directory (e.g., <code>test/*.java</code> will access all Java files in the <code>test</code> folder), and this one <code>**</code>, to include subdirectories (e.g., <code>test/**/*.java</code> will access all Java files within <code>test</code> and its subdirectories).</p> <p>Warning</p> <p>As access to the source code is required, both modules and Etendo Classic must be installed in source format.     </p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#buttons_1","title":"Buttons","text":"<ul> <li> <p>Clone</p> <p>The navbar clone button allows the cloning of files, making a copy of both all header fields and related records in the tabs. When a file is cloned in, the name <code>Copy of</code> is added. </p> <p> </p> </li> </ul>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#skilltool-window","title":"Skill/Tool Window","text":"<p> <code>Application</code>&gt;<code>Service</code>&gt;<code>Copilot</code>&gt;<code>Skill/Tool</code></p> <p>In this window , the user can find available tools, distributed in the Copilot bundle, to be used in Copilot assistants.</p> <p></p> <p>Some tools require to communicate with Etendo through WebHooks. Their configuration can be found in the Webhooks tab.</p> <p>Info</p> <p>In case you want to define new tools, visit How to Create Copilot Tools.</p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#assistant-access-window","title":"Assistant Access Window","text":"<p> <code>Application</code>&gt;<code>Service</code>&gt;<code>Copilot</code>&gt;<code>Assistant Access</code></p> <p>In this window, it is possible to configure access roles for each Assistant. This means you can control who has permission to interact with each assistant. This feature is useful for ensuring that users only have access to functions relevant to their responsibilities. This possibility depends on the role level you have.</p> <p></p> <p>Info</p> <p>This configuration is also possible from the Role window.</p> <p>Note</p> <p>In case of deleting an assistant, the related assistant access records are also deleted.</p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#process-request-window","title":"Process Request Window","text":"<p> <code>Application</code>&gt;<code>General Setup</code>&gt;<code>Process Scheduling</code>&gt;<code>Process Request</code></p> <p>In this window, the user can schedule Etendo Copilot background processes by selecting the Assistants Schedule option in the Process field and using all the provided options such as timing, start date, frequency, etc.</p> <p>Info</p> <p>For more information, visit Process Request.</p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#assistant-tab","title":"Assistant Tab","text":"<p>Info</p> <p>This tab is only visible when an Assistants Schedule process is selected.</p> <p>In this tab, the process to be scheduled can be configured. </p> <p></p> <p>Fields to note:</p> <ul> <li>Name: Name description.</li> <li>Assistant: Corresponding assistant for the process.</li> <li>Prompt: Instruction for the process.</li> <li>Active: Checkbox to select if this tool is active or not.</li> </ul>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#conversations-window","title":"Conversations Window","text":"<p> <code>Application</code>&gt;<code>Service</code>&gt;<code>Copilot</code>&gt;<code>Conversations</code></p> <p>In this window, the user can find and access all interactions had with Copilot. These records show specific information about these conversations, such as user, creation date and assistant.</p> <p></p> <p>Fields to note:</p> <ul> <li>User/Contact: The user that interacted with Copilot</li> <li>ExternalID: External provider conversation ID</li> <li>Creation Date: The date of the conversation</li> <li>Visible: Checkbox to mark to make the record visible</li> <li>Last Message: Date of the last message of the conversation</li> <li>Assistant: Assistant selected to interact</li> </ul>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#messages-tab","title":"Messages Tab","text":"<p>In this tab, the different messages included in each specific conversation are shown.</p> <p>Fields to note:</p> <ul> <li>Message: Exact message used in the conversation</li> <li>Time: Time of the message</li> <li>Creation Date: Date of the message</li> </ul>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#ai-models-window","title":"AI Models Window","text":"<p> <code>Application</code>&gt;<code>Service</code>&gt;<code>Copilot</code>&gt;<code>AI Models</code></p> <p>In this window, the user can find and add AI models to be used by the assistants, Available in the drop-down list of models</p> <p>Info</p> <ul> <li>Automatically, the window will be populated with the Etendo default distributed models, after the first assistant synchronization.</li> <li>Also diffrent models and providers must be entered manually.</li> </ul> <p></p> <p>Fields to note:</p> <ul> <li>Code: The code name of the model. It must be in lowercase.</li> <li>Name: The human-readable name of the model.</li> <li>Provider: The provider of the model. It must be in lowercase.</li> <li>Max Tokens: The maximum number of tokens that can be generated by the model. This is a field required in some models, that can be used to limit or expand the model's capabilities, depending of the nature of the model.</li> <li>Default: Read-only field, to identify the default model to use, this configuration is distributed and updated by Etendo.</li> <li>Default Override: If this field is checked, the selected model will have priority over the others. Only one record can have this check selected.</li> <li>Etendo Maintenance Read-only field, to identify the models that are distributed by Etendo.</li> </ul>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/setup-and-usage/#buttons_2","title":"Buttons","text":"<p>Sync Models This process allows to synchronize the models distributed by Etendo on demand.</p>","tags":["Etendo Copilot","Configuration Guide","Assistant Management","AI Tools Setup","User Instructions"]},{"location":"user-guide/etendo-copilot/bundles/overview/","title":"Copilot Extensions Bundle","text":"<p>Warning</p> <p>Currently, we are migrating the terminology from Assistant to Agent. This change will be reflected in the documentation soon. Where you see Assistant, consider it as Agent and vice versa.</p>","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/overview/#copilot-extensions-bundle","title":"Copilot Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.copilot.extensions</code></p> <p> Etendo Marketplace:  Copilot Extensions Bundle</p>","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/overview/#overview","title":"Overview","text":"<p>The Copilot Extensions Bundle includes functionalities that help you streamline your daily tasks using artificial intelligence.</p>","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/overview/#modules","title":"Modules","text":"","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/overview/#etendo-copilot","title":"Etendo Copilot","text":"<p> Javapackage: <code>com.etendoerp.copilot</code></p> <p>Etendo Copilot is a platform that optimizes development time with AI-enabled tools to reduce development time and improve development quality. Additionally, it allows the creation of agents to automate processes or even work with specialized knowledge bases. As the core module of the Copilot Extensions Bundle, Etendo Copilot contains a set of windows where you can create, manage, and interact with AI-driven Agents.</p> <p>Info</p> <p>For more information, visit Etendo Copilot - User Guide.</p> <p>The module includes the following agents:</p> <ul> <li>Bastian: This module includes Bastian, an agent equipped with the Etendo Documentation indexed as a knowledge base. Bastian enables users to search for information within the documentation using natural language queries, providing quick and accurate answers to their questions.</li> </ul>","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/overview/#etendo-copilot-agents","title":"Etendo Copilot Agents","text":"<p> Javapackage: <code>com.etendoerp.copilot.agents</code></p> <p>The Copilot Agents module  is a collection of agents that can be used to do basic tasks with interacting with Etendo Classic, but the main purpose is to be used as a base (or template) to create new agents. By taking advantage of the cloning functionality in the assistants and Knowledge base, they can be replicated and customized agents can be created very easily.</p> <p>The module includes the following agents:</p> <ul> <li>Zip Reader: This agent reads a zip file and returns the paths of the files inside the zip. Its useful to add to a supervisor agent to chain the unzip and</li> <li> <p>Client Initialization Supervisor: This is a supervisor agent that delegates and orchestrates initialization tasks for the client (creation of initial business partners, products, etc.).          This supervisor has the following agents:</p> <ul> <li>Business Partner Generator: This agent creates business partners.</li> <li>Product Generator: This agent creates products.</li> <li>Physical Inventory Generator: This agent creates physical inventories to add stock to the products.</li> <li>Bulk task creator: This agent creates bulk tasks based on a zip file or a CSV/XLSX file. This agent allows to create tasks in bulk to load big amounts of data in the other agents. For example, it can be used to create a big amount of business partners, products from a CSV file, etc.</li> </ul> </li> <li> <p>Order Expert: This agent is a supervisor agent that delegates and orchestrates the creation of purchase and sales orders.      </p> <p>This supervisor has the following agents:</p> <ul> <li>Purchase Order Expert: This agent creates purchase orders.</li> <li>Sales Order Expert: This agent creates sales orders.</li> </ul> </li> </ul> <p>Info</p> <p>This sub-agents presented can be used individually if needed.</p>","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/overview/#etendo-copilot-toolpack","title":"Etendo Copilot Toolpack","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p> <p>The Etendo Copilot Toolpack is a collection of tools that help to developers to add functionalities to agents, such request to an API, send an email, read a file, write a file, and more.</p> <p>Info</p> <p>For more information, visit the Toolpack - Developer Guide, where you will find a detailed list of the available tools, instructions on how to use them, and a guide for developing new tools.</p> <p>Additionally, the Toolpack includes the following agents:</p> <ul> <li>SQL Expert: This agent is designed to help users read information from the database. It allows users to ask questions in natural language and get the SQL query that retrieves the information they need. In order to preserve the security of the database, the query is pre-processed with filters to only retrieve data accessible by the user.    </li> </ul>","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/overview/#etendo-copilot-subapp","title":"Etendo Copilot Subapp","text":"<p> Javapackage: <code>com.etendoerp.subapp.copilot</code></p> <p>The Etendo Copilot Subapp is designed to integrate seamlessly with the existing features of Etendo Copilot, extending its functionality to mobile and tablet devices. This subapplication allows users to interact with AI-driven copilot agents directly from their mobile devices, enhancing productivity and accessibility on the go.</p> <p>The Etendo Copilot Subapp offers key features such as the ability to attach files, interact with Copilot agents, and access specific data based on the user\u2019s role. The assistants dynamically appear according to the user\u2019s assigned role, ensuring a personalized experience tailored to their responsibilities within the system.</p> <p>With compatibility for both mobile phones and tablets, this subapplication ensures flexibility in how users can access and leverage the Copilot agents, facilitating smoother workflows across different devices.</p> <p>Info</p> <p>For more information about sub-application configurations, visit Configure Roles and Dynamic Subapps.</p> <p> </p>","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/overview/#dev-assistant","title":"Dev Assistant","text":"<p> Javapackage: <code>com.etendoerp.copilot.devassistant</code></p> <p>The Dev Assistant is a set of assistants that helps to perform tasks related to development in Etendo Classic, like creating a new window, creating a new module, creating processes, etc.</p> <p>Info</p> <p>For more information, visit: Dev Assistant developer guide.</p>","tags":["Copilot Extensions","AI Tools","Assistant Features","Etendo Modules","Integration Guide"]},{"location":"user-guide/etendo-copilot/bundles/sql-expert/","title":"SQL Expert","text":"<p> Javapackage: <code>com.etendoerp.copilot.toolpack</code></p>","tags":["Copilot","SQL Queries","Database Access","Query Automation","Assistant Features"]},{"location":"user-guide/etendo-copilot/bundles/sql-expert/#overview","title":"Overview","text":"<p>This Assistant is designed to help users read information from the database. It allows users to ask questions in natural language and get the SQL query that retrieves the information they need. Use a webhook to get the necessary information to generate the SQL query. The user can ask questions about the database, and the Assistant will determine whether to return a SQL query or execute the query and return the obtained result.</p>","tags":["Copilot","SQL Queries","Database Access","Query Automation","Assistant Features"]},{"location":"user-guide/etendo-copilot/bundles/sql-expert/#components","title":"Components","text":"<p>The SQL Expert Assistant is composed of the following components:</p> <ul> <li> <p>API Call Tool</p> </li> <li> <p>DBQueryExec - Webhook: This Webhook allows the Assistant to execute SQL queries in the database. The assistant call the Webhook to execute the query in the database and returns the result to the Assistant. This is a secure way to execute SQL queries in the database, as Etendo handles the security of the database connection and query execution.</p> </li> </ul>","tags":["Copilot","SQL Queries","Database Access","Query Automation","Assistant Features"]},{"location":"user-guide/etendo-copilot/bundles/sql-expert/#assistant-setup","title":"Assistant Setup","text":"<ol> <li> <p>This module is included in the Copilot Extensions Bundle</p> <p>Info</p> <p>To be able to include this assistant, the Copilot Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Copilot Extensions Bundle. For more information about the available versions, core compatibility and new features, visit Copilot Extensions - Release notes.</p> </li> <li> <p>Check the necessary <code>ETENDO_HOST</code> variable in the <code>gradle.properties</code> file.</p> gradle.properties<pre><code>ETENDO_HOST=http://localhost:8080/etendo\n</code></pre> <p>Warning</p> <p>Replace http://localhost:8080/etendo with the real url of the Etendo system.</p> </li> <li> <p>A new assistant named SQL Expert has been created in the <code>Application</code> &gt; <code>Service</code> &gt; <code>Copilot</code> &gt; <code>Assistant</code> window.</p> </li> <li> <p>Run Sync Assistant process, loged as System Administrator role.</p> </li> <li> <p>Restart Docker image using <code>./gradlew resources.up</code> tasks.</p> </li> <li> <p>Configure access to the agent from the Assistant Access window.</p> </li> <li> <p>You can use the SQL Expert assistant as a System Administrator</p> <p>Warning</p> <p>In case of using this assistant with other roles: </p> <ol> <li> <p>It must be verified that the role has webhooks execution enabled:      </p> </li> <li> <p>Access must be given to the corresponding role in the  WebHooks window, in the Role tab, for the WebHook DBQueryExec.  This webhook is automatically added when the module is installed.     </p> </li> </ol> </li> </ol>","tags":["Copilot","SQL Queries","Database Access","Query Automation","Assistant Features"]},{"location":"user-guide/etendo-copilot/bundles/sql-expert/#examples","title":"Examples","text":"","tags":["Copilot","SQL Queries","Database Access","Query Automation","Assistant Features"]},{"location":"user-guide/etendo-copilot/bundles/sql-expert/#examples-of-questions-for-information-retrieval","title":"Examples of questions for information retrieval","text":"<ol> <li> <p> What is the amount of the last F&amp;B Espa\u00f1a - Regi\u00f3n Sur organization sales invoice? </p> </li> <li> <p> Can you tell me which is the invoice  with the highest registered amount? </p> </li> </ol> <p>3.      Can you execute the sum of the orders in the last month of 2016? </p>","tags":["Copilot","SQL Queries","Database Access","Query Automation","Assistant Features"]},{"location":"user-guide/etendo-copilot/bundles/sql-expert/#examples-of-sql-query-generation","title":"Examples of SQL query generation","text":"<ol> <li> <p> Can you execute the sum of the orders in the last month? </p> </li> <li> <p> Query to know the name of the best 5 customer of junuary 2011? </p> </li> <li> <p> Query to obtain which is the invoice with the highest registered amount? </p> </li> </ol>","tags":["Copilot","SQL Queries","Database Access","Query Automation","Assistant Features"]},{"location":"user-guide/etendo-mobile/getting-started/","title":"User Guide - Getting Started - Etendo Mobile","text":"","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#user-guide-getting-started-etendo-mobile","title":"User Guide - Getting Started - Etendo Mobile","text":"","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#overview","title":"Overview","text":"<p>Etendo Mobile is a mobile application that allows users to quickly access different Etendo Classic servers and use sub-applications installed on each instance. You can either try the app immediately using the demo mode or perform a full manual configuration to connect to your own servers and sub-applications.</p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#quick-start-demo-try","title":"Quick Start - Demo Try","text":"","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#checklist","title":"Checklist","text":"<p> Download Etendo App.   Use the Demo Try Button to Access Official Sub-Apps. </p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#download-the-etendo-app","title":"Download the Etendo App","text":"<p>Etendo Mobile is available on both Play Store and App Store:</p>  Play store App Store  <p>The app is available in Play Store. Download it here: Download the App here.</p> <p> </p> <p>The app is available in App Store. Download it here: Download the App here.</p> <p></p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#demo-try-mode","title":"Demo Try Mode","text":"<p>Once the app is installed, open it and press the Demo Try button to enter the app without needing any credentials. This allows you to explore and test the official sub-applications installed in https://demo.etendo.cloud server immediately.</p> <p>Info</p> <p>The demo mode provides access to pre-configured sub-applications for testing purposes.</p> <p></p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#client-environment-setup","title":"Client Environment Setup","text":"","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#checklist_1","title":"Checklist","text":"<p> Etendo Classic:Install Required Sub-Applications by developer.   Etendo Classic: Configure Dynamic Sub-Applications.   Etendo Mobile: Configure Server URL.   Etendo Mobile: Log In and Use the Apps. </p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#install-subapps-in-etendo-classic","title":"Install Subapps in Etendo Classic","text":"<p>Warning</p> <p>Some initial configuration steps and the installation of bundles containing the available sub-applications or the development of new sub-applications must be performed by a developer or system administrator. For more information see Developer Guide - Getting Started - Etendo Mobile</p> <p>Available Sub-Apps to Install</p> <p>You can find the sub-applications distributed by Etendo, available for installation and their documentation below.</p> <ul> <li> <p>Etendo Classic Subapp provides users with an efficient way to access the system's key window information, ensuring read-mode access, based on their role. </p> </li> <li> <p>Documents Manager Subapp is a sample sub-application implementation capable of receiving external files and rendering them within Etendo Mobile.</p> </li> <li> <p>Etendo Copilot Subapp designed to integrate seamlessly with the existing features of Etendo Copilot, extending its functionality to mobile and tablet devices. </p> </li> </ul> <p>Info</p> <p>To configure dynamic sub-applications, you must install the corresponding bundle: Mobile Extensions Bundle or Copilot Extensions Bundle.</p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#configure-roles-and-dynamic-subapps","title":"Configure Roles and Dynamic Subapps","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Security</code> &gt; <code>Role</code></p> <ol> <li>Open the Role window.</li> <li>Select the Role to be given access to sub-applications.</li> <li>Make sure that the <code>Is Web Service Enabled</code> check is selected.</li> <li>In the Dynamic Apps tab, create a configuration entry for each sub-application to assign access based on the role.</li> <li> <p>Set the following fields:</p> <ul> <li>App: Select the sub-application from the dropdown list.</li> <li>Version: Assign the version to be used.</li> <li>Active: Mark as active to enable access.</li> </ul> <p>Info</p> <p>Remember that the subapps must be installed beforehand.</p> <p></p> </li> </ol>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#configure-the-server-url-in-etendo-mobile","title":"Configure the Server URL in Etendo Mobile","text":"<ol> <li>Open the Etendo  app.</li> <li>Click the gear icon on the welcome screen to open Settings.</li> <li>Click Add new Link, enter your Etendo Classic server URL, and click Add new Link again to save.</li> </ol> <p>Info</p> <p>You can add multiple server URLs, modify or remove them as needed.</p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#log-in-to-the-app","title":"Log In to the App","text":"<ol> <li>Enter your user credentials assigned by your system administrator.</li> <li>The user will log in with their default Role, Organization, Client, and Warehouse settings.</li> </ol> <p>Note</p> <p>The user remains logged in until they choose to log out.</p> <p> </p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#etendo-mobile-features","title":"Etendo Mobile Features","text":"","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/getting-started/#share-files","title":"Share Files","text":"<p>Etendo Mobile supports receiving files from external applications to be used by sub-applications.</p> <ul> <li>The Documents Manager Subapp can receive and display external files within Etendo Mobile.</li> <li>The Etendo Copilot Subapp can receive any external file and process it through agents in one simple step.</li> </ul> <p>Warning</p> <p>The file sharing feature enables files to be opened by any compatible sub-application via a selector.</p> <p>Info</p> <p>For more technical details, see the Create New Sub-application guide.</p>","tags":["Etendo Mobile","Mobile Apps","Dynamic Sub-apps","Configuration","App Integration"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/","title":"Etendo Classic Subapp","text":"<p> Javapackage: <code>com.etendoerp.subapp.classic</code> </p>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#overview","title":"Overview","text":"<p>The Etendo Classic Sub-app Provides users with an efficient way to access key system window information based on user roles, guaranteeing read access. While editing records is allowed, it is recommended to perform data creation and management primarily in Etendo Classic.</p> <p>The Etendo Classic Sub-application allows users to access and manage their client\u2019s information directly from Etendo Mobile, providing a quick and efficient way to view data and make simple edits. In addition, thanks to features such as scanning, users can see a demonstration of inventory management by scanning products during physical inventory.</p> <p>Info</p> <ul> <li>To be able to include the sub-application, the Mobile Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Mobile Extensions Bundle.  For more information about the versions available, core compatibility and new features visit Mobile Extensions - Release Notes.</li> </ul>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#initial-setup","title":"Initial Setup","text":"","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#show-windows-in-mobile","title":"Show Windows in Mobile","text":"<p> <code>Application</code> &gt; <code>General Setup</code> &gt; <code>Security</code> &gt; <code>Role</code></p> <p>By default, no window will be displayed in the subapp, to allow Etendo windows to be visible: </p> <ol> <li>The user must enter to Etendo Classic under the Administrator role.</li> <li>Select the Role that will give you access to display windows in the sub-application.</li> <li>In <code>Role</code>&gt;<code>Window Access</code> tab filter the windows and check the Show in mobile flag in the required windows to be shown in the app.</li> </ol> <p></p>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#editing-identifiers-in-cards-and-filters","title":"Editing Identifiers in Cards and Filters","text":"<p> <code>Application</code> &gt; <code>Application Dictionary</code> &gt; <code>Windows, Tabs and Fields</code></p> <p></p> <p>When you open a window, you will notice that the records are displayed in cards with certain information that is configurable. More information about cards in the User Interface - Cards and Form View section. By default a title identifier and optionally secondary fields are displayed. </p> <p>To edit this information, can be done fom Etendo Classic by configurations. </p> <p>Warning</p> <p>We recommend that this configuration be done by a developer or someone with technical knowledge. </p> <ol> <li>Log in as <code>System Administrator</code>.</li> <li>Go to <code>Windows, tabs and fields</code> window.</li> <li>Filter the window that you want to modify, and select the main tab, it can have the same name of the window or be called <code>header</code>.</li> <li>In the <code>Mobile Configuration</code> tab, you will find a Default Configuration record, you must delete it and create a new configuration to be exported in a new module under development.</li> <li>Create a line for each field that you want to show as identifier in the cards, you must take into account that the first record created will be the title and the other fields will be subtitles and the order is respected according to the creation date.</li> <li>You must take into account that the searches can filter by each of these fields defined as identifiers, only exact or equal search is allowed, you can also add a maximum of 5 identifiers.</li> </ol> <p>For example, by default the <code>Sales Order</code> window displays the identifiers <code>Document No</code> as title, <code>Order Date</code> and <code>Total Gross Amount</code> as subtitle. </p> <p>In this case we will create a custom view, with <code>Sales Order - Custom View</code> name  and it will be exported in a new module called <code>Mobile Customizations</code>. </p> <p>Add 5 lines, the first one as title will be <code>Business Partner</code>, then  <code>Currency</code>, <code>Document Status</code>, <code>Total Gross Amount</code>, <code>Payment Method</code> and <code>Order Date</code> as subtitles.</p> <p>Warning</p> <p>Remember that the order of the identifiers depends on the creation date, and that a maximum of 5 identifiers can be displayed.</p> <p> </p>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#user-interface","title":"User Interface","text":"","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#navigation-menu","title":"Navigation Menu","text":"<p>When ingress to Etendo Classic Subapp, in the home, the user can find a menu option from which they can:</p> <ul> <li>In the top section of the menu the user picture will be shown.</li> <li>Access to different windows allowed according to their role.</li> <li>Go back, Option to go back to Etendo Mobile.</li> </ul> <p></p>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#cards-and-form-view","title":"Cards and Form View","text":"<ul> <li> <p>The user, according to the role, will have access to certain windows, and they are configurable as can be seen in Show Windows in Mobile section.   Some of the most common windows are:  Product, Business Partner, Sales Invoice, Sales Order, Purchase Invoice, Purchase Order, among others. </p> </li> <li> <p>Each window will display its content by dividing the records into cards, which will contain a preview of the main data of those records. These data are configured by default and customization will be necessary in case the user wants to add more fields or delete any of them, taking into account that only a maximum of 5 fields can be displayed. For more information visit, Editing Identifiers in Cards and Filters </p> </li> </ul> <p></p> <ul> <li> <p>The same field, present in the preview, will be the criteria by which to filter if the user wants to search for a record. Considering the Sales Invoice window as an example, the preview of each record provides information regarding the document number and the invoice date. </p> </li> <li> <p>Records can be searched by inserting a value or keyword in the top Search bar. Each window will have certain filters available by field which will match those fields configured by default to be displayed in the preview of each record. In case the user needs to add more filters or to remove some of them, customization will be required. </p> </li> </ul> <p></p> <ul> <li>By clicking any of those boxes, detailed information about the records will be displayed and can be edited. The fields will be displayed one below the other. Those with this symbol\u00a0 \u201c(*)\u201d in their title are mandatory and those with a pencil icon are editable.</li> </ul> <p></p> <ul> <li>To create a new record, the user must click the icon with the symbol \u201c+\u201d and complete the desired fields. Those with the symbol (*) are mandatory. To edit a field, the user must click the pencil icon. If the field is a list field, click the search icon to display possible options. After selecting the correct data, press the button \u201cDone\u201d.</li> </ul> <p></p> <ul> <li>If the field is a date type, when selecting the search icon a calendar to select the desired date will be displayed. Free text fields are edited by selecting the field and entering the desired value.</li> <li>Once the user has entered the required data, click the save icon. It is important to consider that the document will always remain in Draft status and can only be completed through the Etendo Classic. </li> </ul> <p></p> <ul> <li>To delete a record, press it and drag it to the left or hold it, select all the desired records and then the delete icon. Each time a record is deleted in the App, the same record will be deleted in the Etendo Classic as well.</li> </ul>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#folders-button","title":"Folders Button","text":"<ul> <li>By selecting the Folders button, the user can access the different tabs of the window with information about the records being browsed.</li> <li>When entering any of the tabs, the view will be the same as in the parent window, e.i., the records will be displayed in small boxes and, when entering these, the fields will be displayed one below the other.</li> </ul> <ul> <li>To navigate in different levels, the user can resort to the system buttons (Android) or the arrow in the upper left corner or gesture (both systems).</li> <li>In addition, the path or breadcrumbs of which records and tabs are being navigated can be displayed at the top of the screen.</li> </ul>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#actions-button","title":"Actions button","text":"<p>Through this button, the user can access the list of available processes corresponding to the window being browsed and execute them.</p>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#mobile-app-scanning-helpers","title":"Mobile App Scanning Helpers","text":"<p> Javapackage: <code>com.smf.mobile.scan</code></p>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#overview_1","title":"Overview","text":"<p>The Mobile App Scanning Helpers allows to use the camera to scan codes in Etendo Mobile App.</p>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/etendo-classic-subapp/#usage-examples","title":"Usage Examples","text":"<p>The module has the Inventory Scan process by default, which is responsible for scanning this code from a mobile and thus, change values of the Physical Inventory lines.</p> <p>Now, an example will be shown from the Etendo Mobile application:</p> <p>When entering the Physical inventory window and select a record, it will be possible to see the Actions button.</p> <p></p> <p>In this button, it is possible to see the process it incorporates, called Inventory Scan.</p> <p></p> <p>When pressing this action, it performs the scanning functions to be able to modify values of the physical inventory item that has been selected.</p> <p> </p> <p>When the arrow to continue is selected, the code of the storage bin in which the product is located must be entered manually or scanned.</p> <p> </p> <p>After selecting the storage bin, the product to be modified must be scanned or selected.</p> <p> </p> <p>Finally, enter the amount needed to add of that product, press Done and Save.</p> <p> </p> <p>In the meantime, in Etendo Classic a line will be added in the Scan tab of the physical inventory line, about the scan and the amount that has been set.</p> <p> </p> <p>In the physical inventory header, by selecting a scan line, the Process Inventory Count can be run. This takes care of adding to the stock the quantity that has been set on the scanned product.</p> <p> </p> <p>And here, the quantities will be observed before the process:</p> <p> </p> <p>And after:</p> <p> </p> <p>It will also be noticed that the Product's Stock has been updated in the indicated storage bin with the quantity of the product:</p> <p> </p>","tags":["Etendo Classic","Mobile Extension","Record Management","Inventory Scanning","User Navigation"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/overview/","title":"Mobile Extensions Bundle","text":"<p> Javapackage: <code>com.etendoerp.mobile.extensions</code></p> <p> Etendo Marketplace:  Mobile Extensions Bundle</p>","tags":["Mobile Extensions","Sub-applications","Dynamic Apps","Inventory Management"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/overview/#overview","title":"Overview","text":"<p>This bundle includes mobile sub-applications.</p> <p>Info</p> <ul> <li>To be able to include the sub-applications, the Mobile Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Mobile Extensions Bundle.  For more information about the versions available, core compatibility and new features visit Mobile Extensions - Release Notes.</li> </ul>","tags":["Mobile Extensions","Sub-applications","Dynamic Apps","Inventory Management"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/overview/#modules","title":"Modules","text":"","tags":["Mobile Extensions","Sub-applications","Dynamic Apps","Inventory Management"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/overview/#etendo-classic-subapp","title":"Etendo Classic Subapp","text":"<p> Javapackage: <code>com.etendoerp.subapp.classic</code> </p> <p>The Etendo Classic SubApp is a mobile extension of Etendo Classic, offering users a efficient way to access key business windows based on their role. </p> <p>The Etendo Classic Sub-application allows users to access and manage their client\u2019s information directly from Etendo Mobile, providing a quick and efficient way to view data. In addition, thanks to features such as scanning assistant, users can see a demonstration of inventory management by scanning products during physical inventory.</p> <p>Info</p> <p>For more information, visit Etendo Classic Subapp - User Guide.</p>","tags":["Mobile Extensions","Sub-applications","Dynamic Apps","Inventory Management"]},{"location":"user-guide/etendo-mobile/bundles/mobile-extensions/overview/#documents-manager-subapp","title":"Documents Manager Subapp","text":"<p> Javapackage: <code>com.etendoerp.subapp.docsmanager</code></p> <p></p> <p>The Documents Manager Subapp is a sample sub-application implementation capable of receiving external files and rendering them within Etendo Mobile.</p> <p>Note</p> <p>The application supports different formats of Images, Audio, PDF, CSV and txt. Although on iPadOS it may be limited.</p> <p>Info</p> <p>For more technical information, visit Create New Subapplication - Receiving Shared Files from Etendo Mobile.</p>","tags":["Mobile Extensions","Sub-applications","Dynamic Apps","Inventory Management"]},{"location":"user-guide/etendo-mobile/user-interface/user-interface/","title":"User Interface","text":"","tags":["Etendo Mobile","User Interface","App Settings","Mobile Navigation","Sub-application Management"]},{"location":"user-guide/etendo-mobile/user-interface/user-interface/#etendo-mobile","title":"Etendo Mobile","text":"","tags":["Etendo Mobile","User Interface","App Settings","Mobile Navigation","Sub-application Management"]},{"location":"user-guide/etendo-mobile/user-interface/user-interface/#settings-screen","title":"Settings Screen","text":"<p>In the Setting screen window, the user is able to set the language to use in the app.</p> <p>Note</p> <p>Remember that as soon as the app is downloaded, the server URL must be set. </p> <p></p>","tags":["Etendo Mobile","User Interface","App Settings","Mobile Navigation","Sub-application Management"]},{"location":"user-guide/etendo-mobile/user-interface/user-interface/#home-screen","title":"Home Screen","text":"<p>After you have logged in, you will be redirected to Home.</p> <p></p> <p>Here, by selecting the profile image, it is possible to navigate to the Settings and Profile screens.</p> <p></p> <p>If the drawer is displayed, it is possible to navigate to Home and also to the sub applications previously loaded. </p> <p>Note</p> <p>To be able to include sub-applications, the Mobile Extensions Bundle must be installed. To do that, follow the instructions from the marketplace: Mobile Extensions Bundle.  For more information about the versions available, core compatibility and new features visit Mobile Extensions Bundle - Release Notes.</p> <p></p>","tags":["Etendo Mobile","User Interface","App Settings","Mobile Navigation","Sub-application Management"]},{"location":"user-guide/etendo-mobile/user-interface/user-interface/#profile-screen","title":"Profile Screen","text":"<p>In this section, the user can see the information of the logged in person: Name, Role, Organization, Client and Warehouse.</p> <p>In case the user has a picture, it will be shown both in this window and in the top section of the navigation menu in Etendo. </p> <p></p> <p>Note</p> <p>The role can only be modified from Etendo Classic, so each user will enter with their default role setup.</p>","tags":["Etendo Mobile","User Interface","App Settings","Mobile Navigation","Sub-application Management"]},{"location":"whats-new/etendo-news/","title":"Etendo News","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#_1","title":"Etendo News","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#may-2025","title":"May 2025","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-classic","title":"Etendo Classic","text":"<ul> <li> <p> New Etendo Classic Release: Version 25.1.x Now Available!</p> <p>The latest version 25.1.x of Etendo Classic is here! This release brings compatibility updates with Java 17, PostgreSQL 16, Tomcat 9 and third-party dependencies, ensuring a modern and robust tech stack. All supported modules have been updated for full integration. Want to know more? Check out the developer updating guide.</p> <p></p> </li> </ul> <ul> <li> <p> New Shipment and Invoicing Statuses in Purchase Orders and Goods Receipts</p> <p>This release introduces improved visibility in procurement processes. In the Purchase Order window, the status bar now shows shipment and invoicing percentages. At the line level, you\u2019ll see detailed quantities for what has been invoiced and shipped. Similarly, the Goods Receipt window shows invoicing percentages at both header and line levels.</p> </li> <li> <p> Easily Exclude Promotions and Discounts with a Simple Checkbox</p> <p>A new checkbox in the More Information section of Sales Order and Sales Invoice lines allows users to cancel automatic discounts and promotions. This gives you more control over pricing on a per-line basis.</p> </li> <li> <p> Improved Navigation in the Create Invoices from Orders Process</p> <p>Now it\u2019s easier to work with orders! The Create Invoices from Orders process includes improved navigation features that let you access filtered orders more efficiently.</p> </li> <li> <p> Enhanced Purchase Invoice Voiding with Supplier Reference</p> <p>When canceling a purchase invoice, Etendo creates a reverse document that now references the supplier\u2019s cancellation document. The invoice reactivation process includes a new <code>Supplier Reference</code> field to ensure clear traceability and alignment.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#april-2025","title":"April 2025","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-classic_1","title":"Etendo Classic","text":"<ul> <li> <p> Remember: You can simplify the calculation of commissions with Etendo Classic</p> <p>With Etendo Classic, managing sales commissions is streamlined and flexible. Commissions can be calculated based on sales orders or invoices, using diffrent criteria and filters such as quantities sold or amounts invoiced: </p> <p></p> <p>Once calculated, sales agent payments can be generated automatically.  You can configure commissions to apply to all invoices or only paid ones, and decide whether to include invoices without an assigned sales agent. </p> <p></p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions","title":"Copilot Extensions","text":"<ul> <li> <p> Copilot supports multi-vendor models such as  OpenAI, Ollama, Anthropic, and Deepseek, also image input for compatible models</p> <p></p> <ul> <li> <p>In version 1.13.0 of the Copilot Extensions bundle, Etendo Copilot expands its capabilities by supporting multiple vendors, including:</p> <ul> <li>Anthropic: Specializes in code generation, making it the best choice for code-related tasks.</li> <li>Deepseek: A cost-effective alternative for generative tasks similar to OpenAI.</li> <li>Ollama (self-hosted models): Ideal for users running their own models on their infrastructure.</li> </ul> </li> <li> <p>Additionally, images can now be processed directly by language models without requiring a separate tool for pre-processing.</p> </li> </ul> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#march-2025","title":"March 2025","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-mobile","title":"Etendo Mobile","text":"<ul> <li> <p> Receive and share files with Etendo Mobile</p> <p></p> <p>A new feature has been added to Etendo Mobile to streamline integration with external applications. With the new Share files option, you can now receive files from outside apps and use them directly in subapplications like:</p> <ul> <li>Documents Manager, where you can view files right in Etendo Mobile.</li> <li>Copilot, where specialized assistants can extract information from images, transform audios into sales orders, and much more.</li> </ul> <p>This feature improves data flow and efficiency across your platform.</p> <p>Try it now using the Demo Try button in the app, or download the latest version from the App Store or Play Store.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#financial-extensions","title":"Financial Extensions","text":"<ul> <li> <p> Now in the advanced financial reports you can view accounting dimensions.     ---</p> <p></p> <p>In version 1.25.0 of the Financial Extensions bundle, improvements to advanced financial reporting are included.In this version, the General Ledger Report Advanced and Journal Entries Report Advanced will allow you to view and filter by the desired accounting dimensions. In addition, you can navigate to related entities in each report!</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-classic_2","title":"Etendo Classic","text":"<ul> <li> <p> 25.1 Release Candidate Now Available!</p> <p>The new version 25.1 of Etendo Classic introduces the latest stack enhancements. While this version is currently in Release Candidate (RC) status, you can already explore the detailed API changelog to review the changes and improvements included in this release.</p> </li> <li> <p> Fixed Issue</p> <p>As of version 24.3.7, a bug affecting dropdown selectors in dimensional reports has been fixed. In environments running Etendo 24.3.6 or earlier, the first record in combo boxes was displayed incorrectly, showing a concatenation of all values instead of the correct individual value. This issue was caused by improper handling of <code>&lt;option&gt;</code> tags in HTML.</p> <p>The bug has been resolved in 24.3.7, and Etendo 24.4.0 or later was not affected, as the refactor to fix the issue was already included in that version. </p> <p>See more details in Issue #629.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#february-2025","title":"February 2025","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-iso","title":"Etendo ISO","text":"<ul> <li> <p> Optimizations</p> <p>As of version 24.4.3, the Etendo ISO includes performance improvements with optimized memory and database settings to enhance system efficiency. See more details in Issue #573.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_1","title":"Copilot Extensions","text":"<ul> <li> <p> Now, you can clone agents in one click</p> <p></p> <p>In version 1.12.0 of the Copilot Extensions bundle, the functionality to clone agents and knowledge bases is added, allowing you to modify and customize the agents' wizards according to your needs.</p> </li> </ul> <ul> <li> <p> Improvements in agent knowledge bases</p> <p>In version 1.12.0 of the Copilot Extensions bundle, new capabilities are added:</p> <p></p> <p>For more info visit Knowledge Base File windows documentation.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#financial-extensions_1","title":"Financial Extensions","text":"<ul> <li> <p> Enhanced asset management with accounting dimensions</p> <p></p> <p>In version 1.22.0 of the Financial Extensions bundle, with the Accounting Dimensions Assets module improves asset management by allowing users to assign accounting dimensions to assets like Business Partner, Activity, and Cost Center among others. These dimensions transfer to amortization lines. Also, amortizations are now grouped by period (monthly or yearly), enhancing financial reporting accuracy and ensuring consistent asset depreciation tracking.</p> </li> <li> <p> Gain better control with the Not Posted Documents window</p> <p></p> <p>In version 1.22.0 of the Financial Extensions bundle, with the last version of Bulk Posting, the Not Posted Documents windows provides a comprehensive view of all completed financial transactions that have not yet been posted. This report ensures that no pending transactions are overlooked before closing an accounting period or running financial reports.</p> <p>Users can filter by date range and navigate directly to unposted documents, including journals, invoices, payments, and financial transactions, among others streamlining the posting process.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#january-2025","title":"January 2025","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_2","title":"Copilot Extensions","text":"<ul> <li> <p> You can now use multiple files in conversations with an agent</p> <p></p> <p>In version 1.10.0 of the Copilot Extensions bundle, new functionalities have been added:</p> </li> </ul> <ul> <li> <p> Upload multiple files</p> <p>It is now possible to attach multiple files at once in Etendo Copilot, optimizing document management and improving the user experience.</p> </li> <li> <p> Automatic permissions management</p> <p>When creating a new agent, the necessary permissions will be automatically generated for its execution in the current role, reducing friction in the configuration.</p> </li> <li> <p> Optimized visualization</p> <p>The agent window now shows the module to which each agent belongs, improving organization and navigation.</p> </li> <li> <p> Tool Pack: New tool to read Excel and CSV files </p> <p>XLS Tool has been added in the available Tools, allowing agents to read and process data directly from Excel or CSV files, facilitating automation and integration of structured information.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#december-2024","title":"December 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-classic_3","title":"Etendo Classic","text":"<ul> <li> <p> New Etendo Classic Release Available!</p> <p>Version 24.4.0 of Etendo Classic has been released for the last quarter of the year. All packages have been updated to ensure integration with this new release.  In addition this release includes all bugs resolved in the quarter.</p> </li> <li> <p>The document completion process allows the use of Credit Payment as a payment method again. </p> <p>From now on, the completion is again one record at a time and is added to the Bulk Completion button by installing the Essential Extensions bundle.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#essentials-extensions","title":"Essentials Extensions","text":"<ul> <li> <p> Managing documents has never been so fast and easy</p> <p></p> <p>In version 1.7.0 of the Essentials Extensions bundle, you can effortlessly manage multiple records with the Bulk Completion feature. Select the records you want to complete, reactivate, or close, and process them all at once with a single click.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#warehouse-extensions","title":"Warehouse Extensions","text":"<ul> <li> <p> More accurate automatic stock reservation</p> <p></p> <p>In version 1.10.0 of the Warehouse Extensions bundle, with the Automatic Warehouse Reservation module the stock reservations can be limited only to the warehouse specified in the order header. This way you can ensure that your orders always use the right warehouse.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#financial-extensions_2","title":"Financial Extensions","text":"<ul> <li> <p> Automated remittances: Simplify remittance management by automating the settlement and protest process.</p> <p></p> <p>In version 1.21.0 of the Financial Extensions bundle, with the Automated remittances module, when processing remittances, bank instructions are created and automatically settled with the current date. </p> <p>The Protest Remittance button has also been added, making it possible to return receipts in collection remittances from a single place.</p> </li> <li> <p> Bank account and payment management allows for more automation</p> <p></p> <p>In version 1.21.0 of the Financial Extensions bundle, with the Advanced Bank Account Management module, added the possibility to set a default bank account in the busines partner configuration, as well as to define bank accounts for each location.  The possibility to select the bank account when adding payments and even edit payment plans with the Modify Payment button has also been added.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_3","title":"Copilot Extensions","text":"<ul> <li> <p> Copilot allows the use of multiple AI models from different suppliers.</p> <p>In version 1.9.0 of the Copilot Extensions bundle, Multi-Model Assistant type was added, this agents extends the <code>Langchain</code> type with the particularity that it can be used with models from various suppliers such as Anthropic or Gemini, in addition to the existing OpenAI models. In addition, the AI Models window was added where the user can manage the models to be used by the different agents.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#november-2024","title":"November 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_4","title":"Copilot Extensions","text":"<p> New Etendo Copilot Release Available!</p> <p>New Copilot Extensions bundle version 1.8.0 </p> <ul> <li> <p>Improve your Python Tools development with the Code Run assistant</p> <p>The Code Run assistant combined with the Docker Tool introduces a safe and efficient way to run Python and Bash code inside isolated Docker containers. This tool revolutionizes the way coding tasks are handled. The wizard specializes in managing Docker containers to execute Python scripts, ensuring a reliable and isolated environment.</p> <p>Equipped with advanced capabilities, the assistant prioritizes Python for troubleshooting, manages library installations dynamically, integrates Bash commands for flexible operations and handles file processing with precision. Whether you are troubleshooting, automating tasks or testing scripts, this tool ensures efficiency and security. Transform your development workflow with this powerful addition to Etendo.</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#october-2024","title":"October 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_5","title":"Copilot Extensions","text":"<p> New Etendo Copilot Release Available!</p> <p>New Copilot Extensions bundle version 1.7.0 </p> <ul> <li> <p>Boost Your Development Workflow with the New Dev Assistant!</p> <p>The Dev Assistant module streamlines and accelerates your development workflow in Etendo Classic. With specialized assistants, you can now easily create buttons, windows, tabs, tables, event controllers, Jasper reports, and background processes. </p> <p>This assistants are designed to enhance productivity and reduce complexity, enabling efficient management and construction of all components within Etendo. Take your development process to the next level!</p> </li> </ul> <ul> <li> <p>Copilot in Mobile: Try Copilot on Your Mobile Devices and Tablets!</p> <p>The new Etendo Copilot sub-application enables you to interact with AI-powered assistants from anywhere. Now, you can attach files, access role-specific windows, and receive real-time, personalized assistance directly on your mobile or tablet. Enjoy seamless integration with all the familiar features of Etendo, right from your fingertips!</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#dependency-manager","title":"Dependency Manager","text":"<p> Managing Etendo modules and dependencies has never been so easy </p> <p>The Dependency Manager module allows users to access all published packages in Etendo Software repositories directly from the Etendo Classic interface. With the Dependency Management window, you can browse available bundles, check version details and dependencies, and easily install new packages. The module also supports updating, removing, and modifying installed modules, giving you full control over your environment.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#september-2024","title":"September 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-classic_4","title":"Etendo Classic","text":"<p> New Etendo Classic Release Available!</p> <p>Version 24.3.0 of Etendo Classic has been released for the third quarter of the year. All packages have been updated to ensure integration with this new release.  In addition this release includes all bugs resolved in the quarter.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_6","title":"Copilot Extensions","text":"<p> New Etendo Copilot Release Available!</p> <p>New Copilot Extensions bundle version 1.5.0 </p> <ul> <li> <p>New Feature Update: Zip File Support for LangChain Assistants</p> <p></p> <p>We are excited to announce a new functionality in LangChain assistants: the ability to upload <code>.zip</code> files directly into the knowledge base! These <code>.zip</code> files can contain a variety of file formats, including <code>.txt</code>, <code>.pdf</code>, <code>.md</code>, <code>.py</code>, <code>.java</code>, and <code>.js</code>. This enhancement allows developers to train assistants with example source code. Boost your assistant\u2019s capabilities with this powerful new feature!</p> </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#august-2024","title":"August 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_7","title":"Copilot Extensions","text":"<p> New Etendo Copilot Release Available!: Boost Your Productivity</p> <p></p> <p>The newest version 1.4.0 of the Copilot Extensions bundle brings the following key enhancements in Etendo Copilot:</p> <ul> <li> <p>New Capabilities:</p> <ul> <li>Database Queries: Use system database queries as knowledge bases to automate tasks under specific conditions.</li> <li>Copilot Stream: Track in real-time which assistant or tool is working.</li> <li>Improved UX: The chat now retains the last assistant used for seamless interaction.</li> </ul> </li> <li> <p>Assistants Updates:</p> <ul> <li>Langchain Assistants: Now manage local knowledge bases, keeping your data secure.</li> <li>LangGraph Assistants: Manage a team of assistants, delegating tasks efficiently. </li> </ul> </li> </ul> <p>These updates make Etendo Copilot more powerful, secure, and user-friendly, driving efficiency to new heights.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#platform-extensions","title":"Platform Extensions","text":"<p> Docker Management</p> <p></p> <ul> <li>In version 1.18.0 of the Platform Extensions bundle, the new Docker Management module has been introduced.</li> <li>This module simplifies the deployment of services by allowing you to configure the entire infrastructure your service requires using Etendo modules.</li> <li>PostgreSQL Database Service is included in the module, making service installation faster and easier than ever.</li> </ul> <p> Tomcat Dockerized Service</p> <ul> <li>In version 1.18.0 of the Platform Extensions bundle, the new Tomcat Dockerized Service module has been introduced, which simplifies the installation of Etendo on any server.</li> <li>With this module, setting up Etendo becomes a quick and straightforward process, removing the complexities typically associated with server configuration. </li> </ul>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#warehouse-extensions_1","title":"Warehouse Extensions","text":"<p> Product Operations</p> <p></p> <p>In the version 1.8.0 of the Warehouse Extensions bundle, the Product Operations functionality has been included. This module allows you to centralize and control all your product movements with Products Operations. View every transaction, from shipments and receipts to costs and location, in one place. Simplify analysis and get a clear view of your operations' performance.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#july-2024","title":"July 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_8","title":"Copilot Extensions","text":"<ul> <li> <p> Tool Pack</p> <p>The Tool Pack module, available from version 1.3.1 of the Etendo Copilot bundle, includes a collection of tools designed to enhance the capabilities of Etendo Copilot assistants. This module enables functionalities such as file reading and writing, directory navigation, and email sending, thereby significantly expanding the operational scope of the assistants.</p> </li> <li> <p> OCR Tool</p> <p>From version 1.3.0 of the Copilot Extensions bundle, the possibility to add a parameter to the OCR Tool to specify and detail the analysis on images has been included, and Codbar tool reader has been added to the tool capable of reading barcodes on images.</p> </li> <li> <p> Purchase Expert</p> <p>As of version 1.3.0 of the Copilot bundle, the Attach File tool was included, a tool capable of adding attachments to any record in Etendo.</p> </li> <li> <p> Dev Assistant</p> <p>From version 1.1.0 onwards, the Reference Creator assistant was included, capable of creating list type references to be used in the development process.</p> </li> </ul> <p> Fixed Issues</p> <p>In version 1.2.1, Issue #5 which caused incorrect rendering of line breaks in code blocks, has been resolved.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#financial-extensions_3","title":"Financial Extensions","text":"<p> VAT Regularization</p> <p>In version 1.16.1 of this bundle, the VAT Regularization module has been included, which allows you to easily adjust the accounts to ensure that the VAT balance is adjusted.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#june-2024","title":"June 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-classic_5","title":"Etendo Classic","text":"<p> New Release Available!</p> <p>Etendo Classic version 24.2.0 has been released, corresponding to the second quarter of the year. All bundles have been updated to ensure seamless integration with this new version.</p> <p> Fixed Issues</p> <p>In version 24.1.8, Issue #270, which caused unexpected execution of callouts in the Sales Order window, has been resolved.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_9","title":"Copilot Extensions","text":"<p> Optimizations</p> <p>Starting with version 1.2.0 of this package, bugs have been fixed and stability improvements have been made to Copilot. This update also introduces visual improvements to the chat by making it possible to enter text on more than one line.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#financial-extensions_4","title":"Financial Extensions","text":"<p> G/L Journal Clone</p> <p>Starting with version 1.15.0 of this bundle, the GL Journal Clone module is included, which makes it possible to clone the Simple GL Journal.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#may-2024","title":"May 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_10","title":"Copilot Extensions","text":"<p> SQL Expert</p> <p>In the version 1.1.0 of the Copilot Extensions bundle, the SQL Expert has been included. With this assistant, you will be allowed to formulate questions in natural language, and the system will automatically generate the necessary SQL query to return data in code or natural language.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#april-2024","title":"April 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_11","title":"Copilot Extensions","text":"<p> Purchase Expert Assistant</p> <p>In the version 1.1.0 of the Copilot Extensions bundle, the Purchase Expert Assistant has been included. Your purchase orders are made easier with the new Copilot assistant. Interact via text or by uploading images or PDFs with the purchase order data, and the assistant will automatically generate a draft.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#spanish-localization","title":"Spanish Localization","text":"<p> Optimizations</p> <p>As of version 1.9.4 of this bundle, we have simplified maintenance by replacing the <code>org.openbravo.util.saaj.impl</code> and <code>org.openbravo.util.javax.xml.soap</code> module dependencies with the new Maven dependencies Jakarta SOAP Implementation and Jakarta SOAP with Attachments API.</p> <p>To take advantage of these enhancements, when upgrading to version 1.9.4 or higher, be sure to manually remove the old modules from the <code>/modules</code> directory so that the new build will use the new dependencies.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#march-2024","title":"March 2024","text":"","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#etendo-classic_6","title":"Etendo Classic","text":"<p> Optimizations</p> <p>As of version 24.1.0, the support for Tomcat 9 has been updated.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#copilot-extensions_12","title":"Copilot Extensions","text":"<p> OCR Tool</p> <p>In the version 1.0.0 of the Copilot Extensions bundle, the OCR Tool has been included. With this tool designed for optical character recognition, you will be able to extract text from images or PDF files.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#procurement-extensions","title":"Procurement Extensions","text":"<p> Purchase Invoice Validation</p> <p>In the version 1.0.0 of the Procurement Extensions bundle, the Purchase Invoice Validation functionality has been included. Now, you will be able to avoid the duplication of purchase invoices through established rules and automatic validations.</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-news/#platform-extensions_1","title":"Platform Extensions","text":"<p> Optimizations</p> <p>As of version 1.13.2 of this bundle, the module dependency <code>org.openbravo.util.javax.xml.soap</code> has been removed as it was not needed for any module in this bundle. In case this dependency is needed for development, we recommend using the Maven dependency Jakarta SOAP with Attachments API</p>","tags":["Etendo News","New Features","Release Notes","Functional Documentation","Versions"]},{"location":"whats-new/etendo-release-cycle/","title":"Etendo Release Cycle","text":"<p>The launch phase covers all the steps that are necessary to deliver a successful release to the market, including (but not limited to):</p> <ul> <li>quality assurance testing (QA)</li> <li>early adopters testing (Innovators program)</li> <li>and training</li> </ul> <p>Etendo solutions are released on a quarterly basis.</p> <ul> <li>YX is the year and QZ the quarter of the year.</li> </ul> <p></p> <p>As shown in the image above, the duration of a release cycle is nine months. For instance, and in the case of Etendo Y1Q4 development activities started dated on July\u00a0and will finish at release dated on March.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#release-phases","title":"Release Phases","text":"<p>The release process consists of the following phases: </p> <ul> <li>3-month development cycle: The engineering team focuses on code development, review, testing, and integration.</li> <li>3-month QA cycle: The QA team tests and validates the release according to the Test Plan, creates user documentation, and trains the support team.</li> <li>3-month Etendo Early Adopters Program: The release is initially published as QA Approved (QAA). This phase includes a maturation cycle to evolve the release from QA Approved (QAA) to Confirmed Stable (CS).</li> </ul> <p></p> <p>Note</p> <p>Etendo strongly recommends that only releases that have reached CS are used in production environments.</p> <p>In summary, Etendo will release Confirmed Stable (CS) releases in March, June, September, and December on a yearly basis.</p> <p>Info</p> <p>Etendo will give support to the current year and prior year releases.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#early-adopters-testing-innovators-program","title":"Early Adopters Testing (Innovators Program)","text":"<p>As already mentioned, Etendo has established an innovators program based on a maturation cycle to evolve Etendo releases from QAA to Confirmed Stable, in collaboration with a set of Etendo end clients.</p> <p>These clients install the releases in QAA status for them to use it and help Etendo to mature it.</p> <p>QAA releases have passed automated tests, all fixed issues have been individually verified and the QA team has completed a set of manual tests to identify further improvement.</p> <p>When it reaches the QAA stage, the release is not yet available for a wide audience but it can already be used for production purposes for those who have a particular interest, explicitly assuring full alignment with the end client.</p> <p>As part of the Innovators program, interested Partners will receive support in the update process of a customer\u2019s production environment to the current QA Approved release.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#emergency-releases","title":"Emergency Releases","text":"<p>When required, there are out of schedule emergency releases which are used for targeted fixing of very important bugs. These bugs may have been reported by our partners, members of the development team or simply bugs found by our automations that are periodically testing our products.</p> <p>Those releases can be identified by their version which is constructed as follows ETXXQY.Z, where\u00a0:</p> <ul> <li>XX is the year of the base release</li> <li>QY is the quarter of the base release</li> <li>Z is a minor digit number starting with 1</li> </ul> <p>and will run through the same maturity status and release process.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#quality-assurance","title":"Quality Assurance","text":"<p>In Etendo, we carry out constant processes to ensure the quality and safety of our product throughout the entire development cycle. The following are the main steps of our quality assurance process.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#code-analysis","title":"Code Analysis","text":"<p>When code changes or additions are made, the code is subjected to a thorough analysis using the following tools:</p> <ul> <li>Sonar: Our development repositories employ Sonar rules to analyze code in pull requests created or updated. Sonar identifies potential problems and makes suggestions to improve code quality.</li> </ul> <p></p> <ul> <li>Auto Code Reviewer: We have developed a tool called Auto Code Reviewer, which uses ChatGPT to analyze the changes made in the Pull Request and make suggestions. This tool complements the Sonar analysis and helps us to maintain high quality standards in our code and architecture.</li> </ul>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#automated-testing","title":"Automated Testing","text":"<p>Once a pull request has been created or updated, automated tests are run using Jenkins, our continuous integration system. Through a scheduled job in Jenkins, the following types of tests are executed:</p> <ul> <li>Compilation Tests: At this stage, we test that the code is compiled correctly, identifying possible errors at compile time.</li> <li>Unit Test: We run automated tests designed to verify the behavior and functionality of individual units of code. These tests help us to identify bugs and ensure the correct functioning of the different parts of the system.</li> </ul> <p></p> <p>If bugs are detected in any of these automated tests, the development team is immediately notified so that they can address and correct them.</p> <p>Once a pull request has passed the code review and quality assurance processes specific to each development, the merge to the \"develop\" branch is performed. At this point, automated tests are re-run to ensure that the code integration has not introduced new problems.</p> <p>Along the lines of the automatic tests that are performed, we have the stress and interface tests that are performed monthly:</p> <ul> <li>Stress Testing: In addition to the regular automated tests, we conduct stress tests on our applications on a monthly basis. These tests help us identify potential bottlenecks, resource limitations, and areas that may cause degradation or failures under high user loads. By simulating concurrent user interactions and generating high traffic, we evaluate the system's responsiveness, scalability, and overall robustness. Performing these tests monthly ensures that our applications can handle increasing user demands and maintain optimal performance.</li> <li>Selenium Interface Testing: To ensure the functionality and user experience of our applications, we conduct monthly Selenium interface testing. Selenium allows us to automate browser interactions and perform tests on different web browsers, such as Firefox and Google Chrome. Using Selenium, we create test scripts that simulate user actions, navigate through the application's interface, and verify that all elements and features work as expected. This ensures consistency across different browsers and helps us identify any compatibility issues that may arise. Conducting these tests monthly allows us to catch any potential interface issues and ensure a seamless user experience across various platforms.</li> </ul>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#vulnerability-analysis-and-deprecation","title":"Vulnerability Analysis and Deprecation","text":"<p>On a quarterly basis, we run a Static Application Security Testing (SAST) and Software Composition Analysis (SCA) tools to detect possible vulnerabilities or deprecations in the libraries and stack we use. This analysis allows us to keep our application updated and secure. Based on the results of this tool, we start the corresponding update process, considering the priority level assigned to each identified change.</p> <p></p> <ul> <li>Update with API Changes (major): This type of upgrade involves significant changes to the application programming interface (API). A major upgrade generally involves substantial modifications to the way system components or modules interact with each other, which may require extensive changes to existing code to make it compatible with the new version. These changes may include the introduction of new functionality, removal of obsolete features, changes to the data structure or communication protocols. Due to the nature of these changes, a major upgrade is scheduled once a year to allow sufficient time to plan, test and make the necessary modifications to the code and systems using the updated API.</li> <li>Soft Update: In a soft update, the changes made are minor, not significant to the API and generally focused on performance improvements, bug fixes, optimizing existing code or updating external dependencies. These changes are less disruptive and can be implemented more frequently, so a soft upgrade is performed quarterly to keep the system up to date and take advantage of continuous improvements. Although the changes are not drastic, extensive testing is still recommended to ensure stability and compatibility with dependencies and related components.</li> <li>CRITICAL Update: A critical update addresses a major security vulnerability or issue that could be exploited by attackers to compromise the integrity, confidentiality or availability of the system. This type of update is considered an emergency and must be implemented quickly by releasing a hotfix to resolve the security issue in the shortest time possible. Critical updates may include security patches, workarounds or mitigations to prevent exploitation of the vulnerability while a more complete solution is being worked on.</li> </ul>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#integration-of-snyk-in-vulnerability-analysis","title":"Integration of Snyk in Vulnerability Analysis","text":"<p> At Etendo, we are committed to ensuring the security of our applications at all times. That's why one of the prominent tools we use is Snyk, a powerful Software Composition Analysis (SCA) solution.</p> <p>Snyk enables us to conduct a comprehensive analysis of the libraries and dependencies used in our application stack. By integrating our repositories with Snyk, we gain detailed visibility into potential vulnerabilities and deprecations that may exist in our code.</p> <p>Snyk is widely recognized for its ability to accurately and promptly identify vulnerabilities in software dependencies. Through Snyk, we can perform continuous and real-time analysis of our dependencies, enabling us to detect any security issues early on and take proactive measures to address them.</p> <p>The integration with Snyk provides us with detailed information on each identified vulnerability or deprecation, including descriptions, severity levels, and specific recommendations for resolution. This information is invaluable as it allows us to assess and prioritize the necessary changes based on their potential impact on our application.</p> <p>Based on the analysis results from Snyk and other security tools, we initiate the corresponding update process, considering the assigned priority level for each identified change. This approach enables us to effectively manage security risks and keep our application up to date and secure for our users.</p>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/etendo-release-cycle/#etendo-release-notes","title":"Etendo Release Notes","text":"<p>Every time Etendo releases a new version, all that it contains is documented in the corresponding Release Notes wiki page. It is important to highlight that within Etendo release notes wiki page, there are direct links to what a given release includes. New versions of Etendo can include:</p> <ul> <li>new functionalities implemented according to the corresponding product roadmap,</li> <li>fixes of the issues reported by Etendo partners, fixed by Etendo according to the corresponding Etendo partner\u2019s services level agreement,</li> <li>and extensions, modules which extend the functionality of Etendo.</li> </ul>","tags":["Etendo Release Cycle","Release Phases","QA","Quality Assurance","Code Analysis","Snyk","Vulnerability and Deprecation"]},{"location":"whats-new/release-notes/etendo-classic/iso/","title":"Etendo Classic - ISO Image","text":"<p> Installation Guide: ISO Installation Guide</p> Version Publication Date ISO Image 25.1.2 21/05/2025 25Q1.2.iso 24.4.3 10/02/2025 24Q4.3.iso 24.4.0 20/12/2024 24Q4.0.iso 24.3.0 30/09/2024 24Q3.0.iso 24.2.0 28/06/2024 24Q2.0.iso 24.1.4 03/05/2024 24Q1.4.iso 24.1.0 28/03/2024 24Q1.0.iso 23.4.0 28/12/2023 23Q4.0.iso 23.3.0 29/09/2023 23Q3.0.iso 23.2.0 27/06/2023 23Q2.0.iso 23.1.0 31/03/2023 23Q1.0.iso 22.4.5 16/03/2023 22Q4.5.iso","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2512","title":"25.1.2","text":"<p>New ISO with Etendo Classsic version 25.1.2</p> <ul> <li> <p>Changes</p> <ul> <li>Upgrade Etendo software stack. For more information visit API Change Documentation</li> </ul> </li> </ul>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2443","title":"24.4.3","text":"<p>New ISO with Etendo Classsic version 24.4.3</p> <ul> <li>Fixed<ul> <li>Issue #573 Fix Etendo ISO performance issues</li> </ul> </li> </ul>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2440","title":"24.4.0","text":"<p>New ISO with Etendo Classsic version 24.4.0</p>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2430","title":"24.3.0","text":"<p>New ISO with Etendo Classsic version 24.3.0</p>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2420","title":"24.2.0","text":"<p>New ISO with Etendo Classsic version 24.2.0</p>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2414","title":"24.1.4","text":"<p>New ISO with Etendo Classsic version 24.1.4</p> <ul> <li>Fixed<ul> <li>Issue #1 Gradle loses execution permissions when doing an etendo-restore</li> </ul> </li> </ul>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2410","title":"24.1.0","text":"<p>New ISO with Etendo Classsic version 24.1.0</p> <ul> <li>Changes<ul> <li>Upgrade Tomcat version to 9.0.87</li> </ul> </li> </ul>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2340","title":"23.4.0","text":"<p>New ISO with Etendo Classsic version 23.4.0</p>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2330","title":"23.3.0","text":"<p>New ISO with Etendo Classsic version 23.3.0</p>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2320","title":"23.2.0","text":"<p>New ISO with Etendo Classsic version 23.2.0</p>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2310","title":"23.1.0","text":"<p>New ISO with Etendo Classsic version 23.1.0</p>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/iso/#2245","title":"22.4.5","text":"<p>First ISO version with Etendo Classsic version 22.4.5 </p>","tags":["Release Notes","Etendo","Versions","ISO"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/","title":"Known Issues","text":"","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#overview","title":"Overview","text":"<p>This page displays the known issues reported by the support team.</p>","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#know-issues","title":"Know Issues","text":"EPL-1449 Solved EE-856 Solved EE-808 Solved EE-758 Solved EPL-858 Solved","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#epl-1449-gradle-loses-execution-permissions-when-doing-an-etendo-restore","title":"EPL-1449 Gradle loses execution permissions when doing an etendo-restore.","text":"","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#workaround","title":"Workaround","text":"<p>Apply the following change in the etendo-restore file to ensure that the gradlew file is excluded from the permission change with chmod:</p> etendo-restore<pre><code>- find /opt/EtendoERP -type f -exec chmod 644 '{}' \\+\n+ find /opt/EtendoERP -type f ! -name gradlew -exec chmod 644 '{}' \\+\n</code></pre> <p>This workaround is applicable if you have deployed Etendo from the ISO in versions prior to 24.1.4. Starting from that version, the issue of permission changes on the gradlew file is no longer observed.</p>","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#ee-856-390-tax-report-dataset-duplicates-data-for-2022-when-applied-on-a-server-migrated-from-ob-to-etendo-after-01-2023","title":"EE-856 390 Tax Report dataset duplicates data for 2022 when applied on a server migrated from OB to Etendo after 01-2023.","text":"","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#workaround_1","title":"Workaround","text":"<p>Warning: The following workaround can vary depending on diverse factors, such as:</p> <ul> <li>Hand-made taxes</li> <li>Hand-made Tax Categories</li> <li>Taxes dataset applied in an organization other than *</li> <li>Attemps to apply the datasets, previous to doing the workarounds</li> <li>etc</li> </ul> <p>If you have some of these caracteristics in your environment, contact with the support team for a custom solution</p> <p>There are two ways to solve the problem, depending on how the taxes and temporal taxes datasets have been applied before:</p> <ol> <li> <p>Temporal Taxes dataset on \"individual\" organizations, and Taxes dataset at * level: </p> <ol> <li> <p>Execute this SQL script, which will do the following:</p> <ol> <li> <p>Move the taxes from one of the Oraganizations (the first one where the Temporal Taxes dataset was applied) to *.</p> </li> <li> <p>Update the taxes from the * organization and change their application history IDs (an ID to know which tax was applied), to turn them from the Openbravo ones to the Etendo ones.</p> </li> <li> <p>Update application history IDs for those temporal taxes that have been created on individual organizations, so the dataset importing process does not detect them and does not put data into them.</p> </li> </ol> <p>Different Organizations Taxes Fix</p> </li> <li> <p>Install Taxes dataset at * level. The taxes from the * organization will be updated.</p> </li> <li> <p>Execute the fix script where the 390 duplication problem is solved.</p> <p>390 Model Tax Reports 2022 Fix </p> </li> <li> <p>Apply the dataset update for the 390 tax model.</p> </li> </ol> </li> <li> <p>Taxes and Temporal Taxes datasets both applied at * level:</p> <ol> <li> <p>Execute the taxes script designed in the issue EE-808.</p> <p>Taxes Fix for Same Organization</p> </li> <li> <p>Execute the fix script where the 390 duplication problem is solved.</p> <p>390 Model Tax Reports 2022 Fix</p> </li> <li> <p>Apply the Taxes dataset update for the corresponding organization.</p> </li> <li> <p>Apply the dataset update for the 390 tax model.</p> </li> </ol> </li> </ol>","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#ee-808-problem-when-trying-to-import-the-taxes-configuration-for-spain-dataset-if-the-environment-already-has-imported-the-dataset-related-to-the-303-temporary-taxes-of-openbravo","title":"EE-808 Problem when trying to import the 'taxes: configuration for Spain' dataset if the environment already has imported the dataset related to the 303 temporary taxes of Openbravo.","text":"","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#workaround_2","title":"Workaround","text":"<p>Warning: The following workaround can vary depending on diverse factors, such as:</p> <ul> <li>Hand-made taxes</li> <li>Hand-made Tax Categories</li> <li>Taxes dataset applied in an organization other than *</li> <li>Attemps to apply the datasets, previous to doing the workarounds</li> <li>etc</li> </ul> <p>If you have some of these caracteristics in your environment, contact with the support team for a custom solution</p> <p>There are two ways to solve the problem, depending on how the taxes and temporal taxes datasets have been applied before:</p> <ol> <li> <p>Temporal Taxes dataset on \"individual\" organizations, and Taxes dataset at * level:</p> <ol> <li> <p>Execute this SQL script, which will do the following:</p> <ol> <li> <p>Move the taxes from one of the Oraganizations (the first one where the Temporal Taxes dataset was applied) to *.</p> </li> <li> <p>Update the taxes from the * organization and change their application history IDs (an ID to know which tax was applied), to turn them from the Openbravo ones to the Etendo ones.</p> </li> <li> <p>Update application history IDs for those temporal taxes that have been created on individual organizations, so the dataset importing process does not detect them and does not put data into them.</p> </li> </ol> <p>Different Organizations Taxes Fix</p> </li> <li> <p>Install Taxes dataset at * level. The taxes from the * organization will be updated.</p> </li> </ol> </li> <li> <p>Taxes and Temporal Taxes datasets both applied at * level:</p> <ol> <li> <p>Execute the following script, which will update the taxes from the * organization and change their application history IDs (an ID to know which tax was applied), to turn them from the Openbravo ones to the Etendo ones:</p> <p>Taxes Fix for Same Organization</p> </li> <li> <p>Install Taxes dataset at * level. The taxes from the * organization will be updated.</p> </li> </ol> </li> </ol> <p>The next steps are the same for both cases:</p> <ol> <li> <p>Execute the following script, which will update the 303 model, changing their Openbravo IDs to Etendo IDs.</p> <p>303 Model Tax Reports 2023 Fix</p> </li> <li> <p>Install 303 model dataset at individual organizations level. The corresponding parameters will be inserted in the taxes from * organization, each one associated to their specific individual organization.</p> </li> </ol>","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#ee-758-incorrect-bp-settlement-module-functionality-with-payment-inout-combination-and-credit-usage","title":"EE-758 Incorrect BP Settlement Module Functionality with Payment (In/Out) Combination and Credit Usage.","text":"","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#attention","title":"Attention","text":"<p>The combination of Payments (In/Out) with credit usage in the Business Partner Settlement module is currently experiencing issues. Incorrect values for amount and credit used may result in financial account discrepancies. We advise against combining credit usage with settlement until this issue is resolved.</p>","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#epl-858-etendo-does-not-compile-with-latest-version-of-gradle-plugin-in-jar-format","title":"EPL-858 Etendo does not compile with latest version of gradle plugin in JAR format.","text":"","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/known-issues/#workaround_3","title":"Workaround","text":"<p>Before execute setup tasks in a etendo project in JAR format you must follow the next steps:</p> <p>On the source path, open <code>build.gradle</code> and locate the 'etendo' block in the file. Inside of it, add the following propertie:</p> build.gradle<pre><code>etendo {\n    ignoreCoreJarDependency = true\n}\n</code></pre> <p>This configuration will allow you to download the source of the project on your local environment. It will be needed for following steps. </p> <p>Now we need to execute the command that will download the source code:</p> <p>terminal<pre><code>./gradlew clean\n./gradlew expandCore \n</code></pre> If you don't want to change the <code>build.gradle</code>, you can execute the command <code>./gradlew expandCore</code> and add the flag <code>-PforceExpand=true</code> at the end of it</p>","tags":["Known Issues","Solved Issues","Pending Issues"]},{"location":"whats-new/release-notes/etendo-classic/release-notes/","title":"Etendo Classic - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.platform.etendo-core</code></p> Release notes Publication date Version Status ISO Image GitHub 25Q1.4 06/06/2025 25.1.4 QAA 25Q1.4 06/06/2025 25.1.4 C 25Q1.3 30/05/2025 25.1.3 C 25Q1.2 21/05/2025 25.1.2 C 25Q1.2.iso 25Q1.1 09/05/2025 25.1.1 C 25Q1.0 28/03/2025 25.1.0 C 24Q4.19 10/06/2025 24.4.19 CS 24Q4.18 06/06/2025 24.4.18 C 24Q4.17 30/05/2025 24.4.17 C 24Q4.16 16/05/2025 24.4.16 C 24Q4.15 09/05/2025 24.4.15 C 24Q4.14 30/04/2025 24.4.14 C 24Q4.13 25/04/2025 24.4.13 C 24Q4.12 17/04/2025 24.4.12 C 24Q4.11 04/04/2025 24.4.11 C 24Q4.10 28/03/2025 24.4.10 C 24Q4.9 22/03/2025 24.4.9 C 24Q4.8 14/03/2025 24.4.8 C 24Q4.7 07/03/2025 24.4.7 C 24Q4.6 28/02/2025 24.4.6 C 24Q4.5 21/02/2025 24.4.5 C 24Q4.4 14/02/2025 24.4.4 C 24Q4.3 30/01/2025 24.4.3 C 24Q4.3.iso 24Q4.2 24/01/2025 24.4.2 C 24Q4.1 17/01/2025 24.4.1 C 24Q4.0 19/12/2024 24.4.0 C 24Q4.0.iso 24Q3.7 07/03/2025 24.3.7 C 24Q3.6 13/12/2024 24.3.6 C 24Q3.5 06/12/2024 24.3.5 C 24Q3.4 29/11/2024 24.3.4 C 24Q3.3 12/11/2024 24.3.3 C 24Q3.2 02/11/2024 24.3.2 C 24Q3.1 10/10/2024 24.3.1 C 24Q3.0 30/09/2024 24.3.0 C 24Q3.0.iso 24Q2.8 27/09/2024 24.2.8 C 24Q2.7 20/09/2024 24.2.7 C 24Q2.6 23/08/2024 24.2.6 C 24Q2.5 09/08/2024 24.2.5 C 24Q2.4 02/08/2024 24.2.4 C 24Q2.3 19/07/2024 24.2.3 C 24Q2.2 12/07/2024 24.2.2 C 24Q2.1 05/07/2024 24.2.1 C 24Q2.0 28/06/2024 24.2.0 C 24Q2.0.iso 24Q1.8 14/06/2024 24.1.8 C 24Q1.7 31/05/2024 24.1.7 C 24Q1.6 17/05/2024 24.1.6 C 24Q1.5 10/05/2024 24.1.5 C 24Q1.4 03/05/2024 24.1.4 C 24Q1.4.iso 24Q1.3 19/04/2024 24.1.3 C 24Q1.2 12/04/2024 24.1.2 C 24Q1.1 05/04/2024 24.1.1 C 24Q1.0 28/03/2024 24.1.0 C 24Q1.0.iso 23Q4.5 22/03/2024 23.4.5 C 23Q4.4 15/03/2024 23.4.4 C 23Q4.3 08/03/2024 23.4.3 C 23Q4.2 26/02/2024 23.4.2 C 23Q4.1 02/02/2023 23.4.1 C 23Q4.0 28/12/2023 23.4.0 C 23Q4.0.iso 23Q3.4 05/12/2023 23.3.4 C 23Q3.3 30/11/2023 23.3.3 C 23Q3.2 10/11/2023 23.3.2 C 23Q3.1 01/11/2023 23.3.1 C 23Q3.0 29/09/2023 23.3.0 C 23Q3.0.iso 23Q2.8 14/09/2023 23.2.8 C 23Q2.7 05/09/2023 23.2.7 C 23Q2.6 25/08/2023 23.2.6 C 23Q2.5 17/08/2023 23.2.5 C 23Q2.4 16/08/2023 23.2.4 C 23Q2.3 04/08/2023 23.2.3 C 23Q2.2 26/07/2023 23.2.2 C 23Q2.1 17/07/2023 23.2.1 C 23Q2.0 27/06/2023 23.2.0 C 23Q2.0.iso 23Q1.5 29/05/2023 23.1.5 C 23Q1.4 19/05/2023 23.1.4 C 23Q1.3 02/05/2023 23.1.3 C 23Q1.2 19/04/2023 23.1.2 C 23Q1.1 11/04/2023 23.1.1 C 23Q1.0 31/03/2023 23.1.0 C 23Q1.0.iso 22Q4.6 17/08/2023 22.4.6 C 22Q4.5 16/03/2023 22.4.5 C 22Q4.5.iso 22Q4.4 16/02/2023 22.4.4 C 22Q4.3 03/02/2023 22.4.3 C 22Q4.2 25/01/2023 22.4.2 C 22Q4.1 13/01/2023 22.4.1 C 22Q4.0 04/01/2023 22.4.0 C 22Q3.0 05/10/2022 22.3.0 C 22Q2.2 12/08/2022 22.2.2 C 22Q2.1 05/08/2022 22.2.1 C 22Q2.0 06/07/2022 22.2.0 C 22Q1.3 21/06/2022 22.1.3 C 22Q1.2 25/05/2022 22.1.2 C 22Q1.1 11/05/2022 22.1.1 C 22Q1.0 01/03/2022 22.1.0 C 21Q4.9 04/01/2023 21.4.9 C 21Q4.8 12/08/2022 21.4.8 C 21Q4.7 05/08/2022 21.4.7 C 21Q4.6 21/06/2022 21.4.6 C 21Q4.5 27/05/2022 21.4.5 C 21Q4.4 25/05/2022 21.4.4 C 21Q4.3 11/05/2022 21.4.3 C 21Q4.2 10/03/2022 21.4.2 C 21Q4.1 17/12/2021 21.4.1 C 21Q4.0 13/12/2021 21.4.0 C","tags":["Release Notes","Etendo","Versions","Etendo Classic","Etendo Core"]},{"location":"whats-new/release-notes/etendo-classic/bundles/essentials-extensions/release-notes/","title":"Essentials Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.essentials.extensions</code></p> <p> Etendo Marketplace:  Essentials Extensions Bundle</p>","tags":["Release Notes","Essentials","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/essentials-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 21/05/2025 25.1.0 25.1.x CS 1.8.0 06/05/2025 22.1.0 24.4.x CS 1.7.0 19/12/2024 22.1.0 24.4.x C 1.6.1 01/11/2024 22.1.0 24.3.x C 1.6.0 01/10/2024 22.1.0 24.3.x C 1.5.0 28/06/2024 22.1.0 24.2.x C 1.4.0 29/03/2024 22.1.0 24.1.x C 1.3.0 29/12/2023 22.1.0 23.4.x C 1.2.0 29/09/2023 22.1.0 23.3.x C 1.1.0 27/06/2023 22.1.0 23.2.8 C 1.0.0 10/05/2023 22.1.0 23.1.5 C","tags":["Release Notes","Essentials","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/etendobi-extensions/release-notes/","title":"Etendo BI Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.etendobi.extensions</code></p> <p> Etendo Marketplace:  Etendo BI Extensions Bundle</p>","tags":["Release Notes","Etendo BI","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/etendobi-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 27/05/2025 25.1.0 25.1.x CS 1.8.0 07/05/2025 22.1.0 24.4.x CS 1.7.1 17/01/2025 22.1.0 24.4.x C 1.7.0 20/12/2024 22.1.0 24.4.x C 1.6.1 01/11/2024 22.1.0 24.3.x C 1.6.0 01/10/2024 22.1.0 24.3.x C 1.5.0 29/06/2024 22.1.0 24.2.x C 1.4.1 10/05/2024 22.1.0 24.1.x C 1.4.0 03/04/2024 22.1.0 24.1.x C 1.3.0 29/12/2023 22.1.0 23.4.x C 1.2.1 15/11/2023 22.1.0 23.3.x C 1.2.0 29/09/2023 22.1.0 23.3.x C 1.1.2 04/09/2023 22.1.0 23.2.8 C 1.1.1 07/07/2023 22.1.0 23.2.8 C 1.1.0 30/06/2023 22.1.0 23.1.5 C 1.0.1 23/06/2023 22.1.0 23.1.5 C 1.0.0 29/05/2023 22.1.0 23.1.5 C","tags":["Release Notes","Etendo BI","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/financial-extensions/release-notes/","title":"Financial Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.financial.extensions</code></p> <p> Etendo Marketplace:  Financial Extensions Bundle</p>","tags":["Release Notes","Financial","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/financial-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 27/05/2025 25.1.0 25.1.x CS 1.26.2 06/06/2025 23.1.4 24.4.x CS 1.26.1 30/05/2025 23.1.4 24.4.x C 1.26.0 06/05/2025 23.1.4 24.4.x C 1.25.0 21/04/2025 23.1.4 24.4.x C 1.24.1 17/04/2025 23.1.4 24.4.x C 1.24.0 22/03/2025 23.1.4 24.4.x C 1.23.2 14/03/2025 23.1.4 24.4.x C 1.23.1 07/03/2025 23.1.4 24.4.x C 1.23.0 28/02/2025 23.1.4 24.4.x C 1.22.0 07/02/2025 23.1.4 24.4.x C 1.21.2 24/01/2025 23.1.4 24.4.x C 1.21.1 17/01/2025 23.1.4 24.4.x C 1.21.0 21/12/2024 23.1.4 24.4.x C 1.20.0 06/12/2024 23.1.4 24.3.x C 1.19.0 12/11/2024 23.1.4 24.3.x C 1.18.1 04/10/2024 23.1.4 24.3.x C 1.18.0 01/10/2024 23.1.4 24.3.x C 1.17.2 13/09/2024 23.1.4 24.2.x C 1.17.1 30/08/2024 23.1.4 24.2.x C 1.17.0 22/08/2024 23.1.4 24.2.x C 1.16.1 19/07/2024 23.1.4 24.2.x C 1.16.0 08/07/2024 23.1.4 24.2.x C 1.15.0 28/06/2024 23.1.4 24.2.x C 1.14.2 14/06/2024 23.1.4 24.1.x C 1.14.1 26/04/2024 23.1.4 24.1.x C 1.14.0 28/03/2024 23.1.4 24.1.x C 1.13.5 15/03/2024 23.1.4 23.4.x C 1.13.4 01/03/2024 23.1.4 23.4.x C 1.13.3 27/02/2024 23.1.4 23.4.x C 1.13.2 14/02/2024 23.1.4 23.4.x C 1.13.1 10/01/2024 23.1.4 23.4.x C 1.13.0 29/12/2023 23.1.4 23.4.x C 1.12.1 15/12/2023 23.1.4 23.3.x C 1.12.0 13/12/2023 23.1.4 23.3.x C 1.11.3 07/12/2023 23.1.4 23.3.x C 1.11.2 05/12/2023 23.1.4 23.3.x C 1.11.1 16/11/2023 23.1.4 23.3.x C 1.10.0 29/09/2023 23.1.4 23.3.x C 1.9.1 15/08/2023 23.1.4 23.2.8 C 1.9.0 12/07/2023 23.1.4 23.2.8 C 1.8.0 27/06/2023 23.1.4 23.2.8 C 1.7.1 12/06/2023 23.1.4 23.1.5 C 1.7.0 31/05/2023 23.1.4 23.1.5 C 1.5.0 17/05/2023 22.4.2 23.1.5 C 1.3.0 06/04/2023 22.4.2 23.1.5 C 1.2.4 14/02/2023 22.4.2 22.4.x C 1.2.3 31/01/2023 22.4.2 22.4.x C 1.2.2 10/01/2023 22.2.1 22.4.x C 1.2.0 12/10/2022 22.2.1 22.3.0 C 1.1.4 11/10/2022 22.2.1 22.3.0 C 1.1.3 06/10/2022 22.2.1 22.3.0 C 1.1.2 30/08/2022 22.2.1 22.2.2 C 1.1.1 10/07/2022 22.1.1 22.2.2 C 1.1.0 08/07/2022 22.1.1 22.2.2 C 1.0.500 24/06/2022 22.1.0 22.1.3 C 1.0.400 15/06/2022 22.1.0 22.1.3 C 1.0.300 23/04/2022 22.1.0 22.1.3 C 1.0.200 05/04/2022 22.1.0 22.1.3 C 1.0.100 06/01/2022 21.4.0 21.4.x C 1.0.000 04/01/2022 21.4.0 21.4.x C","tags":["Release Notes","Financial","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/localization-spain-extensions/release-notes/","title":"Localizacion Espa\u00f1ola - Versiones Disponibles","text":"<p> Javapackage: <code>com.etendoerp.localization.spain.extensions</code></p> <p> Etendo Marketplace:  Bundle de Localizacion Espa\u00f1ola</p>","tags":["Release Notes","Localizacion Espa\u00f1ola","Versiones"]},{"location":"whats-new/release-notes/etendo-classic/bundles/localization-spain-extensions/release-notes/#introduccion","title":"Introducci\u00f3n","text":"Versi\u00f3n Fecha de Publicaci\u00f3n Desde Core Hasta Core Estado GitHub 1.27.0 08/05/2025 22.4.3 24.4.1x CS 1.26.2 22/04/2025 22.4.3 24.4.x C 1.26.1 13/03/2025 22.4.3 24.4.x C 1.26.0 10/02/2025 22.4.3 24.4.x C 1.25.0 30/01/2025 22.4.3 24.4.x C 1.24.0 20/01/2025 22.4.3 24.4.x C 1.23.0 07/01/2025 22.4.3 24.4.x C 1.22.0 20/12/2024 22.4.3 24.4.x C 1.21.1 14/11/2024 22.4.3 24.3.x C 1.21.0 06/11/2024 22.4.3 24.3.x C 1.20.1 01/11/2024 22.4.3 24.3.x C 1.20.0 24/10/2024 22.4.3 24.3.x C 1.19.0 23/10/2024 22.4.3 24.3.x C 1.18.0 01/10/2024 22.4.3 24.3.x C 1.17.0 30/09/2024 22.4.3 24.2.x C 1.16.1 26/09/2024 22.4.3 24.2.x C 1.16.0 25/09/2024 22.4.3 24.2.x C 1.15.0 24/09/2024 22.4.3 24.2.x C 1.14.0 11/09/2024 22.4.3 24.2.x C 1.13.0 14/08/2024 22.4.3 24.2.x C 1.12.0 28/06/2024 22.4.3 24.2.x C 1.11.1 17/05/2024 22.4.3 24.1.x C 1.11.0 03/05/2024 22.4.3 24.1.x C 1.10.1 19/04/2024 22.4.3 24.1.x C 1.10.0 28/03/2024 22.4.3 24.1.x C 1.9.4 15/03/2024 22.4.3 23.4.x C 1.9.3 06/03/2024 22.4.3 23.4.x C 1.9.2 04/03/2024 22.4.3 23.4.x C 1.9.1 28/02/2024 22.4.3 23.4.x C 1.9.0 06/02/2024 22.4.3 23.4.x C 1.8.0 26/01/2024 22.4.3 23.4.x C 1.7.0 24/01/2024 22.4.3 23.4.x C 1.6.0 29/12/2023 22.4.3 23.4.x C 1.5.2 10/11/2023 22.4.3 23.3.x C 1.5.1 01/11/2023 22.4.3 23.3.x C 1.5.0 29/09/2023 22.4.3 23.3.x C 1.4.1 19/09/2023 22.4.3 23.2.8 C 1.4.0 27/06/2023 22.4.3 23.2.8 C 1.3.0 24/05/2023 22.4.3 23.1.5 C 1.2.1 26/04/2023 22.4.3 22.4.5 C 1.2.0 03/03/2023 22.4.3 22.4.5 C 1.1.0 03/02/2023 22.4.3 22.4.5 C 1.0.5 12/01/2023 21.4.0 22.4.5 C 1.0.4 07/12/2022 21.4.0 22.3.0 C 1.0.3 06/10/2022 21.4.0 22.3.x C 1.0.2 11/07/2022 21.4.0 22.2.2 C 1.0.1 16/06/2022 21.4.0 * C 1.0.0 01/01/2022 21.4.0 * C","tags":["Release Notes","Localizacion Espa\u00f1ola","Versiones"]},{"location":"whats-new/release-notes/etendo-classic/bundles/platform-extensions/release-notes/","title":"Platform Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.platform.extensions</code></p> <p> Etendo Marketplace:  Platform Extensions Bundle</p>","tags":["Release Notes","Platform","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/platform-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 27/05/2025 25.1.0 25.1.x CS 2.12.1 07/05/2025 23.2.0 24.4.x CS 2.12.0 06/05/2025 23.2.0 24.4.x C 2.11.4 30/04/2025 23.2.0 24.4.x C 2.11.3 25/04/2025 23.2.0 24.4.x C 2.11.2 11/04/2025 23.2.0 24.4.x C 2.11.0 31/03/2025 23.2.0 24.4.x C 2.10.0 26/02/2025 23.2.0 24.4.x C 2.9.0 14/02/2025 23.2.0 24.4.x C 2.8.0 23/01/2025 23.2.0 24.4.x C 2.7.0 08/01/2025 23.2.0 24.4.x C 2.6.0 20/12/2024 23.2.0 24.4.x C 2.5.1 29/11/2024 23.2.0 24.3.x C 2.5.0 08/11/2024 23.2.0 24.3.x C 2.5.0 08/11/2024 23.2.0 24.3.x C 2.4.0 01/10/2024 23.2.0 24.3.x C 2.3.0 27/09/2024 23.2.0 24.2.x C 2.2.1 20/09/2024 23.2.0 24.2.x C 2.2.0 13/09/2024 23.2.0 24.2.x C 2.1.1 04/09/2024 23.2.0 24.2.x C 2.1.0 03/09/2024 23.2.0 24.2.x C 2.0.1 30/08/2024 23.2.0 24.2.x C 2.0.0 16/08/2024 23.2.0 24.2.x C 1.19.0 09/08/2024 23.2.0 24.2.x C 1.18.0 02/08/2024 23.2.0 24.2.x C 1.17.1 12/07/2024 23.2.0 24.2.x C 1.17.0 28/06/2024 23.2.0 24.2.x C 1.16.1 14/06/2024 23.2.0 24.1.x C 1.16.0 20/05/2024 23.2.0 24.1.x C 1.15.0 08/05/2024 23.2.0 24.1.x C 1.14.0 29/03/2024 23.2.0 24.1.x C 1.13.3 22/03/2024 23.2.0 23.4.x C 1.13.2 15/03/2024 23.2.0 23.4.x C 1.13.1 27/02/2024 23.2.0 23.4.x C 1.12.0 29/12/2023 23.2.0 23.4.x C 1.10.0 29/09/2023 23.2.0 23.3.x C 1.9.0 14/09/2023 23.2.0 23.2.8 C 1.8.0 28/08/2023 23.2.0 23.2.8 C 1.7.1 17/08/2023 23.2.0 23.2.8 C 1.6.0 29/06/2023 23.2.0 23.2.8 C 1.5.0 27/06/2023 22.1.0 23.2.8 C 1.4.0 17/05/2023 22.1.0 23.1.5 C 1.3.0 06/04/2023 22.1.0 23.1.5 C 1.2.0 06/04/2023 22.1.0 23.1.5 C 1.1.3 09/01/2023 22.1.0 22.4.5 C 1.1.2 06/10/2022 22.1.0 22.3.0 C 1.1.1 19/07/2022 22.1.0 22.2.2 C 1.1.0 08/07/2022 22.1.0 22.2.2 C 1.0.501 24/06/2022 22.1.0 22.1.3 C 1.0.500 24/06/2022 22.1.0 22.1.3 C 1.0.400 05/04/2022 22.1.0 22.1.3 C","tags":["Release Notes","Platform","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/procurement-extensions/release-notes/","title":"Procurement Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.procurement.extensions</code></p> <p> Etendo Marketplace:  Procurement Extensions Bundle</p>","tags":["Release Notes","Procurement","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/procurement-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 21/05/2025 25.1.0 25.1.x CS 1.5.0 05/05/2025 22.1.0 24.4.x CS 1.4.0 19/12/2024 22.1.0 24.4.x C 1.3.0 01/10/2024 22.1.0 24.3.x C 1.2.0 29/06/2024 22.1.0 24.2.x C 1.1.2 14/06/2024 22.1.0 24.1.x C 1.1.1 31/05/2024 22.1.0 24.1.x C 1.1.0 29/03/2024 22.1.0 24.1.x C 1.0.0 19/02/2024 22.1.0 24.1.0 C","tags":["Release Notes","Procurement","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/production-extensions/release-notes/","title":"Production Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.production.extensions</code></p> <p> Etendo Marketplace:  Production Extensions Bundle</p>","tags":["Release Notes","Production","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/production-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 21/05/2025 25.1.0 25.1.x CS 1.10.0 05/05/2025 22.1.0 24.4.x CS 1.9.0 19/12/2024 22.1.0 24.4.x C 1.8.0 01/10/2024 22.1.0 24.3.x C 1.7.0 28/06/2024 22.1.0 24.2.x C 1.6.0 29/03/2024 22.1.0 24.1.x C 1.5.0 29/12/2023 22.1.0 23.4.x C 1.4.0 29/09/2023 22.1.0 23.3.x C 1.3.0 27/06/2023 22.1.0 23.2.8 C 1.2.0 17/05/2023 22.1.0 23.1.5 C 1.1.0 06/04/2023 22.1.0 23.1.5 C 1.0.0 06/03/2023 22.1.0 22.4.5 C","tags":["Release Notes","Production","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/sales-extensions/release-notes/","title":"Sales Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.sales.extensions</code></p> <p> Etendo Marketplace:  Sales Extensions Bundle</p>","tags":["Release Notes","Sales","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/sales-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 27/05/2025 25.1.0 25.1.x CS 1.12.0 06/05/2025 22.1.0 24.4.x CS 1.11.0 19/12/2024 22.1.0 24.4.x C 1.10.0 01/10/2024 22.1.0 24.3.x C 1.9.2 30/08/2024 22.1.0 24.2.x C 1.9.1 26/07/2024 22.1.0 24.2.x C 1.9.0 29/06/2024 22.1.0 24.2.x C 1.8.1 14/06/2024 22.1.0 24.1.x C 1.8.0 29/03/2024 22.1.0 24.1.x C 1.7.0 29/12/2023 22.1.0 23.4.x C 1.6.0 29/09/2023 22.1.0 23.3.x C 1.5.2 16/07/2023 22.1.0 23.2.8 C 1.5.1 04/07/2023 22.1.0 23.2.x C 1.5.0 30/06/2023 22.1.0 23.2.x C 1.4.0 27/06/2023 22.1.0 23.2.x C 1.3.0 17/05/2023 22.1.0 23.1.5 C 1.2.0 05/04/2023 22.1.0 23.1.5 C 1.1.2 06/01/2023 22.1.0 22.4.5 C 1.1.1 05/10/2022 22.1.0 22.3.0 C 1.1.0 11/07/2022 22.1.0 22.2.2 C 1.0.400 - 22.1.0 22.1.3 C 1.0.300 - 22.1.0 22.1.3 C 1.0.200 - 21.4.0 22.1.3 C 1.0.100 06/01/2022 21.4.0 22.1.3 C 1.0.000 03/01/2022 21.4.0 22.1.3 C","tags":["Release Notes","Sales","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/warehouse-extensions/release-notes/","title":"Warehouse Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.warehouse.extensions</code></p> <p> Etendo Marketplace:  Warehouse Extensions Bundle</p>","tags":["Release Notes","Warehouse","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/bundles/warehouse-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 26/05/2025 25.1.0 25.1.x CS 1.11.1 30/05/2025 24.4.0 24.4.x CS 1.11.0 06/05/2025 24.4.0 24.4.x C 1.10.1 28/02/2025 24.4.0 24.4.x C 1.10.0 19/12/2024 24.4.0 24.4.x C 1.9.0 01/10/2024 21.4.0 24.3.x C 1.8.0 02/08/2024 21.4.0 24.2.x C 1.7.0 29/06/2024 21.4.0 24.2.x C 1.6.1 17/05/2024 21.4.0 24.1.x C 1.6.0 29/03/2024 21.4.0 24.1.x C 1.5.0 29/12/2023 21.4.0 23.4.x C 1.4.0 29/09/2023 21.4.0 23.3.x C 1.3.0 27/06/2023 21.4.0 23.2.8 C 1.2.0 17/05/2023 21.4.0 23.1.5 C 1.1.0 06/04/2023 21.4.0 23.1.5 C 1.0.3 06/02/2023 21.4.0 22.4.6 C 1.0.2 25/01/2023 21.4.0 22.4.6 C 1.0.1 06/01/2023 21.4.0 22.4.6 C 1.0.0 30/09/2022 21.4.0 22.3.0 C","tags":["Release Notes","Warehouse","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/plugins/etendo-backup-restore-plugin/release-notes/","title":"Etendo Backup Restore Plugin - Release Notes","text":"","tags":["Release Notes","Gradle","Plugin","Backup","Restore"]},{"location":"whats-new/release-notes/etendo-classic/plugins/etendo-backup-restore-plugin/release-notes/#overview","title":"Overview","text":"Version Publication Date Status GitHub 1.1.1 23/01/2025 CS 1.1.0 06/03/2024 C 1.0.0 19/12/2022 C","tags":["Release Notes","Gradle","Plugin","Backup","Restore"]},{"location":"whats-new/release-notes/etendo-classic/plugins/etendo-gradle-plugin/release-notes/","title":"Etendo Gradle Plugin - Release Notes","text":"","tags":["Release Notes","Etendo","Version","Gradle","Plugin"]},{"location":"whats-new/release-notes/etendo-classic/plugins/etendo-gradle-plugin/release-notes/#overview","title":"Overview","text":"Version Publication Date Status 2.0.1 20/05/2025 CS 2.0.0 26/03/2025 C 1.5.4 04/04/2025 CS 1.5.3 26/03/2025 C 1.5.2 21/03/2025 C 1.5.1 12/11/2024 C 1.5.0 08/11/2024 C 1.4.0 18/10/2024 C 1.3.3 11/03/2024 C 1.3.2 04/01/2024 C 1.3.1 15/12/2023 C 1.3.0 12/12/2023 C 1.2.2 20/10/2023 C 1.2.1 18/10/2023 C 1.2.0 17/10/2023 C 1.1.3 31/08/2023 C 1.1.2 31/07/2023 C 1.1.1 10/07/2023 C 1.1.0 30/05/2023 C 1.0.7 05/04/2023 C","tags":["Release Notes","Etendo","Version","Gradle","Plugin"]},{"location":"whats-new/release-notes/etendo-classic/plugins/etendo-testing-plugin/release-notes/","title":"Etendo Gradle Plugin - Release Notes","text":"","tags":["Release Notes","Etendo","Version","Gradle","Plugin","Testing"]},{"location":"whats-new/release-notes/etendo-classic/plugins/etendo-testing-plugin/release-notes/#overview","title":"Overview","text":"Version Publication Date Status 2.0.0 11/04/2025 CS 1.0.0 07/04/2025 CS","tags":["Release Notes","Etendo","Version","Gradle","Plugin","Testing"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/essentials-extensions-es_es/release-notes/","title":"EssentialExtensions Spanish Tranlation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.essentials.extensions.es_es</code></p> <p> Etendo Marketplace:  Essentials Extensions Bundle ES</p> <p> Original Bundle Release Notes: Essentials Extensions Bundle</p>","tags":["Release Notes","Essentials","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/essentials-extensions-es_es/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility With Essentials Extensions Status GitHub 1.1.0 16/01/2024 [1.0.0, latest] CS","tags":["Release Notes","Essentials","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/etendobi-extensions-es_es/release-notes/","title":"Etendo BI Extensions Spanish Translation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.etendobi.extensions.es_es</code></p> <p> Etendo Marketplace:  Etendo BI Extensions Bundle ES</p> <p> Original Bundle Release Notes: Etendo BI Extensions Bundle</p>","tags":["Release Notes","Etendo BI","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/etendobi-extensions-es_es/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility With Etendo BI Extensions Status GitHub 1.1.0 19/01/2024 [1.0.0, latest] CS","tags":["Release Notes","Etendo BI","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/financial-extensions-es_es/release-notes/","title":"Financial Extensions Spanish Translation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.financial.extensions.es_es</code></p> <p> Etendo Marketplace:  Financial Extensions Bundle ES</p> <p> Original Bundle Release Notes: Financial Extensions Bundle</p>","tags":["Release Notes","Financial","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/financial-extensions-es_es/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility With Financial Extensions Status GitHub 1.9.0 06/06/2025 [1.13.1, latest] CS 1.8.0 21/04/2025 [1.13.1, latest] C 1.7.0 23/08/2024 [1.13.1, latest] C 1.6.1 19/07/2024 [1.13.1, latest] C 1.6.0 08/07/2024 [1.13.1, latest] C 1.5.0 23/01/2024 [1.13.1, latest] C 1.4.3 12/01/2024 [1.13.1, latest] C 1.4.2 07/12/2023 [1.11.3, 1.13.0] C 1.4.1 06/12/2023 [1.11.2, 1.11.2] C 1.4.0 23/10/2023 [1.0.0, 1.11.1] C","tags":["Release Notes","Financial","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/platform-extensions-es_es/release-notes/","title":"Platform Extensions Spanish Translation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.platform.extensions.es_es</code></p> <p> Etendo Marketplace:  Platform Extensions Bundle ES</p> <p> Original Bundle Release Notes: Platform Extensions Bundle</p>","tags":["Release Notes","Platform","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/platform-extensions-es_es/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility With Platform Extensions Status GitHub 1.6.0 02/10/2024 [1.1.3, latest] CS 1.5.0 09/08/2024 [1.1.3, latest] C 1.4.0 08/05/2024 [1.1.3, latest] C 1.3.0 28/02/2024 [1.1.3, latest] C 1.2.0 16/01/2024 [1.1.3, latest] C","tags":["Release Notes","Platform","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/procurement-extensions-es_es/release-notes/","title":"Procurement Extensions Spanish Translation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.procurement.extensions.es_es</code></p> <p> Etendo Marketplace:  Procurement Extensions Bundle ES</p> <p> Original Bundle Release Notes: Procurement Extensions Bundle</p>","tags":["Release Notes","Procurement","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/procurement-extensions-es_es/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility with Procurement Extensions Status GitHub 1.0.1 31/05/2024 [1.0.0, latest] CS 1.0.0 19/02/2024 [1.0.0, latest] C","tags":["Release Notes","Procurement","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/production-extensions-es_es/release-notes/","title":"Production Extensions Spanish Translation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.production.extensions.es_es</code></p> <p> Etendo Marketplace:  Production Extensions Bundle ES</p> <p> Original Bundle Release Notes: Production Extensions Bundle</p>","tags":["Release Notes","Production","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/production-extensions-es_es/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility With Production Extensions Status GitHub 1.2.0 16/01/2024 [1.0.0, latest] CS","tags":["Release Notes","Production","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/sales-extensions-es_es/release-notes/","title":"Sales Extensions Spanish Translation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.sales.extensions.es_es</code></p> <p> Etendo Marketplace:  Sales Extensions Bundle ES</p> <p> Original Bundle Release Notes: Sales Extensions Bundle</p>","tags":["Release Notes","Sales","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/sales-extensions-es_es/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility With Sales Extensions Status GitHub 1.6.0 18/01/2024 [1.0.000, latest] CS","tags":["Release Notes","Sales","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/warehouse-extensions-es_es/release-notes/","title":"Warehouse Extensions Spanish Translation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.warehouse.extensions.es_es</code></p> <p> Etendo Marketplace:  Warehouse Extensions Bundle ES</p> <p> Original Bundle Release Notes: Warehouse Extensions Bundle</p>","tags":["Release Notes","Warehouse","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-classic/translation-bundles/warehouse-extensions-es_es/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility With Platform Extensions Status GitHub 1.4.0 02/08/2024 [1.0.0, latest] CS 1.3.0 19/01/2024 [1.0.0, latest] C","tags":["Release Notes","Warehouse","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-copilot/bundles/release-notes/","title":"Copilot Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.copilot.extensions</code></p> <p> Etendo Marketplace: Copilot Extensions Bundle</p>","tags":["Release Notes","Copilot","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-copilot/bundles/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 29/05/2025 25.1.0 25.1.x CS 1.14.0 08/05/2025 23.4.0 24.4.x CS 1.13.3 25/04/2025 23.4.0 * C 1.13.2 11/04/2025 23.4.0 * C 1.13.1 04/04/2025 23.4.0 * C 1.13.0 01/04/2025 23.4.0 * C 1.12.0 07/03/2025 23.4.0 * C 1.11.0 14/02/2025 23.4.0 * C 1.10.0 23/01/2025 23.4.0 * C 1.9.1 10/01/2025 23.4.0 * C 1.9.0 20/12/2024 23.4.0 * C 1.8.4 13/12/2024 23.4.0 * C 1.8.1 15/11/2024 23.4.0 * C 1.8.0 08/11/2024 23.4.0 * C 1.7.2 29/10/2024 23.4.0 * C 1.7.1 25/10/2024 23.4.0 * C 1.7.0 18/10/2024 23.4.0 * C 1.6.2 17/10/2024 23.4.0 * C 1.6.1 11/10/2024 23.4.0 * C 1.6.0 07/10/2024 23.4.0 * C 1.5.1 01/10/2024 23.4.0 * C 1.5.0 27/09/2024 23.4.0 * C 1.4.2 20/09/2024 23.4.0 * C 1.4.1 30/08/2024 23.4.0 * C 1.4.0 20/08/2024 23.4.0 * C 1.3.2 02/08/2024 23.4.0 * C 1.3.1 22/07/2024 23.4.0 * C 1.3.0 19/07/2024 23.4.0 * C 1.2.3 19/07/2024 23.4.0 * C 1.2.2 16/07/2024 23.4.0 * C 1.2.1 09/07/2024 23.4.0 * C 1.2.0 13/06/2024 23.4.0 * C 1.1.1 21/05/2024 23.4.0 * C 1.1.0 20/05/2024 23.4.0 * C 1.0.0 29/04/2024 23.4.0 * C","tags":["Release Notes","Copilot","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-copilot/translation-bundles/release-notes/","title":"Copilot Extensions Spanish Tranlation - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.copilot.extensions.es_es</code></p> <p> Etendo Marketplace:  Copilot Extensions Bundle ES</p> <p> Original Bundle Release Notes: Copilot Extensions Bundle</p>","tags":["Release Notes","Copilot","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-copilot/translation-bundles/release-notes/#overview","title":"Overview","text":"Version Publication Date Compatibility With Financial Extensions Status GitHub 1.0.0 08/05/2024 [1.0.0, latest] CS","tags":["Release Notes","Copilot","Translations","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-mobile/bundles/mobile-extensions/release-notes/","title":"Etendo Mobile Extensions - Release Notes","text":"<p> Javapackage: <code>com.etendoerp.classic.subapp.extensions</code></p> <p> Etendo Marketplace: Subapp Extensions Bundle</p>","tags":["Release Notes","Classic Subapp","Bundle","Versions"]},{"location":"whats-new/release-notes/etendo-mobile/bundles/mobile-extensions/release-notes/#overview","title":"Overview","text":"Version Publication Date From Core To Core Status GitHub 3.0.0 27/05/2025 25.1.0 25.1.x CS 1.11.0 07/05/2025 23.2.0 24.4.x CS 1.10.1 14/03/2025 23.2.0 24.4.x C 1.10.0 06/03/2025 23.2.0 24.4.x C 1.9.0 15/01/2025 23.2.0 24.4.x C 1.8.0 20/12/2024 23.2.0 24.4.x C 1.7.0 01/10/2024 23.2.0 24.3.x C 1.6.0 02/08/2024 23.2.0 24.2.x C 1.5.0 29/06/2024 23.2.0 24.2.x C 1.4.0 29/03/2024 23.2.0 24.1.x C 1.3.0 04/01/2024 23.2.0 23.4.x C 1.2.0 29/09/2023 23.2.0 23.3.x C 1.1.0 14/09/2023 23.2.0 23.2.8 C 1.0.0 11/09/2023 23.2.0 23.2.8 C","tags":["Release Notes","Classic Subapp","Bundle","Versions"]}]}